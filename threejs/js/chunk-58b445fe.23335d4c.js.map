{"version":3,"sources":["webpack:///./src/components/ProjectViewComponent.vue?85c5","webpack:///./src/components/ProjectViewComponent.vue?6a59","webpack:///./src/components/ProjectViewComponent.vue"],"names":["_hoisted_1","id","__props","defaultProps","children","label","treeHeight","modelTree","ProjectViewComponent","onCheck","data","checked","showIds","value","getCheckedKeys","length","model","App","scene","mapModels","values","ele","allElementData","show","enableRender","setIds","Set","add","has","handleNodeClick","_ctx","_cache","_component_el_tree_v2","ref","_value","_refs","height","ModelData","props","onNodeClick","onCheckChange","SpaceTreeCheckIDs","__exports__"],"mappings":"kHAAA,W,0GCGA,MAAMA,EAAa,CAAEC,GAAI,YAMG,mCAAiB,CAC3C,MAAMC,GAER,MAAMC,EAAe,CACjBC,SAAU,WACVC,MAAO,SAELC,EAAW,iBAAI,KACfC,EAAY,mBAClBC,EAAA,KAAqBF,WAAWA,EAChCE,EAAA,KAAqBD,UAAUA,EAC/B,MAAME,EAAU,CAACC,EAAYC,KAC3B,IAAIC,EAAUL,EAAUM,MAAMC,iBAC9B,GAAsB,GAAlBF,EAAQG,OAAa,CACvB,IAAK,MAAMC,KAASC,EAAA,KAAIC,MAAMC,UAAUC,SACtC,IAAK,MAAMC,KAAOL,EAAMM,eAAeF,SACrCC,EAAIE,MAAO,EAIf,YADAN,EAAA,KAAIC,MAAMM,eAGZ,IAAIC,EAAsB,IAAIC,IAC9B,IAAK,MAAMzB,KAAMW,EACfa,EAAOE,IAAI1B,GAEb,IAAK,MAAMe,KAASC,EAAA,KAAIC,MAAMC,UAAUC,SACtC,IAAK,MAAMC,KAAOL,EAAMM,eAAeF,SAChCK,EAAOG,IAAIP,EAAIpB,IAKlBoB,EAAIE,MAAK,EAJTF,EAAIE,MAAK,EAQfN,EAAA,KAAIC,MAAMM,gBAINK,EAAmBnB,IACF,MAAjBA,EAAKN,UAAoBM,EAAKN,SAASW,QAe7C,MAAO,CAACe,EAAUC,KAChB,MAAMC,EAAwB,8BAAkB,cAEhD,OAAQ,yBAAc,gCAAoB,MAAOhC,EAAY,CAC3D,yBAAagC,EAAuB,CAClCC,IAAK,CAACC,EAAQC,KACZA,EAAM,aAAeD,EACrB3B,EAAUM,MAAQqB,GAEpBE,OAAQ9B,EAAWO,MACnBH,KAAM,mBAAOF,EAAA,MAAsB6B,UAAUxB,MAC7CyB,MAAOnC,EACPoC,YAAaV,EACbW,cAAe/B,EACf,WAAY,KACZ,gBAAiB,GACjB,wBAAyB,CAAC,GAC1B,uBAAwB,mBAAOD,EAAA,MAAsBiC,kBAAkB5B,OACtE,KAAM,EAAG,CAAC,SAAU,OAAQ,+B,UC/EnC,MAAM6B,EAAc,EAEL","file":"js/chunk-58b445fe.23335d4c.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ProjectViewComponent.vue?vue&type=style&index=0&id=44c26f3e&lang=css\"","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { id: \"treeData\" }\n\nimport { App } from \"@/App\";\r\nimport { ref } from \"vue\";\r\nimport { ProjectViewComponent,Tree } from \"./ProjectViewComponent\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\r\nconst defaultProps = {\r\n    children: \"children\",\r\n    label: \"label\",\r\n};\r\nconst treeHeight=ref(434)\r\nconst modelTree = ref();\r\nProjectViewComponent.treeHeight=treeHeight;\r\nProjectViewComponent.modelTree=modelTree\r\nconst onCheck = (data: Tree, checked: boolean) => {\r\n  let showIds = modelTree.value.getCheckedKeys()\r\n  if (showIds.length == 0) {\r\n    for (const model of App.scene.mapModels.values()) {\r\n      for (const ele of model.allElementData.values()) {\r\n        ele.show = false;\r\n      }\r\n    }\r\n    App.scene.enableRender()\r\n    return;\r\n  }\r\n  let setIds: Set<number> = new Set();\r\n  for (const id of showIds) {\r\n    setIds.add(id);\r\n  }\r\n  for (const model of App.scene.mapModels.values()) {\r\n    for (const ele of model.allElementData.values()) {\r\n      if (!setIds.has(ele.id)) {\r\n        ele.show=false;\r\n      }\r\n      else\r\n      {\r\n        ele.show=true;\r\n      }\r\n    }\r\n  }\r\n  App.scene.enableRender()\r\n};\r\n\r\n\r\nconst handleNodeClick = (data: Tree) => {\r\n  if (data.children == null || data.children.length == 0) {\r\n\r\n   \r\n  }\r\n};\r\n\r\n// let ModelDataUI: Tree[] = [\r\n//   {\r\n//     id: 0,\r\n//     label: \"模型列表\",\r\n//     children: [],\r\n//   },\r\n// ];\r\n// ProjectViewComponent.ModelData.value = ModelDataUI;\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_tree_v2 = _resolveComponent(\"el-tree-v2\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_el_tree_v2, {\n      ref: (_value, _refs) => {\n        _refs['modelTree'] = _value\n        modelTree.value = _value\n      },\n      height: treeHeight.value,\n      data: _unref(ProjectViewComponent).ModelData.value,\n      props: defaultProps,\n      onNodeClick: handleNodeClick,\n      onCheckChange: onCheck,\n      \"node-key\": \"id\",\n      \"show-checkbox\": \"\",\n      \"default-expanded-keys\": [0],\n      \"default-checked-keys\": _unref(ProjectViewComponent).SpaceTreeCheckIDs.value\n    }, null, 8, [\"height\", \"data\", \"default-checked-keys\"])\n  ]))\n}\n}\n\n})","import script from \"./ProjectViewComponent.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ProjectViewComponent.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./ProjectViewComponent.vue?vue&type=style&index=0&id=44c26f3e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}