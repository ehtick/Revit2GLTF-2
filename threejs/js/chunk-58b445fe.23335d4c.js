(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-58b445fe"],{"298d":function(e,t,n){"use strict";n("45e1")},"45e1":function(e,t,n){},9485:function(e,t,n){"use strict";n.r(t);var a=n("f2bf"),o=n("d009"),c=n("c40d");const l={id:"treeData"};var s=Object(a["defineComponent"])({setup(e){const t={children:"children",label:"label"},n=Object(a["ref"])(434),s=Object(a["ref"])();c["a"].treeHeight=n,c["a"].modelTree=s;const d=(e,t)=>{let n=s.value.getCheckedKeys();if(0==n.length){for(const e of o["a"].scene.mapModels.values())for(const t of e.allElementData.values())t.show=!1;return void o["a"].scene.enableRender()}let a=new Set;for(const o of n)a.add(o);for(const c of o["a"].scene.mapModels.values())for(const e of c.allElementData.values())a.has(e.id)?e.show=!0:e.show=!1;o["a"].scene.enableRender()},r=e=>{null==e.children||e.children.length};return(e,o)=>{const u=Object(a["resolveComponent"])("el-tree-v2");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",l,[Object(a["createVNode"])(u,{ref:(e,t)=>{t["modelTree"]=e,s.value=e},height:n.value,data:Object(a["unref"])(c["a"]).ModelData.value,props:t,onNodeClick:r,onCheckChange:d,"node-key":"id","show-checkbox":"","default-expanded-keys":[0],"default-checked-keys":Object(a["unref"])(c["a"]).SpaceTreeCheckIDs.value},null,8,["height","data","default-checked-keys"])])}}});n("298d");const d=s;t["default"]=d}}]);
//# sourceMappingURL=chunk-58b445fe.23335d4c.js.map