{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/data/BatchData.ts","webpack:///./src/components/View3DComponent.ts","webpack:///./src/components lazy ^.*\\.vue$ namespace object","webpack:///./src/components/OpenTiles.vue?543b","webpack:///./src/components/OpenTiles.vue","webpack:///./src/data/SpaceTreeData.ts","webpack:///./src/data/ModelData.ts","webpack:///./src/assets/style.css?68c4","webpack:///./src/loaders/ShaderUtils.ts","webpack:///./src/data/MaterialData.ts","webpack:///./src/components/GlComponent.vue?9603","webpack:///./src/components/GlComponent.vue","webpack:///./src/components/OpenTiles.vue?4901","webpack:///./src/components/Glayout.vue?7b0a","webpack:///./src/components/Glayout.vue","webpack:///./src/three.module.js","webpack:///./src/App.vue?095d","webpack:///./src/assets/goldenlayout-dark-theme.css?b655","webpack:///./src/data/InstanceData.ts","webpack:///./src/sence/vignette/three-vignette-frag.js","webpack:///./src/components/ProjectViewComponent.ts","webpack:///./src/components/OpenTilesComponent.ts","webpack:///./src/components/predefined-layouts.ts","webpack:///./src/App.vue?de33","webpack:///./src/App.vue","webpack:///./src/main.ts","webpack:///./src/loaders/GlbLoaders.ts","webpack:///./src/operation/OperationType.ts","webpack:///./src/operation/OperationBase.ts","webpack:///./src/sence/ThreeRaycaster.ts","webpack:///./src/sence/ThreeViewCube.ts","webpack:///./src/sence/vignette/three-vignette.js","webpack:///./src/sence/controls/types.ts","webpack:///./src/sence/controls/CameraControlsUtiles.ts","webpack:///./src/sence/controls/CameraControls.ts","webpack:///./src/section/BaseBoxSection.ts","webpack:///./src/section/ObjectsBoxSection.ts","webpack:///./src/sence/controls/HoldEvent.ts","webpack:///./src/sence/PathAnimation.ts","webpack:///./src/sence/ThreeScene.ts","webpack:///./src/App.ts","webpack:///./src/assets/goldenlayout-base.css?1bd1","webpack:///./src/loaders/3d-tiles-renderer/utilities/urlExtension.js","webpack:///./src/loaders/3d-tiles-renderer/utilities/LRUCache.js","webpack:///./src/loaders/3d-tiles-renderer/utilities/PriorityQueue.js","webpack:///./src/loaders/3d-tiles-renderer/base/constants.js","webpack:///./src/loaders/3d-tiles-renderer/base/traverseFunctions.js","webpack:///./src/loaders/3d-tiles-renderer/base/TilesRendererBase.js","webpack:///./src/loaders/3d-tiles-renderer/utilities/arrayToString.js","webpack:///./src/loaders/3d-tiles-renderer/utilities/FeatureTable.js","webpack:///./src/loaders/3d-tiles-renderer/base/LoaderBase.js","webpack:///./src/loaders/3d-tiles-renderer/utilities/readMagicBytes.js","webpack:///./src/loaders/3d-tiles-renderer/base/B3DMLoaderBase.js","webpack:///./src/loaders/3d-tiles-renderer/three/B3DMLoader.js","webpack:///./src/loaders/3d-tiles-renderer/base/PNTSLoaderBase.js","webpack:///./src/loaders/3d-tiles-renderer/three/PNTSLoader.js","webpack:///./src/loaders/3d-tiles-renderer/base/I3DMLoaderBase.js","webpack:///./src/loaders/3d-tiles-renderer/three/I3DMLoader.js","webpack:///./src/loaders/3d-tiles-renderer/base/CMPTLoaderBase.js","webpack:///./src/loaders/3d-tiles-renderer/three/CMPTLoader.js","webpack:///./src/loaders/3d-tiles-renderer/three/GLTFCesiumRTCExtension.js","webpack:///./src/loaders/3d-tiles-renderer/three/GLTFExtensionLoader.js","webpack:///./src/loaders/3d-tiles-renderer/three/TilesGroup.js","webpack:///./src/loaders/3d-tiles-renderer/three/math/Ellipsoid.js","webpack:///./src/loaders/3d-tiles-renderer/three/math/EllipsoidRegion.js","webpack:///./src/loaders/3d-tiles-renderer/three/raycastTraverse.js","webpack:///./src/loaders/3d-tiles-renderer/three/TilesRenderer.js","webpack:///./src/loaders/TilesLoaders.ts","webpack:///./src/data/ElementData.ts","webpack:///./src/sence/vignette/three-vignette-vert.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","BatchData","mesh","batchID","_show","_color","this","indexs","positions","geometry","attributes","position","orignPositions","index","getX","getY","getZ","setOrignPositions","setX","setY","setZ","needsUpdate","colors","color","setXYZ","g","b","_boundingBox","minx","Number","MAX_VALUE","miny","minz","maxx","maxy","maxz","Math","min","max","matrix","clone","getMatrix4","obj","parent","premultiply","applyMatrix4","View3DComponent","showLoading","showVideo","map","webpackAsyncContext","req","ids","id","keys","_hoisted_1","class","_hoisted_2","_hoisted_3","__props","expose","dialogVisible","url","BtnConfirm_OnClick","TilesLoaders","tilesLoaders","App","scene","BtnCancel_OnClick","_ctx","_cache","_component_el_input","_component_el_form_item","_component_el_form","_component_el_button","_component_el_dialog","modelValue","$event","title","width","footer","onClick","default","_","label","__exports__","LevelData","CategoryData","allElementData","Map","rootObject","remove","clear","tile","dispose","levelDataMap","ele","categoryName","useData","levelName","levelData","has","elevation","categoryDataMap","set","elementDataMap","getSpaceDatas","levelDatas","Array","from","values","showLevelDatas","checkIds","sort","a","spaceData","children","showCategoryDatas","ElementData","showLevelData","categoryData","showElementDatas","showCategoryData","elementData","showElementDataData","ProjectViewComponent","ModelData","SpaceTreeCheckIDs","SpaceTreeExpandedIDs","material","onBeforeCompile","shader","uniforms","highlightedBatchId","highlightColor","unVisableBatchId","vertexShader","replace","fragmentShader","far","camera","myPlanes","plane","fromArray","normal","toArray","concat","constant","_normalMaterial","_pickMaterial","pickShader","_planeMat","metalness","roughness","stencilWrite","stencilRef","stencilFunc","stencilFail","stencilZFail","stencilZPass","_depthMaterial","depethShader","_zeroMatrix4","_normalColor","_selColor","GLComponent","numberToPixels","toString","setPosAndSize","left","top","height","el","style","container","getElementById","treeHeight","clientHeight","setVisibility","visible","display","setZIndex","zIndex","ref","_value","_refs","$slots","props","glcPath","String","GLRoot","GLayout","GlcKeyPrefix","MapComponents","AllComponents","UnusedIndexes","GlBoundingClientRect","CurIndex","instance","addComponent","componentType","glc","pop","addGLComponent","refId","loadGLLayout","layoutConfig","config","resolved","fromResolved","contents","root","content","itemConfig","componentState","loadLayout","getLayoutConfig","saveLayout","onResize","dom","offsetWidth","offsetHeight","setSize","addEventListener","passive","handleBeforeVirtualRectingEvent","count","getBoundingClientRect","handleContainerVirtualRectingRequiredEvent","component","containerBoundingClientRect","element","handleContainerVirtualVisibilityChangeRequiredEvent","handleContainerVirtualZIndexChangeRequiredEvent","logicalZIndex","defaultZIndex","bindComponentEventListener","refs","virtualRectingRequiredEvent","virtualVisibilityChangeRequiredEvent","virtualZIndexChangeRequiredEvent","virtual","unbindComponentEventListener","delete","beforeVirtualRectingEvent","pair","GlComponent","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","EventDispatcher","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","dispatchEvent","array","_lut","_seed","DEG2RAD","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","euclideanModulo","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","warn","MathUtils","freeze","__proto__","Vector2","constructor","setScalar","scalar","setComponent","getComponent","copy","v","add","w","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","offset","fromBufferAttribute","attribute","rotateAround","center","iterator","isVector2","Matrix3","arguments","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","f","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","rotate","theta","translate","arrayNeedsUint32","isMatrix3","TYPED_ARRAYS","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","getTypedArray","buffer","createElementNS","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","size","charAt","setColorName","toLowerCase","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","normalized","toJSON","_canvas","NAMES","ImageUtils","image","test","HTMLCanvasElement","canvas","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","Source","version","meta","isRootObject","images","output","isArray","isDataTexture","serializeImage","getDataURL","isSource","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","super","source","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","transformUv","uv","isTexture","Vector4","z","setW","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","samples","assign","isWebGLRenderTarget","DataArrayTexture","wrapR","isDataArrayTexture","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","il","isWebGLMultipleRenderTargets","Quaternion","_x","_y","_z","_w","qa","qb","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","EPSILON","len","tDir","_onChangeCallback","quaternion","setFromEuler","euler","update","isEuler","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","angleTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","isQuaternion","Vector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","qx","qy","qz","qw","ix","iy","iz","iw","project","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","denominator","projectOnPlane","planeNormal","_vector$c","reflect","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","randomDirection","u","isVector3","Box3","Infinity","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","_vector$b","setFromObject","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","boundingBox","computeBoundingBox","_box$3","union","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","clampedPoint","getBoundingSphere","intersect","_points","isBox3","_testAxis","v0","extents","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","yx","zx","zy","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","right","bottom","near","makeOrthographic","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","setFromQuaternion","setFromVector3","reorder","newOrder","RotationOrders","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","DefaultUp","onRotationChange","onQuaternionChange","defineProperties","configurable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","isObject3D","removeFromParent","attach","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","serialize","library","isInstancedMesh","instanceMatrix","instanceColor","isScene","background","environment","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getBarycoord","p3","uv1","uv2","uv3","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getUV","isFrontFacing","d4","vc","d5","d6","vb","va","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFuncMask","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","toneMapped","_alphaTest","onBuild","customProgramCacheKey","setValues","newValue","flatShading","currentValue","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","isMaterial","fromType","MeshBasicMaterial","isMeshBasicMaterial","_vector$9","_vector2$1","BufferAttribute","itemSize","TypeError","usage","updateRange","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","isBufferAttribute","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","_id$1","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","start","getIndex","setIndex","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","isNaN","jl","computeTangents","indices","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","positionAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","merge","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphTargets","raycaster","intersects","intersection","morphPosition","groupMaterial","end","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","mergeUniforms","merged","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","skew","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","fromEquirectangularTexture","tEquirect","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","isPlane","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","deleteBuffer","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","output_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","ior","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","WebGLBackground","cubemaps","state","objects","clearColor","planeMesh","boxMesh","clearAlpha","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","location","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","useCache","materialProperties","nGlobal","lGlobal","clippingState","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","physical","sheenColorMap","sheenRoughnessMap","transmissionSamplerSize","transmissionSamplerMap","OrthographicCamera","scaleW","scaleH","isOrthographicCamera","LOD_MIN","EXTRA_LOD_SIGMA","MAX_SAMPLES","_flatCamera","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","sizeLods","lodPlanes","sigmas","_createPlanes","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","programs","autoReset","numericalSort","absNumericalSort","denormalize","morph","WebGLMorphtargets","influencesList","morphTextures","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","updateCache","RePathPart","addUniform","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","errors","getShaderInfoLog","trim","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","decodeVideoTexture","physicallyCorrectLights","opaque","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","cachedUniforms","deleteShader","destroy","deleteProgram","usedTimes","_id","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","shaderStage","getVertexShaderID","getFragmentShaderID","Set","stage","WebGLShaderStage","WebGLPrograms","cubeuvmaps","_programLayers","_customShaders","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","useAlphaTest","useClearcoat","isXRRenderTarget","isVideoTexture","isFogExp2","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_distanceMaterial","_materialCache","_maxTextureSize","0","1","2","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","renderObject","shadowCamera","k","kl","depthMaterial","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","scissorParam","viewportParam","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","bindFramebuffer","framebuffer","drawBuffersWEBGL","useProgram","setFlipSided","setCullFace","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendEquationSeparate","blendFuncSeparate","blendFunc","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","texStorage2D","texStorage3D","texImage3D","WebGLTextures","_gl","utils","multisampledRTTExt","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","complete","uploadTexture","uploadCubeTexture","wrappingToGL","filterToGL","setTextureParameters","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","__currentVersion","pixelStorei","verifyColorSpace","convert","mipmap","glInternalFormat","useTexStorage","allocateMemory","levels","isDepthTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","sRGBToLinear","WebGLUtils","HALF_FLOAT_OES","SRGB_ALPHA_EXT","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","disconnect","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","DepthTexture","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","inputSourcesMap","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","onSessionEvent","controller","onSessionEnd","forEach","isPresenting","onInputSourcesChange","inputSources","removed","added","cameraAutoUpdate","getController","getControllerGrip","getHand","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","getBaseLayer","getBinding","getFrame","setSession","async","xrCompatible","makeXRCompatible","layerInit","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","depthFormat","depthType","glDepthFormat","projectionlayerInit","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","getFoveation","fixedFoveation","foveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraVRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","WebGLRenderer","_context","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_alpha","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","initGLContext","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","material2","getProgram","projectObject","pickRender","notPickRender","notPick","isLOD","pickMaterial","renderScene","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","camera2","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","halfFloatSupportedByExt","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","unpackImageHeight","unpackSkipPixels","unpackSkipRows","unpackSkipImages","compressedTexSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","isWebGLRenderer","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","addLevel","getCurrentLevel","getObjectForDistance","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","getBoneByName","fromJSON","json","boneInverse","InstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","getColorAt","getMatrixAt","raycastTimes","instanceId","setColorAt","setMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","CompressedTexture","CanvasTexture","isCanvasTexture","CircleGeometry","segments","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","slope","indexRow","sinTheta","cosTheta","generateCap","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","applyRadius","generateUVs","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","closed","binormals","vec","mat","tz","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","isArcCurve","px","py","pz","CatmullRomCurve3","curveType","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","isCatmullRomCurve3","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","extrudeByPath","shapePoints","reverse","isClockWise","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","f3","buildSideFaces","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","OctahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","edges","ol","isUniqueEdge","hash1","hash2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","_sheen","_clearcoat","_transmission","materialLib","AnimationUtils","arraySlice","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","getInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","loading","FileLoader","Request","headers","Headers","credentials","mimeType","responseType","fetch","response","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","decoder","TextDecoder","decode","catch","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","fromCharCode","decodeURIComponent","escape","lastIndexOf","InstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","parseImagesAsync","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","setTexturePath","ImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","res","colorSpaceConversion","imageBitmap","isImageBitmapLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","isAnimationObjectGroup","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","findByName","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","setColors","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","_floatView","_int32View","DataUtils","val","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","AxisHelper","BoundingBoxHelper","EdgesHelper","WireframeHelper","XHRLoader","BinaryTextureLoader","WebGLRenderTargetCube","CanvasRenderer","JSONLoader","construct","fromPoints","Handlers","empty","isIntersectionBox","isIntersectionSphere","toVector3","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","prototypenormal","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","gammaFactor","renderReverseSided","renderSingleSided","audioLoader","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","LensFlare","ParametricGeometry","TextGeometry","FontLoader","Font","ImmediateRenderObject","WebGLMultisampleRenderTarget","DataTexture2DArray","DataTexture3D","revision","__THREE__","InstanceData","_instanceMesh","_index","_orignMatrix4","zeroMatrix4","normalColor","OpenTilesComponent","miniRowConfig","row","column","minWidth","header","show","popout","isClosable","prefinedLayouts","miniRow","for","accept","multiple","GLayoutRoot","openTiles","OpenTiles","openTilesClick","Glayout","app","use","mount","world","gltfUrl","mapModels","clearModel","GLTFLoader","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","glTF","setCameraByBox","modelData","batchAndInstance","showSpaceTree","URL","revokeObjectURL","alert","model","structMap","idMap","curNode","bufferGeometry","positionCount","box3","sameMesh","item","instanceMap","meshs","meshCount","instancedMeshGeometry","MaterialData","elementIDS","elementID","instanceData","addMeshData","geom","mergedGeometry","singleMergeMesh","isIndexed","attributesUsed","mergedIndex","batchData","curIndex","mergedAttribute","OperationType","Base","ListenerMouseDown","ListenerMouseMove","ListenerMouseUp","ListenerkeyDown","highlightedObj","highlightedIndex","lastX","lastY","selID","_moveId","operationType","onMouseDown","onMouseMove","onMouseUp","onKeyDown","enter","quit","eventListener","clientX","clientY","getIntersectObjByGPU","selElemetByID","enableRender","resetSelEntity","selColor","firstPerson","setOrbitPoint","showBox3","showProperty","div","innerHTML","datas","setProperty","Parameters","GroupName","createPage","className","createLable","table","insertRow","insertCell","listen","keyCode","changeOperation","currentOperation","Quit","Enter","goldenContainer","_mouse","clientWidth","planeGround","batchIDs","visibleTiles","curBox","boxTransform","devicePixelRatio","pickingTexture","pixelBuffer","azimuthAngle","polarAngle","controls","saveState","cameraDepth","frustumSize","viewCubeMeshs","initOrthoScene","initOrthoCamera","_raycaster","sceneOrtho","arrowPos","creatTextMaterial","viewCubeMesh","number_of_triangles","makeMesh","vertexs","indexes","cameraOrtho","selectObject","oldMaterial","ctx","fillStyle","fillRect","font","textAlign","textBaseline","fillText","upAxis","createBackground","opt","frag","aspectCorrection","grainScale","grainTime","noiseAlpha","smooth","Boolean","VectorType","MOUSE_BUTTON","ACTION","NONE","TRUCK","OFFSET","ZOOM","TOUCH_ROTATE","TOUCH_TRUCK","TOUCH_OFFSET","TOUCH_DOLLY","TOUCH_ZOOM","TOUCH_DOLLY_TRUCK","TOUCH_DOLLY_OFFSET","TOUCH_DOLLY_ROTATE","TOUCH_ZOOM_TRUCK","TOUCH_ZOOM_OFFSET","TOUCH_ZOOM_ROTATE","extractClientCoordFromEvent","pointers","out","pointer","approxZero","number","approxEquals","roundToStep","infinityToMaxNumber","maxNumberToInfinity","smoothDamp","currentVelocityRef","smoothTime","maxSpeed","omega","change","originalTo","maxChange","temp","smoothDampVec3","targetX","targetY","targetZ","changeX","changeY","changeZ","originalToX","originalToY","originalToZ","maxChangeSq","magnitudeSq","magnitude","tempX","tempY","tempZ","origMinusCurrentX","origMinusCurrentY","origMinusCurrentZ","outMinusOrigX","outMinusOrigY","outMinusOrigZ","notSupportedInOrthographicCamera","PI_2","PI_HALF","VERSION","TOUCH_DOLLY_FACTOR","isBrowser","isMac","navigator","platform","isPointerEventsNotSupported","_ORIGIN","_AXIS_Y","_AXIS_Z","_v3A","_v3B","_v3C","_xColumn","_yColumn","_zColumn","_deltaTarget","_deltaOffset","_sphericalA","_sphericalB","_box3A","_box3B","_quaternionA","_quaternionB","_rotationMatrix","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","infinityDolly","minZoom","maxZoom","draggingSmoothTime","azimuthRotateSpeed","polarRotateSpeed","dollySpeed","dollyDragInverted","truckSpeed","dollyToCursor","dollyToOrbitPoint","dragToOffset","verticalDragToForward","boundaryFriction","restThreshold","colliderMeshes","cancel","_enabled","_dollyControlAmount","_hasRested","_boundaryEnclosesCamera","_needsUpdate","_updatedLastTime","_elementRect","DOMRect","_isDragging","_activePointers","_lockedPointer","_isUserControllingRotate","_isUserControllingDolly","_isUserControllingTruck","_isUserControllingOffset","_isUserControllingZoom","_thetaVelocity","_phiVelocity","_radiusVelocity","_targetVelocity","_focalOffsetVelocity","_zoomVelocity","clock","_truckInternal","deltaX","deltaY","truckX","pedestalY","targetDistance","setFocalOffset","_focalOffsetEnd","truck","forward","_rotateInternal","_dollyInternal","dollyScale","_sphericalEnd","prevRadius","signedPrevRadius","dollyTo","_targetEnd","_dollyControlCoord","_zoomInternal","zoomScale","prevZoom","_zoomEnd","zoomTo","_zoom","_yAxisUpSpace","_yAxisUpSpaceInverse","curTarget","_focalOffset","_spherical","_nearPlaneCorners","_updateNearPlaneCorners","_boundary","_cameraUp0","_target0","_position0","_zoom0","_focalOffset0","mouseButtons","middle","wheel","touches","one","two","three","dragStartPosition","lastDragPosition","dollyStart","onPointerDown","_domElement","mouseButton","pointerType","buttons","zombiePointer","_findPointerByMouseButton","_disposePointer","pointerId","ownerDocument","onPointerMove","onPointerUp","startDragging","cancelable","_findPointerById","movementX","movementY","dragging","endDragging","lastScrollTimeStamp","onMouseWheel","_getClientRect","deltaYFactor","deltaMode","onContextMenu","PointerEvent","MouseEvent","isMultiTouch","isPointerLockActive","pointerLockElement","lockedPointer","dollyX","dollyY","dollyDirection","dollyDelta","lockPointer","requestPointerLock","onPointerLockChange","onPointerLockError","unlockPointer","exitPointerLock","_addAllEventListeners","touchAction","userSelect","webkitUserSelect","_removeAllEventListeners","updateCameraUp","boundaryEnclosesCamera","enableTransition","rotateTo","resolveImmediately","_createOnRestPromise","lastRadius","newRadius","hasCollider","maxDistanceByCollisionTest","_collisionTest","isCollided","isDollyIn","zoomStep","_encloseToBoundary","box3OrObject","cover","paddingLeft","paddingRight","paddingBottom","paddingTop","aabb","viewFromPolar","bb","bbSize","getDistanceToFitBox","sphereOrMesh","isSphere","createBoundingSphere","distanceToFit","getDistanceToFitSphere","diameter","normalizeRotations","positionAX","positionAY","positionAZ","targetAX","targetAY","targetAZ","positionBX","positionBY","positionBZ","targetBX","targetBY","targetBZ","targetA","positionA","targetB","positionB","deltaTheta","deltaPhi","deltaRadius","setLookAt","pos","cameraToPoint","viewportOrX","boundingRectAspect","heightToFit","vFOV","hFOV","_out","getTarget","cameraDirection","deltaTarget","deltaOffset","deltaZoom","planeX","planeY","worldToScreen","lerpRatio","cursor","worldCursorPosition","prevPlaneConstant","newPlaneConstant","pullBack","affectOffset","updated","focalOffset","target0","position0","zoom0","focalOffset0","activePointer","friction","offsetLength2","newTarget","clampedTarget","deltaClampedTarget","deltaClampedTargetLength2","offsetFactor","zoomInv","nearPlaneCorner","rect","onResolve","object3d","isOpen","boxMin","boxMax","mousePosition","activeFace","updateMouseAndRay","setActive","isLeftButton","button","drag","xLeft","xRight","yDown","yUp","zBack","zFront","initGround","mousemove","mouseup","updateSectionBox","includes","newNormal","minSize","MIN_WIDTH","updatePlanes","initOrUpdateVertices","initOrUpdateFaces","initOrUpdateLines","sectionBox","initSectionBox","addMouseListener","removeMouseListener","clearSectionBox","open","initPlanes","backFace","normalMaterial","activeMaterial","isActive","backMaterial","forEvent","parentGroup","createPlaneStencilGroup","setSectionBox","boxHelper","planeDatas","planeData","planeObject","original","baseMat","mesh0","mat0","mesh1","mat1","HOLD_EVENT_TYPE","holdIntervalDelay","_holding","_intervalId","_deltaTime","_elapsedTime","_lastTime","_holdStart","HOLD_START","originalEvent","HOLDING","_holdEnd","HOLD_END","KeyboardKeyHold","onKeydown","isInputEvent","onKeyup","tagName","isContentEditable","cameraControls","_tmp","_cameraControls","selIndex","cameraTarget","cameraCurve","targetCurve","animationProgress","pathIndex","_paly","pathAnimation","gsap","fromTo","overwrite","ease","onUpdateParams","cameraX","cameraY","cameraZ","lookAtX","lookAtY","lookAtZ","renderEnabled","autoRender","pathAnimations","onWindowResize","viewCube","firstPersonSpeed","collision","_gravity","_gravityIng","keyDownEvent","initRenderer","initGPURenderer","initScene","initCamera","initLight","initControls","initStats","initEnvironment","erd","listenTo","light1","light2","gravity","po","curPathAnimation","keyDownEvents","border","borderRadius","evt","showPoint","fitToBox","homeTarget","homePosition","getIntersect","vignette","speed","getDepthByGPU","elevate","newCapture","动画时间","播放","imgData","dis","kill","section","allOperation","onclick","runCommand","srcElement","glbfUrl","createObjectURL","gltfLoader","param","URLSearchParams","search","substr","getUrlExtension","parsedUrl","filename","pathname","dotIndex","enqueueMicrotask","LRUCache","unloadPercent","itemSet","itemList","usedSet","unloadPriorityCallback","defaultPriorityCallback","isFull","removeCb","markUsed","markAllUnused","unloadUnusedContent","targetSize","unused","excess","usedA","usedB","unusedExcess","maxUnload","nodesToUnload","removedItems","scheduleUnload","scheduled","PriorityQueue","maxJobs","items","currJobs","priorityCallback","schedulingCallback","func","_runjobs","tryRunJobs","prCallback","args","scheduleJobRun","UNLOADED","LOADING","PARSING","LOADED","FAILED","WGS84_RADIUS","WGS84_FLATTENING","WGS84_HEIGHT","isDownloadFinished","isUsedThisFrame","frameCount","__lastFrameVisited","__used","resetFrameState","__inFrustum","__isLeaf","__visible","__active","__error","__distanceFromCamera","__childrenWereVisible","__allChildrenLoaded","recursivelyMarkUsed","lruCache","__contentEmpty","recursivelyLoadTiles","depthFromRenderedParent","doTraverse","__externalTileSet","__loadingState","__depthFromRenderedParent","requestTileContents","traverseSet","beforeCb","afterCb","determineFrustumSet","errorTarget","maxDepth","loadSiblings","stopAtEmptyTiles","inFrustum","tileInView","calculateError","__depth","anyChildrenUsed","markUsedSetLeaves","used","childrenWereVisible","allChildrenLoaded","__wasSetVisible","childLoaded","skipTraversal","parentDepthToParent","active","errorRequirement","errorThreshold","meetsSSE","includeTile","refine","hasModel","hasContent","loadedContent","allChildrenHaveContent","toggleTiles","isUsed","__usedLastFrame","setVisible","displayActiveTiles","__wasSetActive","setTileActive","setTileVisible","lruPriorityCallback","TilesRendererBase","tileSet","tileSets","rootURL","rootTileSet","preprocessURL","downloadQueue","parseQueue","parsing","downloading","failed","beforecb","aftercb","loadRootTileSet","parseTile","disposeTile","preprocessNode","parentTile","tileSetDir","uri","boundingVolume","isExternalTileSet","__loadIndex","__loadAbort","resetFailedTiles","fetchTileSet","ok","asset","assert","basePath","pr","abort","loadIndex","AbortController","signal","errorCallback","tileCb","downloadTile","arrayToString","utf8decoder","FeatureTable","headerLength","binLength","binOffset","headerData","getKeys","defaultComponentType","defaultType","feature","byteOffset","featureType","featureComponentType","arrayStart","arrayLength","dataEnd","getBuffer","BatchTable","batchSize","LoaderBase","workingPath","workingPathForURL","resolveExternalURL","splits","readMagicBytes","bufferOrDataView","getUint8","magicBytes","B3DMLoaderBase","dataView","magic","getUint32","featureTableJSONByteLength","featureTableBinaryByteLength","batchTableJSONByteLength","batchTableBinaryByteLength","featureTableStart","featureTableBuffer","featureTable","batchTableStart","batchTableBuffer","batchTable","glbStart","glbBytes","B3DMLoader","tilesRenderer","adjustmentTransform","b3dm","gltfBuffer","rtcCenter","classes","mapElement","positionsCount","batchids","instances","mapbatchData","PNTSLoaderBase","DRACO_ATTRIBUTE_MAP","RGB","POSITION","PNTSLoader","attributeIDs","mappedKey","taskConfig","attributeTypes","useUniqueIDs","decodeGeometry","POINTS_LENGTH","I3DMLoaderBase","gltfFormat","bodyBytes","externalUri","tempFwd","tempUp","tempRight","tempPos","tempQuat","tempSca","tempMat","I3DMLoader","i3dm","INSTANCES_LENGTH","NORMAL_UP","NORMAL_RIGHT","SCALE_NON_UNIFORM","SCALE","averageVector","CMPTLoaderBase","tilesLength","tiles","tileView","tileMagic","tileVersion","tileBuffer","CMPTLoader","slicedBuffer","GLTFCesiumRTCExtension","afterRoot","CESIUM_RTC","GLTFExtensionLoader","register","TilesGroup","optimizeRaycast","elA","elB","isDifferent","itemA","itemB","swapFrame","latitudeToSphericalPhi","latitude","_norm","_vec","Ellipsoid","getCartographicToPosition","lat","lon","gamma","getCartographicToNormal","getPositionToNormal","HALF_PI","_orthoX","_orthoY","_orthoZ","_invMatrix","_poolIndex","_pointsPool","getVector","usePool","resetPool","EllipsoidRegion","latStart","latEnd","lonStart","lonEnd","heightStart","heightEnd","_getPoints","midLat","midLon","lonOffset","latlon","latRange","_mat","_vec2","_hitArray","distanceSort","intersectTileScene","getPrototypeOf","raycastTraverseFirstHit","activeTiles","groupMatrixWorld","obbMat","invScale","bestDistanceSquared","bestHit","distanceSquared","hit","hitDistanceSquared","raycastTraverse","INITIAL_FRUSTUM_CULLED","tempMat2","tempVector","vecX","vecY","vecZ","updateFrustumCulled","toInitialValue","TilesRenderer","_autoDisableRendererCulling","forEachLoadedModel","cameraMap","cameraInfo","onLoadTileSet","onLoadModel","onDisposeModel","onTileVisibilityChange","_overridenRaycast","getBounds","getOrientedBounds","firstHitOnly","hasCamera","setCamera","setResolution","xOrVec","setResolutionFromRenderer","deleteCamera","rest","isOrthographic","sseDenominator","pixelSize","projection","transformArr","transformInverse","boxTransformInverse","region","west","south","east","north","minHeight","maxHeight","_loadIndex","uriSplits","gltfUpAxis","cachedTransform","fileType","autoDisableRendererCulling","useBox","maxError","geometricError","scaledDistance","inView","tilesUrl","_meshData"],"mappings":"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OAAQ,OAAQ,GAAM,OAAQ,OAAQ,GAAM,MAAO,OAAQ,GAAM,OAAQ,OAAQ,GAAM,IAAO,IAAO,MAAO,OAAQ,IAAO,KAAM,OAAQ,IAAO,MAAO,OAAQ,IAAO,MAAO,OAAQ,IAAO,MAAO,MAAO,IAAO,MAAO,OAAQ,IAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAAQ,OAAQ,KAAM,OAAQ,OAAQ,KAAM,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,GAAM,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,KAAM,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,IAAO,OAAQ,KAAM,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,QAAW,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,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AAO,MAAO,MAAO,IAAO,MAAO,OAAQ,IAAO,MAAO,IAAO,IAAO,GAAM,IAAO,IAAO,GAAM,IAAO,OAAQ,MAAO,IAAO,OAAQ,KAAM,IAAO,OAAQ,MAAO,IAAO,OAAQ,MAAO,IAAO,MAAO,MAAO,IAAO,OAAQ,MAAO,IAAO,IAAO,GAAM,OAAQ,OAAQ,GAAM,MAAO,OAAQ,GAAM,OAAQ,OAAQ,GAAM,OAAQ,OAAQ,GAAM,OAAQ,MAAO,GAAM,OAAQ,OAAQ,GAAM,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAAQ,OAAQ,MAAO,IAAO,OAAQ,MAAO,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAAQ,OAAQ,MAAO,OAAQ,OAAQ,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,IAAO,MAAO,MAAO,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,QAAW,CAAC,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,G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M,GAAM,GAAM,MAAO,GAAM,MAAO,KAAM,GAAM,MAAO,MAAO,GAAM,MAAO,MAAO,GAAM,MAAO,MAAO,GAAM,KAAM,MAAO,GAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,GAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,MAAO,MAAO,KAAM,MAAO,MAAO,GAAM,KAAM,MAAO,MAAO,MAAO,MAAO,OAAQ,QAAW,CAAC,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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","file":"js/app.c5adbd55.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0ea5c6d4\":\"7f014a90\",\"chunk-58b445fe\":\"23335d4c\",\"chunk-e1f4d1a4\":\"a4a63108\",\"chunk-5129c2a9\":\"69a0e424\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0ea5c6d4\":1,\"chunk-58b445fe\":1,\"chunk-e1f4d1a4\":1,\"chunk-5129c2a9\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-0ea5c6d4\":\"ecc2c5d8\",\"chunk-58b445fe\":\"bc17011b\",\"chunk-e1f4d1a4\":\"b20367d7\",\"chunk-5129c2a9\":\"422a9a16\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Mesh, BufferAttribute, Color, Box3, Vector3 } from \"three\";\r\nimport { MeshData } from \"./MeshData\";\r\n/**\r\n * 合批的数据\r\n */\r\nexport class BatchData implements MeshData\r\n{\r\n\r\n    constructor(mesh: Mesh,batchID: number)\r\n    {\r\n        this.mesh=mesh;\r\n        this.batchID=batchID;\r\n        this.indexs=[]\r\n    }\r\n    public mesh: Mesh;\r\n    public batchID: number;\r\n    public orignPositions:Array<number[]>;\r\n    //public orignColors:Array<number[]>;\r\n    public indexs:Array<number>;\r\n\r\n    private setOrignPositions()\r\n    {\r\n        let positions: BufferAttribute = this.mesh.geometry.attributes.position as BufferAttribute;\r\n        if(this.orignPositions==null)\r\n        {\r\n            this.orignPositions=[]\r\n            for (let i = 0; i < this.indexs.length; i++) {\r\n                const index = this.indexs[i];\r\n                this.orignPositions.push([positions.getX(index),\r\n                    positions.getY(index),\r\n                    positions.getZ(index)])\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private _show:boolean=true\r\n    public set show(value:boolean)\r\n    {\r\n        if(this._show==value) return;\r\n        this._show=value;\r\n        let positions: BufferAttribute = this.mesh.geometry.attributes.position as BufferAttribute;\r\n        this.setOrignPositions();\r\n        if(value)\r\n        {\r\n            for (let i = 0; i < this.indexs.length; i++) {\r\n                const index = this.indexs[i];\r\n                positions.setX(index, this.orignPositions[i][0]);\r\n                positions.setY(index, this.orignPositions[i][1]);\r\n                positions.setZ(index, this.orignPositions[i][2]);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            for (let i = 0; i < this.indexs.length; i++) {\r\n                const index = this.indexs[i];\r\n                positions.setX(index, 0);\r\n                positions.setY(index, 0);\r\n                positions.setZ(index, 0);\r\n            }\r\n        }\r\n        positions.needsUpdate = true;\r\n    }\r\n    public get show():boolean\r\n    {\r\n        return this._show;\r\n    }\r\n\r\n    \r\n\r\n    private _color:Color=null;\r\n    public set color(value:Color)\r\n    {\r\n        // if(this.orignColors==null)\r\n        // {\r\n        //     let colors: BufferAttribute = this.mesh.geometry.attributes.color as BufferAttribute;\r\n        //     this.orignColors=[]\r\n        //     for (let i = 0; i < this.indexs.length; i++) {\r\n        //         const index = this.indexs[i];\r\n        //         this.orignColors.push([colors.getX(index),\r\n        //             colors.getY(index),\r\n        //             colors.getZ(index)])\r\n        //     }\r\n        // }\r\n        if(value==null)\r\n        {\r\n            let colors: BufferAttribute = this.mesh.geometry.attributes.color as BufferAttribute;\r\n            for (let i = 0; i < this.indexs.length; i++) {\r\n                const index = this.indexs[i];\r\n                //colors.setXYZ(index, this.orignColors[i][0], this.orignColors[i][1], this.orignColors[i][2]);\r\n                colors.setXYZ(index,1,1,1)\r\n            }\r\n            colors.needsUpdate = true;\r\n            return;\r\n        }\r\n        this._color=value;\r\n        let colors: BufferAttribute = this.mesh.geometry.attributes.color as BufferAttribute;\r\n        for (let i = 0; i < this.indexs.length; i++) {\r\n            const index = this.indexs[i];\r\n            colors.setXYZ(index,value.r,value.g,value.b)\r\n        }    \r\n        colors.needsUpdate = true;\r\n    }\r\n    public get color():Color\r\n    {\r\n        return this._color;\r\n    }\r\n\r\n\r\n    public _boundingBox: Box3\r\n    public set boundingBox(value: Box3) {\r\n        this._boundingBox = value;\r\n    }\r\n    public get boundingBox(): Box3 {\r\n        if (this._boundingBox == null) {\r\n            this.setOrignPositions();\r\n\r\n            // let minx=Number.MAX_VALUE\r\n            // let miny=Number.MAX_VALUE\r\n            // let minz=Number.MAX_VALUE\r\n            // let maxx=Number.MIN_VALUE\r\n            // let maxy=Number.MIN_VALUE\r\n            // let maxz=Number.MIN_VALUE\r\n            let minx=Number.MAX_VALUE\r\n            let miny=Number.MAX_VALUE\r\n            let minz=Number.MAX_VALUE\r\n            let maxx=-Number.MAX_VALUE\r\n            let maxy=-Number.MAX_VALUE\r\n            let maxz=-Number.MAX_VALUE\r\n            for (const p of this.orignPositions) {\r\n                minx=Math.min(minx,p[0]);\r\n                miny=Math.min(miny,p[1]);\r\n                minz=Math.min(minz,p[2]);\r\n                maxx=Math.max(maxx,p[0]);\r\n                maxy=Math.max(maxy,p[1]);\r\n                maxz=Math.max(maxz,p[2]);\r\n            }\r\n            let min=new Vector3(minx,miny,minz)\r\n            let max=new Vector3(maxx,maxy,maxz)\r\n            this._boundingBox =new Box3(min,max)\r\n            let m = this.mesh.matrix.clone();\r\n            let getMatrix4 = (obj) => {\r\n                if (obj.parent) {\r\n                    m = m.premultiply(obj.parent.matrix);\r\n                    getMatrix4(obj.parent)\r\n                }\r\n            }\r\n            getMatrix4(this.mesh);\r\n            this._boundingBox.applyMatrix4(m)      \r\n        }\r\n        return this._boundingBox;\r\n    }\r\n}\r\n","import { ref } from \"vue\";\r\n\r\nexport class View3DComponent\r\n{\r\n  public static showLoading = ref(false);\r\n\r\n  public static showVideo = ref(false);\r\n}","var map = {\n\t\"./AttributeView.vue\": [\n\t\t\"fe82\",\n\t\t\"chunk-0ea5c6d4\"\n\t],\n\t\"./GlComponent.vue\": [\n\t\t\"833c\"\n\t],\n\t\"./Glayout.vue\": [\n\t\t\"8b00\"\n\t],\n\t\"./OpenTiles.vue\": [\n\t\t\"5223\"\n\t],\n\t\"./ProjectViewComponent.vue\": [\n\t\t\"9485\",\n\t\t\"chunk-58b445fe\"\n\t],\n\t\"./Toolbar.vue\": [\n\t\t\"6908\",\n\t\t\"chunk-e1f4d1a4\"\n\t],\n\t\"./View3D.vue\": [\n\t\t\"083c\",\n\t\t\"chunk-e1f4d1a4\",\n\t\t\"chunk-5129c2a9\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"2c49\";\nmodule.exports = webpackAsyncContext;","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\n_pushScopeId(\"data-v-34fb2ae9\")\nconst _hoisted_1 = { class: \"dialog-footer\" }\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"取 消\")\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"确认\")\n_popScopeId()\n\nimport { App } from '@/App'\r\nimport { TilesLoaders } from '@/loaders/TilesLoaders'\r\nimport { ref } from 'vue'\r\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props, { expose }) {\n\r\nconst dialogVisible = ref(false)\r\nconst url = ref(\"3dtiles/tileset.json\")\r\n\r\n\r\nconst BtnConfirm_OnClick = () => {\r\n  dialogVisible.value=false\r\n  TilesLoaders.tilesLoaders(App.scene,url.value); \r\n}\r\n\r\nconst BtnCancel_OnClick = () => {\r\n  dialogVisible.value=false\r\n}\r\n\r\nexpose({\r\n   dialogVisible\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_form = _resolveComponent(\"el-form\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_dialog = _resolveComponent(\"el-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_el_dialog, {\n    modelValue: dialogVisible.value,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (dialogVisible.value = $event)),\n    title: \"打开3Dtiles\",\n    width: \"500px\"\n  }, {\n    footer: _withCtx(() => [\n      _createElementVNode(\"span\", _hoisted_1, [\n        _createVNode(_component_el_button, { onClick: BtnCancel_OnClick }, {\n          default: _withCtx(() => [\n            _hoisted_2\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: BtnConfirm_OnClick\n        }, {\n          default: _withCtx(() => [\n            _hoisted_3\n          ]),\n          _: 1\n        })\n      ])\n    ]),\n    default: _withCtx(() => [\n      _createVNode(_component_el_form, { \"label-width\": \"70px\" }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_form_item, { label: \"url地址：\" }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: url.value,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (url.value = $event))\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }, 8, [\"modelValue\"]))\n}\n}\n\n})","import script from \"./OpenTiles.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./OpenTiles.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./OpenTiles.vue?vue&type=style&index=0&id=34fb2ae9&scoped=true&lang=css\"\n\nimport exportComponent from \"G:\\\\webView\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-34fb2ae9\"]])\n\nexport default __exports__","import { ElementData } from \"./ElementData\";\r\n\r\n\r\n\r\n\r\n//楼层数据\r\nexport class LevelData {\r\n    public name: string;\r\n    public elevation: number;\r\n    public categoryDataMap: Map<string, CategoryData>\r\n}\r\n\r\n//类别数据\r\nexport class CategoryData {\r\n    public name: string;\r\n    public elementDataMap: Map<number, ElementData>\r\n}","import { ProjectViewComponent, Tree } from \"@/components/ProjectViewComponent\";\r\nimport { TilesRenderer } from \"@/loaders/3d-tiles-renderer/three/TilesRenderer\";\r\nimport { Box3, Object3D } from \"three\";\r\nimport { ElementData } from \"./ElementData\";\r\nimport { CategoryData, LevelData } from \"./SpaceTreeData\";\r\n\r\n\r\n\r\nexport class ModelData {\r\n    \r\n\r\n\r\n    //id从1开始增加\r\n    private static id: number = 1\r\n    public readonly id: number;\r\n\r\n    public rootObject: Object3D\r\n\r\n    public allElementData: Map<number, ElementData> = new Map<number, ElementData>();\r\n\r\n    public tile: TilesRenderer\r\n\r\n\r\n    public boundingBox: Box3\r\n\r\n    public name: string\r\n    public url: string\r\n\r\n    public levelDataMap: Map<string, LevelData>;\r\n\r\n\r\n    constructor() {\r\n        this.id = ModelData.id++\r\n    }\r\n\r\n\r\n    clear() {\r\n        this.rootObject.parent.remove(this.rootObject)\r\n        this.rootObject.clear()\r\n        if( this.tile)\r\n        {\r\n            this.tile.dispose()\r\n        }\r\n        if(this.levelDataMap)\r\n        {\r\n            this.levelDataMap.clear()\r\n        }\r\n        this.allElementData.clear();\r\n    }\r\n       \r\n\r\n\r\n\r\n    public getSpaceDatas(): Map<string, LevelData> {\r\n\r\n        if (this.levelDataMap) return this.levelDataMap;\r\n        this.levelDataMap = new Map();\r\n        for (const id of this.allElementData.keys()) {\r\n            let ele = this.allElementData.get(id)\r\n            let categoryName = ele.useData[\"categoryName\"]\r\n            if (categoryName != null && typeof(categoryName)!='string') {\r\n                categoryName=categoryName[0]\r\n            }\r\n            let levelName = ele.useData[\"level\"]\r\n            if (levelName != null && typeof(levelName)!='string') {\r\n                levelName=levelName[0]\r\n            }\r\n            if (levelName != null) {\r\n                {\r\n                    let levelData: LevelData;\r\n                    if (!this.levelDataMap.has(levelName)) {\r\n                        levelData = new LevelData();\r\n                        levelData.name = levelName;\r\n\r\n                        let elevation= ele.useData[\"elevation\"]\r\n                        if (elevation != null && typeof(elevation)!='string') {\r\n                            elevation=elevation[0]\r\n                        }\r\n                        levelData.elevation =elevation\r\n                        levelData.categoryDataMap = new Map()\r\n                        this.levelDataMap.set(levelName, levelData)\r\n                    }\r\n                    else {\r\n                        levelData = this.levelDataMap.get(levelName);\r\n                    }\r\n                    if (categoryName != null) {\r\n                        let categoryDataMap: CategoryData;\r\n                        if (!levelData.categoryDataMap.has(categoryName)) {\r\n                            categoryDataMap = new CategoryData();\r\n                            categoryDataMap.name = categoryName;\r\n                            categoryDataMap.elementDataMap = new Map()\r\n                            levelData.categoryDataMap.set(categoryName, categoryDataMap)\r\n                        }\r\n                        else {\r\n                            categoryDataMap = levelData.categoryDataMap.get(categoryName);\r\n                        }\r\n                        categoryDataMap.elementDataMap.set(id, ele)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.levelDataMap\r\n    }\r\n\r\n\r\n    public showSpaceTree(): Tree {\r\n        this.getSpaceDatas();\r\n        let levelDatas = Array.from(this.levelDataMap.values())\r\n        if(levelDatas.length==0) return null;\r\n        let showLevelDatas: Tree[] = [];\r\n        let checkIds=[]\r\n        //let start = 0;\r\n        checkIds.push(0);\r\n        levelDatas.sort(function (a, b) { return a.elevation - b.elevation })  \r\n        let spaceData: Tree = {\r\n            id: 0,\r\n            label: this.name,\r\n            children: showLevelDatas\r\n        }\r\n        for (const levelData of levelDatas) {\r\n            let showCategoryDatas: Tree[] = [];\r\n            checkIds.push(ElementData.id);\r\n            let showLevelData: Tree = {\r\n                id: ElementData.id++,\r\n                label: levelData.name,\r\n                children: showCategoryDatas\r\n            }\r\n            for (const categoryName of levelData.categoryDataMap.keys()) {\r\n\r\n                let categoryData = levelData.categoryDataMap.get(categoryName);\r\n                let showElementDatas: Tree[] = [];\r\n                checkIds.push(ElementData.id);\r\n                let showCategoryData: Tree = {\r\n                    id: ElementData.id++,\r\n                    label: categoryName,\r\n                    children: showElementDatas\r\n                }\r\n\r\n                for (const elementData of categoryData.elementDataMap.values()) {\r\n                    checkIds.push(elementData.id);\r\n                    let showElementDataData: Tree = {\r\n                        id: elementData.id,\r\n                        label: elementData.name\r\n                    }\r\n                    showElementDatas.push(showElementDataData)\r\n                }\r\n                showCategoryDatas.push(showCategoryData)\r\n            }\r\n            showLevelDatas.push(showLevelData)\r\n        }\r\n        let data = [...ProjectViewComponent.ModelData.value]\r\n        if (data == null || data.length == 0) {\r\n            data = []\r\n        }\r\n        data.push(spaceData)\r\n        ProjectViewComponent.ModelData.value = data\r\n        ProjectViewComponent.SpaceTreeCheckIDs.value=checkIds\r\n        ProjectViewComponent.SpaceTreeExpandedIDs.value=checkIds\r\n    }\r\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!./style.css?vue&type=style&index=2&lang=css\"","import { App } from \"@/App\";\r\nimport { Color, Material, UniformsUtils,Shader } from \"three\";\r\n\r\n\r\nexport class ShaderUtils\r\n{\r\n   \r\n    public static batchIdHighlightShader(material:Material) {\r\n\r\n        material.onBeforeCompile = function (shader:Shader) {\r\n\r\n            shader.uniforms = {\r\n                highlightedBatchId: { value: -1 },\r\n                highlightColor: { value: new Color(0xFFC107) },\r\n                unVisableBatchId: { value: -1 },\r\n                ...UniformsUtils.clone(shader.uniforms),\r\n            };\r\n            //material[\"uniforms\"] = shader.uniforms\r\n            material[\"setHighlightedBatchId\"]=(value:number)=>\r\n            {\r\n                shader.uniforms.highlightedBatchId.value=value as any; \r\n                shader.uniforms.unVisableBatchId.value=value as any; \r\n            }\r\n            material[\"setHighlightColor\"]=(value:Color)=>\r\n            {\r\n                shader.uniforms.highlightedBatchId.value=value as any; \r\n            }\r\n\r\n            let vertexShader= shader.vertexShader.replace(\r\n                /#include <uv_vertex>/,\r\n                `\r\n                #include <uv_vertex>\r\n                batchid = _batchid;\r\n                `\r\n            );\r\n\r\n\r\n            vertexShader= vertexShader.replace(\r\n                /#include <fog_vertex>/,\r\n                `\r\n                #include <fog_vertex>\r\n                if(abs( batchid - unVisableBatchId ) < 0.5 ) gl_Position = vec4( 0,0,0,0) ;\r\n                `\r\n            );\r\n\r\n            // shader.extensions = {\r\n            //     derivatives: true,\r\n            // };\r\n            // shader.lights = true;\r\n            shader.vertexShader =\r\n                `\r\n                    attribute float _batchid;\r\n                    varying float batchid;\r\n                    uniform float unVisableBatchId;\r\n                ` +\r\n                vertexShader;\r\n\r\n            //console.log( shader.vertexShader)\r\n\r\n\r\n            shader.fragmentShader =\r\n                `\r\n                    varying float batchid;\r\n                    uniform float highlightedBatchId;\r\n                    uniform vec3 highlightColor;\r\n                ` +\r\n                shader.fragmentShader.replace(\r\n                    /vec4 diffuseColor = vec4\\( diffuse, opacity \\);/,\r\n                    `\r\n                    vec4 diffuseColor =\r\n                        abs( batchid - highlightedBatchId ) < 0.5 ?\r\n                        vec4( highlightColor, 1 ) :\r\n                        vec4( diffuse, opacity );\r\n                    `\r\n                );\r\n        }\r\n    }\r\n\r\n    public static pickShader(material:Material) {\r\n\r\n        material.onBeforeCompile = function (shader:Shader) {\r\n\r\n            let vertexShader= shader.vertexShader.replace(\r\n                /#include <fog_vertex>/,\r\n                `\r\n                #include <fog_vertex>\r\n                float r = float((elementID >> 16) & 0xFF) / 255.0;\r\n                float g = float((elementID >> 8) & 0xFF) / 255.0;\r\n                float b = float((elementID >> 0) & 0xFF) / 255.0;\r\n                vpickColor=vec3(r,g,b);\r\n                `\r\n            );\r\n\r\n            shader.vertexShader =\r\n                `\r\n                attribute int elementID;\r\n                varying  vec3 vpickColor;\r\n                ` +\r\n                vertexShader;\r\n\r\n\r\n            shader.fragmentShader =\r\n                `\r\n                 varying vec3 vpickColor;\r\n                ` +\r\n                shader.fragmentShader.replace(\r\n                    /#include <dithering_fragment>/,\r\n                    `\r\n                    #include <dithering_fragment>\r\n                    gl_FragColor =vec4(vpickColor, gl_FragCoord.z);\r\n                    `\r\n                );\r\n\r\n        }\r\n    }\r\n\r\n    public  static depethShader(material: Material) {\r\n        material.onBeforeCompile = function (shader:Shader) {\r\n\r\n\r\n            shader.uniforms = {\r\n                far: { value: App.scene.camera.far },\r\n                ...UniformsUtils.clone(shader.uniforms),\r\n            };\r\n            //material[\"uniforms\"] = shader.uniforms\r\n            material[\"setFar\"]=(value:number)=>\r\n            {\r\n                shader.uniforms.far.value=value as any; \r\n            }\r\n\r\n            let vertexShader= shader.vertexShader.replace(\r\n                /#include <fog_vertex>/,\r\n                `\r\n                #include <fog_vertex>\r\n                //gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n                depth = gl_Position.z / far;;\r\n                `\r\n            );\r\n\r\n            shader.vertexShader =\r\n                `\r\n                precision highp float;\r\n                uniform float far;\r\n                varying float depth;\r\n                ` +\r\n                vertexShader;\r\n\r\n           \r\n\r\n            shader.fragmentShader =\r\n                `\r\n                precision highp float;\r\n                varying float depth;\r\n                ` +\r\n                shader.fragmentShader.replace(\r\n                    /#include <dithering_fragment>/,\r\n                    `\r\n                    #include <dithering_fragment>\r\n                    float hex = abs(depth) * 16777215.0; // 0xffffff\r\n                    float r = floor(hex / 65535.0);\r\n                    float g = floor((hex - r * 65535.0) / 255.0);\r\n                    float b = floor(hex - r * 65535.0 - g * 255.0);\r\n                    float a = sign(depth) >= 0.0 ? 1.0 : 0.0; \r\n                    gl_FragColor = vec4(r / 255.0, g / 255.0, b / 255.0, a);\r\n                    `\r\n                );\r\n        }\r\n    }\r\n}","import { ShaderUtils } from \"@/loaders/ShaderUtils\";\r\nimport pick_frag from \"@/shaders/pick_frag\";\r\nimport pick_vertex from \"@/shaders/pick_vertex\";\r\nimport * as THREE from \"three\";\r\nimport { MeshStandardMaterial, Material, ShaderLib, Color, Matrix4 } from \"three\";\r\n\r\n\r\n// 1. 定义一个剪裁平面数组\r\nconst myPlanes = [\r\n    // 剪裁 x 轴负半轴\r\n    new THREE.Plane(new THREE.Vector3(-1, 0, 0), -2),\r\n    // 剪裁 y 轴负半轴\r\n    new THREE.Plane(new THREE.Vector3(0, -1, 0), -2),\r\n    // 剪裁 z 轴负半轴\r\n    new THREE.Plane(new THREE.Vector3(0, 0, -1), -2),\r\n  ]\r\n\r\nconst uniforms = {\r\n    myClippingPlanes: {\r\n      value: myPlanes.map(plane => new THREE.Vector4().fromArray(plane.normal.toArray().concat(plane.constant)))\r\n    }\r\n  }\r\n\r\nexport class MaterialData\r\n{\r\n\r\n    private static _normalMaterial: MeshStandardMaterial\r\n\r\n    public static get normalMaterial(): MeshStandardMaterial {\r\n        if (this._normalMaterial == null) {\r\n            this._normalMaterial = new MeshStandardMaterial();\r\n            this._normalMaterial.name=\"batchColorMaterial\"\r\n        }\r\n        return this._normalMaterial;\r\n    }\r\n\r\n    \r\n\r\n    private static _pickMaterial: THREE.Material\r\n\r\n    public static get pickMaterial(): THREE.Material {\r\n        // if (this._pickMaterial == null) {\r\n        //     this._pickMaterial =new THREE.ShaderMaterial({\r\n        //         vertexShader: pick_vertex,\r\n        //         fragmentShader:pick_frag,\r\n        //     });\r\n        // }\r\n\r\n        if (this._pickMaterial == null) {\r\n            this._pickMaterial=new THREE.MeshBasicMaterial()\r\n            ShaderUtils.pickShader(this._pickMaterial)\r\n        }\r\n        return this._pickMaterial;\r\n    }\r\n\r\n\r\n    private static _planeMat: THREE.Material\r\n\r\n    public static get planeMat(): THREE.Material {\r\n        if (this._planeMat == null) {\r\n            this._planeMat=new THREE.MeshStandardMaterial( {\r\n                color: 0xE91E63,\r\n                metalness: 0.1,\r\n                roughness: 0.75,\r\n                stencilWrite: true,\r\n                stencilRef: 0,\r\n                stencilFunc: THREE.NotEqualStencilFunc,\r\n                stencilFail: THREE.ReplaceStencilOp,\r\n                stencilZFail: THREE.ReplaceStencilOp,\r\n                stencilZPass: THREE.ReplaceStencilOp,\r\n\r\n            } );\r\n        }\r\n        return this._planeMat;\r\n    }\r\n\r\n    private static _depthMaterial: THREE.Material\r\n\r\n    public static get depthMaterial(): THREE.Material {\r\n        // if (this._pickMaterial == null) {\r\n        //     this._pickMaterial =new THREE.ShaderMaterial({\r\n        //         vertexShader: pick_vertex,\r\n        //         fragmentShader:pick_frag,\r\n        //     });\r\n        // }\r\n\r\n        if (this._depthMaterial == null) {\r\n            this._depthMaterial=new THREE.MeshBasicMaterial()\r\n            ShaderUtils.depethShader(this._depthMaterial)\r\n        }\r\n        return this._depthMaterial;\r\n    }\r\n\r\n\r\n    private static _zeroMatrix4: Matrix4\r\n    public static get zeroMatrix4(): Matrix4 {\r\n        if (this._zeroMatrix4 == null) {\r\n            this._zeroMatrix4 = new Matrix4();\r\n            this._zeroMatrix4.set(0,0,0,0,\r\n                                  0,0,0,0,\r\n                                  0,0,0,0,\r\n                                  0,0,0,0)\r\n        }\r\n        return this._zeroMatrix4;\r\n    }\r\n\r\n    private static _normalColor: Color\r\n\r\n    public static get normalColor(): Color {\r\n        if (this._normalColor == null) {\r\n            this._normalColor = new Color(1, 1, 1);\r\n        }\r\n        return this._normalColor;\r\n    }\r\n\r\n\r\n    private static _selColor: Color\r\n\r\n    public static get selColor(): Color {\r\n        if (this._selColor == null) {\r\n            this._selColor = new Color(1, 0, 0);\r\n        }\r\n        return this._selColor;\r\n    }\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { App } from \"@/App\";\r\nimport { ref } from \"vue\";\r\nimport { ProjectViewComponent } from \"./ProjectViewComponent\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props, { expose }) {\n\r\nconst GLComponent = ref<null | HTMLElement>(null);\r\n\r\nconst numberToPixels = (value: number): string => {\r\n    return value.toString(10) + \"px\";\r\n};\r\n\r\nconst setPosAndSize = (\r\n    left: number,\r\n    top: number,\r\n    width: number,\r\n    height: number\r\n): void => {\r\n    if (GLComponent.value) {\r\n        const el = GLComponent.value as HTMLElement;\r\n        el.style.left = numberToPixels(left);\r\n        el.style.top = numberToPixels(top);\r\n        el.style.width = numberToPixels(width);\r\n        el.style.height = numberToPixels(height);\r\n        //App.scene\r\n        //if(App.scene) App.scene.onWindowResize();\r\n\r\n        const container = document.getElementById(\"treeData\")\r\n        if(container)\r\n        {\r\n            ProjectViewComponent.treeHeight.value=container.clientHeight-1;\r\n        }\r\n    }\r\n};\r\n\r\nconst setVisibility = (visible: boolean): void => {\r\n    if (GLComponent.value) {\r\n        const el = GLComponent.value as HTMLElement;\r\n        if (visible) {\r\n            el.style.display = \"\";\r\n        } else {\r\n            el.style.display = \"none\";\r\n        }\r\n    }\r\n};\r\n\r\nconst setZIndex = (value: string): void => {\r\n    if (GLComponent.value) {\r\n        const el = GLComponent.value as HTMLElement;\r\n        el.style.zIndex = value;\r\n    }\r\n};\r\n\r\nexpose({\r\n    setPosAndSize,\r\n    setVisibility,\r\n    setZIndex,\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    ref: (_value, _refs) => {\n      _refs['GLComponent'] = _value\n      GLComponent.value = _value\n    },\n    style: {\"position\":\"absolute\",\"overflow\":\"hidden\"}\n  }, [\n    _renderSlot(_ctx.$slots, \"default\")\n  ], 512))\n}\n}\n\n})","import script from \"./GlComponent.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./GlComponent.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./OpenTiles.vue?vue&type=style&index=0&id=34fb2ae9&scoped=true&lang=css\"","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, withCtx as _withCtx } from \"vue\"\n\nconst _hoisted_1 = { style: {\"position\":\"relative\"} }\nconst _hoisted_2 = { style: {\"position\":\"absolute\",\"width\":\"100%\",\"height\":\"100%\"} }\n\nimport {\r\n    onMounted,\r\n    ref,\r\n    markRaw,\r\n    readonly,\r\n    defineAsyncComponent,\r\n    nextTick,\r\n    getCurrentInstance,\r\n} from \"vue\";\r\nimport {\r\n    ComponentContainer,\r\n    Json,\r\n    LayoutConfig,\r\n    RowOrColumnItemConfig,\r\n    StackItemConfig,\r\n    ComponentItemConfig,\r\n    ResolvedComponentItemConfig,\r\n    LogicalZIndex,\r\n    VirtualLayout,\r\n    ResolvedLayoutConfig,\r\n} from \"golden-layout\";\r\nimport GlComponent from \"@/components/GlComponent.vue\";\r\n\r\n/*******************\r\n * Prop\r\n *******************/\r\n\nexport default /*#__PURE__*/_defineComponent({\n  props: {\r\n    glcPath: String,\r\n},\n  setup(__props, { expose }) {\n\nconst props = __props\r\n\r\n\r\n/*******************\r\n * Data\r\n *******************/\r\nconst GLRoot = ref<null | HTMLElement>(null);\r\nlet GLayout: VirtualLayout;\r\nconst GlcKeyPrefix = readonly(ref(\"glc_\"));\r\n\r\nconst MapComponents = new Map<\r\n    ComponentContainer,\r\n    { refId: number; glc: GlComponent }\r\n>();\r\n\r\nconst AllComponents = ref(new Map<number, any>());\r\nconst UnusedIndexes: number[] = [];\r\nlet CurIndex = 0;\r\nlet GlBoundingClientRect: DOMRect;\r\n\r\nconst instance = getCurrentInstance();\r\n\r\n/*******************\r\n * Method\r\n *******************/\r\n/** @internal */\r\nconst addComponent = (componentType: string, title: string) => {\r\n    const glc = markRaw(\r\n        defineAsyncComponent(\r\n            () => import(props.glcPath + componentType + \".vue\")\r\n        )\r\n    );\r\n\r\n    let index = CurIndex;\r\n    if (UnusedIndexes.length > 0) index = UnusedIndexes.pop() as number;\r\n    else CurIndex++;\r\n\r\n    AllComponents.value.set(index, glc);\r\n\r\n    return index;\r\n};\r\n\r\nconst addGLComponent = async (componentType: string, title: string) => {\r\n    if (componentType.length == 0)\r\n        throw new Error(\"addGLComponent: Component's type is empty\");\r\n\r\n    const index = addComponent(componentType, title);\r\n\r\n    await nextTick(); // wait 1 tick for vue to add the dom\r\n\r\n    GLayout.addComponent(componentType, { refId: index }, title);\r\n};\r\n\r\nconst loadGLLayout = async (\r\n    layoutConfig: LayoutConfig | ResolvedLayoutConfig\r\n) => {\r\n    GLayout.clear();\r\n    AllComponents.value.clear();\r\n\r\n    const config = (\r\n        layoutConfig.resolved\r\n            ? LayoutConfig.fromResolved(layoutConfig as ResolvedLayoutConfig)\r\n            : layoutConfig\r\n    ) as LayoutConfig;\r\n\r\n    let contents: (\r\n        | RowOrColumnItemConfig[]\r\n        | StackItemConfig[]\r\n        | ComponentItemConfig[]\r\n    )[] = [config.root.content];\r\n\r\n    let index = 0;\r\n    while (contents.length > 0) {\r\n        const content = contents.shift() as\r\n            | RowOrColumnItemConfig[]\r\n            | StackItemConfig[]\r\n            | ComponentItemConfig[];\r\n        for (let itemConfig of content) {\r\n            if (itemConfig.type == \"component\") {\r\n                index = addComponent(\r\n                    itemConfig.componentType as string,\r\n                    itemConfig.title as string\r\n                );\r\n                if (typeof itemConfig.componentState == \"object\")\r\n                    itemConfig.componentState[\"refId\"] = index;\r\n                else itemConfig.componentState = { refId: index };\r\n            } else if (itemConfig.content.length > 0) {\r\n                contents.push(\r\n                    itemConfig.content as\r\n                        | RowOrColumnItemConfig[]\r\n                        | StackItemConfig[]\r\n                        | ComponentItemConfig[]\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    await nextTick(); // wait 1 tick for vue to add the dom\r\n\r\n    GLayout.loadLayout(config);   \r\n};\r\n\r\nconst getLayoutConfig = () => {\r\n    return GLayout.saveLayout();\r\n};\r\n\r\n/*******************\r\n * Mount\r\n *******************/\r\nonMounted(() => {\r\n    if (GLRoot.value == null)\r\n        throw new Error(\"Golden Layout can't find the root DOM!\");\r\n\r\n    const onResize = () => {\r\n        const dom = GLRoot.value;\r\n        let width = dom ? dom.offsetWidth : 0;\r\n        let height = dom ? dom.offsetHeight : 0;\r\n        GLayout.setSize(width, height);\r\n    };\r\n\r\n    window.addEventListener(\"resize\", onResize, { passive: true });\r\n\r\n    const handleBeforeVirtualRectingEvent = (count: number) => {\r\n        GlBoundingClientRect = (\r\n            GLRoot.value as HTMLElement\r\n        ).getBoundingClientRect();\r\n    };\r\n\r\n    const handleContainerVirtualRectingRequiredEvent = (\r\n        container: ComponentContainer,\r\n        width: number,\r\n        height: number\r\n    ): void => {\r\n        const component = MapComponents.get(container);\r\n        if (!component || !component?.glc) {\r\n            throw new Error(\r\n                \"handleContainerVirtualRectingRequiredEvent: Component not found\"\r\n            );\r\n        }\r\n\r\n        const containerBoundingClientRect =\r\n            container.element.getBoundingClientRect();\r\n        const left =\r\n            containerBoundingClientRect.left - GlBoundingClientRect.left;\r\n        const top = containerBoundingClientRect.top - GlBoundingClientRect.top;\r\n        component.glc.setPosAndSize(left, top, width, height);\r\n    };\r\n\r\n    const handleContainerVirtualVisibilityChangeRequiredEvent = (\r\n        container: ComponentContainer,\r\n        visible: boolean\r\n    ): void => {\r\n        const component = MapComponents.get(container);\r\n        if (!component || !component?.glc) {\r\n            throw new Error(\r\n                \"handleContainerVirtualVisibilityChangeRequiredEvent: Component not found\"\r\n            );\r\n        }\r\n\r\n        component.glc.setVisibility(visible);\r\n    };\r\n\r\n    const handleContainerVirtualZIndexChangeRequiredEvent = (\r\n        container: ComponentContainer,\r\n        logicalZIndex: LogicalZIndex,\r\n        defaultZIndex: string\r\n    ): void => {\r\n        const component = MapComponents.get(container);\r\n        if (!component || !component?.glc) {\r\n            throw new Error(\r\n                \"handleContainerVirtualZIndexChangeRequiredEvent: Component not found\"\r\n            );\r\n        }\r\n\r\n        component.glc.setZIndex(defaultZIndex);\r\n    };\r\n\r\n    const bindComponentEventListener = (\r\n        container: ComponentContainer,\r\n        itemConfig: ResolvedComponentItemConfig\r\n    ): ComponentContainer.BindableComponent => {\r\n        let refId = -1;\r\n        if (itemConfig && itemConfig.componentState) {\r\n            refId = (itemConfig.componentState as Json).refId as number;\r\n        } else {\r\n            throw new Error(\r\n                \"bindComponentEventListener: component's ref id is required\"\r\n            );\r\n        }\r\n\r\n        const ref = GlcKeyPrefix.value + refId;\r\n        const component = instance?.refs[ref] as GlComponent;\r\n\r\n        MapComponents.set(container, { refId: refId, glc: component });\r\n\r\n        container.virtualRectingRequiredEvent = (container, width, height) =>\r\n            handleContainerVirtualRectingRequiredEvent(\r\n                container,\r\n                width,\r\n                height\r\n            );\r\n\r\n        container.virtualVisibilityChangeRequiredEvent = (container, visible) =>\r\n            handleContainerVirtualVisibilityChangeRequiredEvent(\r\n                container,\r\n                visible\r\n            );\r\n\r\n        container.virtualZIndexChangeRequiredEvent = (\r\n            container,\r\n            logicalZIndex,\r\n            defaultZIndex\r\n        ) =>\r\n            handleContainerVirtualZIndexChangeRequiredEvent(\r\n                container,\r\n                logicalZIndex,\r\n                defaultZIndex\r\n            );\r\n\r\n        return {\r\n            component,\r\n            virtual: true,\r\n        };\r\n    };\r\n\r\n    const unbindComponentEventListener = (\r\n        container: ComponentContainer\r\n    ): void => {\r\n        const component = MapComponents.get(container);\r\n        if (!component || !component?.glc) {\r\n            throw new Error(\"handleUnbindComponentEvent: Component not found\");\r\n        }\r\n\r\n        MapComponents.delete(container);\r\n        AllComponents.value.delete(component.refId);\r\n        UnusedIndexes.push(component.refId);\r\n    };\r\n\r\n    GLayout = new VirtualLayout(\r\n        GLRoot.value as HTMLElement,\r\n        bindComponentEventListener,\r\n        unbindComponentEventListener\r\n    );\r\n\r\n    GLayout.beforeVirtualRectingEvent = handleBeforeVirtualRectingEvent;\r\n});\r\n\r\n/*******************\r\n * Expose\r\n *******************/\r\nexpose({\r\n    addGLComponent,\r\n    loadGLLayout,\r\n    getLayoutConfig,\r\n});\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref: (_value, _refs) => {\n        _refs['GLRoot'] = _value\n        GLRoot.value = _value\n      },\n      style: {\"position\":\"absolute\",\"width\":\"100%\",\"height\":\"100%\"}\n    }, null, 512),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(AllComponents.value, (pair) => {\n        return (_openBlock(), _createBlock(GlComponent, {\n          key: pair[0],\n          ref: _unref(GlcKeyPrefix) + pair[0]\n        }, {\n          default: _withCtx(() => [\n            (_openBlock(), _createBlock(_resolveDynamicComponent(pair[1])))\n          ]),\n          _: 2\n        }, 1536))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","import script from \"./Glayout.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Glayout.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","/**\r\n * @license\r\n * Copyright 2010-2022 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */\r\n const REVISION = '138';\r\n const MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\r\n const TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\r\n const CullFaceNone = 0;\r\n const CullFaceBack = 1;\r\n const CullFaceFront = 2;\r\n const CullFaceFrontBack = 3;\r\n const BasicShadowMap = 0;\r\n const PCFShadowMap = 1;\r\n const PCFSoftShadowMap = 2;\r\n const VSMShadowMap = 3;\r\n const FrontSide = 0;\r\n const BackSide = 1;\r\n const DoubleSide = 2;\r\n const FlatShading = 1;\r\n const SmoothShading = 2;\r\n const NoBlending = 0;\r\n const NormalBlending = 1;\r\n const AdditiveBlending = 2;\r\n const SubtractiveBlending = 3;\r\n const MultiplyBlending = 4;\r\n const CustomBlending = 5;\r\n const AddEquation = 100;\r\n const SubtractEquation = 101;\r\n const ReverseSubtractEquation = 102;\r\n const MinEquation = 103;\r\n const MaxEquation = 104;\r\n const ZeroFactor = 200;\r\n const OneFactor = 201;\r\n const SrcColorFactor = 202;\r\n const OneMinusSrcColorFactor = 203;\r\n const SrcAlphaFactor = 204;\r\n const OneMinusSrcAlphaFactor = 205;\r\n const DstAlphaFactor = 206;\r\n const OneMinusDstAlphaFactor = 207;\r\n const DstColorFactor = 208;\r\n const OneMinusDstColorFactor = 209;\r\n const SrcAlphaSaturateFactor = 210;\r\n const NeverDepth = 0;\r\n const AlwaysDepth = 1;\r\n const LessDepth = 2;\r\n const LessEqualDepth = 3;\r\n const EqualDepth = 4;\r\n const GreaterEqualDepth = 5;\r\n const GreaterDepth = 6;\r\n const NotEqualDepth = 7;\r\n const MultiplyOperation = 0;\r\n const MixOperation = 1;\r\n const AddOperation = 2;\r\n const NoToneMapping = 0;\r\n const LinearToneMapping = 1;\r\n const ReinhardToneMapping = 2;\r\n const CineonToneMapping = 3;\r\n const ACESFilmicToneMapping = 4;\r\n const CustomToneMapping = 5;\r\n \r\n const UVMapping = 300;\r\n const CubeReflectionMapping = 301;\r\n const CubeRefractionMapping = 302;\r\n const EquirectangularReflectionMapping = 303;\r\n const EquirectangularRefractionMapping = 304;\r\n const CubeUVReflectionMapping = 306;\r\n const CubeUVRefractionMapping = 307;\r\n const RepeatWrapping = 1000;\r\n const ClampToEdgeWrapping = 1001;\r\n const MirroredRepeatWrapping = 1002;\r\n const NearestFilter = 1003;\r\n const NearestMipmapNearestFilter = 1004;\r\n const NearestMipMapNearestFilter = 1004;\r\n const NearestMipmapLinearFilter = 1005;\r\n const NearestMipMapLinearFilter = 1005;\r\n const LinearFilter = 1006;\r\n const LinearMipmapNearestFilter = 1007;\r\n const LinearMipMapNearestFilter = 1007;\r\n const LinearMipmapLinearFilter = 1008;\r\n const LinearMipMapLinearFilter = 1008;\r\n const UnsignedByteType = 1009;\r\n const ByteType = 1010;\r\n const ShortType = 1011;\r\n const UnsignedShortType = 1012;\r\n const IntType = 1013;\r\n const UnsignedIntType = 1014;\r\n const FloatType = 1015;\r\n const HalfFloatType = 1016;\r\n const UnsignedShort4444Type = 1017;\r\n const UnsignedShort5551Type = 1018;\r\n const UnsignedInt248Type = 1020;\r\n const AlphaFormat = 1021;\r\n const RGBFormat = 1022;\r\n const RGBAFormat = 1023;\r\n const LuminanceFormat = 1024;\r\n const LuminanceAlphaFormat = 1025;\r\n const DepthFormat = 1026;\r\n const DepthStencilFormat = 1027;\r\n const RedFormat = 1028;\r\n const RedIntegerFormat = 1029;\r\n const RGFormat = 1030;\r\n const RGIntegerFormat = 1031;\r\n const RGBAIntegerFormat = 1033;\r\n \r\n const RGB_S3TC_DXT1_Format = 33776;\r\n const RGBA_S3TC_DXT1_Format = 33777;\r\n const RGBA_S3TC_DXT3_Format = 33778;\r\n const RGBA_S3TC_DXT5_Format = 33779;\r\n const RGB_PVRTC_4BPPV1_Format = 35840;\r\n const RGB_PVRTC_2BPPV1_Format = 35841;\r\n const RGBA_PVRTC_4BPPV1_Format = 35842;\r\n const RGBA_PVRTC_2BPPV1_Format = 35843;\r\n const RGB_ETC1_Format = 36196;\r\n const RGB_ETC2_Format = 37492;\r\n const RGBA_ETC2_EAC_Format = 37496;\r\n const RGBA_ASTC_4x4_Format = 37808;\r\n const RGBA_ASTC_5x4_Format = 37809;\r\n const RGBA_ASTC_5x5_Format = 37810;\r\n const RGBA_ASTC_6x5_Format = 37811;\r\n const RGBA_ASTC_6x6_Format = 37812;\r\n const RGBA_ASTC_8x5_Format = 37813;\r\n const RGBA_ASTC_8x6_Format = 37814;\r\n const RGBA_ASTC_8x8_Format = 37815;\r\n const RGBA_ASTC_10x5_Format = 37816;\r\n const RGBA_ASTC_10x6_Format = 37817;\r\n const RGBA_ASTC_10x8_Format = 37818;\r\n const RGBA_ASTC_10x10_Format = 37819;\r\n const RGBA_ASTC_12x10_Format = 37820;\r\n const RGBA_ASTC_12x12_Format = 37821;\r\n const RGBA_BPTC_Format = 36492;\r\n const LoopOnce = 2200;\r\n const LoopRepeat = 2201;\r\n const LoopPingPong = 2202;\r\n const InterpolateDiscrete = 2300;\r\n const InterpolateLinear = 2301;\r\n const InterpolateSmooth = 2302;\r\n const ZeroCurvatureEnding = 2400;\r\n const ZeroSlopeEnding = 2401;\r\n const WrapAroundEnding = 2402;\r\n const NormalAnimationBlendMode = 2500;\r\n const AdditiveAnimationBlendMode = 2501;\r\n const TrianglesDrawMode = 0;\r\n const TriangleStripDrawMode = 1;\r\n const TriangleFanDrawMode = 2;\r\n const LinearEncoding = 3000;\r\n const sRGBEncoding = 3001;\r\n const BasicDepthPacking = 3200;\r\n const RGBADepthPacking = 3201;\r\n const TangentSpaceNormalMap = 0;\r\n const ObjectSpaceNormalMap = 1;\r\n \r\n const ZeroStencilOp = 0;\r\n const KeepStencilOp = 7680;\r\n const ReplaceStencilOp = 7681;\r\n const IncrementStencilOp = 7682;\r\n const DecrementStencilOp = 7683;\r\n const IncrementWrapStencilOp = 34055;\r\n const DecrementWrapStencilOp = 34056;\r\n const InvertStencilOp = 5386;\r\n \r\n const NeverStencilFunc = 512;\r\n const LessStencilFunc = 513;\r\n const EqualStencilFunc = 514;\r\n const LessEqualStencilFunc = 515;\r\n const GreaterStencilFunc = 516;\r\n const NotEqualStencilFunc = 517;\r\n const GreaterEqualStencilFunc = 518;\r\n const AlwaysStencilFunc = 519;\r\n \r\n const StaticDrawUsage = 35044;\r\n const DynamicDrawUsage = 35048;\r\n const StreamDrawUsage = 35040;\r\n const StaticReadUsage = 35045;\r\n const DynamicReadUsage = 35049;\r\n const StreamReadUsage = 35041;\r\n const StaticCopyUsage = 35046;\r\n const DynamicCopyUsage = 35050;\r\n const StreamCopyUsage = 35042;\r\n \r\n const GLSL1 = '100';\r\n const GLSL3 = '300 es';\r\n \r\n const _SRGBAFormat = 1035; // fallback for WebGL 1\r\n \r\n var randerStop = false; // fallback for WebGL 1\r\n \r\n /**\r\n  * https://github.com/mrdoob/eventdispatcher.js/\r\n  */\r\n \r\n class EventDispatcher {\r\n \r\n\t addEventListener( type, listener ) {\r\n \r\n\t\t if ( this._listeners === undefined ) this._listeners = {};\r\n \r\n\t\t const listeners = this._listeners;\r\n \r\n\t\t if ( listeners[ type ] === undefined ) {\r\n \r\n\t\t\t listeners[ type ] = [];\r\n \r\n\t\t }\r\n \r\n\t\t if ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n \r\n\t\t\t listeners[ type ].push( listener );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t hasEventListener( type, listener ) {\r\n \r\n\t\t if ( this._listeners === undefined ) return false;\r\n \r\n\t\t const listeners = this._listeners;\r\n \r\n\t\t return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n \r\n\t }\r\n \r\n\t removeEventListener( type, listener ) {\r\n \r\n\t\t if ( this._listeners === undefined ) return;\r\n \r\n\t\t const listeners = this._listeners;\r\n\t\t const listenerArray = listeners[ type ];\r\n \r\n\t\t if ( listenerArray !== undefined ) {\r\n \r\n\t\t\t const index = listenerArray.indexOf( listener );\r\n \r\n\t\t\t if ( index !== - 1 ) {\r\n \r\n\t\t\t\t listenerArray.splice( index, 1 );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t dispatchEvent( event ) {\r\n \r\n\t\t if ( this._listeners === undefined ) return;\r\n \r\n\t\t const listeners = this._listeners;\r\n\t\t const listenerArray = listeners[ event.type ];\r\n \r\n\t\t if ( listenerArray !== undefined ) {\r\n \r\n\t\t\t event.target = this;\r\n \r\n\t\t\t // Make a copy, in case listeners are removed while iterating.\r\n\t\t\t const array = listenerArray.slice( 0 );\r\n \r\n\t\t\t for ( let i = 0, l = array.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t array[ i ].call( this, event );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t event.target = null;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _lut = [];\r\n \r\n for ( let i = 0; i < 256; i ++ ) {\r\n \r\n\t _lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\r\n \r\n }\r\n \r\n let _seed = 1234567;\r\n \r\n \r\n const DEG2RAD = Math.PI / 180;\r\n const RAD2DEG = 180 / Math.PI;\r\n \r\n // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\n function generateUUID() {\r\n \r\n\t const d0 = Math.random() * 0xffffffff | 0;\r\n\t const d1 = Math.random() * 0xffffffff | 0;\r\n\t const d2 = Math.random() * 0xffffffff | 0;\r\n\t const d3 = Math.random() * 0xffffffff | 0;\r\n\t const uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t _lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t _lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t _lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\r\n \r\n\t // .toUpperCase() here flattens concatenated strings to save heap memory space.\r\n\t return uuid.toUpperCase();\r\n \r\n }\r\n \r\n function clamp( value, min, max ) {\r\n \r\n\t return Math.max( min, Math.min( max, value ) );\r\n \r\n }\r\n \r\n // compute euclidian modulo of m % n\r\n // https://en.wikipedia.org/wiki/Modulo_operation\r\n function euclideanModulo( n, m ) {\r\n \r\n\t return ( ( n % m ) + m ) % m;\r\n \r\n }\r\n \r\n // Linear mapping from range <a1, a2> to range <b1, b2>\r\n function mapLinear( x, a1, a2, b1, b2 ) {\r\n \r\n\t return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n \r\n }\r\n \r\n // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\n function inverseLerp( x, y, value ) {\r\n \r\n\t if ( x !== y ) {\r\n \r\n\t\t return ( value - x ) / ( y - x );\r\n \r\n\t } else {\r\n \r\n\t\t return 0;\r\n \r\n\t }\r\n \r\n }\r\n \r\n // https://en.wikipedia.org/wiki/Linear_interpolation\r\n function lerp( x, y, t ) {\r\n \r\n\t return ( 1 - t ) * x + t * y;\r\n \r\n }\r\n \r\n // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\n function damp( x, y, lambda, dt ) {\r\n \r\n\t return lerp( x, y, 1 - Math.exp( - lambda * dt ) );\r\n \r\n }\r\n \r\n // https://www.desmos.com/calculator/vcsjnyz7x4\r\n function pingpong( x, length = 1 ) {\r\n \r\n\t return length - Math.abs( euclideanModulo( x, length * 2 ) - length );\r\n \r\n }\r\n \r\n // http://en.wikipedia.org/wiki/Smoothstep\r\n function smoothstep( x, min, max ) {\r\n \r\n\t if ( x <= min ) return 0;\r\n\t if ( x >= max ) return 1;\r\n \r\n\t x = ( x - min ) / ( max - min );\r\n \r\n\t return x * x * ( 3 - 2 * x );\r\n \r\n }\r\n \r\n function smootherstep( x, min, max ) {\r\n \r\n\t if ( x <= min ) return 0;\r\n\t if ( x >= max ) return 1;\r\n \r\n\t x = ( x - min ) / ( max - min );\r\n \r\n\t return x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n \r\n }\r\n \r\n // Random integer from <low, high> interval\r\n function randInt( low, high ) {\r\n \r\n\t return low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n \r\n }\r\n \r\n // Random float from <low, high> interval\r\n function randFloat( low, high ) {\r\n \r\n\t return low + Math.random() * ( high - low );\r\n \r\n }\r\n \r\n // Random float from <-range/2, range/2> interval\r\n function randFloatSpread( range ) {\r\n \r\n\t return range * ( 0.5 - Math.random() );\r\n \r\n }\r\n \r\n // Deterministic pseudo-random float in the interval [ 0, 1 ]\r\n function seededRandom( s ) {\r\n \r\n\t if ( s !== undefined ) _seed = s % 2147483647;\r\n \r\n\t // Park-Miller algorithm\r\n \r\n\t _seed = _seed * 16807 % 2147483647;\r\n \r\n\t return ( _seed - 1 ) / 2147483646;\r\n \r\n }\r\n \r\n function degToRad( degrees ) {\r\n \r\n\t return degrees * DEG2RAD;\r\n \r\n }\r\n \r\n function radToDeg( radians ) {\r\n \r\n\t return radians * RAD2DEG;\r\n \r\n }\r\n \r\n function isPowerOfTwo( value ) {\r\n \r\n\t return ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n \r\n }\r\n \r\n function ceilPowerOfTwo( value ) {\r\n \r\n\t return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n \r\n }\r\n \r\n function floorPowerOfTwo( value ) {\r\n \r\n\t return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n \r\n }\r\n \r\n function setQuaternionFromProperEuler( q, a, b, c, order ) {\r\n \r\n\t // Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n \r\n\t // rotations are applied to the axes in the order specified by 'order'\r\n\t // rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n\t // angles are in radians\r\n \r\n\t const cos = Math.cos;\r\n\t const sin = Math.sin;\r\n \r\n\t const c2 = cos( b / 2 );\r\n\t const s2 = sin( b / 2 );\r\n \r\n\t const c13 = cos( ( a + c ) / 2 );\r\n\t const s13 = sin( ( a + c ) / 2 );\r\n \r\n\t const c1_3 = cos( ( a - c ) / 2 );\r\n\t const s1_3 = sin( ( a - c ) / 2 );\r\n \r\n\t const c3_1 = cos( ( c - a ) / 2 );\r\n\t const s3_1 = sin( ( c - a ) / 2 );\r\n \r\n\t switch ( order ) {\r\n \r\n\t\t case 'XYX':\r\n\t\t\t q.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\r\n\t\t\t break;\r\n \r\n\t\t case 'YZY':\r\n\t\t\t q.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\r\n\t\t\t break;\r\n \r\n\t\t case 'ZXZ':\r\n\t\t\t q.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\r\n\t\t\t break;\r\n \r\n\t\t case 'XZX':\r\n\t\t\t q.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\r\n\t\t\t break;\r\n \r\n\t\t case 'YXY':\r\n\t\t\t q.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\r\n\t\t\t break;\r\n \r\n\t\t case 'ZYZ':\r\n\t\t\t q.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\r\n\t\t\t break;\r\n \r\n\t\t default:\r\n\t\t\t console.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\r\n \r\n\t }\r\n \r\n }\r\n \r\n var MathUtils = /*#__PURE__*/Object.freeze({\r\n\t __proto__: null,\r\n\t DEG2RAD: DEG2RAD,\r\n\t RAD2DEG: RAD2DEG,\r\n\t generateUUID: generateUUID,\r\n\t clamp: clamp,\r\n\t euclideanModulo: euclideanModulo,\r\n\t mapLinear: mapLinear,\r\n\t inverseLerp: inverseLerp,\r\n\t lerp: lerp,\r\n\t damp: damp,\r\n\t pingpong: pingpong,\r\n\t smoothstep: smoothstep,\r\n\t smootherstep: smootherstep,\r\n\t randInt: randInt,\r\n\t randFloat: randFloat,\r\n\t randFloatSpread: randFloatSpread,\r\n\t seededRandom: seededRandom,\r\n\t degToRad: degToRad,\r\n\t radToDeg: radToDeg,\r\n\t isPowerOfTwo: isPowerOfTwo,\r\n\t ceilPowerOfTwo: ceilPowerOfTwo,\r\n\t floorPowerOfTwo: floorPowerOfTwo,\r\n\t setQuaternionFromProperEuler: setQuaternionFromProperEuler\r\n });\r\n \r\n class Vector2 {\r\n \r\n\t constructor( x = 0, y = 0 ) {\r\n \r\n\t\t this.x = x;\r\n\t\t this.y = y;\r\n \r\n\t }\r\n \r\n\t get width() {\r\n \r\n\t\t return this.x;\r\n \r\n\t }\r\n \r\n\t set width( value ) {\r\n \r\n\t\t this.x = value;\r\n \r\n\t }\r\n \r\n\t get height() {\r\n \r\n\t\t return this.y;\r\n \r\n\t }\r\n \r\n\t set height( value ) {\r\n \r\n\t\t this.y = value;\r\n \r\n\t }\r\n \r\n\t set( x, y ) {\r\n \r\n\t\t this.x = x;\r\n\t\t this.y = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setScalar( scalar ) {\r\n \r\n\t\t this.x = scalar;\r\n\t\t this.y = scalar;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setX( x ) {\r\n \r\n\t\t this.x = x;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setY( y ) {\r\n \r\n\t\t this.y = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setComponent( index, value ) {\r\n \r\n\t\t switch ( index ) {\r\n \r\n\t\t\t case 0: this.x = value; break;\r\n\t\t\t case 1: this.y = value; break;\r\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getComponent( index ) {\r\n \r\n\t\t switch ( index ) {\r\n \r\n\t\t\t case 0: return this.x;\r\n\t\t\t case 1: return this.y;\r\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this.x, this.y );\r\n \r\n\t }\r\n \r\n\t copy( v ) {\r\n \r\n\t\t this.x = v.x;\r\n\t\t this.y = v.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t add( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t return this.addVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t this.x += v.x;\r\n\t\t this.y += v.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScalar( s ) {\r\n \r\n\t\t this.x += s;\r\n\t\t this.y += s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addVectors( a, b ) {\r\n \r\n\t\t this.x = a.x + b.x;\r\n\t\t this.y = a.y + b.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScaledVector( v, s ) {\r\n \r\n\t\t this.x += v.x * s;\r\n\t\t this.y += v.y * s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t sub( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t return this.subVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t this.x -= v.x;\r\n\t\t this.y -= v.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t subScalar( s ) {\r\n \r\n\t\t this.x -= s;\r\n\t\t this.y -= s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t subVectors( a, b ) {\r\n \r\n\t\t this.x = a.x - b.x;\r\n\t\t this.y = a.y - b.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiply( v ) {\r\n \r\n\t\t this.x *= v.x;\r\n\t\t this.y *= v.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiplyScalar( scalar ) {\r\n \r\n\t\t this.x *= scalar;\r\n\t\t this.y *= scalar;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t divide( v ) {\r\n \r\n\t\t this.x /= v.x;\r\n\t\t this.y /= v.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t divideScalar( scalar ) {\r\n \r\n\t\t return this.multiplyScalar( 1 / scalar );\r\n \r\n\t }\r\n \r\n\t applyMatrix3( m ) {\r\n \r\n\t\t const x = this.x, y = this.y;\r\n\t\t const e = m.elements;\r\n \r\n\t\t this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\t this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t min( v ) {\r\n \r\n\t\t this.x = Math.min( this.x, v.x );\r\n\t\t this.y = Math.min( this.y, v.y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t max( v ) {\r\n \r\n\t\t this.x = Math.max( this.x, v.x );\r\n\t\t this.y = Math.max( this.y, v.y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clamp( min, max ) {\r\n \r\n\t\t // assumes min < max, componentwise\r\n \r\n\t\t this.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t this.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clampScalar( minVal, maxVal ) {\r\n \r\n\t\t this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clampLength( min, max ) {\r\n \r\n\t\t const length = this.length();\r\n \r\n\t\t return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n \r\n\t }\r\n \r\n\t floor() {\r\n \r\n\t\t this.x = Math.floor( this.x );\r\n\t\t this.y = Math.floor( this.y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t ceil() {\r\n \r\n\t\t this.x = Math.ceil( this.x );\r\n\t\t this.y = Math.ceil( this.y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t round() {\r\n \r\n\t\t this.x = Math.round( this.x );\r\n\t\t this.y = Math.round( this.y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t roundToZero() {\r\n \r\n\t\t this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t negate() {\r\n \r\n\t\t this.x = - this.x;\r\n\t\t this.y = - this.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dot( v ) {\r\n \r\n\t\t return this.x * v.x + this.y * v.y;\r\n \r\n\t }\r\n \r\n\t cross( v ) {\r\n \r\n\t\t return this.x * v.y - this.y * v.x;\r\n \r\n\t }\r\n \r\n\t lengthSq() {\r\n \r\n\t\t return this.x * this.x + this.y * this.y;\r\n \r\n\t }\r\n \r\n\t length() {\r\n \r\n\t\t return Math.sqrt( this.x * this.x + this.y * this.y );\r\n \r\n\t }\r\n \r\n\t manhattanLength() {\r\n \r\n\t\t return Math.abs( this.x ) + Math.abs( this.y );\r\n \r\n\t }\r\n \r\n\t normalize() {\r\n \r\n\t\t return this.divideScalar( this.length() || 1 );\r\n \r\n\t }\r\n \r\n\t angle() {\r\n \r\n\t\t // computes the angle in radians with respect to the positive x-axis\r\n \r\n\t\t const angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n \r\n\t\t return angle;\r\n \r\n\t }\r\n \r\n\t distanceTo( v ) {\r\n \r\n\t\t return Math.sqrt( this.distanceToSquared( v ) );\r\n \r\n\t }\r\n \r\n\t distanceToSquared( v ) {\r\n \r\n\t\t const dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t return dx * dx + dy * dy;\r\n \r\n\t }\r\n \r\n\t manhattanDistanceTo( v ) {\r\n \r\n\t\t return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n \r\n\t }\r\n \r\n\t setLength( length ) {\r\n \r\n\t\t return this.normalize().multiplyScalar( length );\r\n \r\n\t }\r\n \r\n\t lerp( v, alpha ) {\r\n \r\n\t\t this.x += ( v.x - this.x ) * alpha;\r\n\t\t this.y += ( v.y - this.y ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lerpVectors( v1, v2, alpha ) {\r\n \r\n\t\t this.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\t this.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( v ) {\r\n \r\n\t\t return ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t this.x = array[ offset ];\r\n\t\t this.y = array[ offset + 1 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t array[ offset ] = this.x;\r\n\t\t array[ offset + 1 ] = this.y;\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t fromBufferAttribute( attribute, index, offset ) {\r\n \r\n\t\t if ( offset !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\r\n \r\n\t\t }\r\n \r\n\t\t this.x = attribute.getX( index );\r\n\t\t this.y = attribute.getY( index );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t rotateAround( center, angle ) {\r\n \r\n\t\t const c = Math.cos( angle ), s = Math.sin( angle );\r\n \r\n\t\t const x = this.x - center.x;\r\n\t\t const y = this.y - center.y;\r\n \r\n\t\t this.x = x * c - y * s + center.x;\r\n\t\t this.y = x * s + y * c + center.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t random() {\r\n \r\n\t\t this.x = Math.random();\r\n\t\t this.y = Math.random();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t *[ Symbol.iterator ]() {\r\n \r\n\t\t yield this.x;\r\n\t\t yield this.y;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Vector2.prototype.isVector2 = true;\r\n \r\n class Matrix3 {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.elements = [\r\n \r\n\t\t\t 1, 0, 0,\r\n\t\t\t 0, 1, 0,\r\n\t\t\t 0, 0, 1\r\n \r\n\t\t ];\r\n \r\n\t\t if ( arguments.length > 0 ) {\r\n \r\n\t\t\t console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t set( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\t te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\t te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t identity() {\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t 1, 0, 0,\r\n\t\t\t 0, 1, 0,\r\n\t\t\t 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( m ) {\r\n \r\n\t\t const te = this.elements;\r\n\t\t const me = m.elements;\r\n \r\n\t\t te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\t te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\t te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t extractBasis( xAxis, yAxis, zAxis ) {\r\n \r\n\t\t xAxis.setFromMatrix3Column( this, 0 );\r\n\t\t yAxis.setFromMatrix3Column( this, 1 );\r\n\t\t zAxis.setFromMatrix3Column( this, 2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromMatrix4( m ) {\r\n \r\n\t\t const me = m.elements;\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t me[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\t me[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\t me[ 2 ], me[ 6 ], me[ 10 ]\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiply( m ) {\r\n \r\n\t\t return this.multiplyMatrices( this, m );\r\n \r\n\t }\r\n \r\n\t premultiply( m ) {\r\n \r\n\t\t return this.multiplyMatrices( m, this );\r\n \r\n\t }\r\n \r\n\t multiplyMatrices( a, b ) {\r\n \r\n\t\t const ae = a.elements;\r\n\t\t const be = b.elements;\r\n\t\t const te = this.elements;\r\n \r\n\t\t const a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\t const a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\t const a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n \r\n\t\t const b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\t const b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\t const b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n \r\n\t\t te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\t te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\t te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n \r\n\t\t te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\t te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\t te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n \r\n\t\t te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\t te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\t te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiplyScalar( s ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t determinant() {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t const a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n \r\n\t\t return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n \r\n\t }\r\n \r\n\t invert() {\r\n \r\n\t\t const te = this.elements,\r\n \r\n\t\t\t n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\r\n\t\t\t n12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\r\n\t\t\t n13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\r\n \r\n\t\t\t t11 = n33 * n22 - n32 * n23,\r\n\t\t\t t12 = n32 * n13 - n33 * n12,\r\n\t\t\t t13 = n23 * n12 - n22 * n13,\r\n \r\n\t\t\t det = n11 * t11 + n21 * t12 + n31 * t13;\r\n \r\n\t\t if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n \r\n\t\t const detInv = 1 / det;\r\n \r\n\t\t te[ 0 ] = t11 * detInv;\r\n\t\t te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\t te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n \r\n\t\t te[ 3 ] = t12 * detInv;\r\n\t\t te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\t te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n \r\n\t\t te[ 6 ] = t13 * detInv;\r\n\t\t te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\t te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t transpose() {\r\n \r\n\t\t let tmp;\r\n\t\t const m = this.elements;\r\n \r\n\t\t tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getNormalMatrix( matrix4 ) {\r\n \r\n\t\t return this.setFromMatrix4( matrix4 ).invert().transpose();\r\n \r\n\t }\r\n \r\n\t transposeIntoArray( r ) {\r\n \r\n\t\t const m = this.elements;\r\n \r\n\t\t r[ 0 ] = m[ 0 ];\r\n\t\t r[ 1 ] = m[ 3 ];\r\n\t\t r[ 2 ] = m[ 6 ];\r\n\t\t r[ 3 ] = m[ 1 ];\r\n\t\t r[ 4 ] = m[ 4 ];\r\n\t\t r[ 5 ] = m[ 7 ];\r\n\t\t r[ 6 ] = m[ 2 ];\r\n\t\t r[ 7 ] = m[ 5 ];\r\n\t\t r[ 8 ] = m[ 8 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n \r\n\t\t const c = Math.cos( rotation );\r\n\t\t const s = Math.sin( rotation );\r\n \r\n\t\t this.set(\r\n\t\t\t sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t - sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t 0, 0, 1\r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t scale( sx, sy ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\r\n\t\t te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t rotate( theta ) {\r\n \r\n\t\t const c = Math.cos( theta );\r\n\t\t const s = Math.sin( theta );\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t const a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\r\n\t\t const a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\r\n \r\n\t\t te[ 0 ] = c * a11 + s * a21;\r\n\t\t te[ 3 ] = c * a12 + s * a22;\r\n\t\t te[ 6 ] = c * a13 + s * a23;\r\n \r\n\t\t te[ 1 ] = - s * a11 + c * a21;\r\n\t\t te[ 4 ] = - s * a12 + c * a22;\r\n\t\t te[ 7 ] = - s * a13 + c * a23;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t translate( tx, ty ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\r\n\t\t te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( matrix ) {\r\n \r\n\t\t const te = this.elements;\r\n\t\t const me = matrix.elements;\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t if ( te[ i ] !== me[ i ] ) return false;\r\n \r\n\t\t }\r\n \r\n\t\t return true;\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.elements[ i ] = array[ i + offset ];\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t array[ offset ] = te[ 0 ];\r\n\t\t array[ offset + 1 ] = te[ 1 ];\r\n\t\t array[ offset + 2 ] = te[ 2 ];\r\n \r\n\t\t array[ offset + 3 ] = te[ 3 ];\r\n\t\t array[ offset + 4 ] = te[ 4 ];\r\n\t\t array[ offset + 5 ] = te[ 5 ];\r\n \r\n\t\t array[ offset + 6 ] = te[ 6 ];\r\n\t\t array[ offset + 7 ] = te[ 7 ];\r\n\t\t array[ offset + 8 ] = te[ 8 ];\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().fromArray( this.elements );\r\n \r\n\t }\r\n \r\n }\r\n \r\n Matrix3.prototype.isMatrix3 = true;\r\n \r\n function arrayNeedsUint32( array ) {\r\n \r\n\t // assumes larger values usually on last\r\n \r\n\t for ( let i = array.length - 1; i >= 0; -- i ) {\r\n \r\n\t\t if ( array[ i ] > 65535 ) return true;\r\n \r\n\t }\r\n \r\n\t return false;\r\n \r\n }\r\n \r\n const TYPED_ARRAYS = {\r\n\t Int8Array: Int8Array,\r\n\t Uint8Array: Uint8Array,\r\n\t Uint8ClampedArray: Uint8ClampedArray,\r\n\t Int16Array: Int16Array,\r\n\t Uint16Array: Uint16Array,\r\n\t Int32Array: Int32Array,\r\n\t Uint32Array: Uint32Array,\r\n\t Float32Array: Float32Array,\r\n\t Float64Array: Float64Array\r\n };\r\n \r\n function getTypedArray( type, buffer ) {\r\n \r\n\t return new TYPED_ARRAYS[ type ]( buffer );\r\n \r\n }\r\n \r\n function createElementNS( name ) {\r\n \r\n\t return document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\r\n \r\n }\r\n \r\n const _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t 'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t 'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t 'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t 'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t 'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t 'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t 'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t 'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t 'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t 'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t 'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t 'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t 'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t 'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t 'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t 'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t 'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t 'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t 'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t 'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t 'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t 'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t 'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n \r\n const _hslA = { h: 0, s: 0, l: 0 };\r\n const _hslB = { h: 0, s: 0, l: 0 };\r\n \r\n function hue2rgb( p, q, t ) {\r\n \r\n\t if ( t < 0 ) t += 1;\r\n\t if ( t > 1 ) t -= 1;\r\n\t if ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t if ( t < 1 / 2 ) return q;\r\n\t if ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t return p;\r\n \r\n }\r\n \r\n function SRGBToLinear( c ) {\r\n \r\n\t return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n \r\n }\r\n \r\n function LinearToSRGB( c ) {\r\n \r\n\t return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n \r\n }\r\n \r\n class Color {\r\n \r\n\t constructor( r, g, b ) {\r\n \r\n\t\t if ( g === undefined && b === undefined ) {\r\n \r\n\t\t\t // r is THREE.Color, hex or string\r\n\t\t\t return this.set( r );\r\n \r\n\t\t }\r\n \r\n\t\t return this.setRGB( r, g, b );\r\n \r\n\t }\r\n \r\n\t set( value ) {\r\n \r\n\t\t if ( value && value.isColor ) {\r\n \r\n\t\t\t this.copy( value );\r\n \r\n\t\t } else if ( typeof value === 'number' ) {\r\n \r\n\t\t\t this.setHex( value );\r\n \r\n\t\t } else if ( typeof value === 'string' ) {\r\n \r\n\t\t\t this.setStyle( value );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setScalar( scalar ) {\r\n \r\n\t\t this.r = scalar;\r\n\t\t this.g = scalar;\r\n\t\t this.b = scalar;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setHex( hex ) {\r\n \r\n\t\t hex = Math.floor( hex );\r\n \r\n\t\t this.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t this.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t this.b = ( hex & 255 ) / 255;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setRGB( r, g, b ) {\r\n \r\n\t\t this.r = r;\r\n\t\t this.g = g;\r\n\t\t this.b = b;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setHSL( h, s, l ) {\r\n \r\n\t\t // h,s,l ranges are in 0.0 - 1.0\r\n\t\t h = euclideanModulo( h, 1 );\r\n\t\t s = clamp( s, 0, 1 );\r\n\t\t l = clamp( l, 0, 1 );\r\n \r\n\t\t if ( s === 0 ) {\r\n \r\n\t\t\t this.r = this.g = this.b = l;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t const q = ( 2 * l ) - p;\r\n \r\n\t\t\t this.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t this.g = hue2rgb( q, p, h );\r\n\t\t\t this.b = hue2rgb( q, p, h - 1 / 3 );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setStyle( style ) {\r\n \r\n\t\t function handleAlpha( string ) {\r\n \r\n\t\t\t if ( string === undefined ) return;\r\n \r\n\t\t\t if ( parseFloat( string ) < 1 ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n \r\n\t\t let m;\r\n \r\n\t\t if ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\r\n \r\n\t\t\t // rgb / hsl\r\n \r\n\t\t\t let color;\r\n\t\t\t const name = m[ 1 ];\r\n\t\t\t const components = m[ 2 ];\r\n \r\n\t\t\t switch ( name ) {\r\n \r\n\t\t\t\t case 'rgb':\r\n\t\t\t\t case 'rgba':\r\n \r\n\t\t\t\t\t if ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n \r\n\t\t\t\t\t\t // rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n \r\n\t\t\t\t\t\t handleAlpha( color[ 4 ] );\r\n \r\n\t\t\t\t\t\t return this;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n \r\n\t\t\t\t\t\t // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n \r\n\t\t\t\t\t\t handleAlpha( color[ 4 ] );\r\n \r\n\t\t\t\t\t\t return this;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'hsl':\r\n\t\t\t\t case 'hsla':\r\n \r\n\t\t\t\t\t if ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n \r\n\t\t\t\t\t\t // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t const h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\t const s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t const l = parseInt( color[ 3 ], 10 ) / 100;\r\n \r\n\t\t\t\t\t\t handleAlpha( color[ 4 ] );\r\n \r\n\t\t\t\t\t\t return this.setHSL( h, s, l );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\r\n \r\n\t\t\t // hex color\r\n \r\n\t\t\t const hex = m[ 1 ];\r\n\t\t\t const size = hex.length;\r\n \r\n\t\t\t if ( size === 3 ) {\r\n \r\n\t\t\t\t // #ff0\r\n\t\t\t\t this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n \r\n\t\t\t\t return this;\r\n \r\n\t\t\t } else if ( size === 6 ) {\r\n \r\n\t\t\t\t // #ff0000\r\n\t\t\t\t this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n \r\n\t\t\t\t return this;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( style && style.length > 0 ) {\r\n \r\n\t\t\t return this.setColorName( style );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setColorName( style ) {\r\n \r\n\t\t // color keywords\r\n\t\t const hex = _colorKeywords[ style.toLowerCase() ];\r\n \r\n\t\t if ( hex !== undefined ) {\r\n \r\n\t\t\t // red\r\n\t\t\t this.setHex( hex );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // unknown color\r\n\t\t\t console.warn( 'THREE.Color: Unknown color ' + style );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this.r, this.g, this.b );\r\n \r\n\t }\r\n \r\n\t copy( color ) {\r\n \r\n\t\t this.r = color.r;\r\n\t\t this.g = color.g;\r\n\t\t this.b = color.b;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copySRGBToLinear( color ) {\r\n \r\n\t\t this.r = SRGBToLinear( color.r );\r\n\t\t this.g = SRGBToLinear( color.g );\r\n\t\t this.b = SRGBToLinear( color.b );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyLinearToSRGB( color ) {\r\n \r\n\t\t this.r = LinearToSRGB( color.r );\r\n\t\t this.g = LinearToSRGB( color.g );\r\n\t\t this.b = LinearToSRGB( color.b );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t convertSRGBToLinear() {\r\n \r\n\t\t this.copySRGBToLinear( this );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t convertLinearToSRGB() {\r\n \r\n\t\t this.copyLinearToSRGB( this );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getHex() {\r\n \r\n\t\t return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n \r\n\t }\r\n \r\n\t getHexString() {\r\n \r\n\t\t return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n \r\n\t }\r\n \r\n\t getHSL( target ) {\r\n \r\n\t\t // h,s,l ranges are in 0.0 - 1.0\r\n \r\n\t\t const r = this.r, g = this.g, b = this.b;\r\n \r\n\t\t const max = Math.max( r, g, b );\r\n\t\t const min = Math.min( r, g, b );\r\n \r\n\t\t let hue, saturation;\r\n\t\t const lightness = ( min + max ) / 2.0;\r\n \r\n\t\t if ( min === max ) {\r\n \r\n\t\t\t hue = 0;\r\n\t\t\t saturation = 0;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const delta = max - min;\r\n \r\n\t\t\t saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n \r\n\t\t\t switch ( max ) {\r\n \r\n\t\t\t\t case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t case g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t case b: hue = ( r - g ) / delta + 4; break;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t hue /= 6;\r\n \r\n\t\t }\r\n \r\n\t\t target.h = hue;\r\n\t\t target.s = saturation;\r\n\t\t target.l = lightness;\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t getStyle() {\r\n \r\n\t\t return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n \r\n\t }\r\n \r\n\t offsetHSL( h, s, l ) {\r\n \r\n\t\t this.getHSL( _hslA );\r\n \r\n\t\t _hslA.h += h; _hslA.s += s; _hslA.l += l;\r\n \r\n\t\t this.setHSL( _hslA.h, _hslA.s, _hslA.l );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t add( color ) {\r\n \r\n\t\t this.r += color.r;\r\n\t\t this.g += color.g;\r\n\t\t this.b += color.b;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addColors( color1, color2 ) {\r\n \r\n\t\t this.r = color1.r + color2.r;\r\n\t\t this.g = color1.g + color2.g;\r\n\t\t this.b = color1.b + color2.b;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScalar( s ) {\r\n \r\n\t\t this.r += s;\r\n\t\t this.g += s;\r\n\t\t this.b += s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t sub( color ) {\r\n \r\n\t\t this.r = Math.max( 0, this.r - color.r );\r\n\t\t this.g = Math.max( 0, this.g - color.g );\r\n\t\t this.b = Math.max( 0, this.b - color.b );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiply( color ) {\r\n \r\n\t\t this.r *= color.r;\r\n\t\t this.g *= color.g;\r\n\t\t this.b *= color.b;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiplyScalar( s ) {\r\n \r\n\t\t this.r *= s;\r\n\t\t this.g *= s;\r\n\t\t this.b *= s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lerp( color, alpha ) {\r\n \r\n\t\t this.r += ( color.r - this.r ) * alpha;\r\n\t\t this.g += ( color.g - this.g ) * alpha;\r\n\t\t this.b += ( color.b - this.b ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lerpColors( color1, color2, alpha ) {\r\n \r\n\t\t this.r = color1.r + ( color2.r - color1.r ) * alpha;\r\n\t\t this.g = color1.g + ( color2.g - color1.g ) * alpha;\r\n\t\t this.b = color1.b + ( color2.b - color1.b ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lerpHSL( color, alpha ) {\r\n \r\n\t\t this.getHSL( _hslA );\r\n\t\t color.getHSL( _hslB );\r\n \r\n\t\t const h = lerp( _hslA.h, _hslB.h, alpha );\r\n\t\t const s = lerp( _hslA.s, _hslB.s, alpha );\r\n\t\t const l = lerp( _hslA.l, _hslB.l, alpha );\r\n \r\n\t\t this.setHSL( h, s, l );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( c ) {\r\n \r\n\t\t return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t this.r = array[ offset ];\r\n\t\t this.g = array[ offset + 1 ];\r\n\t\t this.b = array[ offset + 2 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t array[ offset ] = this.r;\r\n\t\t array[ offset + 1 ] = this.g;\r\n\t\t array[ offset + 2 ] = this.b;\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t fromBufferAttribute( attribute, index ) {\r\n \r\n\t\t this.r = attribute.getX( index );\r\n\t\t this.g = attribute.getY( index );\r\n\t\t this.b = attribute.getZ( index );\r\n \r\n\t\t if ( attribute.normalized === true ) {\r\n \r\n\t\t\t // assuming Uint8Array\r\n \r\n\t\t\t this.r /= 255;\r\n\t\t\t this.g /= 255;\r\n\t\t\t this.b /= 255;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t return this.getHex();\r\n \r\n\t }\r\n \r\n }\r\n \r\n Color.NAMES = _colorKeywords;\r\n \r\n Color.prototype.isColor = true;\r\n Color.prototype.r = 1;\r\n Color.prototype.g = 1;\r\n Color.prototype.b = 1;\r\n \r\n let _canvas;\r\n \r\n class ImageUtils {\r\n \r\n\t static getDataURL( image ) {\r\n \r\n\t\t if ( /^data:/i.test( image.src ) ) {\r\n \r\n\t\t\t return image.src;\r\n \r\n\t\t }\r\n \r\n\t\t if ( typeof HTMLCanvasElement == 'undefined' ) {\r\n \r\n\t\t\t return image.src;\r\n \r\n\t\t }\r\n \r\n\t\t let canvas;\r\n \r\n\t\t if ( image instanceof HTMLCanvasElement ) {\r\n \r\n\t\t\t canvas = image;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\r\n \r\n\t\t\t _canvas.width = image.width;\r\n\t\t\t _canvas.height = image.height;\r\n \r\n\t\t\t const context = _canvas.getContext( '2d' );\r\n \r\n\t\t\t if ( image instanceof ImageData ) {\r\n \r\n\t\t\t\t context.putImageData( image, 0, 0 );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t context.drawImage( image, 0, 0, image.width, image.height );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t canvas = _canvas;\r\n \r\n\t\t }\r\n \r\n\t\t if ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n \r\n\t\t\t console.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\r\n \r\n\t\t\t return canvas.toDataURL( 'image/jpeg', 0.6 );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t return canvas.toDataURL( 'image/png' );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t static sRGBToLinear( image ) {\r\n \r\n\t\t if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n \r\n\t\t\t const canvas = createElementNS( 'canvas' );\r\n \r\n\t\t\t canvas.width = image.width;\r\n\t\t\t canvas.height = image.height;\r\n \r\n\t\t\t const context = canvas.getContext( '2d' );\r\n\t\t\t context.drawImage( image, 0, 0, image.width, image.height );\r\n \r\n\t\t\t const imageData = context.getImageData( 0, 0, image.width, image.height );\r\n\t\t\t const data = imageData.data;\r\n \r\n\t\t\t for ( let i = 0; i < data.length; i ++ ) {\r\n \r\n\t\t\t\t data[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t context.putImageData( imageData, 0, 0 );\r\n \r\n\t\t\t return canvas;\r\n \r\n\t\t } else if ( image.data ) {\r\n \r\n\t\t\t const data = image.data.slice( 0 );\r\n \r\n\t\t\t for ( let i = 0; i < data.length; i ++ ) {\r\n \r\n\t\t\t\t if ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\r\n \r\n\t\t\t\t\t data[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // assuming float\r\n \r\n\t\t\t\t\t data[ i ] = SRGBToLinear( data[ i ] );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return {\r\n\t\t\t\t data: data,\r\n\t\t\t\t width: image.width,\r\n\t\t\t\t height: image.height\r\n\t\t\t };\r\n \r\n\t\t } else {\r\n \r\n\t\t\t console.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\r\n\t\t\t return image;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Source {\r\n \r\n\t constructor( data = null ) {\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t this.data = data;\r\n \r\n\t\t this.version = 0;\r\n \r\n\t }\r\n \r\n\t set needsUpdate( value ) {\r\n \r\n\t\t if ( value === true ) this.version ++;\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n \r\n\t\t if ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\r\n \r\n\t\t\t return meta.images[ this.uuid ];\r\n \r\n\t\t }\r\n \r\n\t\t const output = {\r\n\t\t\t uuid: this.uuid,\r\n\t\t\t url: ''\r\n\t\t };\r\n \r\n\t\t const data = this.data;\r\n \r\n\t\t if ( data !== null ) {\r\n \r\n\t\t\t let url;\r\n \r\n\t\t\t if ( Array.isArray( data ) ) {\r\n \r\n\t\t\t\t // cube texture\r\n \r\n\t\t\t\t url = [];\r\n \r\n\t\t\t\t for ( let i = 0, l = data.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t if ( data[ i ].isDataTexture ) {\r\n \r\n\t\t\t\t\t\t url.push( serializeImage( data[ i ].image ) );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t url.push( serializeImage( data[ i ] ) );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // texture\r\n \r\n\t\t\t\t url = serializeImage( data );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t output.url = url;\r\n \r\n\t\t }\r\n \r\n\t\t if ( ! isRootObject ) {\r\n \r\n\t\t\t meta.images[ this.uuid ] = output;\r\n \r\n\t\t }\r\n \r\n\t\t return output;\r\n \r\n\t }\r\n \r\n }\r\n \r\n function serializeImage( image ) {\r\n \r\n\t if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n \r\n\t\t // default images\r\n \r\n\t\t return ImageUtils.getDataURL( image );\r\n \r\n\t } else {\r\n \r\n\t\t if ( image.data ) {\r\n \r\n\t\t\t // images of DataTexture\r\n \r\n\t\t\t return {\r\n\t\t\t\t data: Array.prototype.slice.call( image.data ),\r\n\t\t\t\t width: image.width,\r\n\t\t\t\t height: image.height,\r\n\t\t\t\t type: image.data.constructor.name\r\n\t\t\t };\r\n \r\n\t\t } else {\r\n \r\n\t\t\t console.warn( 'THREE.Texture: Unable to serialize Texture.' );\r\n\t\t\t return {};\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n Source.prototype.isSource = true;\r\n \r\n let textureId = 0;\r\n \r\n class Texture extends EventDispatcher {\r\n \r\n\t constructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding ) {\r\n \r\n\t\t super();\r\n \r\n\t\t Object.defineProperty( this, 'id', { value: textureId ++ } );\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t this.name = '';\r\n \r\n\t\t this.source = new Source( image );\r\n\t\t this.mipmaps = [];\r\n \r\n\t\t this.mapping = mapping;\r\n \r\n\t\t this.wrapS = wrapS;\r\n\t\t this.wrapT = wrapT;\r\n \r\n\t\t this.magFilter = magFilter;\r\n\t\t this.minFilter = minFilter;\r\n \r\n\t\t this.anisotropy = anisotropy;\r\n \r\n\t\t this.format = format;\r\n\t\t this.internalFormat = null;\r\n\t\t this.type = type;\r\n \r\n\t\t this.offset = new Vector2( 0, 0 );\r\n\t\t this.repeat = new Vector2( 1, 1 );\r\n\t\t this.center = new Vector2( 0, 0 );\r\n\t\t this.rotation = 0;\r\n \r\n\t\t this.matrixAutoUpdate = true;\r\n\t\t this.matrix = new Matrix3();\r\n \r\n\t\t this.generateMipmaps = true;\r\n\t\t this.premultiplyAlpha = false;\r\n\t\t this.flipY = true;\r\n\t\t this.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n \r\n\t\t // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t\t //\r\n\t\t // Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t\t // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\t\t this.encoding = encoding;\r\n \r\n\t\t this.userData = {};\r\n \r\n\t\t this.version = 0;\r\n\t\t this.onUpdate = null;\r\n \r\n\t\t this.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\r\n\t\t this.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\r\n \r\n\t }\r\n \r\n\t get image() {\r\n \r\n\t\t return this.source.data;\r\n \r\n\t }\r\n \r\n\t set image( value ) {\r\n \r\n\t\t this.source.data = value;\r\n \r\n\t }\r\n \r\n\t updateMatrix() {\r\n \r\n\t\t this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.name = source.name;\r\n \r\n\t\t this.source = source.source;\r\n\t\t this.mipmaps = source.mipmaps.slice( 0 );\r\n \r\n\t\t this.mapping = source.mapping;\r\n \r\n\t\t this.wrapS = source.wrapS;\r\n\t\t this.wrapT = source.wrapT;\r\n \r\n\t\t this.magFilter = source.magFilter;\r\n\t\t this.minFilter = source.minFilter;\r\n \r\n\t\t this.anisotropy = source.anisotropy;\r\n \r\n\t\t this.format = source.format;\r\n\t\t this.internalFormat = source.internalFormat;\r\n\t\t this.type = source.type;\r\n \r\n\t\t this.offset.copy( source.offset );\r\n\t\t this.repeat.copy( source.repeat );\r\n\t\t this.center.copy( source.center );\r\n\t\t this.rotation = source.rotation;\r\n \r\n\t\t this.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t this.matrix.copy( source.matrix );\r\n \r\n\t\t this.generateMipmaps = source.generateMipmaps;\r\n\t\t this.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t this.flipY = source.flipY;\r\n\t\t this.unpackAlignment = source.unpackAlignment;\r\n\t\t this.encoding = source.encoding;\r\n \r\n\t\t this.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n \r\n\t\t this.needsUpdate = true;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n \r\n\t\t if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\r\n \r\n\t\t\t return meta.textures[ this.uuid ];\r\n \r\n\t\t }\r\n \r\n\t\t const output = {\r\n \r\n\t\t\t metadata: {\r\n\t\t\t\t version: 4.5,\r\n\t\t\t\t type: 'Texture',\r\n\t\t\t\t generator: 'Texture.toJSON'\r\n\t\t\t },\r\n \r\n\t\t\t uuid: this.uuid,\r\n\t\t\t name: this.name,\r\n \r\n\t\t\t image: this.source.toJSON( meta ).uuid,\r\n \r\n\t\t\t mapping: this.mapping,\r\n \r\n\t\t\t repeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t offset: [ this.offset.x, this.offset.y ],\r\n\t\t\t center: [ this.center.x, this.center.y ],\r\n\t\t\t rotation: this.rotation,\r\n \r\n\t\t\t wrap: [ this.wrapS, this.wrapT ],\r\n \r\n\t\t\t format: this.format,\r\n\t\t\t type: this.type,\r\n\t\t\t encoding: this.encoding,\r\n \r\n\t\t\t minFilter: this.minFilter,\r\n\t\t\t magFilter: this.magFilter,\r\n\t\t\t anisotropy: this.anisotropy,\r\n \r\n\t\t\t flipY: this.flipY,\r\n \r\n\t\t\t premultiplyAlpha: this.premultiplyAlpha,\r\n\t\t\t unpackAlignment: this.unpackAlignment\r\n \r\n\t\t };\r\n \r\n\t\t if ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\r\n \r\n\t\t if ( ! isRootObject ) {\r\n \r\n\t\t\t meta.textures[ this.uuid ] = output;\r\n \r\n\t\t }\r\n \r\n\t\t return output;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.dispatchEvent( { type: 'dispose' } );\r\n \r\n\t }\r\n \r\n\t transformUv( uv ) {\r\n \r\n\t\t if ( this.mapping !== UVMapping ) return uv;\r\n \r\n\t\t uv.applyMatrix3( this.matrix );\r\n \r\n\t\t if ( uv.x < 0 || uv.x > 1 ) {\r\n \r\n\t\t\t switch ( this.wrapS ) {\r\n \r\n\t\t\t\t case RepeatWrapping:\r\n \r\n\t\t\t\t\t uv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case ClampToEdgeWrapping:\r\n \r\n\t\t\t\t\t uv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case MirroredRepeatWrapping:\r\n \r\n\t\t\t\t\t if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n \r\n\t\t\t\t\t\t uv.x = Math.ceil( uv.x ) - uv.x;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t uv.x = uv.x - Math.floor( uv.x );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( uv.y < 0 || uv.y > 1 ) {\r\n \r\n\t\t\t switch ( this.wrapT ) {\r\n \r\n\t\t\t\t case RepeatWrapping:\r\n \r\n\t\t\t\t\t uv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case ClampToEdgeWrapping:\r\n \r\n\t\t\t\t\t uv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case MirroredRepeatWrapping:\r\n \r\n\t\t\t\t\t if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n \r\n\t\t\t\t\t\t uv.y = Math.ceil( uv.y ) - uv.y;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t uv.y = uv.y - Math.floor( uv.y );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.flipY ) {\r\n \r\n\t\t\t uv.y = 1 - uv.y;\r\n \r\n\t\t }\r\n \r\n\t\t return uv;\r\n \r\n\t }\r\n \r\n\t set needsUpdate( value ) {\r\n \r\n\t\t if ( value === true ) {\r\n \r\n\t\t\t this.version ++;\r\n\t\t\t this.source.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n Texture.DEFAULT_IMAGE = null;\r\n Texture.DEFAULT_MAPPING = UVMapping;\r\n \r\n Texture.prototype.isTexture = true;\r\n \r\n class Vector4 {\r\n \r\n\t constructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n \r\n\t\t this.x = x;\r\n\t\t this.y = y;\r\n\t\t this.z = z;\r\n\t\t this.w = w;\r\n \r\n\t }\r\n \r\n\t get width() {\r\n \r\n\t\t return this.z;\r\n \r\n\t }\r\n \r\n\t set width( value ) {\r\n \r\n\t\t this.z = value;\r\n \r\n\t }\r\n \r\n\t get height() {\r\n \r\n\t\t return this.w;\r\n \r\n\t }\r\n \r\n\t set height( value ) {\r\n \r\n\t\t this.w = value;\r\n \r\n\t }\r\n \r\n\t set( x, y, z, w ) {\r\n \r\n\t\t this.x = x;\r\n\t\t this.y = y;\r\n\t\t this.z = z;\r\n\t\t this.w = w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setScalar( scalar ) {\r\n \r\n\t\t this.x = scalar;\r\n\t\t this.y = scalar;\r\n\t\t this.z = scalar;\r\n\t\t this.w = scalar;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setX( x ) {\r\n \r\n\t\t this.x = x;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setY( y ) {\r\n \r\n\t\t this.y = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setZ( z ) {\r\n \r\n\t\t this.z = z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setW( w ) {\r\n \r\n\t\t this.w = w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setComponent( index, value ) {\r\n \r\n\t\t switch ( index ) {\r\n \r\n\t\t\t case 0: this.x = value; break;\r\n\t\t\t case 1: this.y = value; break;\r\n\t\t\t case 2: this.z = value; break;\r\n\t\t\t case 3: this.w = value; break;\r\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getComponent( index ) {\r\n \r\n\t\t switch ( index ) {\r\n \r\n\t\t\t case 0: return this.x;\r\n\t\t\t case 1: return this.y;\r\n\t\t\t case 2: return this.z;\r\n\t\t\t case 3: return this.w;\r\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this.x, this.y, this.z, this.w );\r\n \r\n\t }\r\n \r\n\t copy( v ) {\r\n \r\n\t\t this.x = v.x;\r\n\t\t this.y = v.y;\r\n\t\t this.z = v.z;\r\n\t\t this.w = ( v.w !== undefined ) ? v.w : 1;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t add( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t return this.addVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t this.x += v.x;\r\n\t\t this.y += v.y;\r\n\t\t this.z += v.z;\r\n\t\t this.w += v.w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScalar( s ) {\r\n \r\n\t\t this.x += s;\r\n\t\t this.y += s;\r\n\t\t this.z += s;\r\n\t\t this.w += s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addVectors( a, b ) {\r\n \r\n\t\t this.x = a.x + b.x;\r\n\t\t this.y = a.y + b.y;\r\n\t\t this.z = a.z + b.z;\r\n\t\t this.w = a.w + b.w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScaledVector( v, s ) {\r\n \r\n\t\t this.x += v.x * s;\r\n\t\t this.y += v.y * s;\r\n\t\t this.z += v.z * s;\r\n\t\t this.w += v.w * s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t sub( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t return this.subVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t this.x -= v.x;\r\n\t\t this.y -= v.y;\r\n\t\t this.z -= v.z;\r\n\t\t this.w -= v.w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t subScalar( s ) {\r\n \r\n\t\t this.x -= s;\r\n\t\t this.y -= s;\r\n\t\t this.z -= s;\r\n\t\t this.w -= s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t subVectors( a, b ) {\r\n \r\n\t\t this.x = a.x - b.x;\r\n\t\t this.y = a.y - b.y;\r\n\t\t this.z = a.z - b.z;\r\n\t\t this.w = a.w - b.w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiply( v ) {\r\n \r\n\t\t this.x *= v.x;\r\n\t\t this.y *= v.y;\r\n\t\t this.z *= v.z;\r\n\t\t this.w *= v.w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiplyScalar( scalar ) {\r\n \r\n\t\t this.x *= scalar;\r\n\t\t this.y *= scalar;\r\n\t\t this.z *= scalar;\r\n\t\t this.w *= scalar;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyMatrix4( m ) {\r\n \r\n\t\t const x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\t const e = m.elements;\r\n \r\n\t\t this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t divideScalar( scalar ) {\r\n \r\n\t\t return this.multiplyScalar( 1 / scalar );\r\n \r\n\t }\r\n \r\n\t setAxisAngleFromQuaternion( q ) {\r\n \r\n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n \r\n\t\t // q is assumed to be normalized\r\n \r\n\t\t this.w = 2 * Math.acos( q.w );\r\n \r\n\t\t const s = Math.sqrt( 1 - q.w * q.w );\r\n \r\n\t\t if ( s < 0.0001 ) {\r\n \r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setAxisAngleFromRotationMatrix( m ) {\r\n \r\n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n \r\n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n \r\n\t\t let angle, x, y, z; // variables for result\r\n\t\t const epsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t epsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n \r\n\t\t\t te = m.elements,\r\n \r\n\t\t\t m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n \r\n\t\t if ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t\t  ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t\t  ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n \r\n\t\t\t // singularity found\r\n\t\t\t // first check for identity matrix which must have +1 for all terms\r\n\t\t\t // in leading diagonal and zero in other terms\r\n \r\n\t\t\t if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t\t  ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t\t  ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t\t  ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n \r\n\t\t\t\t // this singularity is identity matrix so angle = 0\r\n \r\n\t\t\t\t this.set( 1, 0, 0, 0 );\r\n \r\n\t\t\t\t return this; // zero angle, arbitrary axis\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // otherwise this singularity is angle = 180\r\n \r\n\t\t\t angle = Math.PI;\r\n \r\n\t\t\t const xx = ( m11 + 1 ) / 2;\r\n\t\t\t const yy = ( m22 + 1 ) / 2;\r\n\t\t\t const zz = ( m33 + 1 ) / 2;\r\n\t\t\t const xy = ( m12 + m21 ) / 4;\r\n\t\t\t const xz = ( m13 + m31 ) / 4;\r\n\t\t\t const yz = ( m23 + m32 ) / 4;\r\n \r\n\t\t\t if ( ( xx > yy ) && ( xx > zz ) ) {\r\n \r\n\t\t\t\t // m11 is the largest diagonal term\r\n \r\n\t\t\t\t if ( xx < epsilon ) {\r\n \r\n\t\t\t\t\t x = 0;\r\n\t\t\t\t\t y = 0.707106781;\r\n\t\t\t\t\t z = 0.707106781;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t x = Math.sqrt( xx );\r\n\t\t\t\t\t y = xy / x;\r\n\t\t\t\t\t z = xz / x;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( yy > zz ) {\r\n \r\n\t\t\t\t // m22 is the largest diagonal term\r\n \r\n\t\t\t\t if ( yy < epsilon ) {\r\n \r\n\t\t\t\t\t x = 0.707106781;\r\n\t\t\t\t\t y = 0;\r\n\t\t\t\t\t z = 0.707106781;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t y = Math.sqrt( yy );\r\n\t\t\t\t\t x = xy / y;\r\n\t\t\t\t\t z = yz / y;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // m33 is the largest diagonal term so base result on this\r\n \r\n\t\t\t\t if ( zz < epsilon ) {\r\n \r\n\t\t\t\t\t x = 0.707106781;\r\n\t\t\t\t\t y = 0.707106781;\r\n\t\t\t\t\t z = 0;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t z = Math.sqrt( zz );\r\n\t\t\t\t\t x = xz / z;\r\n\t\t\t\t\t y = yz / z;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.set( x, y, z, angle );\r\n \r\n\t\t\t return this; // return 180 deg rotation\r\n \r\n\t\t }\r\n \r\n\t\t // as we have reached here there are no singularities so we can handle normally\r\n \r\n\t\t let s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t ( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n \r\n\t\t if ( Math.abs( s ) < 0.001 ) s = 1;\r\n \r\n\t\t // prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t // caught by singularity test above, but I've left it in just in case\r\n \r\n\t\t this.x = ( m32 - m23 ) / s;\r\n\t\t this.y = ( m13 - m31 ) / s;\r\n\t\t this.z = ( m21 - m12 ) / s;\r\n\t\t this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t min( v ) {\r\n \r\n\t\t this.x = Math.min( this.x, v.x );\r\n\t\t this.y = Math.min( this.y, v.y );\r\n\t\t this.z = Math.min( this.z, v.z );\r\n\t\t this.w = Math.min( this.w, v.w );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t max( v ) {\r\n \r\n\t\t this.x = Math.max( this.x, v.x );\r\n\t\t this.y = Math.max( this.y, v.y );\r\n\t\t this.z = Math.max( this.z, v.z );\r\n\t\t this.w = Math.max( this.w, v.w );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clamp( min, max ) {\r\n \r\n\t\t // assumes min < max, componentwise\r\n \r\n\t\t this.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t this.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t this.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\t this.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clampScalar( minVal, maxVal ) {\r\n \r\n\t\t this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\t\t this.z = Math.max( minVal, Math.min( maxVal, this.z ) );\r\n\t\t this.w = Math.max( minVal, Math.min( maxVal, this.w ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clampLength( min, max ) {\r\n \r\n\t\t const length = this.length();\r\n \r\n\t\t return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n \r\n\t }\r\n \r\n\t floor() {\r\n \r\n\t\t this.x = Math.floor( this.x );\r\n\t\t this.y = Math.floor( this.y );\r\n\t\t this.z = Math.floor( this.z );\r\n\t\t this.w = Math.floor( this.w );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t ceil() {\r\n \r\n\t\t this.x = Math.ceil( this.x );\r\n\t\t this.y = Math.ceil( this.y );\r\n\t\t this.z = Math.ceil( this.z );\r\n\t\t this.w = Math.ceil( this.w );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t round() {\r\n \r\n\t\t this.x = Math.round( this.x );\r\n\t\t this.y = Math.round( this.y );\r\n\t\t this.z = Math.round( this.z );\r\n\t\t this.w = Math.round( this.w );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t roundToZero() {\r\n \r\n\t\t this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t negate() {\r\n \r\n\t\t this.x = - this.x;\r\n\t\t this.y = - this.y;\r\n\t\t this.z = - this.z;\r\n\t\t this.w = - this.w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dot( v ) {\r\n \r\n\t\t return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n \r\n\t }\r\n \r\n\t lengthSq() {\r\n \r\n\t\t return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n \r\n\t }\r\n \r\n\t length() {\r\n \r\n\t\t return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n \r\n\t }\r\n \r\n\t manhattanLength() {\r\n \r\n\t\t return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n \r\n\t }\r\n \r\n\t normalize() {\r\n \r\n\t\t return this.divideScalar( this.length() || 1 );\r\n \r\n\t }\r\n \r\n\t setLength( length ) {\r\n \r\n\t\t return this.normalize().multiplyScalar( length );\r\n \r\n\t }\r\n \r\n\t lerp( v, alpha ) {\r\n \r\n\t\t this.x += ( v.x - this.x ) * alpha;\r\n\t\t this.y += ( v.y - this.y ) * alpha;\r\n\t\t this.z += ( v.z - this.z ) * alpha;\r\n\t\t this.w += ( v.w - this.w ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lerpVectors( v1, v2, alpha ) {\r\n \r\n\t\t this.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\t this.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\t this.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\t\t this.w = v1.w + ( v2.w - v1.w ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( v ) {\r\n \r\n\t\t return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t this.x = array[ offset ];\r\n\t\t this.y = array[ offset + 1 ];\r\n\t\t this.z = array[ offset + 2 ];\r\n\t\t this.w = array[ offset + 3 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t array[ offset ] = this.x;\r\n\t\t array[ offset + 1 ] = this.y;\r\n\t\t array[ offset + 2 ] = this.z;\r\n\t\t array[ offset + 3 ] = this.w;\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t fromBufferAttribute( attribute, index, offset ) {\r\n \r\n\t\t if ( offset !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\r\n \r\n\t\t }\r\n \r\n\t\t this.x = attribute.getX( index );\r\n\t\t this.y = attribute.getY( index );\r\n\t\t this.z = attribute.getZ( index );\r\n\t\t this.w = attribute.getW( index );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t random() {\r\n \r\n\t\t this.x = Math.random();\r\n\t\t this.y = Math.random();\r\n\t\t this.z = Math.random();\r\n\t\t this.w = Math.random();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t *[ Symbol.iterator ]() {\r\n \r\n\t\t yield this.x;\r\n\t\t yield this.y;\r\n\t\t yield this.z;\r\n\t\t yield this.w;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Vector4.prototype.isVector4 = true;\r\n \r\n /*\r\n  In options, we can specify:\r\n  * Texture parameters for an auto-generated target texture\r\n  * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n */\r\n class WebGLRenderTarget extends EventDispatcher {\r\n \r\n\t constructor( width, height, options = {} ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.width = width;\r\n\t\t this.height = height;\r\n\t\t this.depth = 1;\r\n \r\n\t\t this.scissor = new Vector4( 0, 0, width, height );\r\n\t\t this.scissorTest = false;\r\n \r\n\t\t this.viewport = new Vector4( 0, 0, width, height );\r\n \r\n\t\t const image = { width: width, height: height, depth: 1 };\r\n \r\n\t\t this.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\t\t this.texture.isRenderTargetTexture = true;\r\n \r\n\t\t this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\t this.texture.internalFormat = options.internalFormat !== undefined ? options.internalFormat : null;\r\n\t\t this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n \r\n\t\t this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\t this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\r\n \r\n\t\t this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n \r\n\t\t this.samples = options.samples !== undefined ? options.samples : 0;\r\n \r\n\t }\r\n \r\n\t setSize( width, height, depth = 1 ) {\r\n \r\n\t\t if ( this.width !== width || this.height !== height || this.depth !== depth ) {\r\n \r\n\t\t\t this.width = width;\r\n\t\t\t this.height = height;\r\n\t\t\t this.depth = depth;\r\n \r\n\t\t\t this.texture.image.width = width;\r\n\t\t\t this.texture.image.height = height;\r\n\t\t\t this.texture.image.depth = depth;\r\n \r\n\t\t\t this.dispose();\r\n \r\n\t\t }\r\n \r\n\t\t this.viewport.set( 0, 0, width, height );\r\n\t\t this.scissor.set( 0, 0, width, height );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.width = source.width;\r\n\t\t this.height = source.height;\r\n\t\t this.depth = source.depth;\r\n \r\n\t\t this.viewport.copy( source.viewport );\r\n \r\n\t\t this.texture = source.texture.clone();\r\n \r\n\t\t // ensure image object is not shared, see #20328\r\n \r\n\t\t this.texture.image = Object.assign( {}, source.texture.image );\r\n \r\n\t\t this.depthBuffer = source.depthBuffer;\r\n\t\t this.stencilBuffer = source.stencilBuffer;\r\n \r\n\t\t if ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\r\n \r\n\t\t this.samples = source.samples;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.dispatchEvent( { type: 'dispose' } );\r\n \r\n\t }\r\n \r\n }\r\n \r\n WebGLRenderTarget.prototype.isWebGLRenderTarget = true;\r\n \r\n class DataArrayTexture extends Texture {\r\n \r\n\t constructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n \r\n\t\t super( null );\r\n \r\n\t\t this.image = { data, width, height, depth };\r\n \r\n\t\t this.magFilter = NearestFilter;\r\n\t\t this.minFilter = NearestFilter;\r\n \r\n\t\t this.wrapR = ClampToEdgeWrapping;\r\n \r\n\t\t this.generateMipmaps = false;\r\n\t\t this.flipY = false;\r\n\t\t this.unpackAlignment = 1;\r\n \r\n\t }\r\n \r\n }\r\n \r\n DataArrayTexture.prototype.isDataArrayTexture = true;\r\n \r\n class WebGLArrayRenderTarget extends WebGLRenderTarget {\r\n \r\n\t constructor( width, height, depth ) {\r\n \r\n\t\t super( width, height );\r\n \r\n\t\t this.depth = depth;\r\n \r\n\t\t this.texture = new DataArrayTexture( null, width, height, depth );\r\n \r\n\t\t this.texture.isRenderTargetTexture = true;\r\n \r\n\t }\r\n \r\n }\r\n \r\n WebGLArrayRenderTarget.prototype.isWebGLArrayRenderTarget = true;\r\n \r\n class Data3DTexture extends Texture {\r\n \r\n\t constructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n \r\n\t\t // We're going to add .setXXX() methods for setting properties later.\r\n\t\t // Users can still set in DataTexture3D directly.\r\n\t\t //\r\n\t\t //\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\r\n\t\t // \ttexture.anisotropy = 16;\r\n\t\t //\r\n\t\t // See #14839\r\n \r\n\t\t super( null );\r\n \r\n\t\t this.image = { data, width, height, depth };\r\n \r\n\t\t this.magFilter = NearestFilter;\r\n\t\t this.minFilter = NearestFilter;\r\n \r\n\t\t this.wrapR = ClampToEdgeWrapping;\r\n \r\n\t\t this.generateMipmaps = false;\r\n\t\t this.flipY = false;\r\n\t\t this.unpackAlignment = 1;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Data3DTexture.prototype.isData3DTexture = true;\r\n \r\n class WebGL3DRenderTarget extends WebGLRenderTarget {\r\n \r\n\t constructor( width, height, depth ) {\r\n \r\n\t\t super( width, height );\r\n \r\n\t\t this.depth = depth;\r\n \r\n\t\t this.texture = new Data3DTexture( null, width, height, depth );\r\n \r\n\t\t this.texture.isRenderTargetTexture = true;\r\n \r\n\t }\r\n \r\n }\r\n \r\n WebGL3DRenderTarget.prototype.isWebGL3DRenderTarget = true;\r\n \r\n class WebGLMultipleRenderTargets extends WebGLRenderTarget {\r\n \r\n\t constructor( width, height, count, options = {} ) {\r\n \r\n\t\t super( width, height, options );\r\n \r\n\t\t const texture = this.texture;\r\n \r\n\t\t this.texture = [];\r\n \r\n\t\t for ( let i = 0; i < count; i ++ ) {\r\n \r\n\t\t\t this.texture[ i ] = texture.clone();\r\n\t\t\t this.texture[ i ].isRenderTargetTexture = true;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t setSize( width, height, depth = 1 ) {\r\n \r\n\t\t if ( this.width !== width || this.height !== height || this.depth !== depth ) {\r\n \r\n\t\t\t this.width = width;\r\n\t\t\t this.height = height;\r\n\t\t\t this.depth = depth;\r\n \r\n\t\t\t for ( let i = 0, il = this.texture.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t this.texture[ i ].image.width = width;\r\n\t\t\t\t this.texture[ i ].image.height = height;\r\n\t\t\t\t this.texture[ i ].image.depth = depth;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.dispose();\r\n \r\n\t\t }\r\n \r\n\t\t this.viewport.set( 0, 0, width, height );\r\n\t\t this.scissor.set( 0, 0, width, height );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.dispose();\r\n \r\n\t\t this.width = source.width;\r\n\t\t this.height = source.height;\r\n\t\t this.depth = source.depth;\r\n \r\n\t\t this.viewport.set( 0, 0, this.width, this.height );\r\n\t\t this.scissor.set( 0, 0, this.width, this.height );\r\n \r\n\t\t this.depthBuffer = source.depthBuffer;\r\n\t\t this.stencilBuffer = source.stencilBuffer;\r\n\t\t this.depthTexture = source.depthTexture;\r\n \r\n\t\t this.texture.length = 0;\r\n \r\n\t\t for ( let i = 0, il = source.texture.length; i < il; i ++ ) {\r\n \r\n\t\t\t this.texture[ i ] = source.texture[ i ].clone();\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\r\n \r\n class Quaternion {\r\n \r\n\t constructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n \r\n\t\t this._x = x;\r\n\t\t this._y = y;\r\n\t\t this._z = z;\r\n\t\t this._w = w;\r\n \r\n\t }\r\n \r\n\t static slerp( qa, qb, qm, t ) {\r\n \r\n\t\t console.warn( 'THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.' );\r\n\t\t return qm.slerpQuaternions( qa, qb, t );\r\n \r\n\t }\r\n \r\n\t static slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n \r\n\t\t // fuzz-free, array-based Quaternion SLERP operation\r\n \r\n\t\t let x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\t y0 = src0[ srcOffset0 + 1 ],\r\n\t\t\t z0 = src0[ srcOffset0 + 2 ],\r\n\t\t\t w0 = src0[ srcOffset0 + 3 ];\r\n \r\n\t\t const x1 = src1[ srcOffset1 + 0 ],\r\n\t\t\t y1 = src1[ srcOffset1 + 1 ],\r\n\t\t\t z1 = src1[ srcOffset1 + 2 ],\r\n\t\t\t w1 = src1[ srcOffset1 + 3 ];\r\n \r\n\t\t if ( t === 0 ) {\r\n \r\n\t\t\t dst[ dstOffset + 0 ] = x0;\r\n\t\t\t dst[ dstOffset + 1 ] = y0;\r\n\t\t\t dst[ dstOffset + 2 ] = z0;\r\n\t\t\t dst[ dstOffset + 3 ] = w0;\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( t === 1 ) {\r\n \r\n\t\t\t dst[ dstOffset + 0 ] = x1;\r\n\t\t\t dst[ dstOffset + 1 ] = y1;\r\n\t\t\t dst[ dstOffset + 2 ] = z1;\r\n\t\t\t dst[ dstOffset + 3 ] = w1;\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n \r\n\t\t\t let s = 1 - t;\r\n\t\t\t const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\t\t\t\t dir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\t sqrSin = 1 - cos * cos;\r\n \r\n\t\t\t // Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\t if ( sqrSin > Number.EPSILON ) {\r\n \r\n\t\t\t\t const sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\t len = Math.atan2( sin, cos * dir );\r\n \r\n\t\t\t\t s = Math.sin( s * len ) / sin;\r\n\t\t\t\t t = Math.sin( t * len ) / sin;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const tDir = t * dir;\r\n \r\n\t\t\t x0 = x0 * s + x1 * tDir;\r\n\t\t\t y0 = y0 * s + y1 * tDir;\r\n\t\t\t z0 = z0 * s + z1 * tDir;\r\n\t\t\t w0 = w0 * s + w1 * tDir;\r\n \r\n\t\t\t // Normalize in case we just did a lerp:\r\n\t\t\t if ( s === 1 - t ) {\r\n \r\n\t\t\t\t const f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n \r\n\t\t\t\t x0 *= f;\r\n\t\t\t\t y0 *= f;\r\n\t\t\t\t z0 *= f;\r\n\t\t\t\t w0 *= f;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t dst[ dstOffset ] = x0;\r\n\t\t dst[ dstOffset + 1 ] = y0;\r\n\t\t dst[ dstOffset + 2 ] = z0;\r\n\t\t dst[ dstOffset + 3 ] = w0;\r\n \r\n\t }\r\n \r\n\t static multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\r\n \r\n\t\t const x0 = src0[ srcOffset0 ];\r\n\t\t const y0 = src0[ srcOffset0 + 1 ];\r\n\t\t const z0 = src0[ srcOffset0 + 2 ];\r\n\t\t const w0 = src0[ srcOffset0 + 3 ];\r\n \r\n\t\t const x1 = src1[ srcOffset1 ];\r\n\t\t const y1 = src1[ srcOffset1 + 1 ];\r\n\t\t const z1 = src1[ srcOffset1 + 2 ];\r\n\t\t const w1 = src1[ srcOffset1 + 3 ];\r\n \r\n\t\t dst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n\t\t dst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n\t\t dst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n\t\t dst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n \r\n\t\t return dst;\r\n \r\n\t }\r\n \r\n\t get x() {\r\n \r\n\t\t return this._x;\r\n \r\n\t }\r\n \r\n\t set x( value ) {\r\n \r\n\t\t this._x = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t get y() {\r\n \r\n\t\t return this._y;\r\n \r\n\t }\r\n \r\n\t set y( value ) {\r\n \r\n\t\t this._y = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t get z() {\r\n \r\n\t\t return this._z;\r\n \r\n\t }\r\n \r\n\t set z( value ) {\r\n \r\n\t\t this._z = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t get w() {\r\n \r\n\t\t return this._w;\r\n \r\n\t }\r\n \r\n\t set w( value ) {\r\n \r\n\t\t this._w = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t set( x, y, z, w ) {\r\n \r\n\t\t this._x = x;\r\n\t\t this._y = y;\r\n\t\t this._z = z;\r\n\t\t this._w = w;\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this._x, this._y, this._z, this._w );\r\n \r\n\t }\r\n \r\n\t copy( quaternion ) {\r\n \r\n\t\t this._x = quaternion.x;\r\n\t\t this._y = quaternion.y;\r\n\t\t this._z = quaternion.z;\r\n\t\t this._w = quaternion.w;\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromEuler( euler, update ) {\r\n \r\n\t\t if ( ! ( euler && euler.isEuler ) ) {\r\n \r\n\t\t\t throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n \r\n\t\t }\r\n \r\n\t\t const x = euler._x, y = euler._y, z = euler._z, order = euler._order;\r\n \r\n\t\t // http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t //\tcontent/SpinCalc.m\r\n \r\n\t\t const cos = Math.cos;\r\n\t\t const sin = Math.sin;\r\n \r\n\t\t const c1 = cos( x / 2 );\r\n\t\t const c2 = cos( y / 2 );\r\n\t\t const c3 = cos( z / 2 );\r\n \r\n\t\t const s1 = sin( x / 2 );\r\n\t\t const s2 = sin( y / 2 );\r\n\t\t const s3 = sin( z / 2 );\r\n \r\n\t\t switch ( order ) {\r\n \r\n\t\t\t case 'XYZ':\r\n\t\t\t\t this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'YXZ':\r\n\t\t\t\t this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'ZXY':\r\n\t\t\t\t this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'ZYX':\r\n\t\t\t\t this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'YZX':\r\n\t\t\t\t this._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\t this._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\t this._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\t this._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'XZY':\r\n\t\t\t\t this._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\t this._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\t this._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\t this._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\t break;\r\n \r\n\t\t\t default:\r\n\t\t\t\t console.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\r\n \r\n\t\t }\r\n \r\n\t\t if ( update !== false ) this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromAxisAngle( axis, angle ) {\r\n \r\n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n \r\n\t\t // assumes axis is normalized\r\n \r\n\t\t const halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n \r\n\t\t this._x = axis.x * s;\r\n\t\t this._y = axis.y * s;\r\n\t\t this._z = axis.z * s;\r\n\t\t this._w = Math.cos( halfAngle );\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromRotationMatrix( m ) {\r\n \r\n\t\t // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n \r\n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n \r\n\t\t const te = m.elements,\r\n \r\n\t\t\t m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n \r\n\t\t\t trace = m11 + m22 + m33;\r\n \r\n\t\t if ( trace > 0 ) {\r\n \r\n\t\t\t const s = 0.5 / Math.sqrt( trace + 1.0 );\r\n \r\n\t\t\t this._w = 0.25 / s;\r\n\t\t\t this._x = ( m32 - m23 ) * s;\r\n\t\t\t this._y = ( m13 - m31 ) * s;\r\n\t\t\t this._z = ( m21 - m12 ) * s;\r\n \r\n\t\t } else if ( m11 > m22 && m11 > m33 ) {\r\n \r\n\t\t\t const s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n \r\n\t\t\t this._w = ( m32 - m23 ) / s;\r\n\t\t\t this._x = 0.25 * s;\r\n\t\t\t this._y = ( m12 + m21 ) / s;\r\n\t\t\t this._z = ( m13 + m31 ) / s;\r\n \r\n\t\t } else if ( m22 > m33 ) {\r\n \r\n\t\t\t const s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n \r\n\t\t\t this._w = ( m13 - m31 ) / s;\r\n\t\t\t this._x = ( m12 + m21 ) / s;\r\n\t\t\t this._y = 0.25 * s;\r\n\t\t\t this._z = ( m23 + m32 ) / s;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n \r\n\t\t\t this._w = ( m21 - m12 ) / s;\r\n\t\t\t this._x = ( m13 + m31 ) / s;\r\n\t\t\t this._y = ( m23 + m32 ) / s;\r\n\t\t\t this._z = 0.25 * s;\r\n \r\n\t\t }\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromUnitVectors( vFrom, vTo ) {\r\n \r\n\t\t // assumes direction vectors vFrom and vTo are normalized\r\n \r\n\t\t let r = vFrom.dot( vTo ) + 1;\r\n \r\n\t\t if ( r < Number.EPSILON ) {\r\n \r\n\t\t\t // vFrom and vTo point in opposite directions\r\n \r\n\t\t\t r = 0;\r\n \r\n\t\t\t if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n \r\n\t\t\t\t this._x = - vFrom.y;\r\n\t\t\t\t this._y = vFrom.x;\r\n\t\t\t\t this._z = 0;\r\n\t\t\t\t this._w = r;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t this._x = 0;\r\n\t\t\t\t this._y = - vFrom.z;\r\n\t\t\t\t this._z = vFrom.y;\r\n\t\t\t\t this._w = r;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n \r\n\t\t\t this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\t this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\t this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\t this._w = r;\r\n \r\n\t\t }\r\n \r\n\t\t return this.normalize();\r\n \r\n\t }\r\n \r\n\t angleTo( q ) {\r\n \r\n\t\t return 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\r\n \r\n\t }\r\n \r\n\t rotateTowards( q, step ) {\r\n \r\n\t\t const angle = this.angleTo( q );\r\n \r\n\t\t if ( angle === 0 ) return this;\r\n \r\n\t\t const t = Math.min( 1, step / angle );\r\n \r\n\t\t this.slerp( q, t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t identity() {\r\n \r\n\t\t return this.set( 0, 0, 0, 1 );\r\n \r\n\t }\r\n \r\n\t invert() {\r\n \r\n\t\t // quaternion is assumed to have unit length\r\n \r\n\t\t return this.conjugate();\r\n \r\n\t }\r\n \r\n\t conjugate() {\r\n \r\n\t\t this._x *= - 1;\r\n\t\t this._y *= - 1;\r\n\t\t this._z *= - 1;\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dot( v ) {\r\n \r\n\t\t return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n \r\n\t }\r\n \r\n\t lengthSq() {\r\n \r\n\t\t return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n \r\n\t }\r\n \r\n\t length() {\r\n \r\n\t\t return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n \r\n\t }\r\n \r\n\t normalize() {\r\n \r\n\t\t let l = this.length();\r\n \r\n\t\t if ( l === 0 ) {\r\n \r\n\t\t\t this._x = 0;\r\n\t\t\t this._y = 0;\r\n\t\t\t this._z = 0;\r\n\t\t\t this._w = 1;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t l = 1 / l;\r\n \r\n\t\t\t this._x = this._x * l;\r\n\t\t\t this._y = this._y * l;\r\n\t\t\t this._z = this._z * l;\r\n\t\t\t this._w = this._w * l;\r\n \r\n\t\t }\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiply( q, p ) {\r\n \r\n\t\t if ( p !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t return this.multiplyQuaternions( q, p );\r\n \r\n\t\t }\r\n \r\n\t\t return this.multiplyQuaternions( this, q );\r\n \r\n\t }\r\n \r\n\t premultiply( q ) {\r\n \r\n\t\t return this.multiplyQuaternions( q, this );\r\n \r\n\t }\r\n \r\n\t multiplyQuaternions( a, b ) {\r\n \r\n\t\t // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n \r\n\t\t const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n \r\n\t\t this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t slerp( qb, t ) {\r\n \r\n\t\t if ( t === 0 ) return this;\r\n\t\t if ( t === 1 ) return this.copy( qb );\r\n \r\n\t\t const x = this._x, y = this._y, z = this._z, w = this._w;\r\n \r\n\t\t // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n \r\n\t\t let cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n \r\n\t\t if ( cosHalfTheta < 0 ) {\r\n \r\n\t\t\t this._w = - qb._w;\r\n\t\t\t this._x = - qb._x;\r\n\t\t\t this._y = - qb._y;\r\n\t\t\t this._z = - qb._z;\r\n \r\n\t\t\t cosHalfTheta = - cosHalfTheta;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.copy( qb );\r\n \r\n\t\t }\r\n \r\n\t\t if ( cosHalfTheta >= 1.0 ) {\r\n \r\n\t\t\t this._w = w;\r\n\t\t\t this._x = x;\r\n\t\t\t this._y = y;\r\n\t\t\t this._z = z;\r\n \r\n\t\t\t return this;\r\n \r\n\t\t }\r\n \r\n\t\t const sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n \r\n\t\t if ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n \r\n\t\t\t const s = 1 - t;\r\n\t\t\t this._w = s * w + t * this._w;\r\n\t\t\t this._x = s * x + t * this._x;\r\n\t\t\t this._y = s * y + t * this._y;\r\n\t\t\t this._z = s * z + t * this._z;\r\n \r\n\t\t\t this.normalize();\r\n\t\t\t this._onChangeCallback();\r\n \r\n\t\t\t return this;\r\n \r\n\t\t }\r\n \r\n\t\t const sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\t const halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\t const ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\t ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n \r\n\t\t this._w = ( w * ratioA + this._w * ratioB );\r\n\t\t this._x = ( x * ratioA + this._x * ratioB );\r\n\t\t this._y = ( y * ratioA + this._y * ratioB );\r\n\t\t this._z = ( z * ratioA + this._z * ratioB );\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t slerpQuaternions( qa, qb, t ) {\r\n \r\n\t\t return this.copy( qa ).slerp( qb, t );\r\n \r\n\t }\r\n \r\n\t random() {\r\n \r\n\t\t // Derived from http://planning.cs.uiuc.edu/node198.html\r\n\t\t // Note, this source uses w, x, y, z ordering,\r\n\t\t // so we swap the order below.\r\n \r\n\t\t const u1 = Math.random();\r\n\t\t const sqrt1u1 = Math.sqrt( 1 - u1 );\r\n\t\t const sqrtu1 = Math.sqrt( u1 );\r\n \r\n\t\t const u2 = 2 * Math.PI * Math.random();\r\n \r\n\t\t const u3 = 2 * Math.PI * Math.random();\r\n \r\n\t\t return this.set(\r\n\t\t\t sqrt1u1 * Math.cos( u2 ),\r\n\t\t\t sqrtu1 * Math.sin( u3 ),\r\n\t\t\t sqrtu1 * Math.cos( u3 ),\r\n\t\t\t sqrt1u1 * Math.sin( u2 ),\r\n\t\t );\r\n \r\n\t }\r\n \r\n\t equals( quaternion ) {\r\n \r\n\t\t return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t this._x = array[ offset ];\r\n\t\t this._y = array[ offset + 1 ];\r\n\t\t this._z = array[ offset + 2 ];\r\n\t\t this._w = array[ offset + 3 ];\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t array[ offset ] = this._x;\r\n\t\t array[ offset + 1 ] = this._y;\r\n\t\t array[ offset + 2 ] = this._z;\r\n\t\t array[ offset + 3 ] = this._w;\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t fromBufferAttribute( attribute, index ) {\r\n \r\n\t\t this._x = attribute.getX( index );\r\n\t\t this._y = attribute.getY( index );\r\n\t\t this._z = attribute.getZ( index );\r\n\t\t this._w = attribute.getW( index );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t _onChange( callback ) {\r\n \r\n\t\t this._onChangeCallback = callback;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t _onChangeCallback() {}\r\n \r\n }\r\n \r\n Quaternion.prototype.isQuaternion = true;\r\n \r\n class Vector3 {\r\n \r\n\t constructor( x = 0, y = 0, z = 0 ) {\r\n \r\n\t\t this.x = x;\r\n\t\t this.y = y;\r\n\t\t this.z = z;\r\n \r\n\t }\r\n \r\n\t set( x, y, z ) {\r\n \r\n\t\t if ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\r\n \r\n\t\t this.x = x;\r\n\t\t this.y = y;\r\n\t\t this.z = z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setScalar( scalar ) {\r\n \r\n\t\t this.x = scalar;\r\n\t\t this.y = scalar;\r\n\t\t this.z = scalar;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setX( x ) {\r\n \r\n\t\t this.x = x;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setY( y ) {\r\n \r\n\t\t this.y = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setZ( z ) {\r\n \r\n\t\t this.z = z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setComponent( index, value ) {\r\n \r\n\t\t switch ( index ) {\r\n \r\n\t\t\t case 0: this.x = value; break;\r\n\t\t\t case 1: this.y = value; break;\r\n\t\t\t case 2: this.z = value; break;\r\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getComponent( index ) {\r\n \r\n\t\t switch ( index ) {\r\n \r\n\t\t\t case 0: return this.x;\r\n\t\t\t case 1: return this.y;\r\n\t\t\t case 2: return this.z;\r\n\t\t\t default: throw new Error( 'index is out of range: ' + index );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this.x, this.y, this.z );\r\n \r\n\t }\r\n \r\n\t copy( v ) {\r\n \r\n\t\t this.x = v.x;\r\n\t\t this.y = v.y;\r\n\t\t this.z = v.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t add( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t return this.addVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t this.x += v.x;\r\n\t\t this.y += v.y;\r\n\t\t this.z += v.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScalar( s ) {\r\n \r\n\t\t this.x += s;\r\n\t\t this.y += s;\r\n\t\t this.z += s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addVectors( a, b ) {\r\n \r\n\t\t this.x = a.x + b.x;\r\n\t\t this.y = a.y + b.y;\r\n\t\t this.z = a.z + b.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScaledVector( v, s ) {\r\n \r\n\t\t this.x += v.x * s;\r\n\t\t this.y += v.y * s;\r\n\t\t this.z += v.z * s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t sub( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t return this.subVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t this.x -= v.x;\r\n\t\t this.y -= v.y;\r\n\t\t this.z -= v.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t subScalar( s ) {\r\n \r\n\t\t this.x -= s;\r\n\t\t this.y -= s;\r\n\t\t this.z -= s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t subVectors( a, b ) {\r\n \r\n\t\t this.x = a.x - b.x;\r\n\t\t this.y = a.y - b.y;\r\n\t\t this.z = a.z - b.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiply( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t return this.multiplyVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t this.x *= v.x;\r\n\t\t this.y *= v.y;\r\n\t\t this.z *= v.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiplyScalar( scalar ) {\r\n \r\n\t\t this.x *= scalar;\r\n\t\t this.y *= scalar;\r\n\t\t this.z *= scalar;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiplyVectors( a, b ) {\r\n \r\n\t\t this.x = a.x * b.x;\r\n\t\t this.y = a.y * b.y;\r\n\t\t this.z = a.z * b.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyEuler( euler ) {\r\n \r\n\t\t if ( ! ( euler && euler.isEuler ) ) {\r\n \r\n\t\t\t console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n \r\n\t\t }\r\n \r\n\t\t return this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\r\n \r\n\t }\r\n \r\n\t applyAxisAngle( axis, angle ) {\r\n \r\n\t\t return this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\r\n \r\n\t }\r\n \r\n\t applyMatrix3( m ) {\r\n \r\n\t\t const x = this.x, y = this.y, z = this.z;\r\n\t\t const e = m.elements;\r\n \r\n\t\t this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyNormalMatrix( m ) {\r\n \r\n\t\t return this.applyMatrix3( m ).normalize();\r\n \r\n\t }\r\n \r\n\t applyMatrix4( m ) {\r\n \r\n\t\t const x = this.x, y = this.y, z = this.z;\r\n\t\t const e = m.elements;\r\n \r\n\t\t const w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n \r\n\t\t this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\t this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\t this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyQuaternion( q ) {\r\n \r\n\t\t const x = this.x, y = this.y, z = this.z;\r\n\t\t const qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n \r\n\t\t // calculate quat * vector\r\n \r\n\t\t const ix = qw * x + qy * z - qz * y;\r\n\t\t const iy = qw * y + qz * x - qx * z;\r\n\t\t const iz = qw * z + qx * y - qy * x;\r\n\t\t const iw = - qx * x - qy * y - qz * z;\r\n \r\n\t\t // calculate result * inverse quat\r\n \r\n\t\t this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t project( camera ) {\r\n \r\n\t\t return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n \r\n\t }\r\n \r\n\t unproject( camera ) {\r\n \r\n\t\t return this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\r\n \r\n\t }\r\n \r\n\t transformDirection( m ) {\r\n \r\n\t\t // input: THREE.Matrix4 affine matrix\r\n\t\t // vector interpreted as a direction\r\n \r\n\t\t const x = this.x, y = this.y, z = this.z;\r\n\t\t const e = m.elements;\r\n \r\n\t\t this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\t this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\t this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n \r\n\t\t return this.normalize();\r\n \r\n\t }\r\n \r\n\t divide( v ) {\r\n \r\n\t\t this.x /= v.x;\r\n\t\t this.y /= v.y;\r\n\t\t this.z /= v.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t divideScalar( scalar ) {\r\n \r\n\t\t return this.multiplyScalar( 1 / scalar );\r\n \r\n\t }\r\n \r\n\t min( v ) {\r\n \r\n\t\t this.x = Math.min( this.x, v.x );\r\n\t\t this.y = Math.min( this.y, v.y );\r\n\t\t this.z = Math.min( this.z, v.z );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t max( v ) {\r\n \r\n\t\t this.x = Math.max( this.x, v.x );\r\n\t\t this.y = Math.max( this.y, v.y );\r\n\t\t this.z = Math.max( this.z, v.z );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clamp( min, max ) {\r\n \r\n\t\t // assumes min < max, componentwise\r\n \r\n\t\t this.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t this.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t this.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clampScalar( minVal, maxVal ) {\r\n \r\n\t\t this.x = Math.max( minVal, Math.min( maxVal, this.x ) );\r\n\t\t this.y = Math.max( minVal, Math.min( maxVal, this.y ) );\r\n\t\t this.z = Math.max( minVal, Math.min( maxVal, this.z ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clampLength( min, max ) {\r\n \r\n\t\t const length = this.length();\r\n \r\n\t\t return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\r\n \r\n\t }\r\n \r\n\t floor() {\r\n \r\n\t\t this.x = Math.floor( this.x );\r\n\t\t this.y = Math.floor( this.y );\r\n\t\t this.z = Math.floor( this.z );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t ceil() {\r\n \r\n\t\t this.x = Math.ceil( this.x );\r\n\t\t this.y = Math.ceil( this.y );\r\n\t\t this.z = Math.ceil( this.z );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t round() {\r\n \r\n\t\t this.x = Math.round( this.x );\r\n\t\t this.y = Math.round( this.y );\r\n\t\t this.z = Math.round( this.z );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t roundToZero() {\r\n \r\n\t\t this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t negate() {\r\n \r\n\t\t this.x = - this.x;\r\n\t\t this.y = - this.y;\r\n\t\t this.z = - this.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dot( v ) {\r\n \r\n\t\t return this.x * v.x + this.y * v.y + this.z * v.z;\r\n \r\n\t }\r\n \r\n\t // TODO lengthSquared?\r\n \r\n\t lengthSq() {\r\n \r\n\t\t return this.x * this.x + this.y * this.y + this.z * this.z;\r\n \r\n\t }\r\n \r\n\t length() {\r\n \r\n\t\t return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n \r\n\t }\r\n \r\n\t manhattanLength() {\r\n \r\n\t\t return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n \r\n\t }\r\n \r\n\t normalize() {\r\n \r\n\t\t return this.divideScalar( this.length() || 1 );\r\n \r\n\t }\r\n \r\n\t setLength( length ) {\r\n \r\n\t\t return this.normalize().multiplyScalar( length );\r\n \r\n\t }\r\n \r\n\t lerp( v, alpha ) {\r\n \r\n\t\t this.x += ( v.x - this.x ) * alpha;\r\n\t\t this.y += ( v.y - this.y ) * alpha;\r\n\t\t this.z += ( v.z - this.z ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lerpVectors( v1, v2, alpha ) {\r\n \r\n\t\t this.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\t this.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\t this.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t cross( v, w ) {\r\n \r\n\t\t if ( w !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t return this.crossVectors( v, w );\r\n \r\n\t\t }\r\n \r\n\t\t return this.crossVectors( this, v );\r\n \r\n\t }\r\n \r\n\t crossVectors( a, b ) {\r\n \r\n\t\t const ax = a.x, ay = a.y, az = a.z;\r\n\t\t const bx = b.x, by = b.y, bz = b.z;\r\n \r\n\t\t this.x = ay * bz - az * by;\r\n\t\t this.y = az * bx - ax * bz;\r\n\t\t this.z = ax * by - ay * bx;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t projectOnVector( v ) {\r\n \r\n\t\t const denominator = v.lengthSq();\r\n \r\n\t\t if ( denominator === 0 ) return this.set( 0, 0, 0 );\r\n \r\n\t\t const scalar = v.dot( this ) / denominator;\r\n \r\n\t\t return this.copy( v ).multiplyScalar( scalar );\r\n \r\n\t }\r\n \r\n\t projectOnPlane( planeNormal ) {\r\n \r\n\t\t _vector$c.copy( this ).projectOnVector( planeNormal );\r\n \r\n\t\t return this.sub( _vector$c );\r\n \r\n\t }\r\n \r\n\t reflect( normal ) {\r\n \r\n\t\t // reflect incident vector off plane orthogonal to normal\r\n\t\t // normal is assumed to have unit length\r\n \r\n\t\t return this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n \r\n\t }\r\n \r\n\t angleTo( v ) {\r\n \r\n\t\t const denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n \r\n\t\t if ( denominator === 0 ) return Math.PI / 2;\r\n \r\n\t\t const theta = this.dot( v ) / denominator;\r\n \r\n\t\t // clamp, to handle numerical problems\r\n \r\n\t\t return Math.acos( clamp( theta, - 1, 1 ) );\r\n \r\n\t }\r\n \r\n\t distanceTo( v ) {\r\n \r\n\t\t return Math.sqrt( this.distanceToSquared( v ) );\r\n \r\n\t }\r\n \r\n\t distanceToSquared( v ) {\r\n \r\n\t\t const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n \r\n\t\t return dx * dx + dy * dy + dz * dz;\r\n \r\n\t }\r\n \r\n\t manhattanDistanceTo( v ) {\r\n \r\n\t\t return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n \r\n\t }\r\n \r\n\t setFromSpherical( s ) {\r\n \r\n\t\t return this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n \r\n\t }\r\n \r\n\t setFromSphericalCoords( radius, phi, theta ) {\r\n \r\n\t\t const sinPhiRadius = Math.sin( phi ) * radius;\r\n \r\n\t\t this.x = sinPhiRadius * Math.sin( theta );\r\n\t\t this.y = Math.cos( phi ) * radius;\r\n\t\t this.z = sinPhiRadius * Math.cos( theta );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromCylindrical( c ) {\r\n \r\n\t\t return this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n \r\n\t }\r\n \r\n\t setFromCylindricalCoords( radius, theta, y ) {\r\n \r\n\t\t this.x = radius * Math.sin( theta );\r\n\t\t this.y = y;\r\n\t\t this.z = radius * Math.cos( theta );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromMatrixPosition( m ) {\r\n \r\n\t\t const e = m.elements;\r\n \r\n\t\t this.x = e[ 12 ];\r\n\t\t this.y = e[ 13 ];\r\n\t\t this.z = e[ 14 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromMatrixScale( m ) {\r\n \r\n\t\t const sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\t const sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\t const sz = this.setFromMatrixColumn( m, 2 ).length();\r\n \r\n\t\t this.x = sx;\r\n\t\t this.y = sy;\r\n\t\t this.z = sz;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromMatrixColumn( m, index ) {\r\n \r\n\t\t return this.fromArray( m.elements, index * 4 );\r\n \r\n\t }\r\n \r\n\t setFromMatrix3Column( m, index ) {\r\n \r\n\t\t return this.fromArray( m.elements, index * 3 );\r\n \r\n\t }\r\n \r\n\t setFromEuler( e ) {\r\n \r\n\t\t this.x = e._x;\r\n\t\t this.y = e._y;\r\n\t\t this.z = e._z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( v ) {\r\n \r\n\t\t return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t this.x = array[ offset ];\r\n\t\t this.y = array[ offset + 1 ];\r\n\t\t this.z = array[ offset + 2 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t array[ offset ] = this.x;\r\n\t\t array[ offset + 1 ] = this.y;\r\n\t\t array[ offset + 2 ] = this.z;\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t fromBufferAttribute( attribute, index, offset ) {\r\n \r\n\t\t if ( offset !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\r\n \r\n\t\t }\r\n \r\n\t\t this.x = attribute.getX( index );\r\n\t\t this.y = attribute.getY( index );\r\n\t\t this.z = attribute.getZ( index );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t random() {\r\n \r\n\t\t this.x = Math.random();\r\n\t\t this.y = Math.random();\r\n\t\t this.z = Math.random();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t randomDirection() {\r\n \r\n\t\t // Derived from https://mathworld.wolfram.com/SpherePointPicking.html\r\n \r\n\t\t const u = ( Math.random() - 0.5 ) * 2;\r\n\t\t const t = Math.random() * Math.PI * 2;\r\n\t\t const f = Math.sqrt( 1 - u ** 2 );\r\n \r\n\t\t this.x = f * Math.cos( t );\r\n\t\t this.y = f * Math.sin( t );\r\n\t\t this.z = u;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t *[ Symbol.iterator ]() {\r\n \r\n\t\t yield this.x;\r\n\t\t yield this.y;\r\n\t\t yield this.z;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Vector3.prototype.isVector3 = true;\r\n \r\n const _vector$c = /*@__PURE__*/ new Vector3();\r\n const _quaternion$4 = /*@__PURE__*/ new Quaternion();\r\n \r\n class Box3 {\r\n \r\n\t constructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\r\n \r\n\t\t this.min = min;\r\n\t\t this.max = max;\r\n \r\n\t }\r\n \r\n\t set( min, max ) {\r\n \r\n\t\t this.min.copy( min );\r\n\t\t this.max.copy( max );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromArray( array ) {\r\n \r\n\t\t let minX = + Infinity;\r\n\t\t let minY = + Infinity;\r\n\t\t let minZ = + Infinity;\r\n \r\n\t\t let maxX = - Infinity;\r\n\t\t let maxY = - Infinity;\r\n\t\t let maxZ = - Infinity;\r\n \r\n\t\t for ( let i = 0, l = array.length; i < l; i += 3 ) {\r\n \r\n\t\t\t const x = array[ i ];\r\n\t\t\t const y = array[ i + 1 ];\r\n\t\t\t const z = array[ i + 2 ];\r\n \r\n\t\t\t if ( x < minX ) minX = x;\r\n\t\t\t if ( y < minY ) minY = y;\r\n\t\t\t if ( z < minZ ) minZ = z;\r\n \r\n\t\t\t if ( x > maxX ) maxX = x;\r\n\t\t\t if ( y > maxY ) maxY = y;\r\n\t\t\t if ( z > maxZ ) maxZ = z;\r\n \r\n\t\t }\r\n \r\n\t\t this.min.set( minX, minY, minZ );\r\n\t\t this.max.set( maxX, maxY, maxZ );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromBufferAttribute( attribute ) {\r\n \r\n\t\t let minX = + Infinity;\r\n\t\t let minY = + Infinity;\r\n\t\t let minZ = + Infinity;\r\n \r\n\t\t let maxX = - Infinity;\r\n\t\t let maxY = - Infinity;\r\n\t\t let maxZ = - Infinity;\r\n \r\n\t\t for ( let i = 0, l = attribute.count; i < l; i ++ ) {\r\n \r\n\t\t\t const x = attribute.getX( i );\r\n\t\t\t const y = attribute.getY( i );\r\n\t\t\t const z = attribute.getZ( i );\r\n \r\n\t\t\t if ( x < minX ) minX = x;\r\n\t\t\t if ( y < minY ) minY = y;\r\n\t\t\t if ( z < minZ ) minZ = z;\r\n \r\n\t\t\t if ( x > maxX ) maxX = x;\r\n\t\t\t if ( y > maxY ) maxY = y;\r\n\t\t\t if ( z > maxZ ) maxZ = z;\r\n \r\n\t\t }\r\n \r\n\t\t this.min.set( minX, minY, minZ );\r\n\t\t this.max.set( maxX, maxY, maxZ );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromPoints( points ) {\r\n \r\n\t\t this.makeEmpty();\r\n \r\n\t\t for ( let i = 0, il = points.length; i < il; i ++ ) {\r\n \r\n\t\t\t this.expandByPoint( points[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromCenterAndSize( center, size ) {\r\n \r\n\t\t const halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\r\n \r\n\t\t this.min.copy( center ).sub( halfSize );\r\n\t\t this.max.copy( center ).add( halfSize );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromObject( object, precise = false ) {\r\n \r\n\t\t this.makeEmpty();\r\n \r\n\t\t return this.expandByObject( object, precise );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( box ) {\r\n \r\n\t\t this.min.copy( box.min );\r\n\t\t this.max.copy( box.max );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeEmpty() {\r\n \r\n\t\t this.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\t this.max.x = this.max.y = this.max.z = - Infinity;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t isEmpty() {\r\n \r\n\t\t // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n \r\n\t\t return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n \r\n\t }\r\n \r\n\t getCenter( target ) {\r\n \r\n\t\t return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n \r\n\t }\r\n \r\n\t getSize( target ) {\r\n \r\n\t\t return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n \r\n\t }\r\n \r\n\t expandByPoint( point ) {\r\n \r\n\t\t this.min.min( point );\r\n\t\t this.max.max( point );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t expandByVector( vector ) {\r\n \r\n\t\t this.min.sub( vector );\r\n\t\t this.max.add( vector );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t expandByScalar( scalar ) {\r\n \r\n\t\t this.min.addScalar( - scalar );\r\n\t\t this.max.addScalar( scalar );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t expandByObject( object, precise = false ) {\r\n \r\n\t\t // Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t // accounting for both the object's, and children's, world transforms\r\n \r\n\t\t object.updateWorldMatrix( false, false );\r\n \r\n\t\t const geometry = object.geometry;\r\n \r\n\t\t if ( geometry !== undefined ) {\r\n \r\n\t\t\t if ( precise && geometry.attributes != undefined && geometry.attributes.position !== undefined ) {\r\n \r\n\t\t\t\t const position = geometry.attributes.position;\r\n\t\t\t\t for ( let i = 0, l = position.count; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t _vector$b.fromBufferAttribute( position, i ).applyMatrix4( object.matrixWorld );\r\n\t\t\t\t\t this.expandByPoint( _vector$b );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t if ( geometry.boundingBox === null ) {\r\n \r\n\t\t\t\t\t geometry.computeBoundingBox();\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t _box$3.copy( geometry.boundingBox );\r\n\t\t\t\t _box$3.applyMatrix4( object.matrixWorld );\r\n \r\n\t\t\t\t this.union( _box$3 );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const children = object.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t this.expandByObject( children[ i ], precise );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t containsPoint( point ) {\r\n \r\n\t\t return point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t point.z < this.min.z || point.z > this.max.z ? false : true;\r\n \r\n\t }\r\n \r\n\t containsBox( box ) {\r\n \r\n\t\t return this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t this.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\t this.min.z <= box.min.z && box.max.z <= this.max.z;\r\n \r\n\t }\r\n \r\n\t getParameter( point, target ) {\r\n \r\n\t\t // This can potentially have a divide by zero if the box\r\n\t\t // has a size dimension of 0.\r\n \r\n\t\t return target.set(\r\n\t\t\t ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t ( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t ( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t );\r\n \r\n\t }\r\n \r\n\t intersectsBox( box ) {\r\n \r\n\t\t // using 6 splitting planes to rule out intersections.\r\n\t\t return box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\r\n \r\n\t }\r\n \r\n\t intersectsSphere( sphere ) {\r\n \r\n\t\t // Find the point on the AABB closest to the sphere center.\r\n\t\t this.clampPoint( sphere.center, _vector$b );\r\n \r\n\t\t // If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t return _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n \r\n\t }\r\n \r\n\t intersectsPlane( plane ) {\r\n \r\n\t\t // We compute the minimum and maximum dot product values. If those values\r\n\t\t // are on the same side (back or front) of the plane, then there is no intersection.\r\n \r\n\t\t let min, max;\r\n \r\n\t\t if ( plane.normal.x > 0 ) {\r\n \r\n\t\t\t min = plane.normal.x * this.min.x;\r\n\t\t\t max = plane.normal.x * this.max.x;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t min = plane.normal.x * this.max.x;\r\n\t\t\t max = plane.normal.x * this.min.x;\r\n \r\n\t\t }\r\n \r\n\t\t if ( plane.normal.y > 0 ) {\r\n \r\n\t\t\t min += plane.normal.y * this.min.y;\r\n\t\t\t max += plane.normal.y * this.max.y;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t min += plane.normal.y * this.max.y;\r\n\t\t\t max += plane.normal.y * this.min.y;\r\n \r\n\t\t }\r\n \r\n\t\t if ( plane.normal.z > 0 ) {\r\n \r\n\t\t\t min += plane.normal.z * this.min.z;\r\n\t\t\t max += plane.normal.z * this.max.z;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t min += plane.normal.z * this.max.z;\r\n\t\t\t max += plane.normal.z * this.min.z;\r\n \r\n\t\t }\r\n \r\n\t\t return ( min <= - plane.constant && max >= - plane.constant );\r\n \r\n\t }\r\n \r\n\t intersectsTriangle( triangle ) {\r\n \r\n\t\t if ( this.isEmpty() ) {\r\n \r\n\t\t\t return false;\r\n \r\n\t\t }\r\n \r\n\t\t // compute box center and extents\r\n\t\t this.getCenter( _center );\r\n\t\t _extents.subVectors( this.max, _center );\r\n \r\n\t\t // translate triangle to aabb origin\r\n\t\t _v0$2.subVectors( triangle.a, _center );\r\n\t\t _v1$7.subVectors( triangle.b, _center );\r\n\t\t _v2$3.subVectors( triangle.c, _center );\r\n \r\n\t\t // compute edge vectors for triangle\r\n\t\t _f0.subVectors( _v1$7, _v0$2 );\r\n\t\t _f1.subVectors( _v2$3, _v1$7 );\r\n\t\t _f2.subVectors( _v0$2, _v2$3 );\r\n \r\n\t\t // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\t let axes = [\r\n\t\t\t 0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\r\n\t\t\t _f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\r\n\t\t\t - _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\r\n\t\t ];\r\n\t\t if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\r\n \r\n\t\t\t return false;\r\n \r\n\t\t }\r\n \r\n\t\t // test 3 face normals from the aabb\r\n\t\t axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\t if ( ! satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents ) ) {\r\n \r\n\t\t\t return false;\r\n \r\n\t\t }\r\n \r\n\t\t // finally testing the face normal of the triangle\r\n\t\t // use already existing triangle edge vectors here\r\n\t\t _triangleNormal.crossVectors( _f0, _f1 );\r\n\t\t axes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\r\n \r\n\t\t return satForAxes( axes, _v0$2, _v1$7, _v2$3, _extents );\r\n \r\n\t }\r\n \r\n\t clampPoint( point, target ) {\r\n \r\n\t\t return target.copy( point ).clamp( this.min, this.max );\r\n \r\n\t }\r\n \r\n\t distanceToPoint( point ) {\r\n \r\n\t\t const clampedPoint = _vector$b.copy( point ).clamp( this.min, this.max );\r\n \r\n\t\t return clampedPoint.sub( point ).length();\r\n \r\n\t }\r\n \r\n\t getBoundingSphere( target ) {\r\n \r\n\t\t this.getCenter( target.center );\r\n \r\n\t\t target.radius = this.getSize( _vector$b ).length() * 0.5;\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t intersect( box ) {\r\n \r\n\t\t this.min.max( box.min );\r\n\t\t this.max.min( box.max );\r\n \r\n\t\t // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\t if ( this.isEmpty() ) this.makeEmpty();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t union( box ) {\r\n \r\n\t\t this.min.min( box.min );\r\n\t\t this.max.max( box.max );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyMatrix4( matrix ) {\r\n \r\n\t\t // transform of empty box is an empty box.\r\n\t\t if ( this.isEmpty() ) return this;\r\n \r\n\t\t // NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t _points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t _points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t _points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t _points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t _points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t _points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t _points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t _points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n \r\n\t\t this.setFromPoints( _points );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t translate( offset ) {\r\n \r\n\t\t this.min.add( offset );\r\n\t\t this.max.add( offset );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( box ) {\r\n \r\n\t\t return box.min.equals( this.min ) && box.max.equals( this.max );\r\n \r\n\t }\r\n \r\n }\r\n \r\n Box3.prototype.isBox3 = true;\r\n \r\n const _points = [\r\n\t /*@__PURE__*/ new Vector3(),\r\n\t /*@__PURE__*/ new Vector3(),\r\n\t /*@__PURE__*/ new Vector3(),\r\n\t /*@__PURE__*/ new Vector3(),\r\n\t /*@__PURE__*/ new Vector3(),\r\n\t /*@__PURE__*/ new Vector3(),\r\n\t /*@__PURE__*/ new Vector3(),\r\n\t /*@__PURE__*/ new Vector3()\r\n ];\r\n \r\n const _vector$b = /*@__PURE__*/ new Vector3();\r\n \r\n const _box$3 = /*@__PURE__*/ new Box3();\r\n \r\n // triangle centered vertices\r\n \r\n const _v0$2 = /*@__PURE__*/ new Vector3();\r\n const _v1$7 = /*@__PURE__*/ new Vector3();\r\n const _v2$3 = /*@__PURE__*/ new Vector3();\r\n \r\n // triangle edge vectors\r\n \r\n const _f0 = /*@__PURE__*/ new Vector3();\r\n const _f1 = /*@__PURE__*/ new Vector3();\r\n const _f2 = /*@__PURE__*/ new Vector3();\r\n \r\n const _center = /*@__PURE__*/ new Vector3();\r\n const _extents = /*@__PURE__*/ new Vector3();\r\n const _triangleNormal = /*@__PURE__*/ new Vector3();\r\n const _testAxis = /*@__PURE__*/ new Vector3();\r\n \r\n function satForAxes( axes, v0, v1, v2, extents ) {\r\n \r\n\t for ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n \r\n\t\t _testAxis.fromArray( axes, i );\r\n\t\t // project the aabb onto the seperating axis\r\n\t\t const r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\r\n\t\t // project all 3 vertices of the triangle onto the seperating axis\r\n\t\t const p0 = v0.dot( _testAxis );\r\n\t\t const p1 = v1.dot( _testAxis );\r\n\t\t const p2 = v2.dot( _testAxis );\r\n\t\t // actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\t if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n \r\n\t\t\t // points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t // the axis is seperating and we can exit\r\n\t\t\t return false;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return true;\r\n \r\n }\r\n \r\n const _box$2 = /*@__PURE__*/ new Box3();\r\n const _v1$6 = /*@__PURE__*/ new Vector3();\r\n const _toFarthestPoint = /*@__PURE__*/ new Vector3();\r\n const _toPoint = /*@__PURE__*/ new Vector3();\r\n \r\n class Sphere {\r\n \r\n\t constructor( center = new Vector3(), radius = - 1 ) {\r\n \r\n\t\t this.center = center;\r\n\t\t this.radius = radius;\r\n \r\n\t }\r\n \r\n\t set( center, radius ) {\r\n \r\n\t\t this.center.copy( center );\r\n\t\t this.radius = radius;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromPoints( points, optionalCenter ) {\r\n \r\n\t\t const center = this.center;\r\n \r\n\t\t if ( optionalCenter !== undefined ) {\r\n \r\n\t\t\t center.copy( optionalCenter );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _box$2.setFromPoints( points ).getCenter( center );\r\n \r\n\t\t }\r\n \r\n\t\t let maxRadiusSq = 0;\r\n \r\n\t\t for ( let i = 0, il = points.length; i < il; i ++ ) {\r\n \r\n\t\t\t maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n \r\n\t\t }\r\n \r\n\t\t this.radius = Math.sqrt( maxRadiusSq );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( sphere ) {\r\n \r\n\t\t this.center.copy( sphere.center );\r\n\t\t this.radius = sphere.radius;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t isEmpty() {\r\n \r\n\t\t return ( this.radius < 0 );\r\n \r\n\t }\r\n \r\n\t makeEmpty() {\r\n \r\n\t\t this.center.set( 0, 0, 0 );\r\n\t\t this.radius = - 1;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t containsPoint( point ) {\r\n \r\n\t\t return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n \r\n\t }\r\n \r\n\t distanceToPoint( point ) {\r\n \r\n\t\t return ( point.distanceTo( this.center ) - this.radius );\r\n \r\n\t }\r\n \r\n\t intersectsSphere( sphere ) {\r\n \r\n\t\t const radiusSum = this.radius + sphere.radius;\r\n \r\n\t\t return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n \r\n\t }\r\n \r\n\t intersectsBox( box ) {\r\n \r\n\t\t return box.intersectsSphere( this );\r\n \r\n\t }\r\n \r\n\t intersectsPlane( plane ) {\r\n \r\n\t\t return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n \r\n\t }\r\n \r\n\t clampPoint( point, target ) {\r\n \r\n\t\t const deltaLengthSq = this.center.distanceToSquared( point );\r\n \r\n\t\t target.copy( point );\r\n \r\n\t\t if ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n \r\n\t\t\t target.sub( this.center ).normalize();\r\n\t\t\t target.multiplyScalar( this.radius ).add( this.center );\r\n \r\n\t\t }\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t getBoundingBox( target ) {\r\n \r\n\t\t if ( this.isEmpty() ) {\r\n \r\n\t\t\t // Empty sphere produces empty bounding box\r\n\t\t\t target.makeEmpty();\r\n\t\t\t return target;\r\n \r\n\t\t }\r\n \r\n\t\t target.set( this.center, this.center );\r\n\t\t target.expandByScalar( this.radius );\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t applyMatrix4( matrix ) {\r\n \r\n\t\t this.center.applyMatrix4( matrix );\r\n\t\t this.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t translate( offset ) {\r\n \r\n\t\t this.center.add( offset );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t expandByPoint( point ) {\r\n \r\n\t\t // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\r\n \r\n\t\t _toPoint.subVectors( point, this.center );\r\n \r\n\t\t const lengthSq = _toPoint.lengthSq();\r\n \r\n\t\t if ( lengthSq > ( this.radius * this.radius ) ) {\r\n \r\n\t\t\t const length = Math.sqrt( lengthSq );\r\n\t\t\t const missingRadiusHalf = ( length - this.radius ) * 0.5;\r\n \r\n\t\t\t // Nudge this sphere towards the target point. Add half the missing distance to radius,\r\n\t\t\t // and the other half to position. This gives a tighter enclosure, instead of if\r\n\t\t\t // the whole missing distance were just added to radius.\r\n \r\n\t\t\t this.center.add( _toPoint.multiplyScalar( missingRadiusHalf / length ) );\r\n\t\t\t this.radius += missingRadiusHalf;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t union( sphere ) {\r\n \r\n\t\t // from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\r\n \r\n\t\t // To enclose another sphere into this sphere, we only need to enclose two points:\r\n\t\t // 1) Enclose the farthest point on the other sphere into this sphere.\r\n\t\t // 2) Enclose the opposite point of the farthest point into this sphere.\r\n \r\n\t\t  if ( this.center.equals( sphere.center ) === true ) {\r\n \r\n\t\t\t  _toFarthestPoint.set( 0, 0, 1 ).multiplyScalar( sphere.radius );\r\n \r\n \r\n\t\t } else {\r\n \r\n\t\t\t _toFarthestPoint.subVectors( sphere.center, this.center ).normalize().multiplyScalar( sphere.radius );\r\n \r\n\t\t }\r\n \r\n\t\t this.expandByPoint( _v1$6.copy( sphere.center ).add( _toFarthestPoint ) );\r\n\t\t this.expandByPoint( _v1$6.copy( sphere.center ).sub( _toFarthestPoint ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( sphere ) {\r\n \r\n\t\t return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _vector$a = /*@__PURE__*/ new Vector3();\r\n const _segCenter = /*@__PURE__*/ new Vector3();\r\n const _segDir = /*@__PURE__*/ new Vector3();\r\n const _diff = /*@__PURE__*/ new Vector3();\r\n \r\n const _edge1 = /*@__PURE__*/ new Vector3();\r\n const _edge2 = /*@__PURE__*/ new Vector3();\r\n const _normal$1 = /*@__PURE__*/ new Vector3();\r\n \r\n class Ray {\r\n \r\n\t constructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\r\n \r\n\t\t this.origin = origin;\r\n\t\t this.direction = direction;\r\n \r\n\t }\r\n \r\n\t set( origin, direction ) {\r\n \r\n\t\t this.origin.copy( origin );\r\n\t\t this.direction.copy( direction );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( ray ) {\r\n \r\n\t\t this.origin.copy( ray.origin );\r\n\t\t this.direction.copy( ray.direction );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t at( t, target ) {\r\n \r\n\t\t return target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n \r\n\t }\r\n \r\n\t lookAt( v ) {\r\n \r\n\t\t this.direction.copy( v ).sub( this.origin ).normalize();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t recast( t ) {\r\n \r\n\t\t this.origin.copy( this.at( t, _vector$a ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t closestPointToPoint( point, target ) {\r\n \r\n\t\t target.subVectors( point, this.origin );\r\n \r\n\t\t const directionDistance = target.dot( this.direction );\r\n \r\n\t\t if ( directionDistance < 0 ) {\r\n \r\n\t\t\t return target.copy( this.origin );\r\n \r\n\t\t }\r\n \r\n\t\t return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n \r\n\t }\r\n \r\n\t distanceToPoint( point ) {\r\n \r\n\t\t return Math.sqrt( this.distanceSqToPoint( point ) );\r\n \r\n\t }\r\n \r\n\t distanceSqToPoint( point ) {\r\n \r\n\t\t const directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\r\n \r\n\t\t // point behind the ray\r\n \r\n\t\t if ( directionDistance < 0 ) {\r\n \r\n\t\t\t return this.origin.distanceToSquared( point );\r\n \r\n\t\t }\r\n \r\n\t\t _vector$a.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n \r\n\t\t return _vector$a.distanceToSquared( point );\r\n \r\n\t }\r\n \r\n\t distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n \r\n\t\t // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t // It returns the min distance between the ray and the segment\r\n\t\t // defined by v0 and v1\r\n\t\t // It can also set two optional targets :\r\n\t\t // - The closest point on the ray\r\n\t\t // - The closest point on the segment\r\n \r\n\t\t _segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t _segDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t _diff.copy( this.origin ).sub( _segCenter );\r\n \r\n\t\t const segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t const a01 = - this.direction.dot( _segDir );\r\n\t\t const b0 = _diff.dot( this.direction );\r\n\t\t const b1 = - _diff.dot( _segDir );\r\n\t\t const c = _diff.lengthSq();\r\n\t\t const det = Math.abs( 1 - a01 * a01 );\r\n\t\t let s0, s1, sqrDist, extDet;\r\n \r\n\t\t if ( det > 0 ) {\r\n \r\n\t\t\t // The ray and segment are not parallel.\r\n \r\n\t\t\t s0 = a01 * b1 - b0;\r\n\t\t\t s1 = a01 * b0 - b1;\r\n\t\t\t extDet = segExtent * det;\r\n \r\n\t\t\t if ( s0 >= 0 ) {\r\n \r\n\t\t\t\t if ( s1 >= - extDet ) {\r\n \r\n\t\t\t\t\t if ( s1 <= extDet ) {\r\n \r\n\t\t\t\t\t\t // region 0\r\n\t\t\t\t\t\t // Minimum at interior points of ray and segment.\r\n \r\n\t\t\t\t\t\t const invDet = 1 / det;\r\n\t\t\t\t\t\t s0 *= invDet;\r\n\t\t\t\t\t\t s1 *= invDet;\r\n\t\t\t\t\t\t sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t // region 1\r\n \r\n\t\t\t\t\t\t s1 = segExtent;\r\n\t\t\t\t\t\t s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // region 5\r\n \r\n\t\t\t\t\t s1 = - segExtent;\r\n\t\t\t\t\t s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t if ( s1 <= - extDet ) {\r\n \r\n\t\t\t\t\t // region 4\r\n \r\n\t\t\t\t\t s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n \r\n\t\t\t\t } else if ( s1 <= extDet ) {\r\n \r\n\t\t\t\t\t // region 3\r\n \r\n\t\t\t\t\t s0 = 0;\r\n\t\t\t\t\t s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t sqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // region 2\r\n \r\n\t\t\t\t\t s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // Ray and segment are parallel.\r\n \r\n\t\t\t s1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t s0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n \r\n\t\t }\r\n \r\n\t\t if ( optionalPointOnRay ) {\r\n \r\n\t\t\t optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n \r\n\t\t }\r\n \r\n\t\t if ( optionalPointOnSegment ) {\r\n \r\n\t\t\t optionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\r\n \r\n\t\t }\r\n \r\n\t\t return sqrDist;\r\n \r\n\t }\r\n \r\n\t intersectSphere( sphere, target ) {\r\n \r\n\t\t _vector$a.subVectors( sphere.center, this.origin );\r\n\t\t const tca = _vector$a.dot( this.direction );\r\n\t\t const d2 = _vector$a.dot( _vector$a ) - tca * tca;\r\n\t\t const radius2 = sphere.radius * sphere.radius;\r\n \r\n\t\t if ( d2 > radius2 ) return null;\r\n \r\n\t\t const thc = Math.sqrt( radius2 - d2 );\r\n \r\n\t\t // t0 = first intersect point - entrance on front of sphere\r\n\t\t const t0 = tca - thc;\r\n \r\n\t\t // t1 = second intersect point - exit point on back of sphere\r\n\t\t const t1 = tca + thc;\r\n \r\n\t\t // test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t if ( t0 < 0 && t1 < 0 ) return null;\r\n \r\n\t\t // test to see if t0 is behind the ray:\r\n\t\t // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t // in order to always return an intersect point that is in front of the ray.\r\n\t\t if ( t0 < 0 ) return this.at( t1, target );\r\n \r\n\t\t // else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t return this.at( t0, target );\r\n \r\n\t }\r\n \r\n\t intersectsSphere( sphere ) {\r\n \r\n\t\t return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n \r\n\t }\r\n \r\n\t distanceToPlane( plane ) {\r\n \r\n\t\t const denominator = plane.normal.dot( this.direction );\r\n \r\n\t\t if ( denominator === 0 ) {\r\n \r\n\t\t\t // line is coplanar, return origin\r\n\t\t\t if ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n \r\n\t\t\t\t return 0;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Null is preferable to undefined since undefined means.... it is undefined\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t const t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n \r\n\t\t // Return if the ray never intersects the plane\r\n \r\n\t\t return t >= 0 ? t : null;\r\n \r\n\t }\r\n \r\n\t intersectPlane( plane, target ) {\r\n \r\n\t\t const t = this.distanceToPlane( plane );\r\n \r\n\t\t if ( t === null ) {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t return this.at( t, target );\r\n \r\n\t }\r\n \r\n\t intersectsPlane( plane ) {\r\n \r\n\t\t // check if the ray lies on the plane first\r\n \r\n\t\t const distToPoint = plane.distanceToPoint( this.origin );\r\n \r\n\t\t if ( distToPoint === 0 ) {\r\n \r\n\t\t\t return true;\r\n \r\n\t\t }\r\n \r\n\t\t const denominator = plane.normal.dot( this.direction );\r\n \r\n\t\t if ( denominator * distToPoint < 0 ) {\r\n \r\n\t\t\t return true;\r\n \r\n\t\t }\r\n \r\n\t\t // ray origin is behind the plane (and is pointing behind it)\r\n \r\n\t\t return false;\r\n \r\n\t }\r\n \r\n\t intersectBox( box, target ) {\r\n \r\n\t\t let tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n \r\n\t\t const invdirx = 1 / this.direction.x,\r\n\t\t\t invdiry = 1 / this.direction.y,\r\n\t\t\t invdirz = 1 / this.direction.z;\r\n \r\n\t\t const origin = this.origin;\r\n \r\n\t\t if ( invdirx >= 0 ) {\r\n \r\n\t\t\t tmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t tmax = ( box.max.x - origin.x ) * invdirx;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t tmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t tmax = ( box.min.x - origin.x ) * invdirx;\r\n \r\n\t\t }\r\n \r\n\t\t if ( invdiry >= 0 ) {\r\n \r\n\t\t\t tymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t tymax = ( box.max.y - origin.y ) * invdiry;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t tymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t tymax = ( box.min.y - origin.y ) * invdiry;\r\n \r\n\t\t }\r\n \r\n\t\t if ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n \r\n\t\t // These lines also handle the case where tmin or tmax is NaN\r\n\t\t // (result of 0 * Infinity). x !== x returns true if x is NaN\r\n \r\n\t\t if ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n \r\n\t\t if ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n \r\n\t\t if ( invdirz >= 0 ) {\r\n \r\n\t\t\t tzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t tzmax = ( box.max.z - origin.z ) * invdirz;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t tzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t tzmax = ( box.min.z - origin.z ) * invdirz;\r\n \r\n\t\t }\r\n \r\n\t\t if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n \r\n\t\t if ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n \r\n\t\t if ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n \r\n\t\t //return point closest to the ray (positive side)\r\n \r\n\t\t if ( tmax < 0 ) return null;\r\n \r\n\t\t return this.at( tmin >= 0 ? tmin : tmax, target );\r\n \r\n\t }\r\n \r\n\t intersectsBox( box ) {\r\n \r\n\t\t return this.intersectBox( box, _vector$a ) !== null;\r\n \r\n\t }\r\n \r\n\t intersectTriangle( a, b, c, backfaceCulling, target ) {\r\n \r\n\t\t // Compute the offset origin, edges, and normal.\r\n \r\n\t\t // from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n \r\n\t\t _edge1.subVectors( b, a );\r\n\t\t _edge2.subVectors( c, a );\r\n\t\t _normal$1.crossVectors( _edge1, _edge2 );\r\n \r\n\t\t // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t let DdN = this.direction.dot( _normal$1 );\r\n\t\t let sign;\r\n \r\n\t\t if ( DdN > 0 ) {\r\n \r\n\t\t\t if ( backfaceCulling ) return null;\r\n\t\t\t sign = 1;\r\n \r\n\t\t } else if ( DdN < 0 ) {\r\n \r\n\t\t\t sign = - 1;\r\n\t\t\t DdN = - DdN;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t _diff.subVectors( this.origin, a );\r\n\t\t const DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\r\n \r\n\t\t // b1 < 0, no intersection\r\n\t\t if ( DdQxE2 < 0 ) {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t const DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\r\n \r\n\t\t // b2 < 0, no intersection\r\n\t\t if ( DdE1xQ < 0 ) {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t // b1+b2 > 1, no intersection\r\n\t\t if ( DdQxE2 + DdE1xQ > DdN ) {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t // Line intersects triangle, check if ray does.\r\n\t\t const QdN = - sign * _diff.dot( _normal$1 );\r\n \r\n\t\t // t < 0, no intersection\r\n\t\t if ( QdN < 0 ) {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t // Ray intersects triangle.\r\n\t\t return this.at( QdN / DdN, target );\r\n \r\n\t }\r\n \r\n\t applyMatrix4( matrix4 ) {\r\n \r\n\t\t this.origin.applyMatrix4( matrix4 );\r\n\t\t this.direction.transformDirection( matrix4 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( ray ) {\r\n \r\n\t\t return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Matrix4 {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.elements = [\r\n \r\n\t\t\t 1, 0, 0, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t 0, 0, 1, 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t ];\r\n \r\n\t\t if ( arguments.length > 0 ) {\r\n \r\n\t\t\t console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t identity() {\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t 1, 0, 0, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t 0, 0, 1, 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new Matrix4().fromArray( this.elements );\r\n \r\n\t }\r\n \r\n\t copy( m ) {\r\n \r\n\t\t const te = this.elements;\r\n\t\t const me = m.elements;\r\n \r\n\t\t te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\t te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\t te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\t te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyPosition( m ) {\r\n \r\n\t\t const te = this.elements, me = m.elements;\r\n \r\n\t\t te[ 12 ] = me[ 12 ];\r\n\t\t te[ 13 ] = me[ 13 ];\r\n\t\t te[ 14 ] = me[ 14 ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromMatrix3( m ) {\r\n \r\n\t\t const me = m.elements;\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t me[ 0 ], me[ 3 ], me[ 6 ], 0,\r\n\t\t\t me[ 1 ], me[ 4 ], me[ 7 ], 0,\r\n\t\t\t me[ 2 ], me[ 5 ], me[ 8 ], 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t extractBasis( xAxis, yAxis, zAxis ) {\r\n \r\n\t\t xAxis.setFromMatrixColumn( this, 0 );\r\n\t\t yAxis.setFromMatrixColumn( this, 1 );\r\n\t\t zAxis.setFromMatrixColumn( this, 2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeBasis( xAxis, yAxis, zAxis ) {\r\n \r\n\t\t this.set(\r\n\t\t\t xAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t xAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t xAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t extractRotation( m ) {\r\n \r\n\t\t // this method does not support reflection matrices\r\n \r\n\t\t const te = this.elements;\r\n\t\t const me = m.elements;\r\n \r\n\t\t const scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\r\n\t\t const scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\r\n\t\t const scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\r\n \r\n\t\t te[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t te[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t te[ 2 ] = me[ 2 ] * scaleX;\r\n\t\t te[ 3 ] = 0;\r\n \r\n\t\t te[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t te[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t te[ 6 ] = me[ 6 ] * scaleY;\r\n\t\t te[ 7 ] = 0;\r\n \r\n\t\t te[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t te[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t te[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\t te[ 11 ] = 0;\r\n \r\n\t\t te[ 12 ] = 0;\r\n\t\t te[ 13 ] = 0;\r\n\t\t te[ 14 ] = 0;\r\n\t\t te[ 15 ] = 1;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeRotationFromEuler( euler ) {\r\n \r\n\t\t if ( ! ( euler && euler.isEuler ) ) {\r\n \r\n\t\t\t console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n \r\n\t\t }\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t const x = euler.x, y = euler.y, z = euler.z;\r\n\t\t const a = Math.cos( x ), b = Math.sin( x );\r\n\t\t const c = Math.cos( y ), d = Math.sin( y );\r\n\t\t const e = Math.cos( z ), f = Math.sin( z );\r\n \r\n\t\t if ( euler.order === 'XYZ' ) {\r\n \r\n\t\t\t const ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n \r\n\t\t\t te[ 0 ] = c * e;\r\n\t\t\t te[ 4 ] = - c * f;\r\n\t\t\t te[ 8 ] = d;\r\n \r\n\t\t\t te[ 1 ] = af + be * d;\r\n\t\t\t te[ 5 ] = ae - bf * d;\r\n\t\t\t te[ 9 ] = - b * c;\r\n \r\n\t\t\t te[ 2 ] = bf - ae * d;\r\n\t\t\t te[ 6 ] = be + af * d;\r\n\t\t\t te[ 10 ] = a * c;\r\n \r\n\t\t } else if ( euler.order === 'YXZ' ) {\r\n \r\n\t\t\t const ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n \r\n\t\t\t te[ 0 ] = ce + df * b;\r\n\t\t\t te[ 4 ] = de * b - cf;\r\n\t\t\t te[ 8 ] = a * d;\r\n \r\n\t\t\t te[ 1 ] = a * f;\r\n\t\t\t te[ 5 ] = a * e;\r\n\t\t\t te[ 9 ] = - b;\r\n \r\n\t\t\t te[ 2 ] = cf * b - de;\r\n\t\t\t te[ 6 ] = df + ce * b;\r\n\t\t\t te[ 10 ] = a * c;\r\n \r\n\t\t } else if ( euler.order === 'ZXY' ) {\r\n \r\n\t\t\t const ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n \r\n\t\t\t te[ 0 ] = ce - df * b;\r\n\t\t\t te[ 4 ] = - a * f;\r\n\t\t\t te[ 8 ] = de + cf * b;\r\n \r\n\t\t\t te[ 1 ] = cf + de * b;\r\n\t\t\t te[ 5 ] = a * e;\r\n\t\t\t te[ 9 ] = df - ce * b;\r\n \r\n\t\t\t te[ 2 ] = - a * d;\r\n\t\t\t te[ 6 ] = b;\r\n\t\t\t te[ 10 ] = a * c;\r\n \r\n\t\t } else if ( euler.order === 'ZYX' ) {\r\n \r\n\t\t\t const ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n \r\n\t\t\t te[ 0 ] = c * e;\r\n\t\t\t te[ 4 ] = be * d - af;\r\n\t\t\t te[ 8 ] = ae * d + bf;\r\n \r\n\t\t\t te[ 1 ] = c * f;\r\n\t\t\t te[ 5 ] = bf * d + ae;\r\n\t\t\t te[ 9 ] = af * d - be;\r\n \r\n\t\t\t te[ 2 ] = - d;\r\n\t\t\t te[ 6 ] = b * c;\r\n\t\t\t te[ 10 ] = a * c;\r\n \r\n\t\t } else if ( euler.order === 'YZX' ) {\r\n \r\n\t\t\t const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n \r\n\t\t\t te[ 0 ] = c * e;\r\n\t\t\t te[ 4 ] = bd - ac * f;\r\n\t\t\t te[ 8 ] = bc * f + ad;\r\n \r\n\t\t\t te[ 1 ] = f;\r\n\t\t\t te[ 5 ] = a * e;\r\n\t\t\t te[ 9 ] = - b * e;\r\n \r\n\t\t\t te[ 2 ] = - d * e;\r\n\t\t\t te[ 6 ] = ad * f + bc;\r\n\t\t\t te[ 10 ] = ac - bd * f;\r\n \r\n\t\t } else if ( euler.order === 'XZY' ) {\r\n \r\n\t\t\t const ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n \r\n\t\t\t te[ 0 ] = c * e;\r\n\t\t\t te[ 4 ] = - f;\r\n\t\t\t te[ 8 ] = d * e;\r\n \r\n\t\t\t te[ 1 ] = ac * f + bd;\r\n\t\t\t te[ 5 ] = a * e;\r\n\t\t\t te[ 9 ] = ad * f - bc;\r\n \r\n\t\t\t te[ 2 ] = bc * f - ad;\r\n\t\t\t te[ 6 ] = b * e;\r\n\t\t\t te[ 10 ] = bd * f + ac;\r\n \r\n\t\t }\r\n \r\n\t\t // bottom row\r\n\t\t te[ 3 ] = 0;\r\n\t\t te[ 7 ] = 0;\r\n\t\t te[ 11 ] = 0;\r\n \r\n\t\t // last column\r\n\t\t te[ 12 ] = 0;\r\n\t\t te[ 13 ] = 0;\r\n\t\t te[ 14 ] = 0;\r\n\t\t te[ 15 ] = 1;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeRotationFromQuaternion( q ) {\r\n \r\n\t\t return this.compose( _zero, q, _one );\r\n \r\n\t }\r\n \r\n\t lookAt( eye, target, up ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t _z.subVectors( eye, target );\r\n \r\n\t\t if ( _z.lengthSq() === 0 ) {\r\n \r\n\t\t\t // eye and target are in the same position\r\n \r\n\t\t\t _z.z = 1;\r\n \r\n\t\t }\r\n \r\n\t\t _z.normalize();\r\n\t\t _x.crossVectors( up, _z );\r\n \r\n\t\t if ( _x.lengthSq() === 0 ) {\r\n \r\n\t\t\t // up and z are parallel\r\n \r\n\t\t\t if ( Math.abs( up.z ) === 1 ) {\r\n \r\n\t\t\t\t _z.x += 0.0001;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _z.z += 0.0001;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _z.normalize();\r\n\t\t\t _x.crossVectors( up, _z );\r\n \r\n\t\t }\r\n \r\n\t\t _x.normalize();\r\n\t\t _y.crossVectors( _z, _x );\r\n \r\n\t\t te[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\r\n\t\t te[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\r\n\t\t te[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiply( m, n ) {\r\n \r\n\t\t if ( n !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t return this.multiplyMatrices( m, n );\r\n \r\n\t\t }\r\n \r\n\t\t return this.multiplyMatrices( this, m );\r\n \r\n\t }\r\n \r\n\t premultiply( m ) {\r\n \r\n\t\t return this.multiplyMatrices( m, this );\r\n \r\n\t }\r\n \r\n\t multiplyMatrices( a, b ) {\r\n \r\n\t\t const ae = a.elements;\r\n\t\t const be = b.elements;\r\n\t\t const te = this.elements;\r\n \r\n\t\t const a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t const a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t const a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t const a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n \r\n\t\t const b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t const b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t const b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t const b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n \r\n\t\t te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n \r\n\t\t te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n \r\n\t\t te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n \r\n\t\t te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t multiplyScalar( s ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t determinant() {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t const n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t const n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t const n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t const n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n \r\n\t\t //TODO: make this more efficient\r\n\t\t //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n \r\n\t\t return (\r\n\t\t\t n41 * (\r\n\t\t\t\t + n14 * n23 * n32\r\n\t\t\t\t  - n13 * n24 * n32\r\n\t\t\t\t  - n14 * n22 * n33\r\n\t\t\t\t  + n12 * n24 * n33\r\n\t\t\t\t  + n13 * n22 * n34\r\n\t\t\t\t  - n12 * n23 * n34\r\n\t\t\t ) +\r\n\t\t\t n42 * (\r\n\t\t\t\t + n11 * n23 * n34\r\n\t\t\t\t  - n11 * n24 * n33\r\n\t\t\t\t  + n14 * n21 * n33\r\n\t\t\t\t  - n13 * n21 * n34\r\n\t\t\t\t  + n13 * n24 * n31\r\n\t\t\t\t  - n14 * n23 * n31\r\n\t\t\t ) +\r\n\t\t\t n43 * (\r\n\t\t\t\t + n11 * n24 * n32\r\n\t\t\t\t  - n11 * n22 * n34\r\n\t\t\t\t  - n14 * n21 * n32\r\n\t\t\t\t  + n12 * n21 * n34\r\n\t\t\t\t  + n14 * n22 * n31\r\n\t\t\t\t  - n12 * n24 * n31\r\n\t\t\t ) +\r\n\t\t\t n44 * (\r\n\t\t\t\t - n13 * n22 * n31\r\n\t\t\t\t  - n11 * n23 * n32\r\n\t\t\t\t  + n11 * n22 * n33\r\n\t\t\t\t  + n13 * n21 * n32\r\n\t\t\t\t  - n12 * n21 * n33\r\n\t\t\t\t  + n12 * n23 * n31\r\n\t\t\t )\r\n \r\n\t\t );\r\n \r\n\t }\r\n \r\n\t transpose() {\r\n \r\n\t\t const te = this.elements;\r\n\t\t let tmp;\r\n \r\n\t\t tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n \r\n\t\t tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setPosition( x, y, z ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t if ( x.isVector3 ) {\r\n \r\n\t\t\t te[ 12 ] = x.x;\r\n\t\t\t te[ 13 ] = x.y;\r\n\t\t\t te[ 14 ] = x.z;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t te[ 12 ] = x;\r\n\t\t\t te[ 13 ] = y;\r\n\t\t\t te[ 14 ] = z;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t invert() {\r\n \r\n\t\t // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t const te = this.elements,\r\n \r\n\t\t\t n11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\r\n\t\t\t n12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\r\n\t\t\t n13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\r\n\t\t\t n14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\r\n \r\n\t\t\t t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\t t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\t t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\t t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n \r\n\t\t const det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n \r\n\t\t if ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n \r\n\t\t const detInv = 1 / det;\r\n \r\n\t\t te[ 0 ] = t11 * detInv;\r\n\t\t te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\t te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\t te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n \r\n\t\t te[ 4 ] = t12 * detInv;\r\n\t\t te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\t te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\t te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n \r\n\t\t te[ 8 ] = t13 * detInv;\r\n\t\t te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\t te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\t te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n \r\n\t\t te[ 12 ] = t14 * detInv;\r\n\t\t te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\t te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\t te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t scale( v ) {\r\n \r\n\t\t const te = this.elements;\r\n\t\t const x = v.x, y = v.y, z = v.z;\r\n \r\n\t\t te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getMaxScaleOnAxis() {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t const scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t const scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t const scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n \r\n\t\t return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n \r\n\t }\r\n \r\n\t makeTranslation( x, y, z ) {\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t 1, 0, 0, x,\r\n\t\t\t 0, 1, 0, y,\r\n\t\t\t 0, 0, 1, z,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeRotationX( theta ) {\r\n \r\n\t\t const c = Math.cos( theta ), s = Math.sin( theta );\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t 1, 0, 0, 0,\r\n\t\t\t 0, c, - s, 0,\r\n\t\t\t 0, s, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeRotationY( theta ) {\r\n \r\n\t\t const c = Math.cos( theta ), s = Math.sin( theta );\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t  c, 0, s, 0,\r\n\t\t\t  0, 1, 0, 0,\r\n\t\t\t - s, 0, c, 0,\r\n\t\t\t  0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeRotationZ( theta ) {\r\n \r\n\t\t const c = Math.cos( theta ), s = Math.sin( theta );\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t c, - s, 0, 0,\r\n\t\t\t s, c, 0, 0,\r\n\t\t\t 0, 0, 1, 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeRotationAxis( axis, angle ) {\r\n \r\n\t\t // Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n \r\n\t\t const c = Math.cos( angle );\r\n\t\t const s = Math.sin( angle );\r\n\t\t const t = 1 - c;\r\n\t\t const x = axis.x, y = axis.y, z = axis.z;\r\n\t\t const tx = t * x, ty = t * y;\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t tx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t tx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t tx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeScale( x, y, z ) {\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t x, 0, 0, 0,\r\n\t\t\t 0, y, 0, 0,\r\n\t\t\t 0, 0, z, 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeShear( xy, xz, yx, yz, zx, zy ) {\r\n \r\n\t\t this.set(\r\n \r\n\t\t\t 1, yx, zx, 0,\r\n\t\t\t xy, 1, zy, 0,\r\n\t\t\t xz, yz, 1, 0,\r\n\t\t\t 0, 0, 0, 1\r\n \r\n\t\t );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t compose( position, quaternion, scale ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t const x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\t const x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\t const xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t const yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t const wx = w * x2, wy = w * y2, wz = w * z2;\r\n \r\n\t\t const sx = scale.x, sy = scale.y, sz = scale.z;\r\n \r\n\t\t te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\t te[ 1 ] = ( xy + wz ) * sx;\r\n\t\t te[ 2 ] = ( xz - wy ) * sx;\r\n\t\t te[ 3 ] = 0;\r\n \r\n\t\t te[ 4 ] = ( xy - wz ) * sy;\r\n\t\t te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\t te[ 6 ] = ( yz + wx ) * sy;\r\n\t\t te[ 7 ] = 0;\r\n \r\n\t\t te[ 8 ] = ( xz + wy ) * sz;\r\n\t\t te[ 9 ] = ( yz - wx ) * sz;\r\n\t\t te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\t te[ 11 ] = 0;\r\n \r\n\t\t te[ 12 ] = position.x;\r\n\t\t te[ 13 ] = position.y;\r\n\t\t te[ 14 ] = position.z;\r\n\t\t te[ 15 ] = 1;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t decompose( position, quaternion, scale ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t let sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t const sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t const sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n \r\n\t\t // if determine is negative, we need to invert one scale\r\n\t\t const det = this.determinant();\r\n\t\t if ( det < 0 ) sx = - sx;\r\n \r\n\t\t position.x = te[ 12 ];\r\n\t\t position.y = te[ 13 ];\r\n\t\t position.z = te[ 14 ];\r\n \r\n\t\t // scale the rotation part\r\n\t\t _m1$2.copy( this );\r\n \r\n\t\t const invSX = 1 / sx;\r\n\t\t const invSY = 1 / sy;\r\n\t\t const invSZ = 1 / sz;\r\n \r\n\t\t _m1$2.elements[ 0 ] *= invSX;\r\n\t\t _m1$2.elements[ 1 ] *= invSX;\r\n\t\t _m1$2.elements[ 2 ] *= invSX;\r\n \r\n\t\t _m1$2.elements[ 4 ] *= invSY;\r\n\t\t _m1$2.elements[ 5 ] *= invSY;\r\n\t\t _m1$2.elements[ 6 ] *= invSY;\r\n \r\n\t\t _m1$2.elements[ 8 ] *= invSZ;\r\n\t\t _m1$2.elements[ 9 ] *= invSZ;\r\n\t\t _m1$2.elements[ 10 ] *= invSZ;\r\n \r\n\t\t quaternion.setFromRotationMatrix( _m1$2 );\r\n \r\n\t\t scale.x = sx;\r\n\t\t scale.y = sy;\r\n\t\t scale.z = sz;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makePerspective( left, right, top, bottom, near, far ) {\r\n \r\n\t\t if ( far === undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\r\n \r\n\t\t }\r\n \r\n\t\t const te = this.elements;\r\n\t\t const x = 2 * near / ( right - left );\r\n\t\t const y = 2 * near / ( top - bottom );\r\n \r\n\t\t const a = ( right + left ) / ( right - left );\r\n\t\t const b = ( top + bottom ) / ( top - bottom );\r\n\t\t const c = - ( far + near ) / ( far - near );\r\n\t\t const d = - 2 * far * near / ( far - near );\r\n \r\n\t\t te[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t te[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t te[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t te[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeOrthographic( left, right, top, bottom, near, far ) {\r\n \r\n\t\t const te = this.elements;\r\n\t\t const w = 1.0 / ( right - left );\r\n\t\t const h = 1.0 / ( top - bottom );\r\n\t\t const p = 1.0 / ( far - near );\r\n \r\n\t\t const x = ( right + left ) * w;\r\n\t\t const y = ( top + bottom ) * h;\r\n\t\t const z = ( far + near ) * p;\r\n \r\n\t\t te[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t te[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t te[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\t te[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( matrix ) {\r\n \r\n\t\t const te = this.elements;\r\n\t\t const me = matrix.elements;\r\n \r\n\t\t for ( let i = 0; i < 16; i ++ ) {\r\n \r\n\t\t\t if ( te[ i ] !== me[ i ] ) return false;\r\n \r\n\t\t }\r\n \r\n\t\t return true;\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t for ( let i = 0; i < 16; i ++ ) {\r\n \r\n\t\t\t this.elements[ i ] = array[ i + offset ];\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t const te = this.elements;\r\n \r\n\t\t array[ offset ] = te[ 0 ];\r\n\t\t array[ offset + 1 ] = te[ 1 ];\r\n\t\t array[ offset + 2 ] = te[ 2 ];\r\n\t\t array[ offset + 3 ] = te[ 3 ];\r\n \r\n\t\t array[ offset + 4 ] = te[ 4 ];\r\n\t\t array[ offset + 5 ] = te[ 5 ];\r\n\t\t array[ offset + 6 ] = te[ 6 ];\r\n\t\t array[ offset + 7 ] = te[ 7 ];\r\n \r\n\t\t array[ offset + 8 ] = te[ 8 ];\r\n\t\t array[ offset + 9 ] = te[ 9 ];\r\n\t\t array[ offset + 10 ] = te[ 10 ];\r\n\t\t array[ offset + 11 ] = te[ 11 ];\r\n \r\n\t\t array[ offset + 12 ] = te[ 12 ];\r\n\t\t array[ offset + 13 ] = te[ 13 ];\r\n\t\t array[ offset + 14 ] = te[ 14 ];\r\n\t\t array[ offset + 15 ] = te[ 15 ];\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Matrix4.prototype.isMatrix4 = true;\r\n \r\n const _v1$5 = /*@__PURE__*/ new Vector3();\r\n const _m1$2 = /*@__PURE__*/ new Matrix4();\r\n const _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\r\n const _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\r\n const _x = /*@__PURE__*/ new Vector3();\r\n const _y = /*@__PURE__*/ new Vector3();\r\n const _z = /*@__PURE__*/ new Vector3();\r\n \r\n const _matrix$1 = /*@__PURE__*/ new Matrix4();\r\n const _quaternion$3 = /*@__PURE__*/ new Quaternion();\r\n \r\n class Euler {\r\n \r\n\t constructor( x = 0, y = 0, z = 0, order = Euler.DefaultOrder ) {\r\n \r\n\t\t this._x = x;\r\n\t\t this._y = y;\r\n\t\t this._z = z;\r\n\t\t this._order = order;\r\n \r\n\t }\r\n \r\n\t get x() {\r\n \r\n\t\t return this._x;\r\n \r\n\t }\r\n \r\n\t set x( value ) {\r\n \r\n\t\t this._x = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t get y() {\r\n \r\n\t\t return this._y;\r\n \r\n\t }\r\n \r\n\t set y( value ) {\r\n \r\n\t\t this._y = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t get z() {\r\n \r\n\t\t return this._z;\r\n \r\n\t }\r\n \r\n\t set z( value ) {\r\n \r\n\t\t this._z = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t get order() {\r\n \r\n\t\t return this._order;\r\n \r\n\t }\r\n \r\n\t set order( value ) {\r\n \r\n\t\t this._order = value;\r\n\t\t this._onChangeCallback();\r\n \r\n\t }\r\n \r\n\t set( x, y, z, order = this._order ) {\r\n \r\n\t\t this._x = x;\r\n\t\t this._y = y;\r\n\t\t this._z = z;\r\n\t\t this._order = order;\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this._x, this._y, this._z, this._order );\r\n \r\n\t }\r\n \r\n\t copy( euler ) {\r\n \r\n\t\t this._x = euler._x;\r\n\t\t this._y = euler._y;\r\n\t\t this._z = euler._z;\r\n\t\t this._order = euler._order;\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromRotationMatrix( m, order = this._order, update = true ) {\r\n \r\n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n \r\n\t\t const te = m.elements;\r\n\t\t const m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t const m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t const m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n \r\n\t\t switch ( order ) {\r\n \r\n\t\t\t case 'XYZ':\r\n \r\n\t\t\t\t this._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n \r\n\t\t\t\t if ( Math.abs( m13 ) < 0.9999999 ) {\r\n \r\n\t\t\t\t\t this._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\t this._z = Math.atan2( - m12, m11 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t this._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\t this._z = 0;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'YXZ':\r\n \r\n\t\t\t\t this._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n \r\n\t\t\t\t if ( Math.abs( m23 ) < 0.9999999 ) {\r\n \r\n\t\t\t\t\t this._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\t this._z = Math.atan2( m21, m22 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t this._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\t this._z = 0;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'ZXY':\r\n \r\n\t\t\t\t this._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n \r\n\t\t\t\t if ( Math.abs( m32 ) < 0.9999999 ) {\r\n \r\n\t\t\t\t\t this._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\t this._z = Math.atan2( - m12, m22 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t this._y = 0;\r\n\t\t\t\t\t this._z = Math.atan2( m21, m11 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'ZYX':\r\n \r\n\t\t\t\t this._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n \r\n\t\t\t\t if ( Math.abs( m31 ) < 0.9999999 ) {\r\n \r\n\t\t\t\t\t this._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\t this._z = Math.atan2( m21, m11 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t this._x = 0;\r\n\t\t\t\t\t this._z = Math.atan2( - m12, m22 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'YZX':\r\n \r\n\t\t\t\t this._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n \r\n\t\t\t\t if ( Math.abs( m21 ) < 0.9999999 ) {\r\n \r\n\t\t\t\t\t this._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\t this._y = Math.atan2( - m31, m11 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t this._x = 0;\r\n\t\t\t\t\t this._y = Math.atan2( m13, m33 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'XZY':\r\n \r\n\t\t\t\t this._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n \r\n\t\t\t\t if ( Math.abs( m12 ) < 0.9999999 ) {\r\n \r\n\t\t\t\t\t this._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\t this._y = Math.atan2( m13, m11 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t this._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\t this._y = 0;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t default:\r\n \r\n\t\t\t\t console.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\r\n \r\n\t\t }\r\n \r\n\t\t this._order = order;\r\n \r\n\t\t if ( update === true ) this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromQuaternion( q, order, update ) {\r\n \r\n\t\t _matrix$1.makeRotationFromQuaternion( q );\r\n \r\n\t\t return this.setFromRotationMatrix( _matrix$1, order, update );\r\n \r\n\t }\r\n \r\n\t setFromVector3( v, order = this._order ) {\r\n \r\n\t\t return this.set( v.x, v.y, v.z, order );\r\n \r\n\t }\r\n \r\n\t reorder( newOrder ) {\r\n \r\n\t\t // WARNING: this discards revolution information -bhouston\r\n \r\n\t\t _quaternion$3.setFromEuler( this );\r\n \r\n\t\t return this.setFromQuaternion( _quaternion$3, newOrder );\r\n \r\n\t }\r\n \r\n\t equals( euler ) {\r\n \r\n\t\t return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n \r\n\t }\r\n \r\n\t fromArray( array ) {\r\n \r\n\t\t this._x = array[ 0 ];\r\n\t\t this._y = array[ 1 ];\r\n\t\t this._z = array[ 2 ];\r\n\t\t if ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n \r\n\t\t this._onChangeCallback();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t array[ offset ] = this._x;\r\n\t\t array[ offset + 1 ] = this._y;\r\n\t\t array[ offset + 2 ] = this._z;\r\n\t\t array[ offset + 3 ] = this._order;\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t _onChange( callback ) {\r\n \r\n\t\t this._onChangeCallback = callback;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t _onChangeCallback() {}\r\n \r\n }\r\n \r\n Euler.prototype.isEuler = true;\r\n \r\n Euler.DefaultOrder = 'XYZ';\r\n Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n \r\n class Layers {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.mask = 1 | 0;\r\n \r\n\t }\r\n \r\n\t set( channel ) {\r\n \r\n\t\t this.mask = ( 1 << channel | 0 ) >>> 0;\r\n \r\n\t }\r\n \r\n\t enable( channel ) {\r\n \r\n\t\t this.mask |= 1 << channel | 0;\r\n \r\n\t }\r\n \r\n\t enableAll() {\r\n \r\n\t\t this.mask = 0xffffffff | 0;\r\n \r\n\t }\r\n \r\n\t toggle( channel ) {\r\n \r\n\t\t this.mask ^= 1 << channel | 0;\r\n \r\n\t }\r\n \r\n\t disable( channel ) {\r\n \r\n\t\t this.mask &= ~ ( 1 << channel | 0 );\r\n \r\n\t }\r\n \r\n\t disableAll() {\r\n \r\n\t\t this.mask = 0;\r\n \r\n\t }\r\n \r\n\t test( layers ) {\r\n \r\n\t\t return ( this.mask & layers.mask ) !== 0;\r\n \r\n\t }\r\n \r\n\t isEnabled( channel ) {\r\n \r\n\t\t return ( this.mask & ( 1 << channel | 0 ) ) !== 0;\r\n \r\n\t }\r\n \r\n }\r\n \r\n let _object3DId = 0;\r\n \r\n const _v1$4 = /*@__PURE__*/ new Vector3();\r\n const _q1 = /*@__PURE__*/ new Quaternion();\r\n const _m1$1 = /*@__PURE__*/ new Matrix4();\r\n const _target = /*@__PURE__*/ new Vector3();\r\n \r\n const _position$3 = /*@__PURE__*/ new Vector3();\r\n const _scale$2 = /*@__PURE__*/ new Vector3();\r\n const _quaternion$2 = /*@__PURE__*/ new Quaternion();\r\n \r\n const _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\r\n const _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\r\n const _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\r\n \r\n const _addedEvent = { type: 'added' };\r\n const _removedEvent = { type: 'removed' };\r\n \r\n class Object3D extends EventDispatcher {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t Object.defineProperty( this, 'id', { value: _object3DId ++ } );\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t this.name = '';\r\n\t\t this.type = 'Object3D';\r\n \r\n\t\t this.parent = null;\r\n\t\t this.children = [];\r\n \r\n\t\t this.up = Object3D.DefaultUp.clone();\r\n \r\n\t\t const position = new Vector3();\r\n\t\t const rotation = new Euler();\r\n\t\t const quaternion = new Quaternion();\r\n\t\t const scale = new Vector3( 1, 1, 1 );\r\n \r\n\t\t function onRotationChange() {\r\n \r\n\t\t\t quaternion.setFromEuler( rotation, false );\r\n \r\n\t\t }\r\n \r\n\t\t function onQuaternionChange() {\r\n \r\n\t\t\t rotation.setFromQuaternion( quaternion, undefined, false );\r\n \r\n\t\t }\r\n \r\n\t\t rotation._onChange( onRotationChange );\r\n\t\t quaternion._onChange( onQuaternionChange );\r\n \r\n\t\t Object.defineProperties( this, {\r\n\t\t\t position: {\r\n\t\t\t\t configurable: true,\r\n\t\t\t\t enumerable: true,\r\n\t\t\t\t value: position\r\n\t\t\t },\r\n\t\t\t rotation: {\r\n\t\t\t\t configurable: true,\r\n\t\t\t\t enumerable: true,\r\n\t\t\t\t value: rotation\r\n\t\t\t },\r\n\t\t\t quaternion: {\r\n\t\t\t\t configurable: true,\r\n\t\t\t\t enumerable: true,\r\n\t\t\t\t value: quaternion\r\n\t\t\t },\r\n\t\t\t scale: {\r\n\t\t\t\t configurable: true,\r\n\t\t\t\t enumerable: true,\r\n\t\t\t\t value: scale\r\n\t\t\t },\r\n\t\t\t modelViewMatrix: {\r\n\t\t\t\t value: new Matrix4()\r\n\t\t\t },\r\n\t\t\t normalMatrix: {\r\n\t\t\t\t value: new Matrix3()\r\n\t\t\t }\r\n\t\t } );\r\n \r\n\t\t this.matrix = new Matrix4();\r\n\t\t this.matrixWorld = new Matrix4();\r\n \r\n\t\t this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n\t\t this.matrixWorldNeedsUpdate = false;\r\n \r\n\t\t this.layers = new Layers();\r\n\t\t this.visible = true;\r\n \r\n\t\t this.castShadow = false;\r\n\t\t this.receiveShadow = false;\r\n \r\n\t\t this.frustumCulled = true;\r\n\t\t this.renderOrder = 0;\r\n \r\n\t\t this.animations = [];\r\n \r\n\t\t this.userData = {};\r\n \r\n\t }\r\n \r\n\t onBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n \r\n\t onAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n \r\n\t applyMatrix4( matrix ) {\r\n \r\n\t\t if ( this.matrixAutoUpdate ) this.updateMatrix();\r\n \r\n\t\t this.matrix.premultiply( matrix );\r\n \r\n\t\t this.matrix.decompose( this.position, this.quaternion, this.scale );\r\n \r\n\t }\r\n \r\n\t applyQuaternion( q ) {\r\n \r\n\t\t this.quaternion.premultiply( q );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setRotationFromAxisAngle( axis, angle ) {\r\n \r\n\t\t // assumes axis is normalized\r\n \r\n\t\t this.quaternion.setFromAxisAngle( axis, angle );\r\n \r\n\t }\r\n \r\n\t setRotationFromEuler( euler ) {\r\n \r\n\t\t this.quaternion.setFromEuler( euler, true );\r\n \r\n\t }\r\n \r\n\t setRotationFromMatrix( m ) {\r\n \r\n\t\t // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n \r\n\t\t this.quaternion.setFromRotationMatrix( m );\r\n \r\n\t }\r\n \r\n\t setRotationFromQuaternion( q ) {\r\n \r\n\t\t // assumes q is normalized\r\n \r\n\t\t this.quaternion.copy( q );\r\n \r\n\t }\r\n \r\n\t rotateOnAxis( axis, angle ) {\r\n \r\n\t\t // rotate object on axis in object space\r\n\t\t // axis is assumed to be normalized\r\n \r\n\t\t _q1.setFromAxisAngle( axis, angle );\r\n \r\n\t\t this.quaternion.multiply( _q1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t rotateOnWorldAxis( axis, angle ) {\r\n \r\n\t\t // rotate object on axis in world space\r\n\t\t // axis is assumed to be normalized\r\n\t\t // method assumes no rotated parent\r\n \r\n\t\t _q1.setFromAxisAngle( axis, angle );\r\n \r\n\t\t this.quaternion.premultiply( _q1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t rotateX( angle ) {\r\n \r\n\t\t return this.rotateOnAxis( _xAxis, angle );\r\n \r\n\t }\r\n \r\n\t rotateY( angle ) {\r\n \r\n\t\t return this.rotateOnAxis( _yAxis, angle );\r\n \r\n\t }\r\n \r\n\t rotateZ( angle ) {\r\n \r\n\t\t return this.rotateOnAxis( _zAxis, angle );\r\n \r\n\t }\r\n \r\n\t translateOnAxis( axis, distance ) {\r\n \r\n\t\t // translate object by distance along axis in object space\r\n\t\t // axis is assumed to be normalized\r\n \r\n\t\t _v1$4.copy( axis ).applyQuaternion( this.quaternion );\r\n \r\n\t\t this.position.add( _v1$4.multiplyScalar( distance ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t translateX( distance ) {\r\n \r\n\t\t return this.translateOnAxis( _xAxis, distance );\r\n \r\n\t }\r\n \r\n\t translateY( distance ) {\r\n \r\n\t\t return this.translateOnAxis( _yAxis, distance );\r\n \r\n\t }\r\n \r\n\t translateZ( distance ) {\r\n \r\n\t\t return this.translateOnAxis( _zAxis, distance );\r\n \r\n\t }\r\n \r\n\t localToWorld( vector ) {\r\n \r\n\t\t return vector.applyMatrix4( this.matrixWorld );\r\n \r\n\t }\r\n \r\n\t worldToLocal( vector ) {\r\n \r\n\t\t return vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\r\n \r\n\t }\r\n \r\n\t lookAt( x, y, z ) {\r\n \r\n\t\t // This method does not support objects having non-uniformly-scaled parent(s)\r\n \r\n\t\t if ( x.isVector3 ) {\r\n \r\n\t\t\t _target.copy( x );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _target.set( x, y, z );\r\n \r\n\t\t }\r\n \r\n\t\t const parent = this.parent;\r\n \r\n\t\t this.updateWorldMatrix( true, false );\r\n \r\n\t\t _position$3.setFromMatrixPosition( this.matrixWorld );\r\n \r\n\t\t if ( this.isCamera || this.isLight ) {\r\n \r\n\t\t\t _m1$1.lookAt( _position$3, _target, this.up );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _m1$1.lookAt( _target, _position$3, this.up );\r\n \r\n\t\t }\r\n \r\n\t\t this.quaternion.setFromRotationMatrix( _m1$1 );\r\n \r\n\t\t if ( parent ) {\r\n \r\n\t\t\t _m1$1.extractRotation( parent.matrixWorld );\r\n\t\t\t _q1.setFromRotationMatrix( _m1$1 );\r\n\t\t\t this.quaternion.premultiply( _q1.invert() );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t add( object ) {\r\n \r\n\t\t if ( arguments.length > 1 ) {\r\n \r\n\t\t\t for ( let i = 0; i < arguments.length; i ++ ) {\r\n \r\n\t\t\t\t this.add( arguments[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return this;\r\n \r\n\t\t }\r\n \r\n\t\t if ( object === this ) {\r\n \r\n\t\t\t console.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\r\n\t\t\t return this;\r\n \r\n\t\t }\r\n \r\n\t\t if ( object && object.isObject3D ) {\r\n \r\n\t\t\t if ( object.parent !== null ) {\r\n \r\n\t\t\t\t object.parent.remove( object );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t object.parent = this;\r\n\t\t\t this.children.push( object );\r\n \r\n\t\t\t object.dispatchEvent( _addedEvent );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t console.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t remove( object ) {\r\n \r\n\t\t if ( arguments.length > 1 ) {\r\n \r\n\t\t\t for ( let i = 0; i < arguments.length; i ++ ) {\r\n \r\n\t\t\t\t this.remove( arguments[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return this;\r\n \r\n\t\t }\r\n \r\n\t\t const index = this.children.indexOf( object );\r\n \r\n\t\t if ( index !== - 1 ) {\r\n \r\n\t\t\t object.parent = null;\r\n\t\t\t this.children.splice( index, 1 );\r\n \r\n\t\t\t object.dispatchEvent( _removedEvent );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t removeFromParent() {\r\n \r\n\t\t const parent = this.parent;\r\n \r\n\t\t if ( parent !== null ) {\r\n \r\n\t\t\t parent.remove( this );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clear() {\r\n \r\n\t\t for ( let i = 0; i < this.children.length; i ++ ) {\r\n \r\n\t\t\t const object = this.children[ i ];\r\n \r\n\t\t\t object.parent = null;\r\n \r\n\t\t\t object.dispatchEvent( _removedEvent );\r\n \r\n\t\t }\r\n \r\n\t\t this.children.length = 0;\r\n \r\n\t\t return this;\r\n \r\n \r\n\t }\r\n \r\n\t attach( object ) {\r\n \r\n\t\t // adds object as a child of this, while maintaining the object's world transform\r\n \r\n\t\t // Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\r\n \r\n\t\t this.updateWorldMatrix( true, false );\r\n \r\n\t\t _m1$1.copy( this.matrixWorld ).invert();\r\n \r\n\t\t if ( object.parent !== null ) {\r\n \r\n\t\t\t object.parent.updateWorldMatrix( true, false );\r\n \r\n\t\t\t _m1$1.multiply( object.parent.matrixWorld );\r\n \r\n\t\t }\r\n \r\n\t\t object.applyMatrix4( _m1$1 );\r\n \r\n\t\t this.add( object );\r\n \r\n\t\t object.updateWorldMatrix( false, true );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getObjectById( id ) {\r\n \r\n\t\t return this.getObjectByProperty( 'id', id );\r\n \r\n\t }\r\n \r\n\t getObjectByName( name ) {\r\n \r\n\t\t return this.getObjectByProperty( 'name', name );\r\n \r\n\t }\r\n \r\n\t getObjectByProperty( name, value ) {\r\n \r\n\t\t if ( this[ name ] === value ) return this;\r\n \r\n\t\t for ( let i = 0, l = this.children.length; i < l; i ++ ) {\r\n \r\n\t\t\t const child = this.children[ i ];\r\n\t\t\t const object = child.getObjectByProperty( name, value );\r\n \r\n\t\t\t if ( object !== undefined ) {\r\n \r\n\t\t\t\t return object;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return undefined;\r\n \r\n\t }\r\n \r\n\t getWorldPosition( target ) {\r\n \r\n\t\t this.updateWorldMatrix( true, false );\r\n \r\n\t\t return target.setFromMatrixPosition( this.matrixWorld );\r\n \r\n\t }\r\n \r\n\t getWorldQuaternion( target ) {\r\n \r\n\t\t this.updateWorldMatrix( true, false );\r\n \r\n\t\t this.matrixWorld.decompose( _position$3, target, _scale$2 );\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t getWorldScale( target ) {\r\n \r\n\t\t this.updateWorldMatrix( true, false );\r\n \r\n\t\t this.matrixWorld.decompose( _position$3, _quaternion$2, target );\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t getWorldDirection( target ) {\r\n \r\n\t\t this.updateWorldMatrix( true, false );\r\n \r\n\t\t const e = this.matrixWorld.elements;\r\n \r\n\t\t return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\r\n \r\n\t }\r\n \r\n\t raycast( /* raycaster, intersects */ ) {}\r\n \r\n\t traverse( callback ) {\r\n \r\n\t\t callback( this );\r\n \r\n\t\t const children = this.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t children[ i ].traverse( callback );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t traverseVisible( callback ) {\r\n \r\n\t\t if ( this.visible === false ) return;\r\n \r\n\t\t callback( this );\r\n \r\n\t\t const children = this.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t children[ i ].traverseVisible( callback );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t traverseAncestors( callback ) {\r\n \r\n\t\t const parent = this.parent;\r\n \r\n\t\t if ( parent !== null ) {\r\n \r\n\t\t\t callback( parent );\r\n \r\n\t\t\t parent.traverseAncestors( callback );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t updateMatrix() {\r\n \r\n\t\t this.matrix.compose( this.position, this.quaternion, this.scale );\r\n \r\n\t\t this.matrixWorldNeedsUpdate = true;\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t if ( this.matrixAutoUpdate ) this.updateMatrix();\r\n \r\n\t\t if ( this.matrixWorldNeedsUpdate || force ) {\r\n \r\n\t\t\t if ( this.parent === null ) {\r\n \r\n\t\t\t\t this.matrixWorld.copy( this.matrix );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.matrixWorldNeedsUpdate = false;\r\n \r\n\t\t\t force = true;\r\n \r\n\t\t }\r\n \r\n\t\t // update children\r\n \r\n\t\t const children = this.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t children[ i ].updateMatrixWorld( force );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t updateWorldMatrix( updateParents, updateChildren ) {\r\n \r\n\t\t const parent = this.parent;\r\n \r\n\t\t if ( updateParents === true && parent !== null ) {\r\n \r\n\t\t\t parent.updateWorldMatrix( true, false );\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.matrixAutoUpdate ) this.updateMatrix();\r\n \r\n\t\t if ( this.parent === null ) {\r\n \r\n\t\t\t this.matrixWorld.copy( this.matrix );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n \r\n\t\t }\r\n \r\n\t\t // update children\r\n \r\n\t\t if ( updateChildren === true ) {\r\n \r\n\t\t\t const children = this.children;\r\n \r\n\t\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t children[ i ].updateWorldMatrix( false, true );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t // meta is a string when called from JSON.stringify\r\n\t\t const isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n \r\n\t\t const output = {};\r\n \r\n\t\t // meta is a hash used to collect geometries, materials.\r\n\t\t // not providing it implies that this is the root object\r\n\t\t // being serialized.\r\n\t\t if ( isRootObject ) {\r\n \r\n\t\t\t // initialize meta obj\r\n\t\t\t meta = {\r\n\t\t\t\t geometries: {},\r\n\t\t\t\t materials: {},\r\n\t\t\t\t textures: {},\r\n\t\t\t\t images: {},\r\n\t\t\t\t shapes: {},\r\n\t\t\t\t skeletons: {},\r\n\t\t\t\t animations: {},\r\n\t\t\t\t nodes: {}\r\n\t\t\t };\r\n \r\n\t\t\t output.metadata = {\r\n\t\t\t\t version: 4.5,\r\n\t\t\t\t type: 'Object',\r\n\t\t\t\t generator: 'Object3D.toJSON'\r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t\t // standard Object3D serialization\r\n \r\n\t\t const object = {};\r\n \r\n\t\t object.uuid = this.uuid;\r\n\t\t object.type = this.type;\r\n \r\n\t\t if ( this.name !== '' ) object.name = this.name;\r\n\t\t if ( this.castShadow === true ) object.castShadow = true;\r\n\t\t if ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\t if ( this.visible === false ) object.visible = false;\r\n\t\t if ( this.frustumCulled === false ) object.frustumCulled = false;\r\n\t\t if ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\r\n\t\t if ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n \r\n\t\t object.layers = this.layers.mask;\r\n\t\t object.matrix = this.matrix.toArray();\r\n \r\n\t\t if ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\r\n \r\n\t\t // object specific properties\r\n \r\n\t\t if ( this.isInstancedMesh ) {\r\n \r\n\t\t\t object.type = 'InstancedMesh';\r\n\t\t\t object.count = this.count;\r\n\t\t\t object.instanceMatrix = this.instanceMatrix.toJSON();\r\n\t\t\t if ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t function serialize( library, element ) {\r\n \r\n\t\t\t if ( library[ element.uuid ] === undefined ) {\r\n \r\n\t\t\t\t library[ element.uuid ] = element.toJSON( meta );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return element.uuid;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.isScene ) {\r\n \r\n\t\t\t if ( this.background ) {\r\n \r\n\t\t\t\t if ( this.background.isColor ) {\r\n \r\n\t\t\t\t\t object.background = this.background.toJSON();\r\n \r\n\t\t\t\t } else if ( this.background.isTexture ) {\r\n \r\n\t\t\t\t\t object.background = this.background.toJSON( meta ).uuid;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( this.environment && this.environment.isTexture ) {\r\n \r\n\t\t\t\t object.environment = this.environment.toJSON( meta ).uuid;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( this.isMesh || this.isLine || this.isPoints ) {\r\n \r\n\t\t\t object.geometry = serialize( meta.geometries, this.geometry );\r\n \r\n\t\t\t const parameters = this.geometry.parameters;\r\n \r\n\t\t\t if ( parameters !== undefined && parameters.shapes !== undefined ) {\r\n \r\n\t\t\t\t const shapes = parameters.shapes;\r\n \r\n\t\t\t\t if ( Array.isArray( shapes ) ) {\r\n \r\n\t\t\t\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t\t const shape = shapes[ i ];\r\n \r\n\t\t\t\t\t\t serialize( meta.shapes, shape );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t serialize( meta.shapes, shapes );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.isSkinnedMesh ) {\r\n \r\n\t\t\t object.bindMode = this.bindMode;\r\n\t\t\t object.bindMatrix = this.bindMatrix.toArray();\r\n \r\n\t\t\t if ( this.skeleton !== undefined ) {\r\n \r\n\t\t\t\t serialize( meta.skeletons, this.skeleton );\r\n \r\n\t\t\t\t object.skeleton = this.skeleton.uuid;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.material !== undefined ) {\r\n \r\n\t\t\t if ( Array.isArray( this.material ) ) {\r\n \r\n\t\t\t\t const uuids = [];\r\n \r\n\t\t\t\t for ( let i = 0, l = this.material.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t uuids.push( serialize( meta.materials, this.material[ i ] ) );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t object.material = uuids;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t object.material = serialize( meta.materials, this.material );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t if ( this.children.length > 0 ) {\r\n \r\n\t\t\t object.children = [];\r\n \r\n\t\t\t for ( let i = 0; i < this.children.length; i ++ ) {\r\n \r\n\t\t\t\t object.children.push( this.children[ i ].toJSON( meta ).object );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t if ( this.animations.length > 0 ) {\r\n \r\n\t\t\t object.animations = [];\r\n \r\n\t\t\t for ( let i = 0; i < this.animations.length; i ++ ) {\r\n \r\n\t\t\t\t const animation = this.animations[ i ];\r\n \r\n\t\t\t\t object.animations.push( serialize( meta.animations, animation ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( isRootObject ) {\r\n \r\n\t\t\t const geometries = extractFromCache( meta.geometries );\r\n\t\t\t const materials = extractFromCache( meta.materials );\r\n\t\t\t const textures = extractFromCache( meta.textures );\r\n\t\t\t const images = extractFromCache( meta.images );\r\n\t\t\t const shapes = extractFromCache( meta.shapes );\r\n\t\t\t const skeletons = extractFromCache( meta.skeletons );\r\n\t\t\t const animations = extractFromCache( meta.animations );\r\n\t\t\t const nodes = extractFromCache( meta.nodes );\r\n \r\n\t\t\t if ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t if ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t if ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t if ( images.length > 0 ) output.images = images;\r\n\t\t\t if ( shapes.length > 0 ) output.shapes = shapes;\r\n\t\t\t if ( skeletons.length > 0 ) output.skeletons = skeletons;\r\n\t\t\t if ( animations.length > 0 ) output.animations = animations;\r\n\t\t\t if ( nodes.length > 0 ) output.nodes = nodes;\r\n \r\n\t\t }\r\n \r\n\t\t output.object = object;\r\n \r\n\t\t return output;\r\n \r\n\t\t // extract data from the cache hash\r\n\t\t // remove metadata on each item\r\n\t\t // and return as array\r\n\t\t function extractFromCache( cache ) {\r\n \r\n\t\t\t const values = [];\r\n\t\t\t for ( const key in cache ) {\r\n \r\n\t\t\t\t const data = cache[ key ];\r\n\t\t\t\t delete data.metadata;\r\n\t\t\t\t values.push( data );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return values;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t clone( recursive ) {\r\n \r\n\t\t return new this.constructor().copy( this, recursive );\r\n \r\n\t }\r\n \r\n\t copy( source, recursive = true ) {\r\n \r\n\t\t this.name = source.name;\r\n \r\n\t\t this.up.copy( source.up );\r\n \r\n\t\t this.position.copy( source.position );\r\n\t\t this.rotation.order = source.rotation.order;\r\n\t\t this.quaternion.copy( source.quaternion );\r\n\t\t this.scale.copy( source.scale );\r\n \r\n\t\t this.matrix.copy( source.matrix );\r\n\t\t this.matrixWorld.copy( source.matrixWorld );\r\n \r\n\t\t this.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n \r\n\t\t this.layers.mask = source.layers.mask;\r\n\t\t this.visible = source.visible;\r\n \r\n\t\t this.castShadow = source.castShadow;\r\n\t\t this.receiveShadow = source.receiveShadow;\r\n \r\n\t\t this.frustumCulled = source.frustumCulled;\r\n\t\t this.renderOrder = source.renderOrder;\r\n \r\n\t\t this.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n \r\n\t\t if ( recursive === true ) {\r\n \r\n\t\t\t for ( let i = 0; i < source.children.length; i ++ ) {\r\n \r\n\t\t\t\t const child = source.children[ i ];\r\n\t\t\t\t this.add( child.clone() );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Object3D.DefaultUp = new Vector3( 0, 1, 0 );\r\n Object3D.DefaultMatrixAutoUpdate = true;\r\n \r\n Object3D.prototype.isObject3D = true;\r\n \r\n const _v0$1 = /*@__PURE__*/ new Vector3();\r\n const _v1$3 = /*@__PURE__*/ new Vector3();\r\n const _v2$2 = /*@__PURE__*/ new Vector3();\r\n const _v3$1 = /*@__PURE__*/ new Vector3();\r\n \r\n const _vab = /*@__PURE__*/ new Vector3();\r\n const _vac = /*@__PURE__*/ new Vector3();\r\n const _vbc = /*@__PURE__*/ new Vector3();\r\n const _vap = /*@__PURE__*/ new Vector3();\r\n const _vbp = /*@__PURE__*/ new Vector3();\r\n const _vcp = /*@__PURE__*/ new Vector3();\r\n \r\n class Triangle {\r\n \r\n\t constructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\r\n \r\n\t\t this.a = a;\r\n\t\t this.b = b;\r\n\t\t this.c = c;\r\n \r\n\t }\r\n \r\n\t static getNormal( a, b, c, target ) {\r\n \r\n\t\t target.subVectors( c, b );\r\n\t\t _v0$1.subVectors( a, b );\r\n\t\t target.cross( _v0$1 );\r\n \r\n\t\t const targetLengthSq = target.lengthSq();\r\n\t\t if ( targetLengthSq > 0 ) {\r\n \r\n\t\t\t return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n \r\n\t\t }\r\n \r\n\t\t return target.set( 0, 0, 0 );\r\n \r\n\t }\r\n \r\n\t // static/instance method to calculate barycentric coordinates\r\n\t // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\t static getBarycoord( point, a, b, c, target ) {\r\n \r\n\t\t _v0$1.subVectors( c, a );\r\n\t\t _v1$3.subVectors( b, a );\r\n\t\t _v2$2.subVectors( point, a );\r\n \r\n\t\t const dot00 = _v0$1.dot( _v0$1 );\r\n\t\t const dot01 = _v0$1.dot( _v1$3 );\r\n\t\t const dot02 = _v0$1.dot( _v2$2 );\r\n\t\t const dot11 = _v1$3.dot( _v1$3 );\r\n\t\t const dot12 = _v1$3.dot( _v2$2 );\r\n \r\n\t\t const denom = ( dot00 * dot11 - dot01 * dot01 );\r\n \r\n\t\t // collinear or singular triangle\r\n\t\t if ( denom === 0 ) {\r\n \r\n\t\t\t // arbitrary location outside of triangle?\r\n\t\t\t // not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t return target.set( - 2, - 1, - 1 );\r\n \r\n\t\t }\r\n \r\n\t\t const invDenom = 1 / denom;\r\n\t\t const u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t const v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n \r\n\t\t // barycentric coordinates must always sum to 1\r\n\t\t return target.set( 1 - u - v, v, u );\r\n \r\n\t }\r\n \r\n\t static containsPoint( point, a, b, c ) {\r\n \r\n\t\t this.getBarycoord( point, a, b, c, _v3$1 );\r\n \r\n\t\t return ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\r\n \r\n\t }\r\n \r\n\t static getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\r\n \r\n\t\t this.getBarycoord( point, p1, p2, p3, _v3$1 );\r\n \r\n\t\t target.set( 0, 0 );\r\n\t\t target.addScaledVector( uv1, _v3$1.x );\r\n\t\t target.addScaledVector( uv2, _v3$1.y );\r\n\t\t target.addScaledVector( uv3, _v3$1.z );\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t static isFrontFacing( a, b, c, direction ) {\r\n \r\n\t\t _v0$1.subVectors( c, b );\r\n\t\t _v1$3.subVectors( a, b );\r\n \r\n\t\t // strictly front facing\r\n\t\t return ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\r\n \r\n\t }\r\n \r\n\t set( a, b, c ) {\r\n \r\n\t\t this.a.copy( a );\r\n\t\t this.b.copy( b );\r\n\t\t this.c.copy( c );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromPointsAndIndices( points, i0, i1, i2 ) {\r\n \r\n\t\t this.a.copy( points[ i0 ] );\r\n\t\t this.b.copy( points[ i1 ] );\r\n\t\t this.c.copy( points[ i2 ] );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromAttributeAndIndices( attribute, i0, i1, i2 ) {\r\n \r\n\t\t this.a.fromBufferAttribute( attribute, i0 );\r\n\t\t this.b.fromBufferAttribute( attribute, i1 );\r\n\t\t this.c.fromBufferAttribute( attribute, i2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( triangle ) {\r\n \r\n\t\t this.a.copy( triangle.a );\r\n\t\t this.b.copy( triangle.b );\r\n\t\t this.c.copy( triangle.c );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getArea() {\r\n \r\n\t\t _v0$1.subVectors( this.c, this.b );\r\n\t\t _v1$3.subVectors( this.a, this.b );\r\n \r\n\t\t return _v0$1.cross( _v1$3 ).length() * 0.5;\r\n \r\n\t }\r\n \r\n\t getMidpoint( target ) {\r\n \r\n\t\t return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n \r\n\t }\r\n \r\n\t getNormal( target ) {\r\n \r\n\t\t return Triangle.getNormal( this.a, this.b, this.c, target );\r\n \r\n\t }\r\n \r\n\t getPlane( target ) {\r\n \r\n\t\t return target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n \r\n\t }\r\n \r\n\t getBarycoord( point, target ) {\r\n \r\n\t\t return Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n \r\n\t }\r\n \r\n\t getUV( point, uv1, uv2, uv3, target ) {\r\n \r\n\t\t return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\r\n \r\n\t }\r\n \r\n\t containsPoint( point ) {\r\n \r\n\t\t return Triangle.containsPoint( point, this.a, this.b, this.c );\r\n \r\n\t }\r\n \r\n\t isFrontFacing( direction ) {\r\n \r\n\t\t return Triangle.isFrontFacing( this.a, this.b, this.c, direction );\r\n \r\n\t }\r\n \r\n\t intersectsBox( box ) {\r\n \r\n\t\t return box.intersectsTriangle( this );\r\n \r\n\t }\r\n \r\n\t closestPointToPoint( p, target ) {\r\n \r\n\t\t const a = this.a, b = this.b, c = this.c;\r\n\t\t let v, w;\r\n \r\n\t\t // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t // under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t // basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t // the point lies in with the minimum amount of redundant computation.\r\n \r\n\t\t _vab.subVectors( b, a );\r\n\t\t _vac.subVectors( c, a );\r\n\t\t _vap.subVectors( p, a );\r\n\t\t const d1 = _vab.dot( _vap );\r\n\t\t const d2 = _vac.dot( _vap );\r\n\t\t if ( d1 <= 0 && d2 <= 0 ) {\r\n \r\n\t\t\t // vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\t return target.copy( a );\r\n \r\n\t\t }\r\n \r\n\t\t _vbp.subVectors( p, b );\r\n\t\t const d3 = _vab.dot( _vbp );\r\n\t\t const d4 = _vac.dot( _vbp );\r\n\t\t if ( d3 >= 0 && d4 <= d3 ) {\r\n \r\n\t\t\t // vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\t return target.copy( b );\r\n \r\n\t\t }\r\n \r\n\t\t const vc = d1 * d4 - d3 * d2;\r\n\t\t if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n \r\n\t\t\t v = d1 / ( d1 - d3 );\r\n\t\t\t // edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\t return target.copy( a ).addScaledVector( _vab, v );\r\n \r\n\t\t }\r\n \r\n\t\t _vcp.subVectors( p, c );\r\n\t\t const d5 = _vab.dot( _vcp );\r\n\t\t const d6 = _vac.dot( _vcp );\r\n\t\t if ( d6 >= 0 && d5 <= d6 ) {\r\n \r\n\t\t\t // vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\t return target.copy( c );\r\n \r\n\t\t }\r\n \r\n\t\t const vb = d5 * d2 - d1 * d6;\r\n\t\t if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n \r\n\t\t\t w = d2 / ( d2 - d6 );\r\n\t\t\t // edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\t return target.copy( a ).addScaledVector( _vac, w );\r\n \r\n\t\t }\r\n \r\n\t\t const va = d3 * d6 - d5 * d4;\r\n\t\t if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n \r\n\t\t\t _vbc.subVectors( c, b );\r\n\t\t\t w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t // edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\t return target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\r\n \r\n\t\t }\r\n \r\n\t\t // face region\r\n\t\t const denom = 1 / ( va + vb + vc );\r\n\t\t // u = va * denom\r\n\t\t v = vb * denom;\r\n\t\t w = vc * denom;\r\n \r\n\t\t return target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\r\n \r\n\t }\r\n \r\n\t equals( triangle ) {\r\n \r\n\t\t return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n \r\n\t }\r\n \r\n }\r\n \r\n let materialId = 0;\r\n \r\n class Material extends EventDispatcher {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t Object.defineProperty( this, 'id', { value: materialId ++ } );\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t this.name = '';\r\n\t\t this.type = 'Material';\r\n \r\n\t\t this.fog = true;\r\n \r\n\t\t this.blending = NormalBlending;\r\n\t\t this.side = FrontSide;\r\n\t\t this.vertexColors = false;\r\n \r\n\t\t this.opacity = 1;\r\n\t\t this.transparent = false;\r\n \r\n\t\t this.blendSrc = SrcAlphaFactor;\r\n\t\t this.blendDst = OneMinusSrcAlphaFactor;\r\n\t\t this.blendEquation = AddEquation;\r\n\t\t this.blendSrcAlpha = null;\r\n\t\t this.blendDstAlpha = null;\r\n\t\t this.blendEquationAlpha = null;\r\n \r\n\t\t this.depthFunc = LessEqualDepth;\r\n\t\t this.depthTest = true;\r\n\t\t this.depthWrite = true;\r\n \r\n\t\t this.stencilWriteMask = 0xff;\r\n\t\t this.stencilFunc = AlwaysStencilFunc;\r\n\t\t this.stencilRef = 0;\r\n\t\t this.stencilFuncMask = 0xff;\r\n\t\t this.stencilFail = KeepStencilOp;\r\n\t\t this.stencilZFail = KeepStencilOp;\r\n\t\t this.stencilZPass = KeepStencilOp;\r\n\t\t this.stencilWrite = false;\r\n \r\n\t\t this.clippingPlanes = null;\r\n\t\t this.clipIntersection = false;\r\n\t\t this.clipShadows = false;\r\n \r\n\t\t this.shadowSide = null;\r\n \r\n\t\t this.colorWrite = true;\r\n \r\n\t\t this.precision = null; // override the renderer's default precision for this material\r\n \r\n\t\t this.polygonOffset = false;\r\n\t\t this.polygonOffsetFactor = 0;\r\n\t\t this.polygonOffsetUnits = 0;\r\n \r\n\t\t this.dithering = false;\r\n \r\n\t\t this.alphaToCoverage = false;\r\n\t\t this.premultipliedAlpha = false;\r\n \r\n\t\t this.visible = true;\r\n \r\n\t\t this.toneMapped = true;\r\n \r\n\t\t this.userData = {};\r\n \r\n\t\t this.version = 0;\r\n \r\n\t\t this._alphaTest = 0;\r\n \r\n\t }\r\n \r\n\t get alphaTest() {\r\n \r\n\t\t return this._alphaTest;\r\n \r\n\t }\r\n \r\n\t set alphaTest( value ) {\r\n \r\n\t\t if ( this._alphaTest > 0 !== value > 0 ) {\r\n \r\n\t\t\t this.version ++;\r\n \r\n\t\t }\r\n \r\n\t\t this._alphaTest = value;\r\n \r\n\t }\r\n \r\n\t onBuild( /* shaderobject, renderer */ ) {}\r\n \r\n\t onBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\r\n \r\n\t onBeforeCompile( /* shaderobject, renderer */ ) {}\r\n \r\n\t customProgramCacheKey() {\r\n \r\n\t\t return this.onBeforeCompile.toString();\r\n \r\n\t }\r\n \r\n\t setValues( values ) {\r\n \r\n\t\t if ( values === undefined ) return;\r\n \r\n\t\t for ( const key in values ) {\r\n \r\n\t\t\t const newValue = values[ key ];\r\n \r\n\t\t\t if ( newValue === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.Material: \\'' + key + '\\' parameter is undefined.' );\r\n\t\t\t\t continue;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // for backward compatability if shading is set in the constructor\r\n\t\t\t if ( key === 'shading' ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t\t this.flatShading = ( newValue === FlatShading ) ? true : false;\r\n\t\t\t\t continue;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const currentValue = this[ key ];\r\n \r\n\t\t\t if ( currentValue === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.' );\r\n\t\t\t\t continue;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( currentValue && currentValue.isColor ) {\r\n \r\n\t\t\t\t currentValue.set( newValue );\r\n \r\n\t\t\t } else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\r\n \r\n\t\t\t\t currentValue.copy( newValue );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t this[ key ] = newValue;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n \r\n\t\t if ( isRootObject ) {\r\n \r\n\t\t\t meta = {\r\n\t\t\t\t textures: {},\r\n\t\t\t\t images: {}\r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t\t const data = {\r\n\t\t\t metadata: {\r\n\t\t\t\t version: 4.5,\r\n\t\t\t\t type: 'Material',\r\n\t\t\t\t generator: 'Material.toJSON'\r\n\t\t\t }\r\n\t\t };\r\n \r\n\t\t // standard Material serialization\r\n\t\t data.uuid = this.uuid;\r\n\t\t data.type = this.type;\r\n \r\n\t\t if ( this.name !== '' ) data.name = this.name;\r\n \r\n\t\t if ( this.color && this.color.isColor ) data.color = this.color.getHex();\r\n \r\n\t\t if ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n\t\t if ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n \r\n\t\t if ( this.sheen !== undefined ) data.sheen = this.sheen;\r\n\t\t if ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\r\n\t\t if ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\r\n\t\t if ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\r\n\t\t if ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\r\n \r\n\t\t if ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\r\n\t\t if ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\r\n\t\t if ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\r\n\t\t if ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\t if ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\r\n\t\t if ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\r\n \r\n\t\t if ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\r\n \r\n\t\t\t data.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\r\n \r\n\t\t\t data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\r\n \r\n\t\t\t data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\r\n\t\t\t data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t if ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\r\n\t\t if ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n \r\n\t\t if ( this.lightMap && this.lightMap.isTexture ) {\r\n \r\n\t\t\t data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\t data.lightMapIntensity = this.lightMapIntensity;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.aoMap && this.aoMap.isTexture ) {\r\n \r\n\t\t\t data.aoMap = this.aoMap.toJSON( meta ).uuid;\r\n\t\t\t data.aoMapIntensity = this.aoMapIntensity;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.bumpMap && this.bumpMap.isTexture ) {\r\n \r\n\t\t\t data.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t data.bumpScale = this.bumpScale;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.normalMap && this.normalMap.isTexture ) {\r\n \r\n\t\t\t data.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t data.normalMapType = this.normalMapType;\r\n\t\t\t data.normalScale = this.normalScale.toArray();\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.displacementMap && this.displacementMap.isTexture ) {\r\n \r\n\t\t\t data.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t data.displacementScale = this.displacementScale;\r\n\t\t\t data.displacementBias = this.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\t if ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n \r\n\t\t if ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\t if ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t if ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\r\n\t\t if ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\r\n \r\n\t\t if ( this.envMap && this.envMap.isTexture ) {\r\n \r\n\t\t\t data.envMap = this.envMap.toJSON( meta ).uuid;\r\n \r\n\t\t\t if ( this.combine !== undefined ) data.combine = this.combine;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\r\n\t\t if ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\r\n\t\t if ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\r\n \r\n\t\t if ( this.gradientMap && this.gradientMap.isTexture ) {\r\n \r\n\t\t\t data.gradientMap = this.gradientMap.toJSON( meta ).uuid;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.transmission !== undefined ) data.transmission = this.transmission;\r\n\t\t if ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\r\n\t\t if ( this.thickness !== undefined ) data.thickness = this.thickness;\r\n\t\t if ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\r\n\t\t if ( this.attenuationDistance !== undefined ) data.attenuationDistance = this.attenuationDistance;\r\n\t\t if ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\r\n \r\n\t\t if ( this.size !== undefined ) data.size = this.size;\r\n\t\t if ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\r\n\t\t if ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n \r\n\t\t if ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n\t\t if ( this.side !== FrontSide ) data.side = this.side;\r\n\t\t if ( this.vertexColors ) data.vertexColors = true;\r\n \r\n\t\t if ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t if ( this.transparent === true ) data.transparent = this.transparent;\r\n \r\n\t\t data.depthFunc = this.depthFunc;\r\n\t\t data.depthTest = this.depthTest;\r\n\t\t data.depthWrite = this.depthWrite;\r\n\t\t data.colorWrite = this.colorWrite;\r\n \r\n\t\t data.stencilWrite = this.stencilWrite;\r\n\t\t data.stencilWriteMask = this.stencilWriteMask;\r\n\t\t data.stencilFunc = this.stencilFunc;\r\n\t\t data.stencilRef = this.stencilRef;\r\n\t\t data.stencilFuncMask = this.stencilFuncMask;\r\n\t\t data.stencilFail = this.stencilFail;\r\n\t\t data.stencilZFail = this.stencilZFail;\r\n\t\t data.stencilZPass = this.stencilZPass;\r\n \r\n\t\t // rotation (SpriteMaterial)\r\n\t\t if ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\r\n \r\n\t\t if ( this.polygonOffset === true ) data.polygonOffset = true;\r\n\t\t if ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\t if ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n \r\n\t\t if ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\r\n\t\t if ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\r\n\t\t if ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\r\n\t\t if ( this.scale !== undefined ) data.scale = this.scale;\r\n \r\n\t\t if ( this.dithering === true ) data.dithering = true;\r\n \r\n\t\t if ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t if ( this.alphaToCoverage === true ) data.alphaToCoverage = this.alphaToCoverage;\r\n\t\t if ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n \r\n\t\t if ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t if ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\t if ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n\t\t if ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n \r\n\t\t if ( this.flatShading === true ) data.flatShading = this.flatShading;\r\n \r\n\t\t if ( this.visible === false ) data.visible = false;\r\n \r\n\t\t if ( this.toneMapped === false ) data.toneMapped = false;\r\n \r\n\t\t if ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n \r\n\t\t // TODO: Copied from Object3D.toJSON\r\n \r\n\t\t function extractFromCache( cache ) {\r\n \r\n\t\t\t const values = [];\r\n \r\n\t\t\t for ( const key in cache ) {\r\n \r\n\t\t\t\t const data = cache[ key ];\r\n\t\t\t\t delete data.metadata;\r\n\t\t\t\t values.push( data );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return values;\r\n \r\n\t\t }\r\n \r\n\t\t if ( isRootObject ) {\r\n \r\n\t\t\t const textures = extractFromCache( meta.textures );\r\n\t\t\t const images = extractFromCache( meta.images );\r\n \r\n\t\t\t if ( textures.length > 0 ) data.textures = textures;\r\n\t\t\t if ( images.length > 0 ) data.images = images;\r\n \r\n\t\t }\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.name = source.name;\r\n \r\n\t\t this.fog = source.fog;\r\n \r\n\t\t this.blending = source.blending;\r\n\t\t this.side = source.side;\r\n\t\t this.vertexColors = source.vertexColors;\r\n \r\n\t\t this.opacity = source.opacity;\r\n\t\t this.transparent = source.transparent;\r\n \r\n\t\t this.blendSrc = source.blendSrc;\r\n\t\t this.blendDst = source.blendDst;\r\n\t\t this.blendEquation = source.blendEquation;\r\n\t\t this.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t this.blendDstAlpha = source.blendDstAlpha;\r\n\t\t this.blendEquationAlpha = source.blendEquationAlpha;\r\n \r\n\t\t this.depthFunc = source.depthFunc;\r\n\t\t this.depthTest = source.depthTest;\r\n\t\t this.depthWrite = source.depthWrite;\r\n \r\n\t\t this.stencilWriteMask = source.stencilWriteMask;\r\n\t\t this.stencilFunc = source.stencilFunc;\r\n\t\t this.stencilRef = source.stencilRef;\r\n\t\t this.stencilFuncMask = source.stencilFuncMask;\r\n\t\t this.stencilFail = source.stencilFail;\r\n\t\t this.stencilZFail = source.stencilZFail;\r\n\t\t this.stencilZPass = source.stencilZPass;\r\n\t\t this.stencilWrite = source.stencilWrite;\r\n \r\n\t\t const srcPlanes = source.clippingPlanes;\r\n\t\t let dstPlanes = null;\r\n \r\n\t\t if ( srcPlanes !== null ) {\r\n \r\n\t\t\t const n = srcPlanes.length;\r\n\t\t\t dstPlanes = new Array( n );\r\n \r\n\t\t\t for ( let i = 0; i !== n; ++ i ) {\r\n \r\n\t\t\t\t dstPlanes[ i ] = srcPlanes[ i ].clone();\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t this.clippingPlanes = dstPlanes;\r\n\t\t this.clipIntersection = source.clipIntersection;\r\n\t\t this.clipShadows = source.clipShadows;\r\n \r\n\t\t this.shadowSide = source.shadowSide;\r\n \r\n\t\t this.colorWrite = source.colorWrite;\r\n \r\n\t\t this.precision = source.precision;\r\n \r\n\t\t this.polygonOffset = source.polygonOffset;\r\n\t\t this.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t this.polygonOffsetUnits = source.polygonOffsetUnits;\r\n \r\n\t\t this.dithering = source.dithering;\r\n \r\n\t\t this.alphaTest = source.alphaTest;\r\n\t\t this.alphaToCoverage = source.alphaToCoverage;\r\n\t\t this.premultipliedAlpha = source.premultipliedAlpha;\r\n \r\n\t\t this.visible = source.visible;\r\n \r\n\t\t this.toneMapped = source.toneMapped;\r\n \r\n\t\t this.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.dispatchEvent( { type: 'dispose' } );\r\n \r\n\t }\r\n \r\n\t set needsUpdate( value ) {\r\n \r\n\t\t if ( value === true ) this.version ++;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Material.prototype.isMaterial = true;\r\n \r\n Material.fromType = function ( /*type*/ ) {\r\n \r\n\t // TODO: Behavior added in Materials.js\r\n \r\n\t return null;\r\n \r\n };\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  opacity: <float>,\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *\r\n  *  lightMap: new THREE.Texture( <Image> ),\r\n  *  lightMapIntensity: <float>\r\n  *\r\n  *  aoMap: new THREE.Texture( <Image> ),\r\n  *  aoMapIntensity: <float>\r\n  *\r\n  *  specularMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n  *  combine: THREE.Multiply,\r\n  *  reflectivity: <float>,\r\n  *  refractionRatio: <float>,\r\n  *\r\n  *  depthTest: <bool>,\r\n  *  depthWrite: <bool>,\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>,\r\n  * }\r\n  */\r\n \r\n class MeshBasicMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'MeshBasicMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff ); // emissive\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.lightMap = null;\r\n\t\t this.lightMapIntensity = 1.0;\r\n \r\n\t\t this.aoMap = null;\r\n\t\t this.aoMapIntensity = 1.0;\r\n \r\n\t\t this.specularMap = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.envMap = null;\r\n\t\t this.combine = MultiplyOperation;\r\n\t\t this.reflectivity = 1;\r\n\t\t this.refractionRatio = 0.98;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n\t\t this.wireframeLinecap = 'round';\r\n\t\t this.wireframeLinejoin = 'round';\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.lightMap = source.lightMap;\r\n\t\t this.lightMapIntensity = source.lightMapIntensity;\r\n \r\n\t\t this.aoMap = source.aoMap;\r\n\t\t this.aoMapIntensity = source.aoMapIntensity;\r\n \r\n\t\t this.specularMap = source.specularMap;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.envMap = source.envMap;\r\n\t\t this.combine = source.combine;\r\n\t\t this.reflectivity = source.reflectivity;\r\n\t\t this.refractionRatio = source.refractionRatio;\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t this.wireframeLinecap = source.wireframeLinecap;\r\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n \r\n const _vector$9 = /*@__PURE__*/ new Vector3();\r\n const _vector2$1 = /*@__PURE__*/ new Vector2();\r\n \r\n class BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t if ( Array.isArray( array ) ) {\r\n \r\n\t\t\t throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n \r\n\t\t }\r\n \r\n\t\t this.name = '';\r\n \r\n\t\t this.array = array;\r\n\t\t this.itemSize = itemSize;\r\n\t\t this.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\t this.normalized = normalized === true;\r\n \r\n\t\t this.usage = StaticDrawUsage;\r\n\t\t this.updateRange = { offset: 0, count: - 1 };\r\n \r\n\t\t this.version = 0;\r\n \r\n\t }\r\n \r\n\t onUploadCallback() {}\r\n \r\n\t set needsUpdate( value ) {\r\n \r\n\t\t if ( value === true ) this.version ++;\r\n \r\n\t }\r\n \r\n\t setUsage( value ) {\r\n \r\n\t\t this.usage = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.name = source.name;\r\n\t\t this.array = new source.array.constructor( source.array );\r\n\t\t this.itemSize = source.itemSize;\r\n\t\t this.count = source.count;\r\n\t\t this.normalized = source.normalized;\r\n \r\n\t\t this.usage = source.usage;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyAt( index1, attribute, index2 ) {\r\n \r\n\t\t index1 *= this.itemSize;\r\n\t\t index2 *= attribute.itemSize;\r\n \r\n\t\t for ( let i = 0, l = this.itemSize; i < l; i ++ ) {\r\n \r\n\t\t\t this.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyArray( array ) {\r\n \r\n\t\t this.array.set( array );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyColorsArray( colors ) {\r\n \r\n\t\t const array = this.array;\r\n\t\t let offset = 0;\r\n \r\n\t\t for ( let i = 0, l = colors.length; i < l; i ++ ) {\r\n \r\n\t\t\t let color = colors[ i ];\r\n \r\n\t\t\t if ( color === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t color = new Color();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t array[ offset ++ ] = color.r;\r\n\t\t\t array[ offset ++ ] = color.g;\r\n\t\t\t array[ offset ++ ] = color.b;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyVector2sArray( vectors ) {\r\n \r\n\t\t const array = this.array;\r\n\t\t let offset = 0;\r\n \r\n\t\t for ( let i = 0, l = vectors.length; i < l; i ++ ) {\r\n \r\n\t\t\t let vector = vectors[ i ];\r\n \r\n\t\t\t if ( vector === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t vector = new Vector2();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t array[ offset ++ ] = vector.x;\r\n\t\t\t array[ offset ++ ] = vector.y;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyVector3sArray( vectors ) {\r\n \r\n\t\t const array = this.array;\r\n\t\t let offset = 0;\r\n \r\n\t\t for ( let i = 0, l = vectors.length; i < l; i ++ ) {\r\n \r\n\t\t\t let vector = vectors[ i ];\r\n \r\n\t\t\t if ( vector === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t vector = new Vector3();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t array[ offset ++ ] = vector.x;\r\n\t\t\t array[ offset ++ ] = vector.y;\r\n\t\t\t array[ offset ++ ] = vector.z;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyVector4sArray( vectors ) {\r\n \r\n\t\t const array = this.array;\r\n\t\t let offset = 0;\r\n \r\n\t\t for ( let i = 0, l = vectors.length; i < l; i ++ ) {\r\n \r\n\t\t\t let vector = vectors[ i ];\r\n \r\n\t\t\t if ( vector === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t vector = new Vector4();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t array[ offset ++ ] = vector.x;\r\n\t\t\t array[ offset ++ ] = vector.y;\r\n\t\t\t array[ offset ++ ] = vector.z;\r\n\t\t\t array[ offset ++ ] = vector.w;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyMatrix3( m ) {\r\n \r\n\t\t if ( this.itemSize === 2 ) {\r\n \r\n\t\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\r\n \r\n\t\t\t\t _vector2$1.fromBufferAttribute( this, i );\r\n\t\t\t\t _vector2$1.applyMatrix3( m );\r\n \r\n\t\t\t\t this.setXY( i, _vector2$1.x, _vector2$1.y );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( this.itemSize === 3 ) {\r\n \r\n\t\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\r\n \r\n\t\t\t\t _vector$9.fromBufferAttribute( this, i );\r\n\t\t\t\t _vector$9.applyMatrix3( m );\r\n \r\n\t\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyMatrix4( m ) {\r\n \r\n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\r\n \r\n\t\t\t _vector$9.x = this.getX( i );\r\n\t\t\t _vector$9.y = this.getY( i );\r\n\t\t\t _vector$9.z = this.getZ( i );\r\n \r\n\t\t\t _vector$9.applyMatrix4( m );\r\n \r\n\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyNormalMatrix( m ) {\r\n \r\n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\r\n \r\n\t\t\t _vector$9.x = this.getX( i );\r\n\t\t\t _vector$9.y = this.getY( i );\r\n\t\t\t _vector$9.z = this.getZ( i );\r\n \r\n\t\t\t _vector$9.applyNormalMatrix( m );\r\n \r\n\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t transformDirection( m ) {\r\n \r\n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\r\n \r\n\t\t\t _vector$9.x = this.getX( i );\r\n\t\t\t _vector$9.y = this.getY( i );\r\n\t\t\t _vector$9.z = this.getZ( i );\r\n \r\n\t\t\t _vector$9.transformDirection( m );\r\n \r\n\t\t\t this.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t set( value, offset = 0 ) {\r\n \r\n\t\t this.array.set( value, offset );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getX( index ) {\r\n \r\n\t\t return this.array[ index * this.itemSize ];\r\n \r\n\t }\r\n \r\n\t setX( index, x ) {\r\n \r\n\t\t this.array[ index * this.itemSize ] = x;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getY( index ) {\r\n \r\n\t\t return this.array[ index * this.itemSize + 1 ];\r\n \r\n\t }\r\n \r\n\t setY( index, y ) {\r\n \r\n\t\t this.array[ index * this.itemSize + 1 ] = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getZ( index ) {\r\n \r\n\t\t return this.array[ index * this.itemSize + 2 ];\r\n \r\n\t }\r\n \r\n\t setZ( index, z ) {\r\n \r\n\t\t this.array[ index * this.itemSize + 2 ] = z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getW( index ) {\r\n \r\n\t\t return this.array[ index * this.itemSize + 3 ];\r\n \r\n\t }\r\n \r\n\t setW( index, w ) {\r\n \r\n\t\t this.array[ index * this.itemSize + 3 ] = w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setXY( index, x, y ) {\r\n \r\n\t\t index *= this.itemSize;\r\n \r\n\t\t this.array[ index + 0 ] = x;\r\n\t\t this.array[ index + 1 ] = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setXYZ( index, x, y, z ) {\r\n \r\n\t\t index *= this.itemSize;\r\n \r\n\t\t this.array[ index + 0 ] = x;\r\n\t\t this.array[ index + 1 ] = y;\r\n\t\t this.array[ index + 2 ] = z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setXYZW( index, x, y, z, w ) {\r\n \r\n\t\t index *= this.itemSize;\r\n \r\n\t\t this.array[ index + 0 ] = x;\r\n\t\t this.array[ index + 1 ] = y;\r\n\t\t this.array[ index + 2 ] = z;\r\n\t\t this.array[ index + 3 ] = w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t onUpload( callback ) {\r\n \r\n\t\t this.onUploadCallback = callback;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this.array, this.itemSize ).copy( this );\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = {\r\n\t\t\t itemSize: this.itemSize,\r\n\t\t\t type: this.array.constructor.name,\r\n\t\t\t array: Array.prototype.slice.call( this.array ),\r\n\t\t\t normalized: this.normalized\r\n\t\t };\r\n \r\n\t\t if ( this.name !== '' ) data.name = this.name;\r\n\t\t if ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\r\n\t\t if ( this.updateRange.offset !== 0 || this.updateRange.count !== - 1 ) data.updateRange = this.updateRange;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n BufferAttribute.prototype.isBufferAttribute = true;\r\n \r\n //\r\n \r\n class Int8BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Int8Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Uint8BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Uint8Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Uint8ClampedBufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Uint8ClampedArray( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Int16BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Int16Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Uint16BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Uint16Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Int32BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Int32Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Uint32BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Uint32Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Float16BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Uint16Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n Float16BufferAttribute.prototype.isFloat16BufferAttribute = true;\r\n \r\n class Float32BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Float32Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Float64BufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized ) {\r\n \r\n\t\t super( new Float64Array( array ), itemSize, normalized );\r\n \r\n\t }\r\n \r\n }\r\n \r\n let _id$1 = 0;\r\n \r\n const _m1 = /*@__PURE__*/ new Matrix4();\r\n const _obj = /*@__PURE__*/ new Object3D();\r\n const _offset = /*@__PURE__*/ new Vector3();\r\n const _box$1 = /*@__PURE__*/ new Box3();\r\n const _boxMorphTargets = /*@__PURE__*/ new Box3();\r\n const _vector$8 = /*@__PURE__*/ new Vector3();\r\n \r\n class BufferGeometry extends EventDispatcher {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t Object.defineProperty( this, 'id', { value: _id$1 ++ } );\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t this.name = '';\r\n\t\t this.type = 'BufferGeometry';\r\n \r\n\t\t this.index = null;\r\n\t\t this.attributes = {};\r\n \r\n\t\t this.morphAttributes = {};\r\n\t\t this.morphTargetsRelative = false;\r\n \r\n\t\t this.groups = [];\r\n \r\n\t\t this.boundingBox = null;\r\n\t\t this.boundingSphere = null;\r\n \r\n\t\t this.drawRange = { start: 0, count: Infinity };\r\n \r\n\t\t this.userData = {};\r\n \r\n\t }\r\n \r\n\t getIndex() {\r\n \r\n\t\t return this.index;\r\n \r\n\t }\r\n \r\n\t setIndex( index ) {\r\n \r\n\t\t if ( Array.isArray( index ) ) {\r\n \r\n\t\t\t this.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.index = index;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getAttribute( name ) {\r\n \r\n\t\t return this.attributes[ name ];\r\n \r\n\t }\r\n \r\n\t setAttribute( name, attribute ) {\r\n \r\n\t\t this.attributes[ name ] = attribute;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t deleteAttribute( name ) {\r\n \r\n\t\t delete this.attributes[ name ];\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t hasAttribute( name ) {\r\n \r\n\t\t return this.attributes[ name ] !== undefined;\r\n \r\n\t }\r\n \r\n\t addGroup( start, count, materialIndex = 0 ) {\r\n \r\n\t\t this.groups.push( {\r\n \r\n\t\t\t start: start,\r\n\t\t\t count: count,\r\n\t\t\t materialIndex: materialIndex\r\n \r\n\t\t } );\r\n \r\n\t }\r\n \r\n\t clearGroups() {\r\n \r\n\t\t this.groups = [];\r\n \r\n\t }\r\n \r\n\t setDrawRange( start, count ) {\r\n \r\n\t\t this.drawRange.start = start;\r\n\t\t this.drawRange.count = count;\r\n \r\n\t }\r\n \r\n\t applyMatrix4( matrix ) {\r\n \r\n\t\t const position = this.attributes.position;\r\n \r\n\t\t if ( position !== undefined ) {\r\n \r\n\t\t\t position.applyMatrix4( matrix );\r\n \r\n\t\t\t position.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t\t const normal = this.attributes.normal;\r\n \r\n\t\t if ( normal !== undefined ) {\r\n \r\n\t\t\t const normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n \r\n\t\t\t normal.applyNormalMatrix( normalMatrix );\r\n \r\n\t\t\t normal.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t\t const tangent = this.attributes.tangent;\r\n \r\n\t\t if ( tangent !== undefined ) {\r\n \r\n\t\t\t tangent.transformDirection( matrix );\r\n \r\n\t\t\t tangent.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.boundingBox !== null ) {\r\n \r\n\t\t\t this.computeBoundingBox();\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.boundingSphere !== null ) {\r\n \r\n\t\t\t this.computeBoundingSphere();\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyQuaternion( q ) {\r\n \r\n\t\t _m1.makeRotationFromQuaternion( q );\r\n \r\n\t\t this.applyMatrix4( _m1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t rotateX( angle ) {\r\n \r\n\t\t // rotate geometry around world x-axis\r\n \r\n\t\t _m1.makeRotationX( angle );\r\n \r\n\t\t this.applyMatrix4( _m1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t rotateY( angle ) {\r\n \r\n\t\t // rotate geometry around world y-axis\r\n \r\n\t\t _m1.makeRotationY( angle );\r\n \r\n\t\t this.applyMatrix4( _m1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t rotateZ( angle ) {\r\n \r\n\t\t // rotate geometry around world z-axis\r\n \r\n\t\t _m1.makeRotationZ( angle );\r\n \r\n\t\t this.applyMatrix4( _m1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t translate( x, y, z ) {\r\n \r\n\t\t // translate geometry\r\n \r\n\t\t _m1.makeTranslation( x, y, z );\r\n \r\n\t\t this.applyMatrix4( _m1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t scale( x, y, z ) {\r\n \r\n\t\t // scale geometry\r\n \r\n\t\t _m1.makeScale( x, y, z );\r\n \r\n\t\t this.applyMatrix4( _m1 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lookAt( vector ) {\r\n \r\n\t\t _obj.lookAt( vector );\r\n \r\n\t\t _obj.updateMatrix();\r\n \r\n\t\t this.applyMatrix4( _obj.matrix );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t center() {\r\n \r\n\t\t this.computeBoundingBox();\r\n \r\n\t\t this.boundingBox.getCenter( _offset ).negate();\r\n \r\n\t\t this.translate( _offset.x, _offset.y, _offset.z );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromPoints( points ) {\r\n \r\n\t\t const position = [];\r\n \r\n\t\t for ( let i = 0, l = points.length; i < l; i ++ ) {\r\n \r\n\t\t\t const point = points[ i ];\r\n\t\t\t position.push( point.x, point.y, point.z || 0 );\r\n \r\n\t\t }\r\n \r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t computeBoundingBox() {\r\n \r\n\t\t if ( this.boundingBox === null ) {\r\n \r\n\t\t\t this.boundingBox = new Box3();\r\n \r\n\t\t }\r\n \r\n\t\t const position = this.attributes.position;\r\n\t\t const morphAttributesPosition = this.morphAttributes.position;\r\n \r\n\t\t if ( position && position.isGLBufferAttribute ) {\r\n \r\n\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\r\n \r\n\t\t\t this.boundingBox.set(\r\n\t\t\t\t new Vector3( - Infinity, - Infinity, - Infinity ),\r\n\t\t\t\t new Vector3( + Infinity, + Infinity, + Infinity )\r\n\t\t\t );\r\n \r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( position !== undefined ) {\r\n \r\n\t\t\t this.boundingBox.setFromBufferAttribute( position );\r\n \r\n\t\t\t // process morph attributes if present\r\n \r\n\t\t\t if ( morphAttributesPosition ) {\r\n \r\n\t\t\t\t for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t _box$1.setFromBufferAttribute( morphAttribute );\r\n \r\n\t\t\t\t\t if ( this.morphTargetsRelative ) {\r\n \r\n\t\t\t\t\t\t _vector$8.addVectors( this.boundingBox.min, _box$1.min );\r\n\t\t\t\t\t\t this.boundingBox.expandByPoint( _vector$8 );\r\n \r\n\t\t\t\t\t\t _vector$8.addVectors( this.boundingBox.max, _box$1.max );\r\n\t\t\t\t\t\t this.boundingBox.expandByPoint( _vector$8 );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t this.boundingBox.expandByPoint( _box$1.min );\r\n\t\t\t\t\t\t this.boundingBox.expandByPoint( _box$1.max );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.boundingBox.makeEmpty();\r\n \r\n\t\t }\r\n \r\n\t\t if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n \r\n\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t computeBoundingSphere() {\r\n \r\n\t\t if ( this.boundingSphere === null ) {\r\n \r\n\t\t\t this.boundingSphere = new Sphere();\r\n \r\n\t\t }\r\n \r\n\t\t const position = this.attributes.position;\r\n\t\t const morphAttributesPosition = this.morphAttributes.position;\r\n \r\n\t\t if ( position && position.isGLBufferAttribute ) {\r\n \r\n\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\r\n \r\n\t\t\t this.boundingSphere.set( new Vector3(), Infinity );\r\n \r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( position ) {\r\n \r\n\t\t\t // first, find the center of the bounding sphere\r\n \r\n\t\t\t const center = this.boundingSphere.center;\r\n \r\n\t\t\t _box$1.setFromBufferAttribute( position );\r\n \r\n\t\t\t // process morph attributes if present\r\n \r\n\t\t\t if ( morphAttributesPosition ) {\r\n \r\n\t\t\t\t for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t _boxMorphTargets.setFromBufferAttribute( morphAttribute );\r\n \r\n\t\t\t\t\t if ( this.morphTargetsRelative ) {\r\n \r\n\t\t\t\t\t\t _vector$8.addVectors( _box$1.min, _boxMorphTargets.min );\r\n\t\t\t\t\t\t _box$1.expandByPoint( _vector$8 );\r\n \r\n\t\t\t\t\t\t _vector$8.addVectors( _box$1.max, _boxMorphTargets.max );\r\n\t\t\t\t\t\t _box$1.expandByPoint( _vector$8 );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t _box$1.expandByPoint( _boxMorphTargets.min );\r\n\t\t\t\t\t\t _box$1.expandByPoint( _boxMorphTargets.max );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _box$1.getCenter( center );\r\n \r\n\t\t\t // second, try to find a boundingSphere with a radius smaller than the\r\n\t\t\t // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n \r\n\t\t\t let maxRadiusSq = 0;\r\n \r\n\t\t\t for ( let i = 0, il = position.count; i < il; i ++ ) {\r\n \r\n\t\t\t\t _vector$8.fromBufferAttribute( position, i );\r\n \r\n\t\t\t\t maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // process morph attributes if present\r\n \r\n\t\t\t if ( morphAttributesPosition ) {\r\n \r\n\t\t\t\t for ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t const morphTargetsRelative = this.morphTargetsRelative;\r\n \r\n\t\t\t\t\t for ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\r\n \r\n\t\t\t\t\t\t _vector$8.fromBufferAttribute( morphAttribute, j );\r\n \r\n\t\t\t\t\t\t if ( morphTargetsRelative ) {\r\n \r\n\t\t\t\t\t\t\t _offset.fromBufferAttribute( position, j );\r\n\t\t\t\t\t\t\t _vector$8.add( _offset );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n \r\n\t\t\t if ( isNaN( this.boundingSphere.radius ) ) {\r\n \r\n\t\t\t\t console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t computeTangents() {\r\n \r\n\t\t const index = this.index;\r\n\t\t const attributes = this.attributes;\r\n \r\n\t\t // based on http://www.terathon.com/code/tangent.html\r\n\t\t // (per vertex tangents)\r\n \r\n\t\t if ( index === null ||\r\n\t\t\t  attributes.position === undefined ||\r\n\t\t\t  attributes.normal === undefined ||\r\n\t\t\t  attributes.uv === undefined ) {\r\n \r\n\t\t\t console.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t const indices = index.array;\r\n\t\t const positions = attributes.position.array;\r\n\t\t const normals = attributes.normal.array;\r\n\t\t const uvs = attributes.uv.array;\r\n \r\n\t\t const nVertices = positions.length / 3;\r\n \r\n\t\t if ( this.hasAttribute( 'tangent' ) === false ) {\r\n \r\n\t\t\t this.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\r\n \r\n\t\t }\r\n \r\n\t\t const tangents = this.getAttribute( 'tangent' ).array;\r\n \r\n\t\t const tan1 = [], tan2 = [];\r\n \r\n\t\t for ( let i = 0; i < nVertices; i ++ ) {\r\n \r\n\t\t\t tan1[ i ] = new Vector3();\r\n\t\t\t tan2[ i ] = new Vector3();\r\n \r\n\t\t }\r\n \r\n\t\t const vA = new Vector3(),\r\n\t\t\t vB = new Vector3(),\r\n\t\t\t vC = new Vector3(),\r\n \r\n\t\t\t uvA = new Vector2(),\r\n\t\t\t uvB = new Vector2(),\r\n\t\t\t uvC = new Vector2(),\r\n \r\n\t\t\t sdir = new Vector3(),\r\n\t\t\t tdir = new Vector3();\r\n \r\n\t\t function handleTriangle( a, b, c ) {\r\n \r\n\t\t\t vA.fromArray( positions, a * 3 );\r\n\t\t\t vB.fromArray( positions, b * 3 );\r\n\t\t\t vC.fromArray( positions, c * 3 );\r\n \r\n\t\t\t uvA.fromArray( uvs, a * 2 );\r\n\t\t\t uvB.fromArray( uvs, b * 2 );\r\n\t\t\t uvC.fromArray( uvs, c * 2 );\r\n \r\n\t\t\t vB.sub( vA );\r\n\t\t\t vC.sub( vA );\r\n \r\n\t\t\t uvB.sub( uvA );\r\n\t\t\t uvC.sub( uvA );\r\n \r\n\t\t\t const r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\r\n \r\n\t\t\t // silently ignore degenerate uv triangles having coincident or colinear vertices\r\n \r\n\t\t\t if ( ! isFinite( r ) ) return;\r\n \r\n\t\t\t sdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\r\n\t\t\t tdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\r\n \r\n\t\t\t tan1[ a ].add( sdir );\r\n\t\t\t tan1[ b ].add( sdir );\r\n\t\t\t tan1[ c ].add( sdir );\r\n \r\n\t\t\t tan2[ a ].add( tdir );\r\n\t\t\t tan2[ b ].add( tdir );\r\n\t\t\t tan2[ c ].add( tdir );\r\n \r\n\t\t }\r\n \r\n\t\t let groups = this.groups;\r\n \r\n\t\t if ( groups.length === 0 ) {\r\n \r\n\t\t\t groups = [ {\r\n\t\t\t\t start: 0,\r\n\t\t\t\t count: indices.length\r\n\t\t\t } ];\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n \r\n\t\t\t const group = groups[ i ];\r\n \r\n\t\t\t const start = group.start;\r\n\t\t\t const count = group.count;\r\n \r\n\t\t\t for ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n \r\n\t\t\t\t handleTriangle(\r\n\t\t\t\t\t indices[ j + 0 ],\r\n\t\t\t\t\t indices[ j + 1 ],\r\n\t\t\t\t\t indices[ j + 2 ]\r\n\t\t\t\t );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const tmp = new Vector3(), tmp2 = new Vector3();\r\n\t\t const n = new Vector3(), n2 = new Vector3();\r\n \r\n\t\t function handleVertex( v ) {\r\n \r\n\t\t\t n.fromArray( normals, v * 3 );\r\n\t\t\t n2.copy( n );\r\n \r\n\t\t\t const t = tan1[ v ];\r\n \r\n\t\t\t // Gram-Schmidt orthogonalize\r\n \r\n\t\t\t tmp.copy( t );\r\n\t\t\t tmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n \r\n\t\t\t // Calculate handedness\r\n \r\n\t\t\t tmp2.crossVectors( n2, t );\r\n\t\t\t const test = tmp2.dot( tan2[ v ] );\r\n\t\t\t const w = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n \r\n\t\t\t tangents[ v * 4 ] = tmp.x;\r\n\t\t\t tangents[ v * 4 + 1 ] = tmp.y;\r\n\t\t\t tangents[ v * 4 + 2 ] = tmp.z;\r\n\t\t\t tangents[ v * 4 + 3 ] = w;\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n \r\n\t\t\t const group = groups[ i ];\r\n \r\n\t\t\t const start = group.start;\r\n\t\t\t const count = group.count;\r\n \r\n\t\t\t for ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n \r\n\t\t\t\t handleVertex( indices[ j + 0 ] );\r\n\t\t\t\t handleVertex( indices[ j + 1 ] );\r\n\t\t\t\t handleVertex( indices[ j + 2 ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t computeVertexNormals() {\r\n \r\n\t\t const index = this.index;\r\n\t\t const positionAttribute = this.getAttribute( 'position' );\r\n \r\n\t\t if ( positionAttribute !== undefined ) {\r\n \r\n\t\t\t let normalAttribute = this.getAttribute( 'normal' );\r\n \r\n\t\t\t if ( normalAttribute === undefined ) {\r\n \r\n\t\t\t\t normalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\r\n\t\t\t\t this.setAttribute( 'normal', normalAttribute );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // reset existing normals to zero\r\n \r\n\t\t\t\t for ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t normalAttribute.setXYZ( i, 0, 0, 0 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\r\n\t\t\t const nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\r\n\t\t\t const cb = new Vector3(), ab = new Vector3();\r\n \r\n\t\t\t // indexed elements\r\n \r\n\t\t\t if ( index ) {\r\n \r\n\t\t\t\t for ( let i = 0, il = index.count; i < il; i += 3 ) {\r\n \r\n\t\t\t\t\t const vA = index.getX( i + 0 );\r\n\t\t\t\t\t const vB = index.getX( i + 1 );\r\n\t\t\t\t\t const vC = index.getX( i + 2 );\r\n \r\n\t\t\t\t\t pA.fromBufferAttribute( positionAttribute, vA );\r\n\t\t\t\t\t pB.fromBufferAttribute( positionAttribute, vB );\r\n\t\t\t\t\t pC.fromBufferAttribute( positionAttribute, vC );\r\n \r\n\t\t\t\t\t cb.subVectors( pC, pB );\r\n\t\t\t\t\t ab.subVectors( pA, pB );\r\n\t\t\t\t\t cb.cross( ab );\r\n \r\n\t\t\t\t\t nA.fromBufferAttribute( normalAttribute, vA );\r\n\t\t\t\t\t nB.fromBufferAttribute( normalAttribute, vB );\r\n\t\t\t\t\t nC.fromBufferAttribute( normalAttribute, vC );\r\n \r\n\t\t\t\t\t nA.add( cb );\r\n\t\t\t\t\t nB.add( cb );\r\n\t\t\t\t\t nC.add( cb );\r\n \r\n\t\t\t\t\t normalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\r\n\t\t\t\t\t normalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\r\n\t\t\t\t\t normalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // non-indexed elements (unconnected triangle soup)\r\n \r\n\t\t\t\t for ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\r\n \r\n\t\t\t\t\t pA.fromBufferAttribute( positionAttribute, i + 0 );\r\n\t\t\t\t\t pB.fromBufferAttribute( positionAttribute, i + 1 );\r\n\t\t\t\t\t pC.fromBufferAttribute( positionAttribute, i + 2 );\r\n \r\n\t\t\t\t\t cb.subVectors( pC, pB );\r\n\t\t\t\t\t ab.subVectors( pA, pB );\r\n\t\t\t\t\t cb.cross( ab );\r\n \r\n\t\t\t\t\t normalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\r\n\t\t\t\t\t normalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\r\n\t\t\t\t\t normalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.normalizeNormals();\r\n \r\n\t\t\t normalAttribute.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t merge( geometry, offset ) {\r\n \r\n\t\t if ( ! ( geometry && geometry.isBufferGeometry ) ) {\r\n \r\n\t\t\t console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( offset === undefined ) {\r\n \r\n\t\t\t offset = 0;\r\n \r\n\t\t\t console.warn(\r\n\t\t\t\t 'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\r\n\t\t\t\t + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\r\n\t\t\t );\r\n \r\n\t\t }\r\n \r\n\t\t const attributes = this.attributes;\r\n \r\n\t\t for ( const key in attributes ) {\r\n \r\n\t\t\t if ( geometry.attributes[ key ] === undefined ) continue;\r\n \r\n\t\t\t const attribute1 = attributes[ key ];\r\n\t\t\t const attributeArray1 = attribute1.array;\r\n \r\n\t\t\t const attribute2 = geometry.attributes[ key ];\r\n\t\t\t const attributeArray2 = attribute2.array;\r\n \r\n\t\t\t const attributeOffset = attribute2.itemSize * offset;\r\n\t\t\t const length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\r\n \r\n\t\t\t for ( let i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\r\n \r\n\t\t\t\t attributeArray1[ j ] = attributeArray2[ i ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t normalizeNormals() {\r\n \r\n\t\t const normals = this.attributes.normal;\r\n \r\n\t\t for ( let i = 0, il = normals.count; i < il; i ++ ) {\r\n \r\n\t\t\t _vector$8.fromBufferAttribute( normals, i );\r\n \r\n\t\t\t _vector$8.normalize();\r\n \r\n\t\t\t normals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toNonIndexed() {\r\n \r\n\t\t function convertBufferAttribute( attribute, indices ) {\r\n \r\n\t\t\t const array = attribute.array;\r\n\t\t\t const itemSize = attribute.itemSize;\r\n\t\t\t const normalized = attribute.normalized;\r\n \r\n\t\t\t const array2 = new array.constructor( indices.length * itemSize );\r\n \r\n\t\t\t let index = 0, index2 = 0;\r\n \r\n\t\t\t for ( let i = 0, l = indices.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t if ( attribute.isInterleavedBufferAttribute ) {\r\n \r\n\t\t\t\t\t index = indices[ i ] * attribute.data.stride + attribute.offset;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t index = indices[ i ] * itemSize;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t for ( let j = 0; j < itemSize; j ++ ) {\r\n \r\n\t\t\t\t\t array2[ index2 ++ ] = array[ index ++ ];\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return new BufferAttribute( array2, itemSize, normalized );\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t if ( this.index === null ) {\r\n \r\n\t\t\t console.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\r\n\t\t\t return this;\r\n \r\n\t\t }\r\n \r\n\t\t const geometry2 = new BufferGeometry();\r\n \r\n\t\t const indices = this.index.array;\r\n\t\t const attributes = this.attributes;\r\n \r\n\t\t // attributes\r\n \r\n\t\t for ( const name in attributes ) {\r\n \r\n\t\t\t const attribute = attributes[ name ];\r\n \r\n\t\t\t const newAttribute = convertBufferAttribute( attribute, indices );\r\n \r\n\t\t\t geometry2.setAttribute( name, newAttribute );\r\n \r\n\t\t }\r\n \r\n\t\t // morph attributes\r\n \r\n\t\t const morphAttributes = this.morphAttributes;\r\n \r\n\t\t for ( const name in morphAttributes ) {\r\n \r\n\t\t\t const morphArray = [];\r\n\t\t\t const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n \r\n\t\t\t for ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t const attribute = morphAttribute[ i ];\r\n \r\n\t\t\t\t const newAttribute = convertBufferAttribute( attribute, indices );\r\n \r\n\t\t\t\t morphArray.push( newAttribute );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t geometry2.morphAttributes[ name ] = morphArray;\r\n \r\n\t\t }\r\n \r\n\t\t geometry2.morphTargetsRelative = this.morphTargetsRelative;\r\n \r\n\t\t // groups\r\n \r\n\t\t const groups = this.groups;\r\n \r\n\t\t for ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n \r\n\t\t\t const group = groups[ i ];\r\n\t\t\t geometry2.addGroup( group.start, group.count, group.materialIndex );\r\n \r\n\t\t }\r\n \r\n\t\t return geometry2;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = {\r\n\t\t\t metadata: {\r\n\t\t\t\t version: 4.5,\r\n\t\t\t\t type: 'BufferGeometry',\r\n\t\t\t\t generator: 'BufferGeometry.toJSON'\r\n\t\t\t }\r\n\t\t };\r\n \r\n\t\t // standard BufferGeometry serialization\r\n \r\n\t\t data.uuid = this.uuid;\r\n\t\t data.type = this.type;\r\n\t\t if ( this.name !== '' ) data.name = this.name;\r\n\t\t if ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n \r\n\t\t if ( this.parameters !== undefined ) {\r\n \r\n\t\t\t const parameters = this.parameters;\r\n \r\n\t\t\t for ( const key in parameters ) {\r\n \r\n\t\t\t\t if ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return data;\r\n \r\n\t\t }\r\n \r\n\t\t // for simplicity the code assumes attributes are not shared across geometries, see #15811\r\n \r\n\t\t data.data = { attributes: {} };\r\n \r\n\t\t const index = this.index;\r\n \r\n\t\t if ( index !== null ) {\r\n \r\n\t\t\t data.data.index = {\r\n\t\t\t\t type: index.array.constructor.name,\r\n\t\t\t\t array: Array.prototype.slice.call( index.array )\r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t\t const attributes = this.attributes;\r\n \r\n\t\t for ( const key in attributes ) {\r\n \r\n\t\t\t const attribute = attributes[ key ];\r\n \r\n\t\t\t data.data.attributes[ key ] = attribute.toJSON( data.data );\r\n \r\n\t\t }\r\n \r\n\t\t const morphAttributes = {};\r\n\t\t let hasMorphAttributes = false;\r\n \r\n\t\t for ( const key in this.morphAttributes ) {\r\n \r\n\t\t\t const attributeArray = this.morphAttributes[ key ];\r\n \r\n\t\t\t const array = [];\r\n \r\n\t\t\t for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t const attribute = attributeArray[ i ];\r\n \r\n\t\t\t\t array.push( attribute.toJSON( data.data ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( array.length > 0 ) {\r\n \r\n\t\t\t\t morphAttributes[ key ] = array;\r\n \r\n\t\t\t\t hasMorphAttributes = true;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( hasMorphAttributes ) {\r\n \r\n\t\t\t data.data.morphAttributes = morphAttributes;\r\n\t\t\t data.data.morphTargetsRelative = this.morphTargetsRelative;\r\n \r\n\t\t }\r\n \r\n\t\t const groups = this.groups;\r\n \r\n\t\t if ( groups.length > 0 ) {\r\n \r\n\t\t\t data.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n \r\n\t\t }\r\n \r\n\t\t const boundingSphere = this.boundingSphere;\r\n \r\n\t\t if ( boundingSphere !== null ) {\r\n \r\n\t\t\t data.data.boundingSphere = {\r\n\t\t\t\t center: boundingSphere.center.toArray(),\r\n\t\t\t\t radius: boundingSphere.radius\r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t  return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t // reset\r\n \r\n\t\t this.index = null;\r\n\t\t this.attributes = {};\r\n\t\t this.morphAttributes = {};\r\n\t\t this.groups = [];\r\n\t\t this.boundingBox = null;\r\n\t\t this.boundingSphere = null;\r\n \r\n\t\t // used for storing cloned, shared data\r\n \r\n\t\t const data = {};\r\n \r\n\t\t // name\r\n \r\n\t\t this.name = source.name;\r\n \r\n\t\t // index\r\n \r\n\t\t const index = source.index;\r\n \r\n\t\t if ( index !== null ) {\r\n \r\n\t\t\t this.setIndex( index.clone( data ) );\r\n \r\n\t\t }\r\n \r\n\t\t // attributes\r\n \r\n\t\t const attributes = source.attributes;\r\n \r\n\t\t for ( const name in attributes ) {\r\n \r\n\t\t\t const attribute = attributes[ name ];\r\n\t\t\t this.setAttribute( name, attribute.clone( data ) );\r\n \r\n\t\t }\r\n \r\n\t\t // morph attributes\r\n \r\n\t\t const morphAttributes = source.morphAttributes;\r\n \r\n\t\t for ( const name in morphAttributes ) {\r\n \r\n\t\t\t const array = [];\r\n\t\t\t const morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n \r\n\t\t\t for ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t array.push( morphAttribute[ i ].clone( data ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.morphAttributes[ name ] = array;\r\n \r\n\t\t }\r\n \r\n\t\t this.morphTargetsRelative = source.morphTargetsRelative;\r\n \r\n\t\t // groups\r\n \r\n\t\t const groups = source.groups;\r\n \r\n\t\t for ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n \r\n\t\t\t const group = groups[ i ];\r\n\t\t\t this.addGroup( group.start, group.count, group.materialIndex );\r\n \r\n\t\t }\r\n \r\n\t\t // bounding box\r\n \r\n\t\t const boundingBox = source.boundingBox;\r\n \r\n\t\t if ( boundingBox !== null ) {\r\n \r\n\t\t\t this.boundingBox = boundingBox.clone();\r\n \r\n\t\t }\r\n \r\n\t\t // bounding sphere\r\n \r\n\t\t const boundingSphere = source.boundingSphere;\r\n \r\n\t\t if ( boundingSphere !== null ) {\r\n \r\n\t\t\t this.boundingSphere = boundingSphere.clone();\r\n \r\n\t\t }\r\n \r\n\t\t // draw range\r\n \r\n\t\t this.drawRange.start = source.drawRange.start;\r\n\t\t this.drawRange.count = source.drawRange.count;\r\n \r\n\t\t // user data\r\n \r\n\t\t this.userData = source.userData;\r\n \r\n\t\t // geometry generator parameters\r\n \r\n\t\t if ( source.parameters !== undefined ) this.parameters = Object.assign( {}, source.parameters );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.dispatchEvent( { type: 'dispose' } );\r\n \r\n\t }\r\n \r\n }\r\n \r\n BufferGeometry.prototype.isBufferGeometry = true;\r\n \r\n const _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\r\n const _ray$2 = /*@__PURE__*/ new Ray();\r\n const _sphere$3 = /*@__PURE__*/ new Sphere();\r\n \r\n const _vA$1 = /*@__PURE__*/ new Vector3();\r\n const _vB$1 = /*@__PURE__*/ new Vector3();\r\n const _vC$1 = /*@__PURE__*/ new Vector3();\r\n \r\n const _tempA = /*@__PURE__*/ new Vector3();\r\n const _tempB = /*@__PURE__*/ new Vector3();\r\n const _tempC = /*@__PURE__*/ new Vector3();\r\n \r\n const _morphA = /*@__PURE__*/ new Vector3();\r\n const _morphB = /*@__PURE__*/ new Vector3();\r\n const _morphC = /*@__PURE__*/ new Vector3();\r\n \r\n const _uvA$1 = /*@__PURE__*/ new Vector2();\r\n const _uvB$1 = /*@__PURE__*/ new Vector2();\r\n const _uvC$1 = /*@__PURE__*/ new Vector2();\r\n \r\n const _intersectionPoint = /*@__PURE__*/ new Vector3();\r\n const _intersectionPointWorld = /*@__PURE__*/ new Vector3();\r\n \r\n class Mesh extends Object3D {\r\n \r\n\t constructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Mesh';\r\n \r\n\t\t this.geometry = geometry;\r\n\t\t this.material = material;\r\n \r\n\t\t this.updateMorphTargets();\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t if ( source.morphTargetInfluences !== undefined ) {\r\n \r\n\t\t\t this.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n \r\n\t\t }\r\n \r\n\t\t if ( source.morphTargetDictionary !== undefined ) {\r\n \r\n\t\t\t this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n \r\n\t\t }\r\n \r\n\t\t this.material = source.material;\r\n\t\t this.geometry = source.geometry;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t updateMorphTargets() {\r\n \r\n\t\t const geometry = this.geometry;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t const morphAttributes = geometry.morphAttributes;\r\n\t\t\t const keys = Object.keys( morphAttributes );\r\n \r\n\t\t\t if ( keys.length > 0 ) {\r\n \r\n\t\t\t\t const morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n \r\n\t\t\t\t if ( morphAttribute !== undefined ) {\r\n \r\n\t\t\t\t\t this.morphTargetInfluences = [];\r\n\t\t\t\t\t this.morphTargetDictionary = {};\r\n \r\n\t\t\t\t\t for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n \r\n\t\t\t\t\t\t const name = morphAttribute[ m ].name || String( m );\r\n \r\n\t\t\t\t\t\t this.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\t this.morphTargetDictionary[ name ] = m;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const morphTargets = geometry.morphTargets;\r\n \r\n\t\t\t if ( morphTargets !== undefined && morphTargets.length > 0 ) {\r\n \r\n\t\t\t\t console.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t raycast( raycaster, intersects ) {\r\n \r\n\t\t const geometry = this.geometry;\r\n\t\t const material = this.material;\r\n\t\t const matrixWorld = this.matrixWorld;\r\n \r\n\t\t if ( material === undefined ) return;\r\n \r\n\t\t // Checking boundingSphere distance to ray\r\n \r\n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n \r\n\t\t _sphere$3.copy( geometry.boundingSphere );\r\n\t\t _sphere$3.applyMatrix4( matrixWorld );\r\n \r\n\t\t if ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\r\n \r\n\t\t //\r\n \r\n\t\t _inverseMatrix$2.copy( matrixWorld ).invert();\r\n\t\t _ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\r\n \r\n\t\t // Check boundingBox before continuing\r\n \r\n\t\t if ( geometry.boundingBox !== null ) {\r\n \r\n\t\t\t if ( _ray$2.intersectsBox( geometry.boundingBox ) === false ) return;\r\n \r\n\t\t }\r\n \r\n\t\t let intersection;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t const index = geometry.index;\r\n\t\t\t const position = geometry.attributes.position;\r\n\t\t\t const morphPosition = geometry.morphAttributes.position;\r\n\t\t\t const morphTargetsRelative = geometry.morphTargetsRelative;\r\n\t\t\t const uv = geometry.attributes.uv;\r\n\t\t\t const uv2 = geometry.attributes.uv2;\r\n\t\t\t const groups = geometry.groups;\r\n\t\t\t const drawRange = geometry.drawRange;\r\n \r\n\t\t\t if ( index !== null ) {\r\n \r\n\t\t\t\t // indexed buffer geometry\r\n \r\n\t\t\t\t if ( Array.isArray( material ) ) {\r\n \r\n\t\t\t\t\t for ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t const group = groups[ i ];\r\n\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\r\n \r\n\t\t\t\t\t\t const start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t const end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n \r\n\t\t\t\t\t\t for ( let j = start, jl = end; j < jl; j += 3 ) {\r\n \r\n\t\t\t\t\t\t\t const a = index.getX( j );\r\n\t\t\t\t\t\t\t const b = index.getX( j + 1 );\r\n\t\t\t\t\t\t\t const c = index.getX( j + 2 );\r\n \r\n\t\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\r\n \r\n\t\t\t\t\t\t\t if ( intersection ) {\r\n \r\n\t\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t\t intersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t intersects.push( intersection );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t const start = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n \r\n\t\t\t\t\t for ( let i = start, il = end; i < il; i += 3 ) {\r\n \r\n\t\t\t\t\t\t const a = index.getX( i );\r\n\t\t\t\t\t\t const b = index.getX( i + 1 );\r\n\t\t\t\t\t\t const c = index.getX( i + 2 );\r\n \r\n\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\r\n \r\n\t\t\t\t\t\t if ( intersection ) {\r\n \r\n\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\t intersects.push( intersection );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( position !== undefined ) {\r\n \r\n\t\t\t\t // non-indexed buffer geometry\r\n \r\n\t\t\t\t if ( Array.isArray( material ) ) {\r\n \r\n\t\t\t\t\t for ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t const group = groups[ i ];\r\n\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\r\n \r\n\t\t\t\t\t\t const start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\t\t const end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n \r\n\t\t\t\t\t\t for ( let j = start, jl = end; j < jl; j += 3 ) {\r\n \r\n\t\t\t\t\t\t\t const a = j;\r\n\t\t\t\t\t\t\t const b = j + 1;\r\n\t\t\t\t\t\t\t const c = j + 2;\r\n \r\n\t\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\r\n \r\n\t\t\t\t\t\t\t if ( intersection ) {\r\n \r\n\t\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t\t intersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\t\t intersects.push( intersection );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t const start = Math.max( 0, drawRange.start );\r\n\t\t\t\t\t const end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\r\n \r\n\t\t\t\t\t for ( let i = start, il = end; i < il; i += 3 ) {\r\n \r\n\t\t\t\t\t\t const a = i;\r\n\t\t\t\t\t\t const b = i + 1;\r\n\t\t\t\t\t\t const c = i + 2;\r\n \r\n\t\t\t\t\t\t intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\r\n \r\n\t\t\t\t\t\t if ( intersection ) {\r\n \r\n\t\t\t\t\t\t\t intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\t intersects.push( intersection );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( geometry.isGeometry ) {\r\n \r\n\t\t\t console.error( 'THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n Mesh.prototype.isMesh = true;\r\n \r\n function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n \r\n\t let intersect;\r\n \r\n\t if ( material.side === BackSide ) {\r\n \r\n\t\t intersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n \r\n\t } else {\r\n \r\n\t\t intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\r\n \r\n\t }\r\n \r\n\t if ( intersect === null ) return null;\r\n \r\n\t _intersectionPointWorld.copy( point );\r\n\t _intersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n \r\n\t const distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\r\n \r\n\t if ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n \r\n\t return {\r\n\t\t distance: distance,\r\n\t\t point: _intersectionPointWorld.clone(),\r\n\t\t object: object\r\n\t };\r\n \r\n }\r\n \r\n function checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\r\n \r\n\t _vA$1.fromBufferAttribute( position, a );\r\n\t _vB$1.fromBufferAttribute( position, b );\r\n\t _vC$1.fromBufferAttribute( position, c );\r\n \r\n\t const morphInfluences = object.morphTargetInfluences;\r\n \r\n\t if ( morphPosition && morphInfluences ) {\r\n \r\n\t\t _morphA.set( 0, 0, 0 );\r\n\t\t _morphB.set( 0, 0, 0 );\r\n\t\t _morphC.set( 0, 0, 0 );\r\n \r\n\t\t for ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\r\n \r\n\t\t\t const influence = morphInfluences[ i ];\r\n\t\t\t const morphAttribute = morphPosition[ i ];\r\n \r\n\t\t\t if ( influence === 0 ) continue;\r\n \r\n\t\t\t _tempA.fromBufferAttribute( morphAttribute, a );\r\n\t\t\t _tempB.fromBufferAttribute( morphAttribute, b );\r\n\t\t\t _tempC.fromBufferAttribute( morphAttribute, c );\r\n \r\n\t\t\t if ( morphTargetsRelative ) {\r\n \r\n\t\t\t\t _morphA.addScaledVector( _tempA, influence );\r\n\t\t\t\t _morphB.addScaledVector( _tempB, influence );\r\n\t\t\t\t _morphC.addScaledVector( _tempC, influence );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _morphA.addScaledVector( _tempA.sub( _vA$1 ), influence );\r\n\t\t\t\t _morphB.addScaledVector( _tempB.sub( _vB$1 ), influence );\r\n\t\t\t\t _morphC.addScaledVector( _tempC.sub( _vC$1 ), influence );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t _vA$1.add( _morphA );\r\n\t\t _vB$1.add( _morphB );\r\n\t\t _vC$1.add( _morphC );\r\n \r\n\t }\r\n \r\n\t if ( object.isSkinnedMesh ) {\r\n \r\n\t\t object.boneTransform( a, _vA$1 );\r\n\t\t object.boneTransform( b, _vB$1 );\r\n\t\t object.boneTransform( c, _vC$1 );\r\n \r\n\t }\r\n \r\n\t const intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\r\n \r\n\t if ( intersection ) {\r\n \r\n\t\t if ( uv ) {\r\n \r\n\t\t\t _uvA$1.fromBufferAttribute( uv, a );\r\n\t\t\t _uvB$1.fromBufferAttribute( uv, b );\r\n\t\t\t _uvC$1.fromBufferAttribute( uv, c );\r\n \r\n\t\t\t intersection.uv = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\r\n \r\n\t\t }\r\n \r\n\t\t if ( uv2 ) {\r\n \r\n\t\t\t _uvA$1.fromBufferAttribute( uv2, a );\r\n\t\t\t _uvB$1.fromBufferAttribute( uv2, b );\r\n\t\t\t _uvC$1.fromBufferAttribute( uv2, c );\r\n \r\n\t\t\t intersection.uv2 = Triangle.getUV( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\r\n \r\n\t\t }\r\n \r\n\t\t const face = {\r\n\t\t\t a: a,\r\n\t\t\t b: b,\r\n\t\t\t c: c,\r\n\t\t\t normal: new Vector3(),\r\n\t\t\t materialIndex: 0\r\n\t\t };\r\n \r\n\t\t Triangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\r\n \r\n\t\t intersection.face = face;\r\n \r\n\t }\r\n \r\n\t return intersection;\r\n \r\n }\r\n \r\n class BoxGeometry extends BufferGeometry {\r\n \r\n\t constructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'BoxGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t width: width,\r\n\t\t\t height: height,\r\n\t\t\t depth: depth,\r\n\t\t\t widthSegments: widthSegments,\r\n\t\t\t heightSegments: heightSegments,\r\n\t\t\t depthSegments: depthSegments\r\n\t\t };\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t // segments\r\n \r\n\t\t widthSegments = Math.floor( widthSegments );\r\n\t\t heightSegments = Math.floor( heightSegments );\r\n\t\t depthSegments = Math.floor( depthSegments );\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // helper variables\r\n \r\n\t\t let numberOfVertices = 0;\r\n\t\t let groupStart = 0;\r\n \r\n\t\t // build each side of the box geometry\r\n \r\n\t\t buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\r\n\t\t buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\r\n\t\t buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\r\n\t\t buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\r\n\t\t buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\r\n\t\t buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t\t function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n \r\n\t\t\t const segmentWidth = width / gridX;\r\n\t\t\t const segmentHeight = height / gridY;\r\n \r\n\t\t\t const widthHalf = width / 2;\r\n\t\t\t const heightHalf = height / 2;\r\n\t\t\t const depthHalf = depth / 2;\r\n \r\n\t\t\t const gridX1 = gridX + 1;\r\n\t\t\t const gridY1 = gridY + 1;\r\n \r\n\t\t\t let vertexCounter = 0;\r\n\t\t\t let groupCount = 0;\r\n \r\n\t\t\t const vector = new Vector3();\r\n \r\n\t\t\t // generate vertices, normals and uvs\r\n \r\n\t\t\t for ( let iy = 0; iy < gridY1; iy ++ ) {\r\n \r\n\t\t\t\t const y = iy * segmentHeight - heightHalf;\r\n \r\n\t\t\t\t for ( let ix = 0; ix < gridX1; ix ++ ) {\r\n \r\n\t\t\t\t\t const x = ix * segmentWidth - widthHalf;\r\n \r\n\t\t\t\t\t // set values to correct vector component\r\n \r\n\t\t\t\t\t vector[ u ] = x * udir;\r\n\t\t\t\t\t vector[ v ] = y * vdir;\r\n\t\t\t\t\t vector[ w ] = depthHalf;\r\n \r\n\t\t\t\t\t // now apply vector to vertex buffer\r\n \r\n\t\t\t\t\t vertices.push( vector.x, vector.y, vector.z );\r\n \r\n\t\t\t\t\t // set values to correct vector component\r\n \r\n\t\t\t\t\t vector[ u ] = 0;\r\n\t\t\t\t\t vector[ v ] = 0;\r\n\t\t\t\t\t vector[ w ] = depth > 0 ? 1 : - 1;\r\n \r\n\t\t\t\t\t // now apply vector to normal buffer\r\n \r\n\t\t\t\t\t normals.push( vector.x, vector.y, vector.z );\r\n \r\n\t\t\t\t\t // uvs\r\n \r\n\t\t\t\t\t uvs.push( ix / gridX );\r\n\t\t\t\t\t uvs.push( 1 - ( iy / gridY ) );\r\n \r\n\t\t\t\t\t // counters\r\n \r\n\t\t\t\t\t vertexCounter += 1;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // indices\r\n \r\n\t\t\t // 1. you need three indices to draw a single face\r\n\t\t\t // 2. a single segment consists of two faces\r\n\t\t\t // 3. so we need to generate six (2*3) indices per segment\r\n \r\n\t\t\t for ( let iy = 0; iy < gridY; iy ++ ) {\r\n \r\n\t\t\t\t for ( let ix = 0; ix < gridX; ix ++ ) {\r\n \r\n\t\t\t\t\t const a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\t const b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\t const c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\t const d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n \r\n\t\t\t\t\t // faces\r\n \r\n\t\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t\t indices.push( b, c, d );\r\n \r\n\t\t\t\t\t // increase counter\r\n \r\n\t\t\t\t\t groupCount += 6;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // add a group to the geometry. this will ensure multi material support\r\n \r\n\t\t\t scope.addGroup( groupStart, groupCount, materialIndex );\r\n \r\n\t\t\t // calculate new start value for groups\r\n \r\n\t\t\t groupStart += groupCount;\r\n \r\n\t\t\t // update total number of vertices\r\n \r\n\t\t\t numberOfVertices += vertexCounter;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Uniform Utilities\r\n  */\r\n \r\n function cloneUniforms( src ) {\r\n \r\n\t const dst = {};\r\n \r\n\t for ( const u in src ) {\r\n \r\n\t\t dst[ u ] = {};\r\n \r\n\t\t for ( const p in src[ u ] ) {\r\n \r\n\t\t\t const property = src[ u ][ p ];\r\n \r\n\t\t\t if ( property && ( property.isColor ||\r\n\t\t\t\t property.isMatrix3 || property.isMatrix4 ||\r\n\t\t\t\t property.isVector2 || property.isVector3 || property.isVector4 ||\r\n\t\t\t\t property.isTexture || property.isQuaternion ) ) {\r\n \r\n\t\t\t\t dst[ u ][ p ] = property.clone();\r\n \r\n\t\t\t } else if ( Array.isArray( property ) ) {\r\n \r\n\t\t\t\t dst[ u ][ p ] = property.slice();\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t dst[ u ][ p ] = property;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return dst;\r\n \r\n }\r\n \r\n function mergeUniforms( uniforms ) {\r\n \r\n\t const merged = {};\r\n \r\n\t for ( let u = 0; u < uniforms.length; u ++ ) {\r\n \r\n\t\t const tmp = cloneUniforms( uniforms[ u ] );\r\n \r\n\t\t for ( const p in tmp ) {\r\n \r\n\t\t\t merged[ p ] = tmp[ p ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return merged;\r\n \r\n }\r\n \r\n // Legacy\r\n \r\n const UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\r\n \r\n var default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\r\n \r\n var default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\r\n \r\n /**\r\n  * parameters = {\r\n  *  defines: { \"label\" : \"value\" },\r\n  *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n  *\r\n  *  fragmentShader: <string>,\r\n  *  vertexShader: <string>,\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>,\r\n  *\r\n  *  lights: <bool>\r\n  * }\r\n  */\r\n \r\n class ShaderMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'ShaderMaterial';\r\n \r\n\t\t this.defines = {};\r\n\t\t this.uniforms = {};\r\n \r\n\t\t this.vertexShader = default_vertex;\r\n\t\t this.fragmentShader = default_fragment;\r\n \r\n\t\t this.linewidth = 1;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n \r\n\t\t this.fog = false; // set to use scene fog\r\n\t\t this.lights = false; // set to use scene lights\r\n\t\t this.clipping = false; // set to use user-defined clipping planes\r\n \r\n\t\t this.extensions = {\r\n\t\t\t derivatives: false, // set to use derivatives\r\n\t\t\t fragDepth: false, // set to use fragment depth values\r\n\t\t\t drawBuffers: false, // set to use draw buffers\r\n\t\t\t shaderTextureLOD: false // set to use shader texture LOD\r\n\t\t };\r\n \r\n\t\t // When rendered geometry doesn't include these attributes but the material does,\r\n\t\t // use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\t this.defaultAttributeValues = {\r\n\t\t\t 'color': [ 1, 1, 1 ],\r\n\t\t\t 'uv': [ 0, 0 ],\r\n\t\t\t 'uv2': [ 0, 0 ]\r\n\t\t };\r\n \r\n\t\t this.index0AttributeName = undefined;\r\n\t\t this.uniformsNeedUpdate = false;\r\n \r\n\t\t this.glslVersion = null;\r\n \r\n\t\t if ( parameters !== undefined ) {\r\n \r\n\t\t\t if ( parameters.attributes !== undefined ) {\r\n \r\n\t\t\t\t console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.setValues( parameters );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.fragmentShader = source.fragmentShader;\r\n\t\t this.vertexShader = source.vertexShader;\r\n \r\n\t\t this.uniforms = cloneUniforms( source.uniforms );\r\n \r\n\t\t this.defines = Object.assign( {}, source.defines );\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n \r\n\t\t this.lights = source.lights;\r\n\t\t this.clipping = source.clipping;\r\n \r\n\t\t this.extensions = Object.assign( {}, source.extensions );\r\n \r\n\t\t this.glslVersion = source.glslVersion;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t data.glslVersion = this.glslVersion;\r\n\t\t data.uniforms = {};\r\n \r\n\t\t for ( const name in this.uniforms ) {\r\n \r\n\t\t\t const uniform = this.uniforms[ name ];\r\n\t\t\t const value = uniform.value;\r\n \r\n\t\t\t if ( value && value.isTexture ) {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t type: 't',\r\n\t\t\t\t\t value: value.toJSON( meta ).uuid\r\n\t\t\t\t };\r\n \r\n\t\t\t } else if ( value && value.isColor ) {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t type: 'c',\r\n\t\t\t\t\t value: value.getHex()\r\n\t\t\t\t };\r\n \r\n\t\t\t } else if ( value && value.isVector2 ) {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t type: 'v2',\r\n\t\t\t\t\t value: value.toArray()\r\n\t\t\t\t };\r\n \r\n\t\t\t } else if ( value && value.isVector3 ) {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t type: 'v3',\r\n\t\t\t\t\t value: value.toArray()\r\n\t\t\t\t };\r\n \r\n\t\t\t } else if ( value && value.isVector4 ) {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t type: 'v4',\r\n\t\t\t\t\t value: value.toArray()\r\n\t\t\t\t };\r\n \r\n\t\t\t } else if ( value && value.isMatrix3 ) {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t type: 'm3',\r\n\t\t\t\t\t value: value.toArray()\r\n\t\t\t\t };\r\n \r\n\t\t\t } else if ( value && value.isMatrix4 ) {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t type: 'm4',\r\n\t\t\t\t\t value: value.toArray()\r\n\t\t\t\t };\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t data.uniforms[ name ] = {\r\n\t\t\t\t\t value: value\r\n\t\t\t\t };\r\n \r\n\t\t\t\t // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\r\n \r\n\t\t data.vertexShader = this.vertexShader;\r\n\t\t data.fragmentShader = this.fragmentShader;\r\n \r\n\t\t const extensions = {};\r\n \r\n\t\t for ( const key in this.extensions ) {\r\n \r\n\t\t\t if ( this.extensions[ key ] === true ) extensions[ key ] = true;\r\n \r\n\t\t }\r\n \r\n\t\t if ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n ShaderMaterial.prototype.isShaderMaterial = true;\r\n \r\n class Camera extends Object3D {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Camera';\r\n \r\n\t\t this.matrixWorldInverse = new Matrix4();\r\n \r\n\t\t this.projectionMatrix = new Matrix4();\r\n\t\t this.projectionMatrixInverse = new Matrix4();\r\n \r\n\t }\r\n \r\n\t copy( source, recursive ) {\r\n \r\n\t\t super.copy( source, recursive );\r\n \r\n\t\t this.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n \r\n\t\t this.projectionMatrix.copy( source.projectionMatrix );\r\n\t\t this.projectionMatrixInverse.copy( source.projectionMatrixInverse );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getWorldDirection( target ) {\r\n \r\n\t\t this.updateWorldMatrix( true, false );\r\n \r\n\t\t const e = this.matrixWorld.elements;\r\n \r\n\t\t return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t super.updateMatrixWorld( force );\r\n \r\n\t\t this.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n \r\n\t }\r\n \r\n\t updateWorldMatrix( updateParents, updateChildren ) {\r\n \r\n\t\t super.updateWorldMatrix( updateParents, updateChildren );\r\n \r\n\t\t this.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n Camera.prototype.isCamera = true;\r\n \r\n class PerspectiveCamera extends Camera {\r\n \r\n\t constructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'PerspectiveCamera';\r\n \r\n\t\t this.fov = fov;\r\n\t\t this.zoom = 1;\r\n \r\n\t\t this.near = near;\r\n\t\t this.far = far;\r\n\t\t this.focus = 10;\r\n \r\n\t\t this.aspect = aspect;\r\n\t\t this.view = null;\r\n \r\n\t\t this.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\t\t this.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n \r\n\t\t this.updateProjectionMatrix();\r\n \r\n\t }\r\n \r\n\t copy( source, recursive ) {\r\n \r\n\t\t super.copy( source, recursive );\r\n \r\n\t\t this.fov = source.fov;\r\n\t\t this.zoom = source.zoom;\r\n \r\n\t\t this.near = source.near;\r\n\t\t this.far = source.far;\r\n\t\t this.focus = source.focus;\r\n \r\n\t\t this.aspect = source.aspect;\r\n\t\t this.view = source.view === null ? null : Object.assign( {}, source.view );\r\n \r\n\t\t this.filmGauge = source.filmGauge;\r\n\t\t this.filmOffset = source.filmOffset;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t  *\r\n\t  * The default film gauge is 35, so that the focal length can be specified for\r\n\t  * a 35mm (full frame) camera.\r\n\t  *\r\n\t  * Values for focal length and film gauge must have the same unit.\r\n\t  */\r\n\t setFocalLength( focalLength ) {\r\n \r\n\t\t /** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\r\n\t\t const vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n \r\n\t\t this.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\t this.updateProjectionMatrix();\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Calculates the focal length from the current .fov and .filmGauge.\r\n\t  */\r\n\t getFocalLength() {\r\n \r\n\t\t const vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\r\n \r\n\t\t return 0.5 * this.getFilmHeight() / vExtentSlope;\r\n \r\n\t }\r\n \r\n\t getEffectiveFOV() {\r\n \r\n\t\t return RAD2DEG * 2 * Math.atan(\r\n\t\t\t Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n \r\n\t }\r\n \r\n\t getFilmWidth() {\r\n \r\n\t\t // film not completely covered in portrait format (aspect < 1)\r\n\t\t return this.filmGauge * Math.min( this.aspect, 1 );\r\n \r\n\t }\r\n \r\n\t getFilmHeight() {\r\n \r\n\t\t // film not completely covered in landscape format (aspect > 1)\r\n\t\t return this.filmGauge / Math.max( this.aspect, 1 );\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t  * multi-monitor/multi-machine setups.\r\n\t  *\r\n\t  * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t  * the monitors are in grid like this\r\n\t  *\r\n\t  *   +---+---+---+\r\n\t  *   | A | B | C |\r\n\t  *   +---+---+---+\r\n\t  *   | D | E | F |\r\n\t  *   +---+---+---+\r\n\t  *\r\n\t  * then for each monitor you would call it like this\r\n\t  *\r\n\t  *   const w = 1920;\r\n\t  *   const h = 1080;\r\n\t  *   const fullWidth = w * 3;\r\n\t  *   const fullHeight = h * 2;\r\n\t  *\r\n\t  *   --A--\r\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t  *   --B--\r\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t  *   --C--\r\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t  *   --D--\r\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t  *   --E--\r\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t  *   --F--\r\n\t  *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t  *\r\n\t  *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t  */\r\n\t setViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n \r\n\t\t this.aspect = fullWidth / fullHeight;\r\n \r\n\t\t if ( this.view === null ) {\r\n \r\n\t\t\t this.view = {\r\n\t\t\t\t enabled: true,\r\n\t\t\t\t fullWidth: 1,\r\n\t\t\t\t fullHeight: 1,\r\n\t\t\t\t offsetX: 0,\r\n\t\t\t\t offsetY: 0,\r\n\t\t\t\t width: 1,\r\n\t\t\t\t height: 1\r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t\t this.view.enabled = true;\r\n\t\t this.view.fullWidth = fullWidth;\r\n\t\t this.view.fullHeight = fullHeight;\r\n\t\t this.view.offsetX = x;\r\n\t\t this.view.offsetY = y;\r\n\t\t this.view.width = width;\r\n\t\t this.view.height = height;\r\n \r\n\t\t this.updateProjectionMatrix();\r\n \r\n\t }\r\n \r\n\t clearViewOffset() {\r\n \r\n\t\t if ( this.view !== null ) {\r\n \r\n\t\t\t this.view.enabled = false;\r\n \r\n\t\t }\r\n \r\n\t\t this.updateProjectionMatrix();\r\n \r\n\t }\r\n \r\n\t updateProjectionMatrix() {\r\n \r\n\t\t const near = this.near;\r\n\t\t let top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\r\n\t\t let height = 2 * top;\r\n\t\t let width = this.aspect * height;\r\n\t\t let left = - 0.5 * width;\r\n\t\t const view = this.view;\r\n \r\n\t\t if ( this.view !== null && this.view.enabled ) {\r\n \r\n\t\t\t const fullWidth = view.fullWidth,\r\n\t\t\t\t fullHeight = view.fullHeight;\r\n \r\n\t\t\t left += view.offsetX * width / fullWidth;\r\n\t\t\t top -= view.offsetY * height / fullHeight;\r\n\t\t\t width *= view.width / fullWidth;\r\n\t\t\t height *= view.height / fullHeight;\r\n \r\n\t\t }\r\n \r\n\t\t const skew = this.filmOffset;\r\n\t\t if ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n \r\n\t\t this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\r\n \r\n\t\t this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t data.object.fov = this.fov;\r\n\t\t data.object.zoom = this.zoom;\r\n \r\n\t\t data.object.near = this.near;\r\n\t\t data.object.far = this.far;\r\n\t\t data.object.focus = this.focus;\r\n \r\n\t\t data.object.aspect = this.aspect;\r\n \r\n\t\t if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n \r\n\t\t data.object.filmGauge = this.filmGauge;\r\n\t\t data.object.filmOffset = this.filmOffset;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n PerspectiveCamera.prototype.isPerspectiveCamera = true;\r\n \r\n const fov = 90, aspect = 1;\r\n \r\n class CubeCamera extends Object3D {\r\n \r\n\t constructor( near, far, renderTarget ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'CubeCamera';\r\n \r\n\t\t if ( renderTarget.isWebGLCubeRenderTarget !== true ) {\r\n \r\n\t\t\t console.error( 'THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t this.renderTarget = renderTarget;\r\n \r\n\t\t const cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\t cameraPX.layers = this.layers;\r\n\t\t cameraPX.up.set( 0, - 1, 0 );\r\n\t\t cameraPX.lookAt( new Vector3( 1, 0, 0 ) );\r\n\t\t this.add( cameraPX );\r\n \r\n\t\t const cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\t cameraNX.layers = this.layers;\r\n\t\t cameraNX.up.set( 0, - 1, 0 );\r\n\t\t cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\r\n\t\t this.add( cameraNX );\r\n \r\n\t\t const cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\t cameraPY.layers = this.layers;\r\n\t\t cameraPY.up.set( 0, 0, 1 );\r\n\t\t cameraPY.lookAt( new Vector3( 0, 1, 0 ) );\r\n\t\t this.add( cameraPY );\r\n \r\n\t\t const cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\t cameraNY.layers = this.layers;\r\n\t\t cameraNY.up.set( 0, 0, - 1 );\r\n\t\t cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\r\n\t\t this.add( cameraNY );\r\n \r\n\t\t const cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\t cameraPZ.layers = this.layers;\r\n\t\t cameraPZ.up.set( 0, - 1, 0 );\r\n\t\t cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\r\n\t\t this.add( cameraPZ );\r\n \r\n\t\t const cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\t cameraNZ.layers = this.layers;\r\n\t\t cameraNZ.up.set( 0, - 1, 0 );\r\n\t\t cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\r\n\t\t this.add( cameraNZ );\r\n \r\n\t }\r\n \r\n\t update( renderer, scene ) {\r\n \r\n\t\t if ( this.parent === null ) this.updateMatrixWorld();\r\n \r\n\t\t const renderTarget = this.renderTarget;\r\n \r\n\t\t const [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\r\n \r\n\t\t const currentXrEnabled = renderer.xr.enabled;\r\n\t\t const currentRenderTarget = renderer.getRenderTarget();\r\n \r\n\t\t renderer.xr.enabled = false;\r\n \r\n\t\t const generateMipmaps = renderTarget.texture.generateMipmaps;\r\n \r\n\t\t renderTarget.texture.generateMipmaps = false;\r\n \r\n\t\t renderer.setRenderTarget( renderTarget, 0 );\r\n\t\t renderer.render( scene, cameraPX );\r\n \r\n\t\t renderer.setRenderTarget( renderTarget, 1 );\r\n\t\t renderer.render( scene, cameraNX );\r\n \r\n\t\t renderer.setRenderTarget( renderTarget, 2 );\r\n\t\t renderer.render( scene, cameraPY );\r\n \r\n\t\t renderer.setRenderTarget( renderTarget, 3 );\r\n\t\t renderer.render( scene, cameraNY );\r\n \r\n\t\t renderer.setRenderTarget( renderTarget, 4 );\r\n\t\t renderer.render( scene, cameraPZ );\r\n \r\n\t\t renderTarget.texture.generateMipmaps = generateMipmaps;\r\n \r\n\t\t renderer.setRenderTarget( renderTarget, 5 );\r\n\t\t renderer.render( scene, cameraNZ );\r\n \r\n\t\t renderer.setRenderTarget( currentRenderTarget );\r\n \r\n\t\t renderer.xr.enabled = currentXrEnabled;\r\n \r\n\t\t renderTarget.texture.needsPMREMUpdate = true;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class CubeTexture extends Texture {\r\n \r\n\t constructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n \r\n\t\t images = images !== undefined ? images : [];\r\n\t\t mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n \r\n\t\t super( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n \r\n\t\t this.flipY = false;\r\n \r\n\t }\r\n \r\n\t get images() {\r\n \r\n\t\t return this.image;\r\n \r\n\t }\r\n \r\n\t set images( value ) {\r\n \r\n\t\t this.image = value;\r\n \r\n\t }\r\n \r\n }\r\n \r\n CubeTexture.prototype.isCubeTexture = true;\r\n \r\n class WebGLCubeRenderTarget extends WebGLRenderTarget {\r\n \r\n\t constructor( size, options = {} ) {\r\n \r\n\t\t super( size, size, options );\r\n \r\n\t\t const image = { width: size, height: size, depth: 1 };\r\n\t\t const images = [ image, image, image, image, image, image ];\r\n \r\n\t\t this.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n \r\n\t\t // By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\r\n\t\t // in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\r\n\t\t // in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\r\n \r\n\t\t // three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\r\n\t\t // and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\r\n\t\t // as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\r\n \r\n\t\t this.texture.isRenderTargetTexture = true;\r\n \r\n\t\t this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\t this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n \r\n\t }\r\n \r\n\t fromEquirectangularTexture( renderer, texture ) {\r\n \r\n\t\t this.texture.type = texture.type;\r\n\t\t this.texture.format = RGBAFormat; // see #18859\r\n\t\t this.texture.encoding = texture.encoding;\r\n \r\n\t\t this.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\t this.texture.minFilter = texture.minFilter;\r\n\t\t this.texture.magFilter = texture.magFilter;\r\n \r\n\t\t const shader = {\r\n \r\n\t\t\t uniforms: {\r\n\t\t\t\t tEquirect: { value: null },\r\n\t\t\t },\r\n \r\n\t\t\t vertexShader: /* glsl */`\r\n \r\n\t\t\t\t varying vec3 vWorldDirection;\r\n \r\n\t\t\t\t vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n \r\n\t\t\t\t\t return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t void main() {\r\n \r\n\t\t\t\t\t vWorldDirection = transformDirection( position, modelMatrix );\r\n \r\n\t\t\t\t\t #include <begin_vertex>\r\n\t\t\t\t\t #include <project_vertex>\r\n \r\n\t\t\t\t }\r\n\t\t\t `,\r\n \r\n\t\t\t fragmentShader: /* glsl */`\r\n \r\n\t\t\t\t uniform sampler2D tEquirect;\r\n \r\n\t\t\t\t varying vec3 vWorldDirection;\r\n \r\n\t\t\t\t #include <common>\r\n \r\n\t\t\t\t void main() {\r\n \r\n\t\t\t\t\t vec3 direction = normalize( vWorldDirection );\r\n \r\n\t\t\t\t\t vec2 sampleUV = equirectUv( direction );\r\n \r\n\t\t\t\t\t gl_FragColor = texture2D( tEquirect, sampleUV );\r\n \r\n\t\t\t\t }\r\n\t\t\t `\r\n\t\t };\r\n \r\n\t\t const geometry = new BoxGeometry( 5, 5, 5 );\r\n \r\n\t\t const material = new ShaderMaterial( {\r\n \r\n\t\t\t name: 'CubemapFromEquirect',\r\n \r\n\t\t\t uniforms: cloneUniforms( shader.uniforms ),\r\n\t\t\t vertexShader: shader.vertexShader,\r\n\t\t\t fragmentShader: shader.fragmentShader,\r\n\t\t\t side: BackSide,\r\n\t\t\t blending: NoBlending\r\n \r\n\t\t } );\r\n \r\n\t\t material.uniforms.tEquirect.value = texture;\r\n \r\n\t\t const mesh = new Mesh( geometry, material );\r\n \r\n\t\t const currentMinFilter = texture.minFilter;\r\n \r\n\t\t // Avoid blurred poles\r\n\t\t if ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\r\n \r\n\t\t const camera = new CubeCamera( 1, 10, this );\r\n\t\t camera.update( renderer, mesh );\r\n \r\n\t\t texture.minFilter = currentMinFilter;\r\n \r\n\t\t mesh.geometry.dispose();\r\n\t\t mesh.material.dispose();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clear( renderer, color, depth, stencil ) {\r\n \r\n\t\t const currentRenderTarget = renderer.getRenderTarget();\r\n \r\n\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t renderer.setRenderTarget( this, i );\r\n \r\n\t\t\t renderer.clear( color, depth, stencil );\r\n \r\n\t\t }\r\n \r\n\t\t renderer.setRenderTarget( currentRenderTarget );\r\n \r\n\t }\r\n \r\n }\r\n \r\n WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\r\n \r\n const _vector1 = /*@__PURE__*/ new Vector3();\r\n const _vector2 = /*@__PURE__*/ new Vector3();\r\n const _normalMatrix = /*@__PURE__*/ new Matrix3();\r\n \r\n class Plane {\r\n \r\n\t constructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\r\n \r\n\t\t // normal is assumed to be normalized\r\n \r\n\t\t this.normal = normal;\r\n\t\t this.constant = constant;\r\n \r\n\t }\r\n \r\n\t set( normal, constant ) {\r\n \r\n\t\t this.normal.copy( normal );\r\n\t\t this.constant = constant;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setComponents( x, y, z, w ) {\r\n \r\n\t\t this.normal.set( x, y, z );\r\n\t\t this.constant = w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromNormalAndCoplanarPoint( normal, point ) {\r\n \r\n\t\t this.normal.copy( normal );\r\n\t\t this.constant = - point.dot( this.normal );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromCoplanarPoints( a, b, c ) {\r\n \r\n\t\t const normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\r\n \r\n\t\t // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n \r\n\t\t this.setFromNormalAndCoplanarPoint( normal, a );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( plane ) {\r\n \r\n\t\t this.normal.copy( plane.normal );\r\n\t\t this.constant = plane.constant;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t normalize() {\r\n \r\n\t\t // Note: will lead to a divide by zero if the plane is invalid.\r\n \r\n\t\t const inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t this.normal.multiplyScalar( inverseNormalLength );\r\n\t\t this.constant *= inverseNormalLength;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t negate() {\r\n \r\n\t\t this.constant *= - 1;\r\n\t\t this.normal.negate();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t distanceToPoint( point ) {\r\n \r\n\t\t return this.normal.dot( point ) + this.constant;\r\n \r\n\t }\r\n \r\n\t distanceToSphere( sphere ) {\r\n \r\n\t\t return this.distanceToPoint( sphere.center ) - sphere.radius;\r\n \r\n\t }\r\n \r\n\t projectPoint( point, target ) {\r\n \r\n\t\t return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\r\n \r\n\t }\r\n \r\n\t intersectLine( line, target ) {\r\n \r\n\t\t const direction = line.delta( _vector1 );\r\n \r\n\t\t const denominator = this.normal.dot( direction );\r\n \r\n\t\t if ( denominator === 0 ) {\r\n \r\n\t\t\t // line is coplanar, return origin\r\n\t\t\t if ( this.distanceToPoint( line.start ) === 0 ) {\r\n \r\n\t\t\t\t return target.copy( line.start );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Unsure if this is the correct method to handle this case.\r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t const t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n \r\n\t\t if ( t < 0 || t > 1 ) {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t return target.copy( direction ).multiplyScalar( t ).add( line.start );\r\n \r\n\t }\r\n \r\n\t intersectsLine( line ) {\r\n \r\n\t\t // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n \r\n\t\t const startSign = this.distanceToPoint( line.start );\r\n\t\t const endSign = this.distanceToPoint( line.end );\r\n \r\n\t\t return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n \r\n\t }\r\n \r\n\t intersectsBox( box ) {\r\n \r\n\t\t return box.intersectsPlane( this );\r\n \r\n\t }\r\n \r\n\t intersectsSphere( sphere ) {\r\n \r\n\t\t return sphere.intersectsPlane( this );\r\n \r\n\t }\r\n \r\n\t coplanarPoint( target ) {\r\n \r\n\t\t return target.copy( this.normal ).multiplyScalar( - this.constant );\r\n \r\n\t }\r\n \r\n\t applyMatrix4( matrix, optionalNormalMatrix ) {\r\n \r\n\t\t const normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\r\n \r\n\t\t const referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\r\n \r\n\t\t const normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n \r\n\t\t this.constant = - referencePoint.dot( normal );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t translate( offset ) {\r\n \r\n\t\t this.constant -= offset.dot( this.normal );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( plane ) {\r\n \r\n\t\t return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n Plane.prototype.isPlane = true;\r\n \r\n const _sphere$2 = /*@__PURE__*/ new Sphere();\r\n const _vector$7 = /*@__PURE__*/ new Vector3();\r\n \r\n class Frustum {\r\n \r\n\t constructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\r\n \r\n\t\t this.planes = [ p0, p1, p2, p3, p4, p5 ];\r\n \r\n\t }\r\n \r\n\t set( p0, p1, p2, p3, p4, p5 ) {\r\n \r\n\t\t const planes = this.planes;\r\n \r\n\t\t planes[ 0 ].copy( p0 );\r\n\t\t planes[ 1 ].copy( p1 );\r\n\t\t planes[ 2 ].copy( p2 );\r\n\t\t planes[ 3 ].copy( p3 );\r\n\t\t planes[ 4 ].copy( p4 );\r\n\t\t planes[ 5 ].copy( p5 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( frustum ) {\r\n \r\n\t\t const planes = this.planes;\r\n \r\n\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t planes[ i ].copy( frustum.planes[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromProjectionMatrix( m ) {\r\n \r\n\t\t const planes = this.planes;\r\n\t\t const me = m.elements;\r\n\t\t const me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t const me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t const me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t const me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n \r\n\t\t planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t intersectsObject( object ) {\r\n \r\n\t\t const geometry = object.geometry;\r\n \r\n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n \r\n\t\t _sphere$2.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\r\n \r\n\t\t return this.intersectsSphere( _sphere$2 );\r\n \r\n\t }\r\n \r\n\t intersectsSprite( sprite ) {\r\n \r\n\t\t _sphere$2.center.set( 0, 0, 0 );\r\n\t\t _sphere$2.radius = 0.7071067811865476;\r\n\t\t _sphere$2.applyMatrix4( sprite.matrixWorld );\r\n \r\n\t\t return this.intersectsSphere( _sphere$2 );\r\n \r\n\t }\r\n \r\n\t intersectsSphere( sphere ) {\r\n \r\n\t\t const planes = this.planes;\r\n\t\t const center = sphere.center;\r\n\t\t const negRadius = - sphere.radius;\r\n \r\n\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t const distance = planes[ i ].distanceToPoint( center );\r\n \r\n\t\t\t if ( distance < negRadius ) {\r\n \r\n\t\t\t\t return false;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return true;\r\n \r\n\t }\r\n \r\n\t intersectsBox( box ) {\r\n \r\n\t\t const planes = this.planes;\r\n \r\n\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t const plane = planes[ i ];\r\n \r\n\t\t\t // corner at max distance\r\n \r\n\t\t\t _vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t _vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t _vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n \r\n\t\t\t if ( plane.distanceToPoint( _vector$7 ) < 0 ) {\r\n \r\n\t\t\t\t return false;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return true;\r\n \r\n\t }\r\n \r\n\t containsPoint( point ) {\r\n \r\n\t\t const planes = this.planes;\r\n \r\n\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t if ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n \r\n\t\t\t\t return false;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return true;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function WebGLAnimation() {\r\n \r\n\t let context = null;\r\n\t let isAnimating = false;\r\n\t let animationLoop = null;\r\n\t let requestId = null;\r\n \r\n\t function onAnimationFrame( time, frame ) {\r\n \r\n\t\t animationLoop( time, frame );\r\n \r\n\t\t requestId = context.requestAnimationFrame( onAnimationFrame );\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t start: function () {\r\n \r\n\t\t\t if ( isAnimating === true ) return;\r\n\t\t\t if ( animationLoop === null ) return;\r\n \r\n\t\t\t requestId = context.requestAnimationFrame( onAnimationFrame );\r\n \r\n\t\t\t isAnimating = true;\r\n \r\n\t\t },\r\n \r\n\t\t stop: function () {\r\n \r\n\t\t\t context.cancelAnimationFrame( requestId );\r\n \r\n\t\t\t isAnimating = false;\r\n \r\n\t\t },\r\n \r\n\t\t setAnimationLoop: function ( callback ) {\r\n \r\n\t\t\t animationLoop = callback;\r\n \r\n\t\t },\r\n \r\n\t\t setContext: function ( value ) {\r\n \r\n\t\t\t context = value;\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLAttributes( gl, capabilities ) {\r\n \r\n\t const isWebGL2 = capabilities.isWebGL2;\r\n \r\n\t const buffers = new WeakMap();\r\n \r\n\t function createBuffer( attribute, bufferType ) {\r\n \r\n\t\t const array = attribute.array;\r\n\t\t const usage = attribute.usage;\r\n \r\n\t\t const buffer = gl.createBuffer();\r\n \r\n\t\t gl.bindBuffer( bufferType, buffer );\r\n\t\t gl.bufferData( bufferType, array, usage );\r\n \r\n\t\t attribute.onUploadCallback();\r\n \r\n\t\t let type;\r\n \r\n\t\t if ( array instanceof Float32Array ) {\r\n \r\n\t\t\t type = 5126;\r\n \r\n\t\t } else if ( array instanceof Uint16Array ) {\r\n \r\n\t\t\t if ( attribute.isFloat16BufferAttribute ) {\r\n \r\n\t\t\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t\t\t type = 5131;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t throw new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t type = 5123;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( array instanceof Int16Array ) {\r\n \r\n\t\t\t type = 5122;\r\n \r\n\t\t } else if ( array instanceof Uint32Array ) {\r\n \r\n\t\t\t type = 5125;\r\n \r\n\t\t } else if ( array instanceof Int32Array ) {\r\n \r\n\t\t\t type = 5124;\r\n \r\n\t\t } else if ( array instanceof Int8Array ) {\r\n \r\n\t\t\t type = 5120;\r\n \r\n\t\t } else if ( array instanceof Uint8Array ) {\r\n \r\n\t\t\t type = 5121;\r\n \r\n\t\t } else if ( array instanceof Uint8ClampedArray ) {\r\n \r\n\t\t\t type = 5121;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t throw new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\r\n \r\n\t\t }\r\n \r\n\t\t return {\r\n\t\t\t buffer: buffer,\r\n\t\t\t type: type,\r\n\t\t\t bytesPerElement: array.BYTES_PER_ELEMENT,\r\n\t\t\t version: attribute.version\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t function updateBuffer( buffer, attribute, bufferType ) {\r\n \r\n\t\t const array = attribute.array;\r\n\t\t const updateRange = attribute.updateRange;\r\n \r\n\t\t gl.bindBuffer( bufferType, buffer );\r\n \r\n\t\t if ( updateRange.count === - 1 ) {\r\n \r\n\t\t\t // Not using update ranges\r\n \r\n\t\t\t gl.bufferSubData( bufferType, 0, array );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t\t gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t array, updateRange.offset, updateRange.count );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t updateRange.count = - 1; // reset range\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t function get( attribute ) {\r\n \r\n\t\t if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n \r\n\t\t return buffers.get( attribute );\r\n \r\n\t }\r\n \r\n\t function remove( attribute ) {\r\n \r\n\t\t if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n \r\n\t\t const data = buffers.get( attribute );\r\n \r\n\t\t if ( data ) {\r\n \r\n\t\t\t gl.deleteBuffer( data.buffer );\r\n \r\n\t\t\t buffers.delete( attribute );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function update( attribute, bufferType ) {\r\n \r\n\t\t if ( attribute.isGLBufferAttribute ) {\r\n \r\n\t\t\t const cached = buffers.get( attribute );\r\n \r\n\t\t\t if ( ! cached || cached.version < attribute.version ) {\r\n \r\n\t\t\t\t buffers.set( attribute, {\r\n\t\t\t\t\t buffer: attribute.buffer,\r\n\t\t\t\t\t type: attribute.type,\r\n\t\t\t\t\t bytesPerElement: attribute.elementSize,\r\n\t\t\t\t\t version: attribute.version\r\n\t\t\t\t } );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\r\n \r\n\t\t const data = buffers.get( attribute );\r\n \r\n\t\t if ( data === undefined ) {\r\n \r\n\t\t\t buffers.set( attribute, createBuffer( attribute, bufferType ) );\r\n \r\n\t\t } else if ( data.version < attribute.version ) {\r\n \r\n\t\t\t updateBuffer( data.buffer, attribute, bufferType );\r\n \r\n\t\t\t data.version = attribute.version;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t get: get,\r\n\t\t remove: remove,\r\n\t\t update: update\r\n \r\n\t };\r\n \r\n }\r\n \r\n class PlaneGeometry extends BufferGeometry {\r\n \r\n\t constructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'PlaneGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t width: width,\r\n\t\t\t height: height,\r\n\t\t\t widthSegments: widthSegments,\r\n\t\t\t heightSegments: heightSegments\r\n\t\t };\r\n \r\n\t\t const width_half = width / 2;\r\n\t\t const height_half = height / 2;\r\n \r\n\t\t const gridX = Math.floor( widthSegments );\r\n\t\t const gridY = Math.floor( heightSegments );\r\n \r\n\t\t const gridX1 = gridX + 1;\r\n\t\t const gridY1 = gridY + 1;\r\n \r\n\t\t const segment_width = width / gridX;\r\n\t\t const segment_height = height / gridY;\r\n \r\n\t\t //\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t for ( let iy = 0; iy < gridY1; iy ++ ) {\r\n \r\n\t\t\t const y = iy * segment_height - height_half;\r\n \r\n\t\t\t for ( let ix = 0; ix < gridX1; ix ++ ) {\r\n \r\n\t\t\t\t const x = ix * segment_width - width_half;\r\n \r\n\t\t\t\t vertices.push( x, - y, 0 );\r\n \r\n\t\t\t\t normals.push( 0, 0, 1 );\r\n \r\n\t\t\t\t uvs.push( ix / gridX );\r\n\t\t\t\t uvs.push( 1 - ( iy / gridY ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t for ( let iy = 0; iy < gridY; iy ++ ) {\r\n \r\n\t\t\t for ( let ix = 0; ix < gridX; ix ++ ) {\r\n \r\n\t\t\t\t const a = ix + gridX1 * iy;\r\n\t\t\t\t const b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t const c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t const d = ( ix + 1 ) + gridX1 * iy;\r\n \r\n\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t indices.push( b, c, d );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\r\n \r\n\t }\r\n \r\n }\r\n \r\n var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\r\n \r\n var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n \r\n var alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\r\n \r\n var alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\r\n \r\n var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\r\n \r\n var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\r\n \r\n var begin_vertex = \"vec3 transformed = vec3( position );\";\r\n \r\n var beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\r\n \r\n var bsdfs = \"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\";\r\n \r\n var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\r\n \r\n var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\r\n \r\n var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\r\n \r\n var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\r\n \r\n var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\r\n \r\n var color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n \r\n var color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n \r\n var color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\r\n \r\n var color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\r\n \r\n var common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\r\n \r\n var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\r\n \r\n var defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\r\n \r\n var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\r\n \r\n var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\r\n \r\n var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\r\n \r\n var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\r\n \r\n var encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\r\n \r\n var encodings_pars_fragment = \"vec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\";\r\n \r\n var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\r\n \r\n var envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\r\n \r\n var envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\r\n \r\n var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\r\n \r\n var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n \r\n var fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\r\n \r\n var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\r\n \r\n var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\r\n \r\n var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\r\n \r\n var gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\r\n \r\n var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\r\n \r\n var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\r\n \r\n var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\r\n \r\n var lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\r\n \r\n var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\r\n \r\n var lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\r\n \r\n var lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\r\n \r\n var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\r\n \r\n var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\r\n \r\n var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\\n\\t#endif\\n#endif\";\r\n \r\n var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec3 sheenSpecular = vec3( 0.0 );\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\r\n \r\n var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\r\n \r\n var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\r\n \r\n var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\r\n \r\n var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\r\n \r\n var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\r\n \r\n var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\r\n \r\n var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\r\n \r\n var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\r\n \r\n var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\r\n \r\n var map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\r\n \r\n var map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\r\n \r\n var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\r\n \r\n var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\r\n \r\n var morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ]\\n\\t\\t#endif\\n\\t}\\n#endif\";\r\n \r\n var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\r\n \r\n var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n \r\n var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\r\n \r\n var normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\r\n \r\n var normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\r\n \r\n var normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\r\n \r\n var normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\r\n \r\n var normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\r\n \r\n var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\r\n \r\n var clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\r\n \r\n var clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\r\n \r\n var clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\r\n \r\n var output_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\r\n \r\n var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\r\n \r\n var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\r\n \r\n var project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\r\n \r\n var dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\r\n \r\n var dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\r\n \r\n var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\r\n \r\n var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\r\n \r\n var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\r\n \r\n var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\r\n \r\n var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\r\n \r\n var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\r\n \r\n var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n \r\n var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\r\n \r\n var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\r\n \r\n var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\r\n \r\n var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\r\n \r\n var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\r\n \r\n var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\r\n \r\n var tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\r\n \r\n var transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";\r\n \r\n var transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef texture2DLodEXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";\r\n \r\n var uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\r\n \r\n var uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\r\n \r\n var uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\r\n \r\n var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n \r\n var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\r\n \r\n var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\r\n \r\n var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\r\n \r\n const vertex$g = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\r\n \r\n const fragment$g = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tgl_FragColor = texture2D( t2D, vUv );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n \r\n const vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\r\n \r\n const fragment$f = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n \r\n const vertex$e = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\r\n \r\n const fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\r\n \r\n const vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\r\n \r\n const fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\r\n \r\n const vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\r\n \r\n const fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\r\n \r\n const vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n \r\n const vertex$a = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n \r\n const vertex$9 = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$9 = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n \r\n const vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\r\n \r\n const fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n \r\n const vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\r\n \r\n const fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\r\n \r\n const vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n \r\n const vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\r\n \r\n const fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARCOLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEENCOLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEENROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n \r\n const vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\r\n \r\n const vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\r\n \r\n const vertex$2 = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n \r\n const vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\r\n \r\n const fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\r\n \r\n const ShaderChunk = {\r\n\t alphamap_fragment: alphamap_fragment,\r\n\t alphamap_pars_fragment: alphamap_pars_fragment,\r\n\t alphatest_fragment: alphatest_fragment,\r\n\t alphatest_pars_fragment: alphatest_pars_fragment,\r\n\t aomap_fragment: aomap_fragment,\r\n\t aomap_pars_fragment: aomap_pars_fragment,\r\n\t begin_vertex: begin_vertex,\r\n\t beginnormal_vertex: beginnormal_vertex,\r\n\t bsdfs: bsdfs,\r\n\t bumpmap_pars_fragment: bumpmap_pars_fragment,\r\n\t clipping_planes_fragment: clipping_planes_fragment,\r\n\t clipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n\t clipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n\t clipping_planes_vertex: clipping_planes_vertex,\r\n\t color_fragment: color_fragment,\r\n\t color_pars_fragment: color_pars_fragment,\r\n\t color_pars_vertex: color_pars_vertex,\r\n\t color_vertex: color_vertex,\r\n\t common: common,\r\n\t cube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n\t defaultnormal_vertex: defaultnormal_vertex,\r\n\t displacementmap_pars_vertex: displacementmap_pars_vertex,\r\n\t displacementmap_vertex: displacementmap_vertex,\r\n\t emissivemap_fragment: emissivemap_fragment,\r\n\t emissivemap_pars_fragment: emissivemap_pars_fragment,\r\n\t encodings_fragment: encodings_fragment,\r\n\t encodings_pars_fragment: encodings_pars_fragment,\r\n\t envmap_fragment: envmap_fragment,\r\n\t envmap_common_pars_fragment: envmap_common_pars_fragment,\r\n\t envmap_pars_fragment: envmap_pars_fragment,\r\n\t envmap_pars_vertex: envmap_pars_vertex,\r\n\t envmap_physical_pars_fragment: envmap_physical_pars_fragment,\r\n\t envmap_vertex: envmap_vertex,\r\n\t fog_vertex: fog_vertex,\r\n\t fog_pars_vertex: fog_pars_vertex,\r\n\t fog_fragment: fog_fragment,\r\n\t fog_pars_fragment: fog_pars_fragment,\r\n\t gradientmap_pars_fragment: gradientmap_pars_fragment,\r\n\t lightmap_fragment: lightmap_fragment,\r\n\t lightmap_pars_fragment: lightmap_pars_fragment,\r\n\t lights_lambert_vertex: lights_lambert_vertex,\r\n\t lights_pars_begin: lights_pars_begin,\r\n\t lights_toon_fragment: lights_toon_fragment,\r\n\t lights_toon_pars_fragment: lights_toon_pars_fragment,\r\n\t lights_phong_fragment: lights_phong_fragment,\r\n\t lights_phong_pars_fragment: lights_phong_pars_fragment,\r\n\t lights_physical_fragment: lights_physical_fragment,\r\n\t lights_physical_pars_fragment: lights_physical_pars_fragment,\r\n\t lights_fragment_begin: lights_fragment_begin,\r\n\t lights_fragment_maps: lights_fragment_maps,\r\n\t lights_fragment_end: lights_fragment_end,\r\n\t logdepthbuf_fragment: logdepthbuf_fragment,\r\n\t logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n\t logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n\t logdepthbuf_vertex: logdepthbuf_vertex,\r\n\t map_fragment: map_fragment,\r\n\t map_pars_fragment: map_pars_fragment,\r\n\t map_particle_fragment: map_particle_fragment,\r\n\t map_particle_pars_fragment: map_particle_pars_fragment,\r\n\t metalnessmap_fragment: metalnessmap_fragment,\r\n\t metalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n\t morphcolor_vertex: morphcolor_vertex,\r\n\t morphnormal_vertex: morphnormal_vertex,\r\n\t morphtarget_pars_vertex: morphtarget_pars_vertex,\r\n\t morphtarget_vertex: morphtarget_vertex,\r\n\t normal_fragment_begin: normal_fragment_begin,\r\n\t normal_fragment_maps: normal_fragment_maps,\r\n\t normal_pars_fragment: normal_pars_fragment,\r\n\t normal_pars_vertex: normal_pars_vertex,\r\n\t normal_vertex: normal_vertex,\r\n\t normalmap_pars_fragment: normalmap_pars_fragment,\r\n\t clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\r\n\t clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\r\n\t clearcoat_pars_fragment: clearcoat_pars_fragment,\r\n\t output_fragment: output_fragment,\r\n\t packing: packing,\r\n\t premultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n\t project_vertex: project_vertex,\r\n\t dithering_fragment: dithering_fragment,\r\n\t dithering_pars_fragment: dithering_pars_fragment,\r\n\t roughnessmap_fragment: roughnessmap_fragment,\r\n\t roughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n\t shadowmap_pars_fragment: shadowmap_pars_fragment,\r\n\t shadowmap_pars_vertex: shadowmap_pars_vertex,\r\n\t shadowmap_vertex: shadowmap_vertex,\r\n\t shadowmask_pars_fragment: shadowmask_pars_fragment,\r\n\t skinbase_vertex: skinbase_vertex,\r\n\t skinning_pars_vertex: skinning_pars_vertex,\r\n\t skinning_vertex: skinning_vertex,\r\n\t skinnormal_vertex: skinnormal_vertex,\r\n\t specularmap_fragment: specularmap_fragment,\r\n\t specularmap_pars_fragment: specularmap_pars_fragment,\r\n\t tonemapping_fragment: tonemapping_fragment,\r\n\t tonemapping_pars_fragment: tonemapping_pars_fragment,\r\n\t transmission_fragment: transmission_fragment,\r\n\t transmission_pars_fragment: transmission_pars_fragment,\r\n\t uv_pars_fragment: uv_pars_fragment,\r\n\t uv_pars_vertex: uv_pars_vertex,\r\n\t uv_vertex: uv_vertex,\r\n\t uv2_pars_fragment: uv2_pars_fragment,\r\n\t uv2_pars_vertex: uv2_pars_vertex,\r\n\t uv2_vertex: uv2_vertex,\r\n\t worldpos_vertex: worldpos_vertex,\r\n \r\n\t background_vert: vertex$g,\r\n\t background_frag: fragment$g,\r\n\t cube_vert: vertex$f,\r\n\t cube_frag: fragment$f,\r\n\t depth_vert: vertex$e,\r\n\t depth_frag: fragment$e,\r\n\t distanceRGBA_vert: vertex$d,\r\n\t distanceRGBA_frag: fragment$d,\r\n\t equirect_vert: vertex$c,\r\n\t equirect_frag: fragment$c,\r\n\t linedashed_vert: vertex$b,\r\n\t linedashed_frag: fragment$b,\r\n\t meshbasic_vert: vertex$a,\r\n\t meshbasic_frag: fragment$a,\r\n\t meshlambert_vert: vertex$9,\r\n\t meshlambert_frag: fragment$9,\r\n\t meshmatcap_vert: vertex$8,\r\n\t meshmatcap_frag: fragment$8,\r\n\t meshnormal_vert: vertex$7,\r\n\t meshnormal_frag: fragment$7,\r\n\t meshphong_vert: vertex$6,\r\n\t meshphong_frag: fragment$6,\r\n\t meshphysical_vert: vertex$5,\r\n\t meshphysical_frag: fragment$5,\r\n\t meshtoon_vert: vertex$4,\r\n\t meshtoon_frag: fragment$4,\r\n\t points_vert: vertex$3,\r\n\t points_frag: fragment$3,\r\n\t shadow_vert: vertex$2,\r\n\t shadow_frag: fragment$2,\r\n\t sprite_vert: vertex$1,\r\n\t sprite_frag: fragment$1\r\n };\r\n \r\n /**\r\n  * Uniforms library for shared webgl shaders\r\n  */\r\n \r\n const UniformsLib = {\r\n \r\n\t common: {\r\n \r\n\t\t diffuse: { value: new Color( 0xffffff ) },\r\n\t\t opacity: { value: 1.0 },\r\n \r\n\t\t map: { value: null },\r\n\t\t uvTransform: { value: new Matrix3() },\r\n\t\t uv2Transform: { value: new Matrix3() },\r\n \r\n\t\t alphaMap: { value: null },\r\n\t\t alphaTest: { value: 0 }\r\n \r\n\t },\r\n \r\n\t specularmap: {\r\n \r\n\t\t specularMap: { value: null },\r\n \r\n\t },\r\n \r\n\t envmap: {\r\n \r\n\t\t envMap: { value: null },\r\n\t\t flipEnvMap: { value: - 1 },\r\n\t\t reflectivity: { value: 1.0 }, // basic, lambert, phong\r\n\t\t ior: { value: 1.5 }, // standard, physical\r\n\t\t refractionRatio: { value: 0.98 }\r\n \r\n\t },\r\n \r\n\t aomap: {\r\n \r\n\t\t aoMap: { value: null },\r\n\t\t aoMapIntensity: { value: 1 }\r\n \r\n\t },\r\n \r\n\t lightmap: {\r\n \r\n\t\t lightMap: { value: null },\r\n\t\t lightMapIntensity: { value: 1 }\r\n \r\n\t },\r\n \r\n\t emissivemap: {\r\n \r\n\t\t emissiveMap: { value: null }\r\n \r\n\t },\r\n \r\n\t bumpmap: {\r\n \r\n\t\t bumpMap: { value: null },\r\n\t\t bumpScale: { value: 1 }\r\n \r\n\t },\r\n \r\n\t normalmap: {\r\n \r\n\t\t normalMap: { value: null },\r\n\t\t normalScale: { value: new Vector2( 1, 1 ) }\r\n \r\n\t },\r\n \r\n\t displacementmap: {\r\n \r\n\t\t displacementMap: { value: null },\r\n\t\t displacementScale: { value: 1 },\r\n\t\t displacementBias: { value: 0 }\r\n \r\n\t },\r\n \r\n\t roughnessmap: {\r\n \r\n\t\t roughnessMap: { value: null }\r\n \r\n\t },\r\n \r\n\t metalnessmap: {\r\n \r\n\t\t metalnessMap: { value: null }\r\n \r\n\t },\r\n \r\n\t gradientmap: {\r\n \r\n\t\t gradientMap: { value: null }\r\n \r\n\t },\r\n \r\n\t fog: {\r\n \r\n\t\t fogDensity: { value: 0.00025 },\r\n\t\t fogNear: { value: 1 },\r\n\t\t fogFar: { value: 2000 },\r\n\t\t fogColor: { value: new Color( 0xffffff ) }\r\n \r\n\t },\r\n \r\n\t lights: {\r\n \r\n\t\t ambientLightColor: { value: [] },\r\n \r\n\t\t lightProbe: { value: [] },\r\n \r\n\t\t directionalLights: { value: [], properties: {\r\n\t\t\t direction: {},\r\n\t\t\t color: {}\r\n\t\t } },\r\n \r\n\t\t directionalLightShadows: { value: [], properties: {\r\n\t\t\t shadowBias: {},\r\n\t\t\t shadowNormalBias: {},\r\n\t\t\t shadowRadius: {},\r\n\t\t\t shadowMapSize: {}\r\n\t\t } },\r\n \r\n\t\t directionalShadowMap: { value: [] },\r\n\t\t directionalShadowMatrix: { value: [] },\r\n \r\n\t\t spotLights: { value: [], properties: {\r\n\t\t\t color: {},\r\n\t\t\t position: {},\r\n\t\t\t direction: {},\r\n\t\t\t distance: {},\r\n\t\t\t coneCos: {},\r\n\t\t\t penumbraCos: {},\r\n\t\t\t decay: {}\r\n\t\t } },\r\n \r\n\t\t spotLightShadows: { value: [], properties: {\r\n\t\t\t shadowBias: {},\r\n\t\t\t shadowNormalBias: {},\r\n\t\t\t shadowRadius: {},\r\n\t\t\t shadowMapSize: {}\r\n\t\t } },\r\n \r\n\t\t spotShadowMap: { value: [] },\r\n\t\t spotShadowMatrix: { value: [] },\r\n \r\n\t\t pointLights: { value: [], properties: {\r\n\t\t\t color: {},\r\n\t\t\t position: {},\r\n\t\t\t decay: {},\r\n\t\t\t distance: {}\r\n\t\t } },\r\n \r\n\t\t pointLightShadows: { value: [], properties: {\r\n\t\t\t shadowBias: {},\r\n\t\t\t shadowNormalBias: {},\r\n\t\t\t shadowRadius: {},\r\n\t\t\t shadowMapSize: {},\r\n\t\t\t shadowCameraNear: {},\r\n\t\t\t shadowCameraFar: {}\r\n\t\t } },\r\n \r\n\t\t pointShadowMap: { value: [] },\r\n\t\t pointShadowMatrix: { value: [] },\r\n \r\n\t\t hemisphereLights: { value: [], properties: {\r\n\t\t\t direction: {},\r\n\t\t\t skyColor: {},\r\n\t\t\t groundColor: {}\r\n\t\t } },\r\n \r\n\t\t // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\r\n\t\t rectAreaLights: { value: [], properties: {\r\n\t\t\t color: {},\r\n\t\t\t position: {},\r\n\t\t\t width: {},\r\n\t\t\t height: {}\r\n\t\t } },\r\n \r\n\t\t ltc_1: { value: null },\r\n\t\t ltc_2: { value: null }\r\n \r\n\t },\r\n \r\n\t points: {\r\n \r\n\t\t diffuse: { value: new Color( 0xffffff ) },\r\n\t\t opacity: { value: 1.0 },\r\n\t\t size: { value: 1.0 },\r\n\t\t scale: { value: 1.0 },\r\n\t\t map: { value: null },\r\n\t\t alphaMap: { value: null },\r\n\t\t alphaTest: { value: 0 },\r\n\t\t uvTransform: { value: new Matrix3() }\r\n \r\n\t },\r\n \r\n\t sprite: {\r\n \r\n\t\t diffuse: { value: new Color( 0xffffff ) },\r\n\t\t opacity: { value: 1.0 },\r\n\t\t center: { value: new Vector2( 0.5, 0.5 ) },\r\n\t\t rotation: { value: 0.0 },\r\n\t\t map: { value: null },\r\n\t\t alphaMap: { value: null },\r\n\t\t alphaTest: { value: 0 },\r\n\t\t uvTransform: { value: new Matrix3() }\r\n \r\n\t }\r\n \r\n };\r\n \r\n const ShaderLib = {\r\n \r\n\t basic: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.specularmap,\r\n\t\t\t UniformsLib.envmap,\r\n\t\t\t UniformsLib.aomap,\r\n\t\t\t UniformsLib.lightmap,\r\n\t\t\t UniformsLib.fog\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.meshbasic_vert,\r\n\t\t fragmentShader: ShaderChunk.meshbasic_frag\r\n \r\n\t },\r\n \r\n\t lambert: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.specularmap,\r\n\t\t\t UniformsLib.envmap,\r\n\t\t\t UniformsLib.aomap,\r\n\t\t\t UniformsLib.lightmap,\r\n\t\t\t UniformsLib.emissivemap,\r\n\t\t\t UniformsLib.fog,\r\n\t\t\t UniformsLib.lights,\r\n\t\t\t {\r\n\t\t\t\t emissive: { value: new Color( 0x000000 ) }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.meshlambert_vert,\r\n\t\t fragmentShader: ShaderChunk.meshlambert_frag\r\n \r\n\t },\r\n \r\n\t phong: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.specularmap,\r\n\t\t\t UniformsLib.envmap,\r\n\t\t\t UniformsLib.aomap,\r\n\t\t\t UniformsLib.lightmap,\r\n\t\t\t UniformsLib.emissivemap,\r\n\t\t\t UniformsLib.bumpmap,\r\n\t\t\t UniformsLib.normalmap,\r\n\t\t\t UniformsLib.displacementmap,\r\n\t\t\t UniformsLib.fog,\r\n\t\t\t UniformsLib.lights,\r\n\t\t\t {\r\n\t\t\t\t emissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t specular: { value: new Color( 0x111111 ) },\r\n\t\t\t\t shininess: { value: 30 }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.meshphong_vert,\r\n\t\t fragmentShader: ShaderChunk.meshphong_frag\r\n \r\n\t },\r\n \r\n\t standard: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.envmap,\r\n\t\t\t UniformsLib.aomap,\r\n\t\t\t UniformsLib.lightmap,\r\n\t\t\t UniformsLib.emissivemap,\r\n\t\t\t UniformsLib.bumpmap,\r\n\t\t\t UniformsLib.normalmap,\r\n\t\t\t UniformsLib.displacementmap,\r\n\t\t\t UniformsLib.roughnessmap,\r\n\t\t\t UniformsLib.metalnessmap,\r\n\t\t\t UniformsLib.fog,\r\n\t\t\t UniformsLib.lights,\r\n\t\t\t {\r\n\t\t\t\t emissive: { value: new Color( 0x000000 ) },\r\n\t\t\t\t roughness: { value: 1.0 },\r\n\t\t\t\t metalness: { value: 0.0 },\r\n\t\t\t\t envMapIntensity: { value: 1 } // temporary\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.meshphysical_vert,\r\n\t\t fragmentShader: ShaderChunk.meshphysical_frag\r\n \r\n\t },\r\n \r\n\t toon: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.aomap,\r\n\t\t\t UniformsLib.lightmap,\r\n\t\t\t UniformsLib.emissivemap,\r\n\t\t\t UniformsLib.bumpmap,\r\n\t\t\t UniformsLib.normalmap,\r\n\t\t\t UniformsLib.displacementmap,\r\n\t\t\t UniformsLib.gradientmap,\r\n\t\t\t UniformsLib.fog,\r\n\t\t\t UniformsLib.lights,\r\n\t\t\t {\r\n\t\t\t\t emissive: { value: new Color( 0x000000 ) }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.meshtoon_vert,\r\n\t\t fragmentShader: ShaderChunk.meshtoon_frag\r\n \r\n\t },\r\n \r\n\t matcap: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.bumpmap,\r\n\t\t\t UniformsLib.normalmap,\r\n\t\t\t UniformsLib.displacementmap,\r\n\t\t\t UniformsLib.fog,\r\n\t\t\t {\r\n\t\t\t\t matcap: { value: null }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.meshmatcap_vert,\r\n\t\t fragmentShader: ShaderChunk.meshmatcap_frag\r\n \r\n\t },\r\n \r\n\t points: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.points,\r\n\t\t\t UniformsLib.fog\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.points_vert,\r\n\t\t fragmentShader: ShaderChunk.points_frag\r\n \r\n\t },\r\n \r\n\t dashed: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.fog,\r\n\t\t\t {\r\n\t\t\t\t scale: { value: 1 },\r\n\t\t\t\t dashSize: { value: 1 },\r\n\t\t\t\t totalSize: { value: 2 }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.linedashed_vert,\r\n\t\t fragmentShader: ShaderChunk.linedashed_frag\r\n \r\n\t },\r\n \r\n\t depth: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.displacementmap\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.depth_vert,\r\n\t\t fragmentShader: ShaderChunk.depth_frag\r\n \r\n\t },\r\n \r\n\t normal: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.bumpmap,\r\n\t\t\t UniformsLib.normalmap,\r\n\t\t\t UniformsLib.displacementmap,\r\n\t\t\t {\r\n\t\t\t\t opacity: { value: 1.0 }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.meshnormal_vert,\r\n\t\t fragmentShader: ShaderChunk.meshnormal_frag\r\n \r\n\t },\r\n \r\n\t sprite: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.sprite,\r\n\t\t\t UniformsLib.fog\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.sprite_vert,\r\n\t\t fragmentShader: ShaderChunk.sprite_frag\r\n \r\n\t },\r\n \r\n\t background: {\r\n \r\n\t\t uniforms: {\r\n\t\t\t uvTransform: { value: new Matrix3() },\r\n\t\t\t t2D: { value: null },\r\n\t\t },\r\n \r\n\t\t vertexShader: ShaderChunk.background_vert,\r\n\t\t fragmentShader: ShaderChunk.background_frag\r\n \r\n\t },\r\n\t /* -------------------------------------------------------------------------\r\n\t //\tCube map shader\r\n\t  ------------------------------------------------------------------------- */\r\n \r\n\t cube: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.envmap,\r\n\t\t\t {\r\n\t\t\t\t opacity: { value: 1.0 }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.cube_vert,\r\n\t\t fragmentShader: ShaderChunk.cube_frag\r\n \r\n\t },\r\n \r\n\t equirect: {\r\n \r\n\t\t uniforms: {\r\n\t\t\t tEquirect: { value: null },\r\n\t\t },\r\n \r\n\t\t vertexShader: ShaderChunk.equirect_vert,\r\n\t\t fragmentShader: ShaderChunk.equirect_frag\r\n \r\n\t },\r\n \r\n\t distanceRGBA: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.common,\r\n\t\t\t UniformsLib.displacementmap,\r\n\t\t\t {\r\n\t\t\t\t referencePosition: { value: new Vector3() },\r\n\t\t\t\t nearDistance: { value: 1 },\r\n\t\t\t\t farDistance: { value: 1000 }\r\n\t\t\t }\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.distanceRGBA_vert,\r\n\t\t fragmentShader: ShaderChunk.distanceRGBA_frag\r\n \r\n\t },\r\n \r\n\t shadow: {\r\n \r\n\t\t uniforms: mergeUniforms( [\r\n\t\t\t UniformsLib.lights,\r\n\t\t\t UniformsLib.fog,\r\n\t\t\t {\r\n\t\t\t\t color: { value: new Color( 0x00000 ) },\r\n\t\t\t\t opacity: { value: 1.0 }\r\n\t\t\t },\r\n\t\t ] ),\r\n \r\n\t\t vertexShader: ShaderChunk.shadow_vert,\r\n\t\t fragmentShader: ShaderChunk.shadow_frag\r\n \r\n\t }\r\n \r\n };\r\n \r\n ShaderLib.physical = {\r\n \r\n\t uniforms: mergeUniforms( [\r\n\t\t ShaderLib.standard.uniforms,\r\n\t\t {\r\n\t\t\t clearcoat: { value: 0 },\r\n\t\t\t clearcoatMap: { value: null },\r\n\t\t\t clearcoatRoughness: { value: 0 },\r\n\t\t\t clearcoatRoughnessMap: { value: null },\r\n\t\t\t clearcoatNormalScale: { value: new Vector2( 1, 1 ) },\r\n\t\t\t clearcoatNormalMap: { value: null },\r\n\t\t\t sheen: { value: 0 },\r\n\t\t\t sheenColor: { value: new Color( 0x000000 ) },\r\n\t\t\t sheenColorMap: { value: null },\r\n\t\t\t sheenRoughness: { value: 1 },\r\n\t\t\t sheenRoughnessMap: { value: null },\r\n\t\t\t transmission: { value: 0 },\r\n\t\t\t transmissionMap: { value: null },\r\n\t\t\t transmissionSamplerSize: { value: new Vector2() },\r\n\t\t\t transmissionSamplerMap: { value: null },\r\n\t\t\t thickness: { value: 0 },\r\n\t\t\t thicknessMap: { value: null },\r\n\t\t\t attenuationDistance: { value: 0 },\r\n\t\t\t attenuationColor: { value: new Color( 0x000000 ) },\r\n\t\t\t specularIntensity: { value: 1 },\r\n\t\t\t specularIntensityMap: { value: null },\r\n\t\t\t specularColor: { value: new Color( 1, 1, 1 ) },\r\n\t\t\t specularColorMap: { value: null },\r\n\t\t }\r\n\t ] ),\r\n \r\n\t vertexShader: ShaderChunk.meshphysical_vert,\r\n\t fragmentShader: ShaderChunk.meshphysical_frag\r\n \r\n };\r\n \r\n function WebGLBackground( renderer, cubemaps, state, objects, alpha, premultipliedAlpha ) {\r\n \r\n\t const clearColor = new Color( 0x000000 );\r\n\t let clearAlpha = alpha === true ? 0 : 1;\r\n \r\n\t let planeMesh;\r\n\t let boxMesh;\r\n \r\n\t let currentBackground = null;\r\n\t let currentBackgroundVersion = 0;\r\n\t let currentTonemapping = null;\r\n \r\n\t function render( renderList, scene ) {\r\n \r\n\t\t let forceClear = false;\r\n\t\t let background = scene.isScene === true ? scene.background : null;\r\n \r\n\t\t if ( background && background.isTexture ) {\r\n \r\n\t\t\t background = cubemaps.get( background );\r\n \r\n\t\t }\r\n \r\n\t\t // Ignore background in AR\r\n\t\t // TODO: Reconsider this.\r\n \r\n\t\t const xr = renderer.xr;\r\n\t\t const session = xr.getSession && xr.getSession();\r\n \r\n\t\t if ( session && session.environmentBlendMode === 'additive' ) {\r\n \r\n\t\t\t background = null;\r\n \r\n\t\t }\r\n \r\n\t\t if ( background === null ) {\r\n \r\n\t\t\t setClear( clearColor, clearAlpha );\r\n \r\n\t\t } else if ( background && background.isColor ) {\r\n \r\n\t\t\t setClear( background, 1 );\r\n\t\t\t forceClear = true;\r\n \r\n\t\t }\r\n \r\n\t\t if ( renderer.autoClear || forceClear ) {\r\n \r\n\t\t\t renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\r\n \r\n\t\t }\r\n \r\n\t\t if ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\r\n \r\n\t\t\t if ( boxMesh === undefined ) {\r\n \r\n\t\t\t\t boxMesh = new Mesh(\r\n\t\t\t\t\t new BoxGeometry( 1, 1, 1 ),\r\n\t\t\t\t\t new ShaderMaterial( {\r\n\t\t\t\t\t\t name: 'BackgroundCubeMaterial',\r\n\t\t\t\t\t\t uniforms: cloneUniforms( ShaderLib.cube.uniforms ),\r\n\t\t\t\t\t\t vertexShader: ShaderLib.cube.vertexShader,\r\n\t\t\t\t\t\t fragmentShader: ShaderLib.cube.fragmentShader,\r\n\t\t\t\t\t\t side: BackSide,\r\n\t\t\t\t\t\t depthTest: false,\r\n\t\t\t\t\t\t depthWrite: false,\r\n\t\t\t\t\t\t fog: false\r\n\t\t\t\t\t } )\r\n\t\t\t\t );\r\n \r\n\t\t\t\t boxMesh.geometry.deleteAttribute( 'normal' );\r\n\t\t\t\t boxMesh.geometry.deleteAttribute( 'uv' );\r\n \r\n\t\t\t\t boxMesh.onBeforeRender = function ( renderer, scene, camera ) {\r\n \r\n\t\t\t\t\t this.matrixWorld.copyPosition( camera.matrixWorld );\r\n \r\n\t\t\t\t };\r\n \r\n\t\t\t\t // enable code injection for non-built-in material\r\n\t\t\t\t Object.defineProperty( boxMesh.material, 'envMap', {\r\n \r\n\t\t\t\t\t get: function () {\r\n \r\n\t\t\t\t\t\t return this.uniforms.envMap.value;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } );\r\n \r\n\t\t\t\t objects.update( boxMesh );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t boxMesh.material.uniforms.envMap.value = background;\r\n\t\t\t boxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\r\n \r\n\t\t\t if ( currentBackground !== background ||\r\n\t\t\t\t currentBackgroundVersion !== background.version ||\r\n\t\t\t\t currentTonemapping !== renderer.toneMapping ) {\r\n \r\n\t\t\t\t boxMesh.material.needsUpdate = true;\r\n \r\n\t\t\t\t currentBackground = background;\r\n\t\t\t\t currentBackgroundVersion = background.version;\r\n\t\t\t\t currentTonemapping = renderer.toneMapping;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // push to the pre-sorted opaque render list\r\n\t\t\t renderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\r\n \r\n\t\t } else if ( background && background.isTexture ) {\r\n \r\n\t\t\t if ( planeMesh === undefined ) {\r\n \r\n\t\t\t\t planeMesh = new Mesh(\r\n\t\t\t\t\t new PlaneGeometry( 2, 2 ),\r\n\t\t\t\t\t new ShaderMaterial( {\r\n\t\t\t\t\t\t name: 'BackgroundMaterial',\r\n\t\t\t\t\t\t uniforms: cloneUniforms( ShaderLib.background.uniforms ),\r\n\t\t\t\t\t\t vertexShader: ShaderLib.background.vertexShader,\r\n\t\t\t\t\t\t fragmentShader: ShaderLib.background.fragmentShader,\r\n\t\t\t\t\t\t side: FrontSide,\r\n\t\t\t\t\t\t depthTest: false,\r\n\t\t\t\t\t\t depthWrite: false,\r\n\t\t\t\t\t\t fog: false\r\n\t\t\t\t\t } )\r\n\t\t\t\t );\r\n \r\n\t\t\t\t planeMesh.geometry.deleteAttribute( 'normal' );\r\n \r\n\t\t\t\t // enable code injection for non-built-in material\r\n\t\t\t\t Object.defineProperty( planeMesh.material, 'map', {\r\n \r\n\t\t\t\t\t get: function () {\r\n \r\n\t\t\t\t\t\t return this.uniforms.t2D.value;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } );\r\n \r\n\t\t\t\t objects.update( planeMesh );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t planeMesh.material.uniforms.t2D.value = background;\r\n \r\n\t\t\t if ( background.matrixAutoUpdate === true ) {\r\n \r\n\t\t\t\t background.updateMatrix();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t planeMesh.material.uniforms.uvTransform.value.copy( background.matrix );\r\n \r\n\t\t\t if ( currentBackground !== background ||\r\n\t\t\t\t currentBackgroundVersion !== background.version ||\r\n\t\t\t\t currentTonemapping !== renderer.toneMapping ) {\r\n \r\n\t\t\t\t planeMesh.material.needsUpdate = true;\r\n \r\n\t\t\t\t currentBackground = background;\r\n\t\t\t\t currentBackgroundVersion = background.version;\r\n\t\t\t\t currentTonemapping = renderer.toneMapping;\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t // push to the pre-sorted opaque render list\r\n\t\t\t renderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function setClear( color, alpha ) {\r\n \r\n\t\t state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t getClearColor: function () {\r\n \r\n\t\t\t return clearColor;\r\n \r\n\t\t },\r\n\t\t setClearColor: function ( color, alpha = 1 ) {\r\n \r\n\t\t\t clearColor.set( color );\r\n\t\t\t clearAlpha = alpha;\r\n\t\t\t setClear( clearColor, clearAlpha );\r\n \r\n\t\t },\r\n\t\t getClearAlpha: function () {\r\n \r\n\t\t\t return clearAlpha;\r\n \r\n\t\t },\r\n\t\t setClearAlpha: function ( alpha ) {\r\n \r\n\t\t\t clearAlpha = alpha;\r\n\t\t\t setClear( clearColor, clearAlpha );\r\n \r\n\t\t },\r\n\t\t render: render\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLBindingStates( gl, extensions, attributes, capabilities ) {\r\n \r\n\t const maxVertexAttributes = gl.getParameter( 34921 );\r\n \r\n\t const extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\r\n\t const vaoAvailable = capabilities.isWebGL2 || extension !== null;\r\n \r\n\t const bindingStates = {};\r\n \r\n\t const defaultState = createBindingState( null );\r\n\t let currentState = defaultState;\r\n \r\n\t function setup( object, material, program, geometry, index ) {\r\n \r\n\t\t let updateBuffers = false;\r\n \r\n\t\t if ( vaoAvailable ) {\r\n \r\n\t\t\t const state = getBindingState( geometry, program, material );\r\n \r\n\t\t\t if ( currentState !== state ) {\r\n \r\n\t\t\t\t currentState = state;\r\n\t\t\t\t bindVertexArrayObject( currentState.object );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t updateBuffers = needsUpdate( geometry, index );\r\n \r\n\t\t\t if ( updateBuffers ) saveCache( geometry, index );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const wireframe = ( material.wireframe === true );\r\n \r\n\t\t\t if ( currentState.geometry !== geometry.id ||\r\n\t\t\t\t currentState.program !== program.id ||\r\n\t\t\t\t currentState.wireframe !== wireframe ) {\r\n \r\n\t\t\t\t currentState.geometry = geometry.id;\r\n\t\t\t\t currentState.program = program.id;\r\n\t\t\t\t currentState.wireframe = wireframe;\r\n \r\n\t\t\t\t updateBuffers = true;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( object.isInstancedMesh === true ) {\r\n \r\n\t\t\t updateBuffers = true;\r\n \r\n\t\t }\r\n \r\n\t\t if ( index !== null ) {\r\n \r\n\t\t\t attributes.update( index, 34963 );\r\n \r\n\t\t }\r\n \r\n\t\t if ( updateBuffers ) {\r\n \r\n\t\t\t setupVertexAttributes( object, material, program, geometry );\r\n \r\n\t\t\t if ( index !== null ) {\r\n \r\n\t\t\t\t gl.bindBuffer( 34963, attributes.get( index ).buffer );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function createVertexArrayObject() {\r\n \r\n\t\t if ( capabilities.isWebGL2 ) return gl.createVertexArray();\r\n \r\n\t\t return extension.createVertexArrayOES();\r\n \r\n\t }\r\n \r\n\t function bindVertexArrayObject( vao ) {\r\n \r\n\t\t if ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\r\n \r\n\t\t return extension.bindVertexArrayOES( vao );\r\n \r\n\t }\r\n \r\n\t function deleteVertexArrayObject( vao ) {\r\n \r\n\t\t if ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\r\n \r\n\t\t return extension.deleteVertexArrayOES( vao );\r\n \r\n\t }\r\n \r\n\t function getBindingState( geometry, program, material ) {\r\n \r\n\t\t const wireframe = ( material.wireframe === true );\r\n \r\n\t\t let programMap = bindingStates[ geometry.id ];\r\n \r\n\t\t if ( programMap === undefined ) {\r\n \r\n\t\t\t programMap = {};\r\n\t\t\t bindingStates[ geometry.id ] = programMap;\r\n \r\n\t\t }\r\n \r\n\t\t let stateMap = programMap[ program.id ];\r\n \r\n\t\t if ( stateMap === undefined ) {\r\n \r\n\t\t\t stateMap = {};\r\n\t\t\t programMap[ program.id ] = stateMap;\r\n \r\n\t\t }\r\n \r\n\t\t let state = stateMap[ wireframe ];\r\n \r\n\t\t if ( state === undefined ) {\r\n \r\n\t\t\t state = createBindingState( createVertexArrayObject() );\r\n\t\t\t stateMap[ wireframe ] = state;\r\n \r\n\t\t }\r\n \r\n\t\t return state;\r\n \r\n\t }\r\n \r\n\t function createBindingState( vao ) {\r\n \r\n\t\t const newAttributes = [];\r\n\t\t const enabledAttributes = [];\r\n\t\t const attributeDivisors = [];\r\n \r\n\t\t for ( let i = 0; i < maxVertexAttributes; i ++ ) {\r\n \r\n\t\t\t newAttributes[ i ] = 0;\r\n\t\t\t enabledAttributes[ i ] = 0;\r\n\t\t\t attributeDivisors[ i ] = 0;\r\n \r\n\t\t }\r\n \r\n\t\t return {\r\n \r\n\t\t\t // for backward compatibility on non-VAO support browser\r\n\t\t\t geometry: null,\r\n\t\t\t program: null,\r\n\t\t\t wireframe: false,\r\n \r\n\t\t\t newAttributes: newAttributes,\r\n\t\t\t enabledAttributes: enabledAttributes,\r\n\t\t\t attributeDivisors: attributeDivisors,\r\n\t\t\t object: vao,\r\n\t\t\t attributes: {},\r\n\t\t\t index: null\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t function needsUpdate( geometry, index ) {\r\n \r\n\t\t const cachedAttributes = currentState.attributes;\r\n\t\t const geometryAttributes = geometry.attributes;\r\n \r\n\t\t let attributesNum = 0;\r\n \r\n\t\t for ( const key in geometryAttributes ) {\r\n \r\n\t\t\t const cachedAttribute = cachedAttributes[ key ];\r\n\t\t\t const geometryAttribute = geometryAttributes[ key ];\r\n \r\n\t\t\t if ( cachedAttribute === undefined ) return true;\r\n \r\n\t\t\t if ( cachedAttribute.attribute !== geometryAttribute ) return true;\r\n \r\n\t\t\t if ( cachedAttribute.data !== geometryAttribute.data ) return true;\r\n \r\n\t\t\t attributesNum ++;\r\n \r\n\t\t }\r\n \r\n\t\t if ( currentState.attributesNum !== attributesNum ) return true;\r\n \r\n\t\t if ( currentState.index !== index ) return true;\r\n \r\n\t\t return false;\r\n \r\n\t }\r\n \r\n\t function saveCache( geometry, index ) {\r\n \r\n\t\t const cache = {};\r\n\t\t const attributes = geometry.attributes;\r\n\t\t let attributesNum = 0;\r\n \r\n\t\t for ( const key in attributes ) {\r\n \r\n\t\t\t const attribute = attributes[ key ];\r\n \r\n\t\t\t const data = {};\r\n\t\t\t data.attribute = attribute;\r\n \r\n\t\t\t if ( attribute.data ) {\r\n \r\n\t\t\t\t data.data = attribute.data;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t cache[ key ] = data;\r\n \r\n\t\t\t attributesNum ++;\r\n \r\n\t\t }\r\n \r\n\t\t currentState.attributes = cache;\r\n\t\t currentState.attributesNum = attributesNum;\r\n \r\n\t\t currentState.index = index;\r\n \r\n\t }\r\n \r\n\t function initAttributes() {\r\n \r\n\t\t const newAttributes = currentState.newAttributes;\r\n \r\n\t\t for ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\r\n \r\n\t\t\t newAttributes[ i ] = 0;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function enableAttribute( attribute ) {\r\n \r\n\t\t enableAttributeAndDivisor( attribute, 0 );\r\n \r\n\t }\r\n \r\n\t function enableAttributeAndDivisor( attribute, meshPerAttribute ) {\r\n \r\n\t\t const newAttributes = currentState.newAttributes;\r\n\t\t const enabledAttributes = currentState.enabledAttributes;\r\n\t\t const attributeDivisors = currentState.attributeDivisors;\r\n \r\n\t\t newAttributes[ attribute ] = 1;\r\n \r\n\t\t if ( enabledAttributes[ attribute ] === 0 ) {\r\n \r\n\t\t\t gl.enableVertexAttribArray( attribute );\r\n\t\t\t enabledAttributes[ attribute ] = 1;\r\n \r\n\t\t }\r\n \r\n\t\t if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n \r\n\t\t\t const extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\r\n \r\n\t\t\t extension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\r\n\t\t\t attributeDivisors[ attribute ] = meshPerAttribute;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function disableUnusedAttributes() {\r\n \r\n\t\t const newAttributes = currentState.newAttributes;\r\n\t\t const enabledAttributes = currentState.enabledAttributes;\r\n \r\n\t\t for ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\r\n \r\n\t\t\t if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n \r\n\t\t\t\t gl.disableVertexAttribArray( i );\r\n\t\t\t\t enabledAttributes[ i ] = 0;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function vertexAttribPointer( index, size, type, normalized, stride, offset ) {\r\n \r\n\t\t if ( capabilities.isWebGL2 === true && ( type === 5124 || type === 5125 ) ) {\r\n \r\n\t\t\t gl.vertexAttribIPointer( index, size, type, stride, offset );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t gl.vertexAttribPointer( index, size, type, normalized, stride, offset );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function setupVertexAttributes( object, material, program, geometry ) {\r\n \r\n\t\t if ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\r\n \r\n\t\t\t if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\r\n \r\n\t\t }\r\n \r\n\t\t initAttributes();\r\n \r\n\t\t const geometryAttributes = geometry.attributes;\r\n \r\n\t\t const programAttributes = program.getAttributes();\r\n \r\n\t\t const materialDefaultAttributeValues = material.defaultAttributeValues;\r\n \r\n\t\t for ( const name in programAttributes ) {\r\n \r\n\t\t\t const programAttribute = programAttributes[ name ];\r\n \r\n\t\t\t if ( programAttribute.location >= 0 ) {\r\n \r\n\t\t\t\t let geometryAttribute = geometryAttributes[ name ];\r\n \r\n\t\t\t\t if ( geometryAttribute === undefined ) {\r\n \r\n\t\t\t\t\t if ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\r\n\t\t\t\t\t if ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( geometryAttribute !== undefined ) {\r\n \r\n\t\t\t\t\t const normalized = geometryAttribute.normalized;\r\n\t\t\t\t\t const size = geometryAttribute.itemSize;\r\n \r\n\t\t\t\t\t const attribute = attributes.get( geometryAttribute );\r\n \r\n\t\t\t\t\t // TODO Attribute may not be available on context restore\r\n \r\n\t\t\t\t\t if ( attribute === undefined ) continue;\r\n \r\n\t\t\t\t\t const buffer = attribute.buffer;\r\n\t\t\t\t\t const type = attribute.type;\r\n\t\t\t\t\t const bytesPerElement = attribute.bytesPerElement;\r\n \r\n\t\t\t\t\t if ( geometryAttribute.isInterleavedBufferAttribute ) {\r\n \r\n\t\t\t\t\t\t const data = geometryAttribute.data;\r\n\t\t\t\t\t\t const stride = data.stride;\r\n\t\t\t\t\t\t const offset = geometryAttribute.offset;\r\n \r\n\t\t\t\t\t\t if ( data.isInstancedInterleavedBuffer ) {\r\n \r\n\t\t\t\t\t\t\t for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t\t enableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t\t if ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\r\n \r\n\t\t\t\t\t\t\t\t geometry._maxInstanceCount = data.meshPerAttribute * data.count;\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t\t enableAttribute( programAttribute.location + i );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t gl.bindBuffer( 34962, buffer );\r\n \r\n\t\t\t\t\t\t for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t vertexAttribPointer(\r\n\t\t\t\t\t\t\t\t programAttribute.location + i,\r\n\t\t\t\t\t\t\t\t size / programAttribute.locationSize,\r\n\t\t\t\t\t\t\t\t type,\r\n\t\t\t\t\t\t\t\t normalized,\r\n\t\t\t\t\t\t\t\t stride * bytesPerElement,\r\n\t\t\t\t\t\t\t\t ( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement\r\n\t\t\t\t\t\t\t );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t if ( geometryAttribute.isInstancedBufferAttribute ) {\r\n \r\n\t\t\t\t\t\t\t for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t\t enableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t\t if ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\r\n \r\n\t\t\t\t\t\t\t\t geometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t\t enableAttribute( programAttribute.location + i );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t gl.bindBuffer( 34962, buffer );\r\n \r\n\t\t\t\t\t\t for ( let i = 0; i < programAttribute.locationSize; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t vertexAttribPointer(\r\n\t\t\t\t\t\t\t\t programAttribute.location + i,\r\n\t\t\t\t\t\t\t\t size / programAttribute.locationSize,\r\n\t\t\t\t\t\t\t\t type,\r\n\t\t\t\t\t\t\t\t normalized,\r\n\t\t\t\t\t\t\t\t size * bytesPerElement,\r\n\t\t\t\t\t\t\t\t ( size / programAttribute.locationSize ) * i * bytesPerElement\r\n\t\t\t\t\t\t\t );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else if ( materialDefaultAttributeValues !== undefined ) {\r\n \r\n\t\t\t\t\t const value = materialDefaultAttributeValues[ name ];\r\n \r\n\t\t\t\t\t if ( value !== undefined ) {\r\n \r\n\t\t\t\t\t\t switch ( value.length ) {\r\n \r\n\t\t\t\t\t\t\t case 2:\r\n\t\t\t\t\t\t\t\t gl.vertexAttrib2fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case 3:\r\n\t\t\t\t\t\t\t\t gl.vertexAttrib3fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case 4:\r\n\t\t\t\t\t\t\t\t gl.vertexAttrib4fv( programAttribute.location, value );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t default:\r\n\t\t\t\t\t\t\t\t gl.vertexAttrib1fv( programAttribute.location, value );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t disableUnusedAttributes();\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t reset();\r\n \r\n\t\t for ( const geometryId in bindingStates ) {\r\n \r\n\t\t\t const programMap = bindingStates[ geometryId ];\r\n \r\n\t\t\t for ( const programId in programMap ) {\r\n \r\n\t\t\t\t const stateMap = programMap[ programId ];\r\n \r\n\t\t\t\t for ( const wireframe in stateMap ) {\r\n \r\n\t\t\t\t\t deleteVertexArrayObject( stateMap[ wireframe ].object );\r\n \r\n\t\t\t\t\t delete stateMap[ wireframe ];\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t delete programMap[ programId ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t delete bindingStates[ geometryId ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function releaseStatesOfGeometry( geometry ) {\r\n \r\n\t\t if ( bindingStates[ geometry.id ] === undefined ) return;\r\n \r\n\t\t const programMap = bindingStates[ geometry.id ];\r\n \r\n\t\t for ( const programId in programMap ) {\r\n \r\n\t\t\t const stateMap = programMap[ programId ];\r\n \r\n\t\t\t for ( const wireframe in stateMap ) {\r\n \r\n\t\t\t\t deleteVertexArrayObject( stateMap[ wireframe ].object );\r\n \r\n\t\t\t\t delete stateMap[ wireframe ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t delete programMap[ programId ];\r\n \r\n\t\t }\r\n \r\n\t\t delete bindingStates[ geometry.id ];\r\n \r\n\t }\r\n \r\n\t function releaseStatesOfProgram( program ) {\r\n \r\n\t\t for ( const geometryId in bindingStates ) {\r\n \r\n\t\t\t const programMap = bindingStates[ geometryId ];\r\n \r\n\t\t\t if ( programMap[ program.id ] === undefined ) continue;\r\n \r\n\t\t\t const stateMap = programMap[ program.id ];\r\n \r\n\t\t\t for ( const wireframe in stateMap ) {\r\n \r\n\t\t\t\t deleteVertexArrayObject( stateMap[ wireframe ].object );\r\n \r\n\t\t\t\t delete stateMap[ wireframe ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t delete programMap[ program.id ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function reset() {\r\n \r\n\t\t resetDefaultState();\r\n \r\n\t\t if ( currentState === defaultState ) return;\r\n \r\n\t\t currentState = defaultState;\r\n\t\t bindVertexArrayObject( currentState.object );\r\n \r\n\t }\r\n \r\n\t // for backward-compatilibity\r\n \r\n\t function resetDefaultState() {\r\n \r\n\t\t defaultState.geometry = null;\r\n\t\t defaultState.program = null;\r\n\t\t defaultState.wireframe = false;\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t setup: setup,\r\n\t\t reset: reset,\r\n\t\t resetDefaultState: resetDefaultState,\r\n\t\t dispose: dispose,\r\n\t\t releaseStatesOfGeometry: releaseStatesOfGeometry,\r\n\t\t releaseStatesOfProgram: releaseStatesOfProgram,\r\n \r\n\t\t initAttributes: initAttributes,\r\n\t\t enableAttribute: enableAttribute,\r\n\t\t disableUnusedAttributes: disableUnusedAttributes\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLBufferRenderer( gl, extensions, info, capabilities ) {\r\n \r\n\t const isWebGL2 = capabilities.isWebGL2;\r\n \r\n\t let mode;\r\n \r\n\t function setMode( value ) {\r\n \r\n\t\t mode = value;\r\n \r\n\t }\r\n \r\n\t function render( start, count ) {\r\n \r\n\t\t gl.drawArrays( mode, start, count );\r\n \r\n\t\t info.update( count, mode, 1 );\r\n \r\n\t }\r\n \r\n\t function renderInstances( start, count, primcount ) {\r\n \r\n\t\t if ( primcount === 0 ) return;\r\n \r\n\t\t let extension, methodName;\r\n \r\n\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t extension = gl;\r\n\t\t\t methodName = 'drawArraysInstanced';\r\n \r\n\t\t } else {\r\n \r\n\t\t\t extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\t\t methodName = 'drawArraysInstancedANGLE';\r\n \r\n\t\t\t if ( extension === null ) {\r\n \r\n\t\t\t\t console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t return;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t extension[ methodName ]( mode, start, count, primcount );\r\n \r\n\t\t info.update( count, mode, primcount );\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t this.setMode = setMode;\r\n\t this.render = render;\r\n\t this.renderInstances = renderInstances;\r\n \r\n }\r\n \r\n function WebGLCapabilities( gl, extensions, parameters ) {\r\n \r\n\t let maxAnisotropy;\r\n \r\n\t function getMaxAnisotropy() {\r\n \r\n\t\t if ( maxAnisotropy !== undefined ) return maxAnisotropy;\r\n \r\n\t\t if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\r\n \r\n\t\t\t const extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n \r\n\t\t\t maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t maxAnisotropy = 0;\r\n \r\n\t\t }\r\n \r\n\t\t return maxAnisotropy;\r\n \r\n\t }\r\n \r\n\t function getMaxPrecision( precision ) {\r\n \r\n\t\t if ( precision === 'highp' ) {\r\n \r\n\t\t\t if ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\r\n\t\t\t\t gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\r\n \r\n\t\t\t\t return 'highp';\r\n \r\n\t\t\t }\r\n \r\n\t\t\t precision = 'mediump';\r\n \r\n\t\t }\r\n \r\n\t\t if ( precision === 'mediump' ) {\r\n \r\n\t\t\t if ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\r\n\t\t\t\t gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\r\n \r\n\t\t\t\t return 'mediump';\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return 'lowp';\r\n \r\n\t }\r\n \r\n\t const isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\r\n\t\t ( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\r\n \r\n\t let precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\t const maxPrecision = getMaxPrecision( precision );\r\n \r\n\t if ( maxPrecision !== precision ) {\r\n \r\n\t\t console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\r\n\t\t precision = maxPrecision;\r\n \r\n\t }\r\n \r\n\t const drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\r\n \r\n\t const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\r\n \r\n\t const maxTextures = gl.getParameter( 34930 );\r\n\t const maxVertexTextures = gl.getParameter( 35660 );\r\n\t const maxTextureSize = gl.getParameter( 3379 );\r\n\t const maxCubemapSize = gl.getParameter( 34076 );\r\n \r\n\t const maxAttributes = gl.getParameter( 34921 );\r\n\t const maxVertexUniforms = gl.getParameter( 36347 );\r\n\t const maxVaryings = gl.getParameter( 36348 );\r\n\t const maxFragmentUniforms = gl.getParameter( 36349 );\r\n \r\n\t const vertexTextures = maxVertexTextures > 0;\r\n\t const floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\r\n\t const floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n \r\n\t const maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\r\n \r\n\t return {\r\n \r\n\t\t isWebGL2: isWebGL2,\r\n \r\n\t\t drawBuffers: drawBuffers,\r\n \r\n\t\t getMaxAnisotropy: getMaxAnisotropy,\r\n\t\t getMaxPrecision: getMaxPrecision,\r\n \r\n\t\t precision: precision,\r\n\t\t logarithmicDepthBuffer: logarithmicDepthBuffer,\r\n \r\n\t\t maxTextures: maxTextures,\r\n\t\t maxVertexTextures: maxVertexTextures,\r\n\t\t maxTextureSize: maxTextureSize,\r\n\t\t maxCubemapSize: maxCubemapSize,\r\n \r\n\t\t maxAttributes: maxAttributes,\r\n\t\t maxVertexUniforms: maxVertexUniforms,\r\n\t\t maxVaryings: maxVaryings,\r\n\t\t maxFragmentUniforms: maxFragmentUniforms,\r\n \r\n\t\t vertexTextures: vertexTextures,\r\n\t\t floatFragmentTextures: floatFragmentTextures,\r\n\t\t floatVertexTextures: floatVertexTextures,\r\n \r\n\t\t maxSamples: maxSamples\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLClipping( properties ) {\r\n \r\n\t const scope = this;\r\n \r\n\t let globalState = null,\r\n\t\t numGlobalPlanes = 0,\r\n\t\t localClippingEnabled = false,\r\n\t\t renderingShadows = false;\r\n \r\n\t const plane = new Plane(),\r\n\t\t viewNormalMatrix = new Matrix3(),\r\n \r\n\t\t uniform = { value: null, needsUpdate: false };\r\n \r\n\t this.uniform = uniform;\r\n\t this.numPlanes = 0;\r\n\t this.numIntersection = 0;\r\n \r\n\t this.init = function ( planes, enableLocalClipping, camera ) {\r\n \r\n\t\t const enabled =\r\n\t\t\t planes.length !== 0 ||\r\n\t\t\t enableLocalClipping ||\r\n\t\t\t // enable state of previous frame - the clipping code has to\r\n\t\t\t // run another frame in order to reset the state:\r\n\t\t\t numGlobalPlanes !== 0 ||\r\n\t\t\t localClippingEnabled;\r\n \r\n\t\t localClippingEnabled = enableLocalClipping;\r\n \r\n\t\t globalState = projectPlanes( planes, camera, 0 );\r\n\t\t numGlobalPlanes = planes.length;\r\n \r\n\t\t return enabled;\r\n \r\n\t };\r\n \r\n\t this.beginShadows = function () {\r\n \r\n\t\t renderingShadows = true;\r\n\t\t projectPlanes( null );\r\n \r\n\t };\r\n \r\n\t this.endShadows = function () {\r\n \r\n\t\t renderingShadows = false;\r\n\t\t resetGlobalState();\r\n \r\n\t };\r\n \r\n\t this.setState = function ( material, camera, useCache ) {\r\n \r\n\t\t const planes = material.clippingPlanes,\r\n\t\t\t clipIntersection = material.clipIntersection,\r\n\t\t\t clipShadows = material.clipShadows;\r\n \r\n\t\t const materialProperties = properties.get( material );\r\n \r\n\t\t if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\r\n \r\n\t\t\t // there's no local clipping\r\n \r\n\t\t\t if ( renderingShadows ) {\r\n \r\n\t\t\t\t // there's no global clipping\r\n \r\n\t\t\t\t projectPlanes( null );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t resetGlobalState();\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\t lGlobal = nGlobal * 4;\r\n \r\n\t\t\t let dstArray = materialProperties.clippingState || null;\r\n \r\n\t\t\t uniform.value = dstArray; // ensure unique state\r\n \r\n\t\t\t dstArray = projectPlanes( planes, camera, lGlobal, useCache );\r\n \r\n\t\t\t for ( let i = 0; i !== lGlobal; ++ i ) {\r\n \r\n\t\t\t\t dstArray[ i ] = globalState[ i ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t materialProperties.clippingState = dstArray;\r\n\t\t\t this.numIntersection = clipIntersection ? this.numPlanes : 0;\r\n\t\t\t this.numPlanes += nGlobal;\r\n \r\n\t\t }\r\n \r\n \r\n\t };\r\n \r\n\t function resetGlobalState() {\r\n \r\n\t\t if ( uniform.value !== globalState ) {\r\n \r\n\t\t\t uniform.value = globalState;\r\n\t\t\t uniform.needsUpdate = numGlobalPlanes > 0;\r\n \r\n\t\t }\r\n \r\n\t\t scope.numPlanes = numGlobalPlanes;\r\n\t\t scope.numIntersection = 0;\r\n \r\n\t }\r\n \r\n\t function projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n \r\n\t\t const nPlanes = planes !== null ? planes.length : 0;\r\n\t\t let dstArray = null;\r\n \r\n\t\t if ( nPlanes !== 0 ) {\r\n \r\n\t\t\t dstArray = uniform.value;\r\n \r\n\t\t\t if ( skipTransform !== true || dstArray === null ) {\r\n \r\n\t\t\t\t const flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\t viewMatrix = camera.matrixWorldInverse;\r\n \r\n\t\t\t\t viewNormalMatrix.getNormalMatrix( viewMatrix );\r\n \r\n\t\t\t\t if ( dstArray === null || dstArray.length < flatSize ) {\r\n \r\n\t\t\t\t\t dstArray = new Float32Array( flatSize );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t for ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\r\n \r\n\t\t\t\t\t plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\r\n \r\n\t\t\t\t\t plane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\t dstArray[ i4 + 3 ] = plane.constant;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t uniform.value = dstArray;\r\n\t\t\t uniform.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t\t scope.numPlanes = nPlanes;\r\n\t\t scope.numIntersection = 0;\r\n \r\n\t\t return dstArray;\r\n \r\n\t }\r\n \r\n }\r\n \r\n function WebGLCubeMaps( renderer ) {\r\n \r\n\t let cubemaps = new WeakMap();\r\n \r\n\t function mapTextureMapping( texture, mapping ) {\r\n \r\n\t\t if ( mapping === EquirectangularReflectionMapping ) {\r\n \r\n\t\t\t texture.mapping = CubeReflectionMapping;\r\n \r\n\t\t } else if ( mapping === EquirectangularRefractionMapping ) {\r\n \r\n\t\t\t texture.mapping = CubeRefractionMapping;\r\n \r\n\t\t }\r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n\t function get( texture ) {\r\n \r\n\t\t if ( texture && texture.isTexture && texture.isRenderTargetTexture === false ) {\r\n \r\n\t\t\t const mapping = texture.mapping;\r\n \r\n\t\t\t if ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\r\n \r\n\t\t\t\t if ( cubemaps.has( texture ) ) {\r\n \r\n\t\t\t\t\t const cubemap = cubemaps.get( texture ).texture;\r\n\t\t\t\t\t return mapTextureMapping( cubemap, texture.mapping );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t const image = texture.image;\r\n \r\n\t\t\t\t\t if ( image && image.height > 0 ) {\r\n \r\n\t\t\t\t\t\t const renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\r\n\t\t\t\t\t\t renderTarget.fromEquirectangularTexture( renderer, texture );\r\n\t\t\t\t\t\t cubemaps.set( texture, renderTarget );\r\n \r\n\t\t\t\t\t\t texture.addEventListener( 'dispose', onTextureDispose );\r\n \r\n\t\t\t\t\t\t return mapTextureMapping( renderTarget.texture, texture.mapping );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t // image not yet ready. try the conversion next frame\r\n \r\n\t\t\t\t\t\t return null;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n\t function onTextureDispose( event ) {\r\n \r\n\t\t const texture = event.target;\r\n \r\n\t\t texture.removeEventListener( 'dispose', onTextureDispose );\r\n \r\n\t\t const cubemap = cubemaps.get( texture );\r\n \r\n\t\t if ( cubemap !== undefined ) {\r\n \r\n\t\t\t cubemaps.delete( texture );\r\n\t\t\t cubemap.dispose();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t cubemaps = new WeakMap();\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t get: get,\r\n\t\t dispose: dispose\r\n\t };\r\n \r\n }\r\n \r\n class OrthographicCamera extends Camera {\r\n \r\n\t constructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'OrthographicCamera';\r\n \r\n\t\t this.zoom = 1;\r\n\t\t this.view = null;\r\n \r\n\t\t this.left = left;\r\n\t\t this.right = right;\r\n\t\t this.top = top;\r\n\t\t this.bottom = bottom;\r\n \r\n\t\t this.near = near;\r\n\t\t this.far = far;\r\n \r\n\t\t this.updateProjectionMatrix();\r\n \r\n\t }\r\n \r\n\t copy( source, recursive ) {\r\n \r\n\t\t super.copy( source, recursive );\r\n \r\n\t\t this.left = source.left;\r\n\t\t this.right = source.right;\r\n\t\t this.top = source.top;\r\n\t\t this.bottom = source.bottom;\r\n\t\t this.near = source.near;\r\n\t\t this.far = source.far;\r\n \r\n\t\t this.zoom = source.zoom;\r\n\t\t this.view = source.view === null ? null : Object.assign( {}, source.view );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n \r\n\t\t if ( this.view === null ) {\r\n \r\n\t\t\t this.view = {\r\n\t\t\t\t enabled: true,\r\n\t\t\t\t fullWidth: 1,\r\n\t\t\t\t fullHeight: 1,\r\n\t\t\t\t offsetX: 0,\r\n\t\t\t\t offsetY: 0,\r\n\t\t\t\t width: 1,\r\n\t\t\t\t height: 1\r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t\t this.view.enabled = true;\r\n\t\t this.view.fullWidth = fullWidth;\r\n\t\t this.view.fullHeight = fullHeight;\r\n\t\t this.view.offsetX = x;\r\n\t\t this.view.offsetY = y;\r\n\t\t this.view.width = width;\r\n\t\t this.view.height = height;\r\n \r\n\t\t this.updateProjectionMatrix();\r\n \r\n\t }\r\n \r\n\t clearViewOffset() {\r\n \r\n\t\t if ( this.view !== null ) {\r\n \r\n\t\t\t this.view.enabled = false;\r\n \r\n\t\t }\r\n \r\n\t\t this.updateProjectionMatrix();\r\n \r\n\t }\r\n \r\n\t updateProjectionMatrix() {\r\n \r\n\t\t const dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\t const dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\t const cx = ( this.right + this.left ) / 2;\r\n\t\t const cy = ( this.top + this.bottom ) / 2;\r\n \r\n\t\t let left = cx - dx;\r\n\t\t let right = cx + dx;\r\n\t\t let top = cy + dy;\r\n\t\t let bottom = cy - dy;\r\n \r\n\t\t if ( this.view !== null && this.view.enabled ) {\r\n \r\n\t\t\t const scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\r\n\t\t\t const scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\r\n \r\n\t\t\t left += scaleW * this.view.offsetX;\r\n\t\t\t right = left + scaleW * this.view.width;\r\n\t\t\t top -= scaleH * this.view.offsetY;\r\n\t\t\t bottom = top - scaleH * this.view.height;\r\n \r\n\t\t }\r\n \r\n\t\t this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\r\n \r\n\t\t this.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t data.object.zoom = this.zoom;\r\n\t\t data.object.left = this.left;\r\n\t\t data.object.right = this.right;\r\n\t\t data.object.top = this.top;\r\n\t\t data.object.bottom = this.bottom;\r\n\t\t data.object.near = this.near;\r\n\t\t data.object.far = this.far;\r\n \r\n\t\t if ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n OrthographicCamera.prototype.isOrthographicCamera = true;\r\n \r\n const LOD_MIN = 4;\r\n \r\n // The standard deviations (radians) associated with the extra mips. These are\r\n // chosen to approximate a Trowbridge-Reitz distribution function times the\r\n // geometric shadowing function. These sigma values squared must match the\r\n // variance #defines in cube_uv_reflection_fragment.glsl.js.\r\n const EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\r\n \r\n // The maximum length of the blur for loop. Smaller sigmas will use fewer\r\n // samples and exit early, but not recompile the shader.\r\n const MAX_SAMPLES = 20;\r\n \r\n const _flatCamera = /*@__PURE__*/ new OrthographicCamera();\r\n const _clearColor = /*@__PURE__*/ new Color();\r\n let _oldTarget = null;\r\n \r\n // Golden Ratio\r\n const PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n const INV_PHI = 1 / PHI;\r\n \r\n // Vertices of a dodecahedron (except the opposites, which represent the\r\n // same axis), used as axis directions evenly spread on a sphere.\r\n const _axisDirections = [\r\n\t /*@__PURE__*/ new Vector3( 1, 1, 1 ),\r\n\t /*@__PURE__*/ new Vector3( - 1, 1, 1 ),\r\n\t /*@__PURE__*/ new Vector3( 1, 1, - 1 ),\r\n\t /*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\r\n\t /*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\r\n\t /*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\r\n\t /*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\r\n\t /*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\r\n\t /*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\r\n\t /*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\r\n \r\n /**\r\n  * This class generates a Prefiltered, Mipmapped Radiance Environment Map\r\n  * (PMREM) from a cubeMap environment texture. This allows different levels of\r\n  * blur to be quickly accessed based on material roughness. It is packed into a\r\n  * special CubeUV format that allows us to perform custom interpolation so that\r\n  * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\r\n  * chain, it only goes down to the LOD_MIN level (above), and then creates extra\r\n  * even more filtered 'mips' at the same LOD_MIN resolution, associated with\r\n  * higher roughness levels. In this way we maintain resolution to smoothly\r\n  * interpolate diffuse lighting while limiting sampling computation.\r\n  *\r\n  * Paper: Fast, Accurate Image-Based Lighting\r\n  * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\r\n */\r\n \r\n class PMREMGenerator {\r\n \r\n\t constructor( renderer ) {\r\n \r\n\t\t this._renderer = renderer;\r\n\t\t this._pingPongRenderTarget = null;\r\n \r\n\t\t this._lodMax = 0;\r\n\t\t this._cubeSize = 0;\r\n\t\t this._lodPlanes = [];\r\n\t\t this._sizeLods = [];\r\n\t\t this._sigmas = [];\r\n \r\n\t\t this._blurMaterial = null;\r\n\t\t this._cubemapMaterial = null;\r\n\t\t this._equirectMaterial = null;\r\n \r\n\t\t this._compileMaterial( this._blurMaterial );\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Generates a PMREM from a supplied Scene, which can be faster than using an\r\n\t  * image if networking bandwidth is low. Optional sigma specifies a blur radius\r\n\t  * in radians to be applied to the scene before PMREM generation. Optional near\r\n\t  * and far planes ensure the scene is rendered in its entirety (the cubeCamera\r\n\t  * is placed at the origin).\r\n\t  */\r\n\t fromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\r\n \r\n\t\t _oldTarget = this._renderer.getRenderTarget();\r\n \r\n\t\t this._setSize( 256 );\r\n \r\n\t\t const cubeUVRenderTarget = this._allocateTargets();\r\n\t\t cubeUVRenderTarget.depthBuffer = true;\r\n \r\n\t\t this._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\r\n \r\n\t\t if ( sigma > 0 ) {\r\n \r\n\t\t\t this._blur( cubeUVRenderTarget, 0, 0, sigma );\r\n \r\n\t\t }\r\n \r\n\t\t this._applyPMREM( cubeUVRenderTarget );\r\n\t\t this._cleanup( cubeUVRenderTarget );\r\n \r\n\t\t return cubeUVRenderTarget;\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Generates a PMREM from an equirectangular texture, which can be either LDR\r\n\t  * or HDR. The ideal input image size is 1k (1024 x 512),\r\n\t  * as this matches best with the 256 x 256 cubemap output.\r\n\t  */\r\n\t fromEquirectangular( equirectangular, renderTarget = null ) {\r\n \r\n\t\t return this._fromTexture( equirectangular, renderTarget );\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Generates a PMREM from an cubemap texture, which can be either LDR\r\n\t  * or HDR. The ideal input cube size is 256 x 256,\r\n\t  * as this matches best with the 256 x 256 cubemap output.\r\n\t  */\r\n\t fromCubemap( cubemap, renderTarget = null ) {\r\n \r\n\t\t return this._fromTexture( cubemap, renderTarget );\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\r\n\t  * your texture's network fetch for increased concurrency.\r\n\t  */\r\n\t compileCubemapShader() {\r\n \r\n\t\t if ( this._cubemapMaterial === null ) {\r\n \r\n\t\t\t this._cubemapMaterial = _getCubemapMaterial();\r\n\t\t\t this._compileMaterial( this._cubemapMaterial );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\r\n\t  * your texture's network fetch for increased concurrency.\r\n\t  */\r\n\t compileEquirectangularShader() {\r\n \r\n\t\t if ( this._equirectMaterial === null ) {\r\n \r\n\t\t\t this._equirectMaterial = _getEquirectMaterial();\r\n\t\t\t this._compileMaterial( this._equirectMaterial );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\r\n\t  * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\r\n\t  * one of them will cause any others to also become unusable.\r\n\t  */\r\n\t dispose() {\r\n \r\n\t\t this._dispose();\r\n \r\n\t\t if ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\r\n\t\t if ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\r\n \r\n\t }\r\n \r\n\t // private interface\r\n \r\n\t _setSize( cubeSize ) {\r\n \r\n\t\t this._lodMax = Math.floor( Math.log2( cubeSize ) );\r\n\t\t this._cubeSize = Math.pow( 2, this._lodMax );\r\n \r\n\t }\r\n \r\n\t _dispose() {\r\n \r\n\t\t this._blurMaterial.dispose();\r\n \r\n\t\t if ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\r\n \r\n\t\t for ( let i = 0; i < this._lodPlanes.length; i ++ ) {\r\n \r\n\t\t\t this._lodPlanes[ i ].dispose();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _cleanup( outputTarget ) {\r\n \r\n\t\t this._renderer.setRenderTarget( _oldTarget );\r\n\t\t outputTarget.scissorTest = false;\r\n\t\t _setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\r\n \r\n\t }\r\n \r\n\t _fromTexture( texture, renderTarget ) {\r\n \r\n\t\t if ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\r\n \r\n\t\t\t this._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\r\n \r\n\t\t } else { // Equirectangular\r\n \r\n\t\t\t this._setSize( texture.image.width / 4 );\r\n \r\n\t\t }\r\n \r\n\t\t _oldTarget = this._renderer.getRenderTarget();\r\n \r\n\t\t const cubeUVRenderTarget = renderTarget || this._allocateTargets();\r\n\t\t this._textureToCubeUV( texture, cubeUVRenderTarget );\r\n\t\t this._applyPMREM( cubeUVRenderTarget );\r\n\t\t this._cleanup( cubeUVRenderTarget );\r\n \r\n\t\t return cubeUVRenderTarget;\r\n \r\n\t }\r\n \r\n\t _allocateTargets() {\r\n \r\n\t\t const width = 3 * Math.max( this._cubeSize, 16 * 7 );\r\n\t\t const height = 4 * this._cubeSize - 32;\r\n \r\n\t\t const params = {\r\n\t\t\t magFilter: LinearFilter,\r\n\t\t\t minFilter: LinearFilter,\r\n\t\t\t generateMipmaps: false,\r\n\t\t\t type: HalfFloatType,\r\n\t\t\t format: RGBAFormat,\r\n\t\t\t encoding: LinearEncoding,\r\n\t\t\t depthBuffer: false\r\n\t\t };\r\n \r\n\t\t const cubeUVRenderTarget = _createRenderTarget( width, height, params );\r\n \r\n\t\t if ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width ) {\r\n \r\n\t\t\t if ( this._pingPongRenderTarget !== null ) {\r\n \r\n\t\t\t\t this._dispose();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this._pingPongRenderTarget = _createRenderTarget( width, height, params );\r\n \r\n\t\t\t const { _lodMax } = this;\r\n\t\t\t ( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\r\n \r\n\t\t\t this._blurMaterial = _getBlurShader( _lodMax, width, height );\r\n \r\n\t\t }\r\n \r\n\t\t return cubeUVRenderTarget;\r\n \r\n\t }\r\n \r\n\t _compileMaterial( material ) {\r\n \r\n\t\t const tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\r\n\t\t this._renderer.compile( tmpMesh, _flatCamera );\r\n \r\n\t }\r\n \r\n\t _sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\r\n \r\n\t\t const fov = 90;\r\n\t\t const aspect = 1;\r\n\t\t const cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\t const upSign = [ 1, - 1, 1, 1, 1, 1 ];\r\n\t\t const forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\r\n\t\t const renderer = this._renderer;\r\n \r\n\t\t const originalAutoClear = renderer.autoClear;\r\n\t\t const toneMapping = renderer.toneMapping;\r\n\t\t renderer.getClearColor( _clearColor );\r\n \r\n\t\t renderer.toneMapping = NoToneMapping;\r\n\t\t renderer.autoClear = false;\r\n \r\n\t\t const backgroundMaterial = new MeshBasicMaterial( {\r\n\t\t\t name: 'PMREM.Background',\r\n\t\t\t side: BackSide,\r\n\t\t\t depthWrite: false,\r\n\t\t\t depthTest: false,\r\n\t\t } );\r\n \r\n\t\t const backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\r\n \r\n\t\t let useSolidColor = false;\r\n\t\t const background = scene.background;\r\n \r\n\t\t if ( background ) {\r\n \r\n\t\t\t if ( background.isColor ) {\r\n \r\n\t\t\t\t backgroundMaterial.color.copy( background );\r\n\t\t\t\t scene.background = null;\r\n\t\t\t\t useSolidColor = true;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t backgroundMaterial.color.copy( _clearColor );\r\n\t\t\t useSolidColor = true;\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t const col = i % 3;\r\n \r\n\t\t\t if ( col === 0 ) {\r\n \r\n\t\t\t\t cubeCamera.up.set( 0, upSign[ i ], 0 );\r\n\t\t\t\t cubeCamera.lookAt( forwardSign[ i ], 0, 0 );\r\n \r\n\t\t\t } else if ( col === 1 ) {\r\n \r\n\t\t\t\t cubeCamera.up.set( 0, 0, upSign[ i ] );\r\n\t\t\t\t cubeCamera.lookAt( 0, forwardSign[ i ], 0 );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t cubeCamera.up.set( 0, upSign[ i ], 0 );\r\n\t\t\t\t cubeCamera.lookAt( 0, 0, forwardSign[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const size = this._cubeSize;\r\n \r\n\t\t\t _setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\r\n \r\n\t\t\t renderer.setRenderTarget( cubeUVRenderTarget );\r\n \r\n\t\t\t if ( useSolidColor ) {\r\n \r\n\t\t\t\t renderer.render( backgroundBox, cubeCamera );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t renderer.render( scene, cubeCamera );\r\n \r\n\t\t }\r\n \r\n\t\t backgroundBox.geometry.dispose();\r\n\t\t backgroundBox.material.dispose();\r\n \r\n\t\t renderer.toneMapping = toneMapping;\r\n\t\t renderer.autoClear = originalAutoClear;\r\n\t\t scene.background = background;\r\n \r\n\t }\r\n \r\n\t _textureToCubeUV( texture, cubeUVRenderTarget ) {\r\n \r\n\t\t const renderer = this._renderer;\r\n \r\n\t\t const isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\r\n \r\n\t\t if ( isCubeTexture ) {\r\n \r\n\t\t\t if ( this._cubemapMaterial === null ) {\r\n \r\n\t\t\t\t this._cubemapMaterial = _getCubemapMaterial();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( this._equirectMaterial === null ) {\r\n \r\n\t\t\t\t this._equirectMaterial = _getEquirectMaterial();\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\r\n\t\t const mesh = new Mesh( this._lodPlanes[ 0 ], material );\r\n \r\n\t\t const uniforms = material.uniforms;\r\n \r\n\t\t uniforms[ 'envMap' ].value = texture;\r\n \r\n\t\t const size = this._cubeSize;\r\n \r\n\t\t _setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\r\n \r\n\t\t renderer.setRenderTarget( cubeUVRenderTarget );\r\n\t\t renderer.render( mesh, _flatCamera );\r\n \r\n\t }\r\n \r\n\t _applyPMREM( cubeUVRenderTarget ) {\r\n \r\n\t\t const renderer = this._renderer;\r\n\t\t const autoClear = renderer.autoClear;\r\n\t\t renderer.autoClear = false;\r\n \r\n\t\t for ( let i = 1; i < this._lodPlanes.length; i ++ ) {\r\n \r\n\t\t\t const sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\r\n \r\n\t\t\t const poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\r\n \r\n\t\t\t this._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\r\n \r\n\t\t }\r\n \r\n\t\t renderer.autoClear = autoClear;\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * This is a two-pass Gaussian blur for a cubemap. Normally this is done\r\n\t  * vertically and horizontally, but this breaks down on a cube. Here we apply\r\n\t  * the blur latitudinally (around the poles), and then longitudinally (towards\r\n\t  * the poles) to approximate the orthogonally-separable blur. It is least\r\n\t  * accurate at the poles, but still does a decent job.\r\n\t  */\r\n\t _blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\r\n \r\n\t\t const pingPongRenderTarget = this._pingPongRenderTarget;\r\n \r\n\t\t this._halfBlur(\r\n\t\t\t cubeUVRenderTarget,\r\n\t\t\t pingPongRenderTarget,\r\n\t\t\t lodIn,\r\n\t\t\t lodOut,\r\n\t\t\t sigma,\r\n\t\t\t 'latitudinal',\r\n\t\t\t poleAxis );\r\n \r\n\t\t this._halfBlur(\r\n\t\t\t pingPongRenderTarget,\r\n\t\t\t cubeUVRenderTarget,\r\n\t\t\t lodOut,\r\n\t\t\t lodOut,\r\n\t\t\t sigma,\r\n\t\t\t 'longitudinal',\r\n\t\t\t poleAxis );\r\n \r\n\t }\r\n \r\n\t _halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\r\n \r\n\t\t const renderer = this._renderer;\r\n\t\t const blurMaterial = this._blurMaterial;\r\n \r\n\t\t if ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\r\n \r\n\t\t\t console.error(\r\n\t\t\t\t 'blur direction must be either latitudinal or longitudinal!' );\r\n \r\n\t\t }\r\n \r\n\t\t // Number of standard deviations at which to cut off the discrete approximation.\r\n\t\t const STANDARD_DEVIATIONS = 3;\r\n \r\n\t\t const blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\r\n\t\t const blurUniforms = blurMaterial.uniforms;\r\n \r\n\t\t const pixels = this._sizeLods[ lodIn ] - 1;\r\n\t\t const radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\r\n\t\t const sigmaPixels = sigmaRadians / radiansPerPixel;\r\n\t\t const samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\r\n \r\n\t\t if ( samples > MAX_SAMPLES ) {\r\n \r\n\t\t\t console.warn( `sigmaRadians, ${\r\n\t\t\t\t sigmaRadians}, is too large and will clip, as it requested ${\r\n\t\t\t\t samples} samples when the maximum is set to ${MAX_SAMPLES}` );\r\n \r\n\t\t }\r\n \r\n\t\t const weights = [];\r\n\t\t let sum = 0;\r\n \r\n\t\t for ( let i = 0; i < MAX_SAMPLES; ++ i ) {\r\n \r\n\t\t\t const x = i / sigmaPixels;\r\n\t\t\t const weight = Math.exp( - x * x / 2 );\r\n\t\t\t weights.push( weight );\r\n \r\n\t\t\t if ( i === 0 ) {\r\n \r\n\t\t\t\t sum += weight;\r\n \r\n\t\t\t } else if ( i < samples ) {\r\n \r\n\t\t\t\t sum += 2 * weight;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = 0; i < weights.length; i ++ ) {\r\n \r\n\t\t\t weights[ i ] = weights[ i ] / sum;\r\n \r\n\t\t }\r\n \r\n\t\t blurUniforms[ 'envMap' ].value = targetIn.texture;\r\n\t\t blurUniforms[ 'samples' ].value = samples;\r\n\t\t blurUniforms[ 'weights' ].value = weights;\r\n\t\t blurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\r\n \r\n\t\t if ( poleAxis ) {\r\n \r\n\t\t\t blurUniforms[ 'poleAxis' ].value = poleAxis;\r\n \r\n\t\t }\r\n \r\n\t\t const { _lodMax } = this;\r\n\t\t blurUniforms[ 'dTheta' ].value = radiansPerPixel;\r\n\t\t blurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\r\n \r\n\t\t const outputSize = this._sizeLods[ lodOut ];\r\n\t\t const x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\r\n\t\t const y = 4 * ( this._cubeSize - outputSize );\r\n \r\n\t\t _setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\r\n\t\t renderer.setRenderTarget( targetOut );\r\n\t\t renderer.render( blurMesh, _flatCamera );\r\n \r\n\t }\r\n \r\n }\r\n \r\n \r\n \r\n function _createPlanes( lodMax ) {\r\n \r\n\t const lodPlanes = [];\r\n\t const sizeLods = [];\r\n\t const sigmas = [];\r\n \r\n\t let lod = lodMax;\r\n \r\n\t const totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\r\n \r\n\t for ( let i = 0; i < totalLods; i ++ ) {\r\n \r\n\t\t const sizeLod = Math.pow( 2, lod );\r\n\t\t sizeLods.push( sizeLod );\r\n\t\t let sigma = 1.0 / sizeLod;\r\n \r\n\t\t if ( i > lodMax - LOD_MIN ) {\r\n \r\n\t\t\t sigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\r\n \r\n\t\t } else if ( i === 0 ) {\r\n \r\n\t\t\t sigma = 0;\r\n \r\n\t\t }\r\n \r\n\t\t sigmas.push( sigma );\r\n \r\n\t\t const texelSize = 1.0 / ( sizeLod - 1 );\r\n\t\t const min = - texelSize / 2;\r\n\t\t const max = 1 + texelSize / 2;\r\n\t\t const uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\r\n \r\n\t\t const cubeFaces = 6;\r\n\t\t const vertices = 6;\r\n\t\t const positionSize = 3;\r\n\t\t const uvSize = 2;\r\n\t\t const faceIndexSize = 1;\r\n \r\n\t\t const position = new Float32Array( positionSize * vertices * cubeFaces );\r\n\t\t const uv = new Float32Array( uvSize * vertices * cubeFaces );\r\n\t\t const faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\r\n \r\n\t\t for ( let face = 0; face < cubeFaces; face ++ ) {\r\n \r\n\t\t\t const x = ( face % 3 ) * 2 / 3 - 1;\r\n\t\t\t const y = face > 2 ? 0 : - 1;\r\n\t\t\t const coordinates = [\r\n\t\t\t\t x, y, 0,\r\n\t\t\t\t x + 2 / 3, y, 0,\r\n\t\t\t\t x + 2 / 3, y + 1, 0,\r\n\t\t\t\t x, y, 0,\r\n\t\t\t\t x + 2 / 3, y + 1, 0,\r\n\t\t\t\t x, y + 1, 0\r\n\t\t\t ];\r\n\t\t\t position.set( coordinates, positionSize * vertices * face );\r\n\t\t\t uv.set( uv1, uvSize * vertices * face );\r\n\t\t\t const fill = [ face, face, face, face, face, face ];\r\n\t\t\t faceIndex.set( fill, faceIndexSize * vertices * face );\r\n \r\n\t\t }\r\n \r\n\t\t const planes = new BufferGeometry();\r\n\t\t planes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\r\n\t\t planes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\r\n\t\t planes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\r\n\t\t lodPlanes.push( planes );\r\n \r\n\t\t if ( lod > LOD_MIN ) {\r\n \r\n\t\t\t lod --;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return { lodPlanes, sizeLods, sigmas };\r\n \r\n }\r\n \r\n function _createRenderTarget( width, height, params ) {\r\n \r\n\t const cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\r\n\t cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\r\n\t cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\r\n\t cubeUVRenderTarget.scissorTest = true;\r\n\t return cubeUVRenderTarget;\r\n \r\n }\r\n \r\n function _setViewport( target, x, y, width, height ) {\r\n \r\n\t target.viewport.set( x, y, width, height );\r\n\t target.scissor.set( x, y, width, height );\r\n \r\n }\r\n \r\n function _getBlurShader( lodMax, width, height ) {\r\n \r\n\t const weights = new Float32Array( MAX_SAMPLES );\r\n\t const poleAxis = new Vector3( 0, 1, 0 );\r\n\t const shaderMaterial = new ShaderMaterial( {\r\n \r\n\t\t name: 'SphericalGaussianBlur',\r\n \r\n\t\t defines: {\r\n\t\t\t 'n': MAX_SAMPLES,\r\n\t\t\t 'CUBEUV_TEXEL_WIDTH': 1.0 / width,\r\n\t\t\t 'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\r\n\t\t\t 'CUBEUV_MAX_MIP': `${lodMax}.0`,\r\n\t\t },\r\n \r\n\t\t uniforms: {\r\n\t\t\t 'envMap': { value: null },\r\n\t\t\t 'samples': { value: 1 },\r\n\t\t\t 'weights': { value: weights },\r\n\t\t\t 'latitudinal': { value: false },\r\n\t\t\t 'dTheta': { value: 0 },\r\n\t\t\t 'mipInt': { value: 0 },\r\n\t\t\t 'poleAxis': { value: poleAxis }\r\n\t\t },\r\n \r\n\t\t vertexShader: _getCommonVertexShader(),\r\n \r\n\t\t fragmentShader: /* glsl */`\r\n \r\n\t\t\t precision mediump float;\r\n\t\t\t precision mediump int;\r\n \r\n\t\t\t varying vec3 vOutputDirection;\r\n \r\n\t\t\t uniform sampler2D envMap;\r\n\t\t\t uniform int samples;\r\n\t\t\t uniform float weights[ n ];\r\n\t\t\t uniform bool latitudinal;\r\n\t\t\t uniform float dTheta;\r\n\t\t\t uniform float mipInt;\r\n\t\t\t uniform vec3 poleAxis;\r\n \r\n\t\t\t #define ENVMAP_TYPE_CUBE_UV\r\n\t\t\t #include <cube_uv_reflection_fragment>\r\n \r\n\t\t\t vec3 getSample( float theta, vec3 axis ) {\r\n \r\n\t\t\t\t float cosTheta = cos( theta );\r\n\t\t\t\t // Rodrigues' axis-angle rotation\r\n\t\t\t\t vec3 sampleDirection = vOutputDirection * cosTheta\r\n\t\t\t\t\t + cross( axis, vOutputDirection ) * sin( theta )\r\n\t\t\t\t\t + axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\r\n \r\n\t\t\t\t return bilinearCubeUV( envMap, sampleDirection, mipInt );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t void main() {\r\n \r\n\t\t\t\t vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\r\n \r\n\t\t\t\t if ( all( equal( axis, vec3( 0.0 ) ) ) ) {\r\n \r\n\t\t\t\t\t axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t axis = normalize( axis );\r\n \r\n\t\t\t\t gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\r\n\t\t\t\t gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\r\n \r\n\t\t\t\t for ( int i = 1; i < n; i++ ) {\r\n \r\n\t\t\t\t\t if ( i >= samples ) {\r\n \r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t float theta = dTheta * float( i );\r\n\t\t\t\t\t gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\r\n\t\t\t\t\t gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n\t\t `,\r\n \r\n\t\t blending: NoBlending,\r\n\t\t depthTest: false,\r\n\t\t depthWrite: false\r\n \r\n\t } );\r\n \r\n\t return shaderMaterial;\r\n \r\n }\r\n \r\n function _getEquirectMaterial() {\r\n \r\n\t return new ShaderMaterial( {\r\n \r\n\t\t name: 'EquirectangularToCubeUV',\r\n \r\n\t\t uniforms: {\r\n\t\t\t 'envMap': { value: null }\r\n\t\t },\r\n \r\n\t\t vertexShader: _getCommonVertexShader(),\r\n \r\n\t\t fragmentShader: /* glsl */`\r\n \r\n\t\t\t precision mediump float;\r\n\t\t\t precision mediump int;\r\n \r\n\t\t\t varying vec3 vOutputDirection;\r\n \r\n\t\t\t uniform sampler2D envMap;\r\n \r\n\t\t\t #include <common>\r\n \r\n\t\t\t void main() {\r\n \r\n\t\t\t\t vec3 outputDirection = normalize( vOutputDirection );\r\n\t\t\t\t vec2 uv = equirectUv( outputDirection );\r\n \r\n\t\t\t\t gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\r\n \r\n\t\t\t }\r\n\t\t `,\r\n \r\n\t\t blending: NoBlending,\r\n\t\t depthTest: false,\r\n\t\t depthWrite: false\r\n \r\n\t } );\r\n \r\n }\r\n \r\n function _getCubemapMaterial() {\r\n \r\n\t return new ShaderMaterial( {\r\n \r\n\t\t name: 'CubemapToCubeUV',\r\n \r\n\t\t uniforms: {\r\n\t\t\t 'envMap': { value: null },\r\n\t\t\t 'flipEnvMap': { value: - 1 }\r\n\t\t },\r\n \r\n\t\t vertexShader: _getCommonVertexShader(),\r\n \r\n\t\t fragmentShader: /* glsl */`\r\n \r\n\t\t\t precision mediump float;\r\n\t\t\t precision mediump int;\r\n \r\n\t\t\t uniform float flipEnvMap;\r\n \r\n\t\t\t varying vec3 vOutputDirection;\r\n \r\n\t\t\t uniform samplerCube envMap;\r\n \r\n\t\t\t void main() {\r\n \r\n\t\t\t\t gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\r\n \r\n\t\t\t }\r\n\t\t `,\r\n \r\n\t\t blending: NoBlending,\r\n\t\t depthTest: false,\r\n\t\t depthWrite: false\r\n \r\n\t } );\r\n \r\n }\r\n \r\n function _getCommonVertexShader() {\r\n \r\n\t return /* glsl */`\r\n \r\n\t\t precision mediump float;\r\n\t\t precision mediump int;\r\n \r\n\t\t attribute float faceIndex;\r\n \r\n\t\t varying vec3 vOutputDirection;\r\n \r\n\t\t // RH coordinate system; PMREM face-indexing convention\r\n\t\t vec3 getDirection( vec2 uv, float face ) {\r\n \r\n\t\t\t uv = 2.0 * uv - 1.0;\r\n \r\n\t\t\t vec3 direction = vec3( uv, 1.0 );\r\n \r\n\t\t\t if ( face == 0.0 ) {\r\n \r\n\t\t\t\t direction = direction.zyx; // ( 1, v, u ) pos x\r\n \r\n\t\t\t } else if ( face == 1.0 ) {\r\n \r\n\t\t\t\t direction = direction.xzy;\r\n\t\t\t\t direction.xz *= -1.0; // ( -u, 1, -v ) pos y\r\n \r\n\t\t\t } else if ( face == 2.0 ) {\r\n \r\n\t\t\t\t direction.x *= -1.0; // ( -u, v, 1 ) pos z\r\n \r\n\t\t\t } else if ( face == 3.0 ) {\r\n \r\n\t\t\t\t direction = direction.zyx;\r\n\t\t\t\t direction.xz *= -1.0; // ( -1, v, -u ) neg x\r\n \r\n\t\t\t } else if ( face == 4.0 ) {\r\n \r\n\t\t\t\t direction = direction.xzy;\r\n\t\t\t\t direction.xy *= -1.0; // ( -u, -1, v ) neg y\r\n \r\n\t\t\t } else if ( face == 5.0 ) {\r\n \r\n\t\t\t\t direction.z *= -1.0; // ( u, v, -1 ) neg z\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return direction;\r\n \r\n\t\t }\r\n \r\n\t\t void main() {\r\n \r\n\t\t\t vOutputDirection = getDirection( uv, faceIndex );\r\n\t\t\t gl_Position = vec4( position, 1.0 );\r\n \r\n\t\t }\r\n\t `;\r\n \r\n }\r\n \r\n function WebGLCubeUVMaps( renderer ) {\r\n \r\n\t let cubeUVmaps = new WeakMap();\r\n \r\n\t let pmremGenerator = null;\r\n \r\n\t function get( texture ) {\r\n \r\n\t\t if ( texture && texture.isTexture ) {\r\n \r\n\t\t\t const mapping = texture.mapping;\r\n \r\n\t\t\t const isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\r\n\t\t\t const isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\r\n \r\n\t\t\t // equirect/cube map to cubeUV conversion\r\n \r\n\t\t\t if ( isEquirectMap || isCubeMap ) {\r\n \r\n\t\t\t\t if ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\r\n \r\n\t\t\t\t\t texture.needsPMREMUpdate = false;\r\n \r\n\t\t\t\t\t let renderTarget = cubeUVmaps.get( texture );\r\n \r\n\t\t\t\t\t if ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\r\n \r\n\t\t\t\t\t renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\r\n\t\t\t\t\t cubeUVmaps.set( texture, renderTarget );\r\n \r\n\t\t\t\t\t return renderTarget.texture;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t if ( cubeUVmaps.has( texture ) ) {\r\n \r\n\t\t\t\t\t\t return cubeUVmaps.get( texture ).texture;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t const image = texture.image;\r\n \r\n\t\t\t\t\t\t if ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\r\n \r\n\t\t\t\t\t\t\t if ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\r\n \r\n\t\t\t\t\t\t\t const renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\r\n\t\t\t\t\t\t\t cubeUVmaps.set( texture, renderTarget );\r\n \r\n\t\t\t\t\t\t\t texture.addEventListener( 'dispose', onTextureDispose );\r\n \r\n\t\t\t\t\t\t\t return renderTarget.texture;\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t // image not yet ready. try the conversion next frame\r\n \r\n\t\t\t\t\t\t\t return null;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n\t function isCubeTextureComplete( image ) {\r\n \r\n\t\t let count = 0;\r\n\t\t const length = 6;\r\n \r\n\t\t for ( let i = 0; i < length; i ++ ) {\r\n \r\n\t\t\t if ( image[ i ] !== undefined ) count ++;\r\n \r\n\t\t }\r\n \r\n\t\t return count === length;\r\n \r\n \r\n\t }\r\n \r\n\t function onTextureDispose( event ) {\r\n \r\n\t\t const texture = event.target;\r\n \r\n\t\t texture.removeEventListener( 'dispose', onTextureDispose );\r\n \r\n\t\t const cubemapUV = cubeUVmaps.get( texture );\r\n \r\n\t\t if ( cubemapUV !== undefined ) {\r\n \r\n\t\t\t cubeUVmaps.delete( texture );\r\n\t\t\t cubemapUV.dispose();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t cubeUVmaps = new WeakMap();\r\n \r\n\t\t if ( pmremGenerator !== null ) {\r\n \r\n\t\t\t pmremGenerator.dispose();\r\n\t\t\t pmremGenerator = null;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t get: get,\r\n\t\t dispose: dispose\r\n\t };\r\n \r\n }\r\n \r\n function WebGLExtensions( gl ) {\r\n \r\n\t const extensions = {};\r\n \r\n\t function getExtension( name ) {\r\n \r\n\t\t if ( extensions[ name ] !== undefined ) {\r\n \r\n\t\t\t return extensions[ name ];\r\n \r\n\t\t }\r\n \r\n\t\t let extension;\r\n \r\n\t\t switch ( name ) {\r\n \r\n\t\t\t case 'WEBGL_depth_texture':\r\n\t\t\t\t extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t break;\r\n \r\n\t\t\t default:\r\n\t\t\t\t extension = gl.getExtension( name );\r\n \r\n\t\t }\r\n \r\n\t\t extensions[ name ] = extension;\r\n \r\n\t\t return extension;\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t has: function ( name ) {\r\n \r\n\t\t\t return getExtension( name ) !== null;\r\n \r\n\t\t },\r\n \r\n\t\t init: function ( capabilities ) {\r\n \r\n\t\t\t if ( capabilities.isWebGL2 ) {\r\n \r\n\t\t\t\t getExtension( 'EXT_color_buffer_float' );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t getExtension( 'WEBGL_depth_texture' );\r\n\t\t\t\t getExtension( 'OES_texture_float' );\r\n\t\t\t\t getExtension( 'OES_texture_half_float' );\r\n\t\t\t\t getExtension( 'OES_texture_half_float_linear' );\r\n\t\t\t\t getExtension( 'OES_standard_derivatives' );\r\n\t\t\t\t getExtension( 'OES_element_index_uint' );\r\n\t\t\t\t getExtension( 'OES_vertex_array_object' );\r\n\t\t\t\t getExtension( 'ANGLE_instanced_arrays' );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t getExtension( 'OES_texture_float_linear' );\r\n\t\t\t getExtension( 'EXT_color_buffer_half_float' );\r\n\t\t\t getExtension( 'WEBGL_multisampled_render_to_texture' );\r\n \r\n\t\t },\r\n \r\n\t\t get: function ( name ) {\r\n \r\n\t\t\t const extension = getExtension( name );\r\n \r\n\t\t\t if ( extension === null ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return extension;\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLGeometries( gl, attributes, info, bindingStates ) {\r\n \r\n\t const geometries = {};\r\n\t const wireframeAttributes = new WeakMap();\r\n \r\n\t function onGeometryDispose( event ) {\r\n \r\n\t\t const geometry = event.target;\r\n \r\n\t\t if ( geometry.index !== null ) {\r\n \r\n\t\t\t attributes.remove( geometry.index );\r\n \r\n\t\t }\r\n \r\n\t\t for ( const name in geometry.attributes ) {\r\n \r\n\t\t\t attributes.remove( geometry.attributes[ name ] );\r\n \r\n\t\t }\r\n \r\n\t\t geometry.removeEventListener( 'dispose', onGeometryDispose );\r\n \r\n\t\t delete geometries[ geometry.id ];\r\n \r\n\t\t const attribute = wireframeAttributes.get( geometry );\r\n \r\n\t\t if ( attribute ) {\r\n \r\n\t\t\t attributes.remove( attribute );\r\n\t\t\t wireframeAttributes.delete( geometry );\r\n \r\n\t\t }\r\n \r\n\t\t bindingStates.releaseStatesOfGeometry( geometry );\r\n \r\n\t\t if ( geometry.isInstancedBufferGeometry === true ) {\r\n \r\n\t\t\t delete geometry._maxInstanceCount;\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t info.memory.geometries --;\r\n \r\n\t }\r\n \r\n\t function get( object, geometry ) {\r\n \r\n\t\t if ( geometries[ geometry.id ] === true ) return geometry;\r\n \r\n\t\t geometry.addEventListener( 'dispose', onGeometryDispose );\r\n \r\n\t\t geometries[ geometry.id ] = true;\r\n \r\n\t\t info.memory.geometries ++;\r\n \r\n\t\t return geometry;\r\n \r\n\t }\r\n \r\n\t function update( geometry ) {\r\n \r\n\t\t const geometryAttributes = geometry.attributes;\r\n \r\n\t\t // Updating index buffer in VAO now. See WebGLBindingStates.\r\n \r\n\t\t for ( const name in geometryAttributes ) {\r\n \r\n\t\t\t attributes.update( geometryAttributes[ name ], 34962 );\r\n \r\n\t\t }\r\n \r\n\t\t // morph targets\r\n \r\n\t\t const morphAttributes = geometry.morphAttributes;\r\n \r\n\t\t for ( const name in morphAttributes ) {\r\n \r\n\t\t\t const array = morphAttributes[ name ];\r\n \r\n\t\t\t for ( let i = 0, l = array.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t attributes.update( array[ i ], 34962 );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function updateWireframeAttribute( geometry ) {\r\n \r\n\t\t const indices = [];\r\n \r\n\t\t const geometryIndex = geometry.index;\r\n\t\t const geometryPosition = geometry.attributes.position;\r\n\t\t let version = 0;\r\n \r\n\t\t if ( geometryIndex !== null ) {\r\n \r\n\t\t\t const array = geometryIndex.array;\r\n\t\t\t version = geometryIndex.version;\r\n \r\n\t\t\t for ( let i = 0, l = array.length; i < l; i += 3 ) {\r\n \r\n\t\t\t\t const a = array[ i + 0 ];\r\n\t\t\t\t const b = array[ i + 1 ];\r\n\t\t\t\t const c = array[ i + 2 ];\r\n \r\n\t\t\t\t indices.push( a, b, b, c, c, a );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const array = geometryPosition.array;\r\n\t\t\t version = geometryPosition.version;\r\n \r\n\t\t\t for ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n \r\n\t\t\t\t const a = i + 0;\r\n\t\t\t\t const b = i + 1;\r\n\t\t\t\t const c = i + 2;\r\n \r\n\t\t\t\t indices.push( a, b, b, c, c, a );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\r\n\t\t attribute.version = version;\r\n \r\n\t\t // Updating index buffer in VAO now. See WebGLBindingStates\r\n \r\n\t\t //\r\n \r\n\t\t const previousAttribute = wireframeAttributes.get( geometry );\r\n \r\n\t\t if ( previousAttribute ) attributes.remove( previousAttribute );\r\n \r\n\t\t //\r\n \r\n\t\t wireframeAttributes.set( geometry, attribute );\r\n \r\n\t }\r\n \r\n\t function getWireframeAttribute( geometry ) {\r\n \r\n\t\t const currentAttribute = wireframeAttributes.get( geometry );\r\n \r\n\t\t if ( currentAttribute ) {\r\n \r\n\t\t\t const geometryIndex = geometry.index;\r\n \r\n\t\t\t if ( geometryIndex !== null ) {\r\n \r\n\t\t\t\t // if the attribute is obsolete, create a new one\r\n \r\n\t\t\t\t if ( currentAttribute.version < geometryIndex.version ) {\r\n \r\n\t\t\t\t\t updateWireframeAttribute( geometry );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t updateWireframeAttribute( geometry );\r\n \r\n\t\t }\r\n \r\n\t\t return wireframeAttributes.get( geometry );\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t get: get,\r\n\t\t update: update,\r\n \r\n\t\t getWireframeAttribute: getWireframeAttribute\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\r\n \r\n\t const isWebGL2 = capabilities.isWebGL2;\r\n \r\n\t let mode;\r\n \r\n\t function setMode( value ) {\r\n \r\n\t\t mode = value;\r\n \r\n\t }\r\n \r\n\t let type, bytesPerElement;\r\n \r\n\t function setIndex( value ) {\r\n \r\n\t\t type = value.type;\r\n\t\t bytesPerElement = value.bytesPerElement;\r\n \r\n\t }\r\n \r\n\t function render( start, count ) {\r\n \r\n\t\t gl.drawElements( mode, count, type, start * bytesPerElement );\r\n \r\n\t\t info.update( count, mode, 1 );\r\n \r\n\t }\r\n \r\n\t function renderInstances( start, count, primcount ) {\r\n \r\n\t\t if ( primcount === 0 ) return;\r\n \r\n\t\t let extension, methodName;\r\n \r\n\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t extension = gl;\r\n\t\t\t methodName = 'drawElementsInstanced';\r\n \r\n\t\t } else {\r\n \r\n\t\t\t extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\t\t methodName = 'drawElementsInstancedANGLE';\r\n \r\n\t\t\t if ( extension === null ) {\r\n \r\n\t\t\t\t console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t return;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t extension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\r\n \r\n\t\t info.update( count, mode, primcount );\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t this.setMode = setMode;\r\n\t this.setIndex = setIndex;\r\n\t this.render = render;\r\n\t this.renderInstances = renderInstances;\r\n \r\n }\r\n \r\n function WebGLInfo( gl ) {\r\n \r\n\t const memory = {\r\n\t\t geometries: 0,\r\n\t\t textures: 0\r\n\t };\r\n \r\n\t const render = {\r\n\t\t frame: 0,\r\n\t\t calls: 0,\r\n\t\t triangles: 0,\r\n\t\t points: 0,\r\n\t\t lines: 0\r\n\t };\r\n \r\n\t function update( count, mode, instanceCount ) {\r\n \r\n\t\t render.calls ++;\r\n \r\n\t\t switch ( mode ) {\r\n \r\n\t\t\t case 4:\r\n\t\t\t\t render.triangles += instanceCount * ( count / 3 );\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 1:\r\n\t\t\t\t render.lines += instanceCount * ( count / 2 );\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 3:\r\n\t\t\t\t render.lines += instanceCount * ( count - 1 );\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 2:\r\n\t\t\t\t render.lines += instanceCount * count;\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 0:\r\n\t\t\t\t render.points += instanceCount * count;\r\n\t\t\t\t break;\r\n \r\n\t\t\t default:\r\n\t\t\t\t console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\r\n\t\t\t\t break;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function reset() {\r\n \r\n\t\t render.frame ++;\r\n\t\t render.calls = 0;\r\n\t\t render.triangles = 0;\r\n\t\t render.points = 0;\r\n\t\t render.lines = 0;\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t memory: memory,\r\n\t\t render: render,\r\n\t\t programs: null,\r\n\t\t autoReset: true,\r\n\t\t reset: reset,\r\n\t\t update: update\r\n\t };\r\n \r\n }\r\n \r\n function numericalSort( a, b ) {\r\n \r\n\t return a[ 0 ] - b[ 0 ];\r\n \r\n }\r\n \r\n function absNumericalSort( a, b ) {\r\n \r\n\t return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\r\n \r\n }\r\n \r\n function denormalize( morph, attribute ) {\r\n \r\n\t let denominator = 1;\r\n\t const array = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\r\n \r\n\t if ( array instanceof Int8Array ) denominator = 127;\r\n\t else if ( array instanceof Int16Array ) denominator = 32767;\r\n\t else if ( array instanceof Int32Array ) denominator = 2147483647;\r\n\t else console.error( 'THREE.WebGLMorphtargets: Unsupported morph attribute data type: ', array );\r\n \r\n\t morph.divideScalar( denominator );\r\n \r\n }\r\n \r\n function WebGLMorphtargets( gl, capabilities, textures ) {\r\n \r\n\t const influencesList = {};\r\n\t const morphInfluences = new Float32Array( 8 );\r\n\t const morphTextures = new WeakMap();\r\n\t const morph = new Vector4();\r\n \r\n\t const workInfluences = [];\r\n \r\n\t for ( let i = 0; i < 8; i ++ ) {\r\n \r\n\t\t workInfluences[ i ] = [ i, 0 ];\r\n \r\n\t }\r\n \r\n\t function update( object, geometry, material, program ) {\r\n \r\n\t\t const objectInfluences = object.morphTargetInfluences;\r\n \r\n\t\t if ( capabilities.isWebGL2 === true ) {\r\n \r\n\t\t\t // instead of using attributes, the WebGL 2 code path encodes morph targets\r\n\t\t\t // into an array of data textures. Each layer represents a single morph target.\r\n \r\n\t\t\t const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\t\t const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n \r\n\t\t\t let entry = morphTextures.get( geometry );\r\n \r\n\t\t\t if ( entry === undefined || entry.count !== morphTargetsCount ) {\r\n \r\n\t\t\t\t if ( entry !== undefined ) entry.texture.dispose();\r\n \r\n\t\t\t\t const hasMorphPosition = geometry.morphAttributes.position !== undefined;\r\n\t\t\t\t const hasMorphNormals = geometry.morphAttributes.normal !== undefined;\r\n\t\t\t\t const hasMorphColors = geometry.morphAttributes.color !== undefined;\r\n \r\n\t\t\t\t const morphTargets = geometry.morphAttributes.position || [];\r\n\t\t\t\t const morphNormals = geometry.morphAttributes.normal || [];\r\n\t\t\t\t const morphColors = geometry.morphAttributes.color || [];\r\n \r\n\t\t\t\t let vertexDataCount = 0;\r\n \r\n\t\t\t\t if ( hasMorphPosition === true ) vertexDataCount = 1;\r\n\t\t\t\t if ( hasMorphNormals === true ) vertexDataCount = 2;\r\n\t\t\t\t if ( hasMorphColors === true ) vertexDataCount = 3;\r\n \r\n\t\t\t\t let width = geometry.attributes.position.count * vertexDataCount;\r\n\t\t\t\t let height = 1;\r\n \r\n\t\t\t\t if ( width > capabilities.maxTextureSize ) {\r\n \r\n\t\t\t\t\t height = Math.ceil( width / capabilities.maxTextureSize );\r\n\t\t\t\t\t width = capabilities.maxTextureSize;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t const buffer = new Float32Array( width * height * 4 * morphTargetsCount );\r\n \r\n\t\t\t\t const texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\r\n\t\t\t\t texture.format = RGBAFormat; // using RGBA since RGB might be emulated (and is thus slower)\r\n\t\t\t\t texture.type = FloatType;\r\n\t\t\t\t texture.needsUpdate = true;\r\n \r\n\t\t\t\t // fill buffer\r\n \r\n\t\t\t\t const vertexDataStride = vertexDataCount * 4;\r\n \r\n\t\t\t\t for ( let i = 0; i < morphTargetsCount; i ++ ) {\r\n \r\n\t\t\t\t\t const morphTarget = morphTargets[ i ];\r\n\t\t\t\t\t const morphNormal = morphNormals[ i ];\r\n\t\t\t\t\t const morphColor = morphColors[ i ];\r\n \r\n\t\t\t\t\t const offset = width * height * 4 * i;\r\n \r\n\t\t\t\t\t for ( let j = 0; j < morphTarget.count; j ++ ) {\r\n \r\n\t\t\t\t\t\t const stride = j * vertexDataStride;\r\n \r\n\t\t\t\t\t\t if ( hasMorphPosition === true ) {\r\n \r\n\t\t\t\t\t\t\t morph.fromBufferAttribute( morphTarget, j );\r\n \r\n\t\t\t\t\t\t\t if ( morphTarget.normalized === true ) denormalize( morph, morphTarget );\r\n \r\n\t\t\t\t\t\t\t buffer[ offset + stride + 0 ] = morph.x;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 1 ] = morph.y;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 2 ] = morph.z;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 3 ] = 0;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t if ( hasMorphNormals === true ) {\r\n \r\n\t\t\t\t\t\t\t morph.fromBufferAttribute( morphNormal, j );\r\n \r\n\t\t\t\t\t\t\t if ( morphNormal.normalized === true ) denormalize( morph, morphNormal );\r\n \r\n\t\t\t\t\t\t\t buffer[ offset + stride + 4 ] = morph.x;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 5 ] = morph.y;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 6 ] = morph.z;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 7 ] = 0;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t if ( hasMorphColors === true ) {\r\n \r\n\t\t\t\t\t\t\t morph.fromBufferAttribute( morphColor, j );\r\n \r\n\t\t\t\t\t\t\t if ( morphColor.normalized === true ) denormalize( morph, morphNormal );\r\n \r\n\t\t\t\t\t\t\t buffer[ offset + stride + 8 ] = morph.x;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 9 ] = morph.y;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 10 ] = morph.z;\r\n\t\t\t\t\t\t\t buffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t entry = {\r\n\t\t\t\t\t count: morphTargetsCount,\r\n\t\t\t\t\t texture: texture,\r\n\t\t\t\t\t size: new Vector2( width, height )\r\n\t\t\t\t };\r\n \r\n\t\t\t\t morphTextures.set( geometry, entry );\r\n \r\n\t\t\t\t function disposeTexture() {\r\n \r\n\t\t\t\t\t texture.dispose();\r\n \r\n\t\t\t\t\t morphTextures.delete( geometry );\r\n \r\n\t\t\t\t\t geometry.removeEventListener( 'dispose', disposeTexture );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t geometry.addEventListener( 'dispose', disposeTexture );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t //\r\n \r\n\t\t\t let morphInfluencesSum = 0;\r\n \r\n\t\t\t for ( let i = 0; i < objectInfluences.length; i ++ ) {\r\n \r\n\t\t\t\t morphInfluencesSum += objectInfluences[ i ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n \r\n\t\t\t program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\r\n\t\t\t program.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\r\n \r\n\t\t\t program.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\r\n\t\t\t program.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\r\n \r\n \r\n\t\t } else {\r\n \r\n\t\t\t // When object doesn't have morph target influences defined, we treat it as a 0-length array\r\n\t\t\t // This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\r\n \r\n\t\t\t const length = objectInfluences === undefined ? 0 : objectInfluences.length;\r\n \r\n\t\t\t let influences = influencesList[ geometry.id ];\r\n \r\n\t\t\t if ( influences === undefined || influences.length !== length ) {\r\n \r\n\t\t\t\t // initialise list\r\n \r\n\t\t\t\t influences = [];\r\n \r\n\t\t\t\t for ( let i = 0; i < length; i ++ ) {\r\n \r\n\t\t\t\t\t influences[ i ] = [ i, 0 ];\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t influencesList[ geometry.id ] = influences;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Collect influences\r\n \r\n\t\t\t for ( let i = 0; i < length; i ++ ) {\r\n \r\n\t\t\t\t const influence = influences[ i ];\r\n \r\n\t\t\t\t influence[ 0 ] = i;\r\n\t\t\t\t influence[ 1 ] = objectInfluences[ i ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t influences.sort( absNumericalSort );\r\n \r\n\t\t\t for ( let i = 0; i < 8; i ++ ) {\r\n \r\n\t\t\t\t if ( i < length && influences[ i ][ 1 ] ) {\r\n \r\n\t\t\t\t\t workInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\r\n\t\t\t\t\t workInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t workInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\r\n\t\t\t\t\t workInfluences[ i ][ 1 ] = 0;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t workInfluences.sort( numericalSort );\r\n \r\n\t\t\t const morphTargets = geometry.morphAttributes.position;\r\n\t\t\t const morphNormals = geometry.morphAttributes.normal;\r\n \r\n\t\t\t let morphInfluencesSum = 0;\r\n \r\n\t\t\t for ( let i = 0; i < 8; i ++ ) {\r\n \r\n\t\t\t\t const influence = workInfluences[ i ];\r\n\t\t\t\t const index = influence[ 0 ];\r\n\t\t\t\t const value = influence[ 1 ];\r\n \r\n\t\t\t\t if ( index !== Number.MAX_SAFE_INTEGER && value ) {\r\n \r\n\t\t\t\t\t if ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\r\n \r\n\t\t\t\t\t\t geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\r\n \r\n\t\t\t\t\t\t geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t morphInfluences[ i ] = value;\r\n\t\t\t\t\t morphInfluencesSum += value;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t if ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\r\n \r\n\t\t\t\t\t\t geometry.deleteAttribute( 'morphTarget' + i );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\r\n \r\n\t\t\t\t\t\t geometry.deleteAttribute( 'morphNormal' + i );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t morphInfluences[ i ] = 0;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // GLSL shader uses formula baseinfluence * base + sum(target * influence)\r\n\t\t\t // This allows us to switch between absolute morphs and relative morphs without changing shader code\r\n\t\t\t // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\r\n\t\t\t const morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n \r\n\t\t\t program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\r\n\t\t\t program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t update: update\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLObjects( gl, geometries, attributes, info ) {\r\n \r\n\t let updateMap = new WeakMap();\r\n \r\n\t function update( object ) {\r\n \r\n\t\t const frame = info.render.frame;\r\n \r\n\t\t const geometry = object.geometry;\r\n\t\t const buffergeometry = geometries.get( object, geometry );\r\n \r\n\t\t // Update once per frame\r\n \r\n\t\t if ( updateMap.get( buffergeometry ) !== frame ) {\r\n \r\n\t\t\t geometries.update( buffergeometry );\r\n \r\n\t\t\t updateMap.set( buffergeometry, frame );\r\n \r\n\t\t }\r\n \r\n\t\t if ( object.isInstancedMesh ) {\r\n \r\n\t\t\t if ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\r\n \r\n\t\t\t\t object.addEventListener( 'dispose', onInstancedMeshDispose );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t attributes.update( object.instanceMatrix, 34962 );\r\n \r\n\t\t\t if ( object.instanceColor !== null ) {\r\n \r\n\t\t\t\t attributes.update( object.instanceColor, 34962 );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return buffergeometry;\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t updateMap = new WeakMap();\r\n \r\n\t }\r\n \r\n\t function onInstancedMeshDispose( event ) {\r\n \r\n\t\t const instancedMesh = event.target;\r\n \r\n\t\t instancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\r\n \r\n\t\t attributes.remove( instancedMesh.instanceMatrix );\r\n \r\n\t\t if ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t update: update,\r\n\t\t dispose: dispose\r\n \r\n\t };\r\n \r\n }\r\n \r\n /**\r\n  * Uniforms of a program.\r\n  * Those form a tree structure with a special top-level container for the root,\r\n  * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n  *\r\n  *\r\n  * Properties of inner nodes including the top-level container:\r\n  *\r\n  * .seq - array of nested uniforms\r\n  * .map - nested uniforms by name\r\n  *\r\n  *\r\n  * Methods of all nodes except the top-level container:\r\n  *\r\n  * .setValue( gl, value, [textures] )\r\n  *\r\n  * \t\tuploads a uniform value(s)\r\n  *  \tthe 'textures' parameter is needed for sampler uniforms\r\n  *\r\n  *\r\n  * Static methods of the top-level container (textures factorizations):\r\n  *\r\n  * .upload( gl, seq, values, textures )\r\n  *\r\n  * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n  *\r\n  * .seqWithValue( seq, values ) : filteredSeq\r\n  *\r\n  * \t\tfilters 'seq' entries with corresponding entry in values\r\n  *\r\n  *\r\n  * Methods of the top-level container (textures factorizations):\r\n  *\r\n  * .setValue( gl, name, value, textures )\r\n  *\r\n  * \t\tsets uniform with  name 'name' to 'value'\r\n  *\r\n  * .setOptional( gl, obj, prop )\r\n  *\r\n  * \t\tlike .set for an optional property of the object\r\n  *\r\n  */\r\n \r\n const emptyTexture = new Texture();\r\n const emptyArrayTexture = new DataArrayTexture();\r\n const empty3dTexture = new Data3DTexture();\r\n const emptyCubeTexture = new CubeTexture();\r\n \r\n // --- Utilities ---\r\n \r\n // Array Caches (provide typed arrays for temporary by size)\r\n \r\n const arrayCacheF32 = [];\r\n const arrayCacheI32 = [];\r\n \r\n // Float32Array caches used for uploading Matrix uniforms\r\n \r\n const mat4array = new Float32Array( 16 );\r\n const mat3array = new Float32Array( 9 );\r\n const mat2array = new Float32Array( 4 );\r\n \r\n // Flattening for arrays of vectors and matrices\r\n \r\n function flatten( array, nBlocks, blockSize ) {\r\n \r\n\t const firstElem = array[ 0 ];\r\n \r\n\t if ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t // unoptimized: ! isNaN( firstElem )\r\n\t // see http://jacksondunstan.com/articles/983\r\n \r\n\t const n = nBlocks * blockSize;\r\n\t let r = arrayCacheF32[ n ];\r\n \r\n\t if ( r === undefined ) {\r\n \r\n\t\t r = new Float32Array( n );\r\n\t\t arrayCacheF32[ n ] = r;\r\n \r\n\t }\r\n \r\n\t if ( nBlocks !== 0 ) {\r\n \r\n\t\t firstElem.toArray( r, 0 );\r\n \r\n\t\t for ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n \r\n\t\t\t offset += blockSize;\r\n\t\t\t array[ i ].toArray( r, offset );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return r;\r\n \r\n }\r\n \r\n function arraysEqual( a, b ) {\r\n \r\n\t if ( a.length !== b.length ) return false;\r\n \r\n\t for ( let i = 0, l = a.length; i < l; i ++ ) {\r\n \r\n\t\t if ( a[ i ] !== b[ i ] ) return false;\r\n \r\n\t }\r\n \r\n\t return true;\r\n \r\n }\r\n \r\n function copyArray( a, b ) {\r\n \r\n\t for ( let i = 0, l = b.length; i < l; i ++ ) {\r\n \r\n\t\t a[ i ] = b[ i ];\r\n \r\n\t }\r\n \r\n }\r\n \r\n // Texture unit allocation\r\n \r\n function allocTexUnits( textures, n ) {\r\n \r\n\t let r = arrayCacheI32[ n ];\r\n \r\n\t if ( r === undefined ) {\r\n \r\n\t\t r = new Int32Array( n );\r\n\t\t arrayCacheI32[ n ] = r;\r\n \r\n\t }\r\n \r\n\t for ( let i = 0; i !== n; ++ i ) {\r\n \r\n\t\t r[ i ] = textures.allocateTextureUnit();\r\n \r\n\t }\r\n \r\n\t return r;\r\n \r\n }\r\n \r\n // --- Setters ---\r\n \r\n // Note: Defining these methods externally, because they come in a bunch\r\n // and this way their names minify.\r\n \r\n // Single scalar\r\n \r\n function setValueV1f( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( cache[ 0 ] === v ) return;\r\n \r\n\t gl.uniform1f( this.addr, v );\r\n \r\n\t cache[ 0 ] = v;\r\n \r\n }\r\n \r\n // Single float vector (from flat array or THREE.VectorN)\r\n \r\n function setValueV2f( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( v.x !== undefined ) {\r\n \r\n\t\t if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\r\n \r\n\t\t\t gl.uniform2f( this.addr, v.x, v.y );\r\n \r\n\t\t\t cache[ 0 ] = v.x;\r\n\t\t\t cache[ 1 ] = v.y;\r\n \r\n\t\t }\r\n \r\n\t } else {\r\n \r\n\t\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t\t gl.uniform2fv( this.addr, v );\r\n \r\n\t\t copyArray( cache, v );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function setValueV3f( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( v.x !== undefined ) {\r\n \r\n\t\t if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\r\n \r\n\t\t\t gl.uniform3f( this.addr, v.x, v.y, v.z );\r\n \r\n\t\t\t cache[ 0 ] = v.x;\r\n\t\t\t cache[ 1 ] = v.y;\r\n\t\t\t cache[ 2 ] = v.z;\r\n \r\n\t\t }\r\n \r\n\t } else if ( v.r !== undefined ) {\r\n \r\n\t\t if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\r\n \r\n\t\t\t gl.uniform3f( this.addr, v.r, v.g, v.b );\r\n \r\n\t\t\t cache[ 0 ] = v.r;\r\n\t\t\t cache[ 1 ] = v.g;\r\n\t\t\t cache[ 2 ] = v.b;\r\n \r\n\t\t }\r\n \r\n\t } else {\r\n \r\n\t\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t\t gl.uniform3fv( this.addr, v );\r\n \r\n\t\t copyArray( cache, v );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function setValueV4f( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( v.x !== undefined ) {\r\n \r\n\t\t if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\r\n \r\n\t\t\t gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n \r\n\t\t\t cache[ 0 ] = v.x;\r\n\t\t\t cache[ 1 ] = v.y;\r\n\t\t\t cache[ 2 ] = v.z;\r\n\t\t\t cache[ 3 ] = v.w;\r\n \r\n\t\t }\r\n \r\n\t } else {\r\n \r\n\t\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t\t gl.uniform4fv( this.addr, v );\r\n \r\n\t\t copyArray( cache, v );\r\n \r\n\t }\r\n \r\n }\r\n \r\n // Single matrix (from flat array or THREE.MatrixN)\r\n \r\n function setValueM2( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n\t const elements = v.elements;\r\n \r\n\t if ( elements === undefined ) {\r\n \r\n\t\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t\t gl.uniformMatrix2fv( this.addr, false, v );\r\n \r\n\t\t copyArray( cache, v );\r\n \r\n\t } else {\r\n \r\n\t\t if ( arraysEqual( cache, elements ) ) return;\r\n \r\n\t\t mat2array.set( elements );\r\n \r\n\t\t gl.uniformMatrix2fv( this.addr, false, mat2array );\r\n \r\n\t\t copyArray( cache, elements );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function setValueM3( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n\t const elements = v.elements;\r\n \r\n\t if ( elements === undefined ) {\r\n \r\n\t\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t\t gl.uniformMatrix3fv( this.addr, false, v );\r\n \r\n\t\t copyArray( cache, v );\r\n \r\n\t } else {\r\n \r\n\t\t if ( arraysEqual( cache, elements ) ) return;\r\n \r\n\t\t mat3array.set( elements );\r\n \r\n\t\t gl.uniformMatrix3fv( this.addr, false, mat3array );\r\n \r\n\t\t copyArray( cache, elements );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function setValueM4( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n\t const elements = v.elements;\r\n \r\n\t if ( elements === undefined ) {\r\n \r\n\t\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t\t gl.uniformMatrix4fv( this.addr, false, v );\r\n \r\n\t\t copyArray( cache, v );\r\n \r\n\t } else {\r\n \r\n\t\t if ( arraysEqual( cache, elements ) ) return;\r\n \r\n\t\t mat4array.set( elements );\r\n \r\n\t\t gl.uniformMatrix4fv( this.addr, false, mat4array );\r\n \r\n\t\t copyArray( cache, elements );\r\n \r\n\t }\r\n \r\n }\r\n \r\n // Single integer / boolean\r\n \r\n function setValueV1i( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( cache[ 0 ] === v ) return;\r\n \r\n\t gl.uniform1i( this.addr, v );\r\n \r\n\t cache[ 0 ] = v;\r\n \r\n }\r\n \r\n // Single integer / boolean vector (from flat array)\r\n \r\n function setValueV2i( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t gl.uniform2iv( this.addr, v );\r\n \r\n\t copyArray( cache, v );\r\n \r\n }\r\n \r\n function setValueV3i( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t gl.uniform3iv( this.addr, v );\r\n \r\n\t copyArray( cache, v );\r\n \r\n }\r\n \r\n function setValueV4i( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t gl.uniform4iv( this.addr, v );\r\n \r\n\t copyArray( cache, v );\r\n \r\n }\r\n \r\n // Single unsigned integer\r\n \r\n function setValueV1ui( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( cache[ 0 ] === v ) return;\r\n \r\n\t gl.uniform1ui( this.addr, v );\r\n \r\n\t cache[ 0 ] = v;\r\n \r\n }\r\n \r\n // Single unsigned integer vector (from flat array)\r\n \r\n function setValueV2ui( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t gl.uniform2uiv( this.addr, v );\r\n \r\n\t copyArray( cache, v );\r\n \r\n }\r\n \r\n function setValueV3ui( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t gl.uniform3uiv( this.addr, v );\r\n \r\n\t copyArray( cache, v );\r\n \r\n }\r\n \r\n function setValueV4ui( gl, v ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( arraysEqual( cache, v ) ) return;\r\n \r\n\t gl.uniform4uiv( this.addr, v );\r\n \r\n\t copyArray( cache, v );\r\n \r\n }\r\n \r\n \r\n // Single texture (2D / Cube)\r\n \r\n function setValueT1( gl, v, textures ) {\r\n \r\n\t const cache = this.cache;\r\n\t const unit = textures.allocateTextureUnit();\r\n \r\n\t if ( cache[ 0 ] !== unit ) {\r\n \r\n\t\t gl.uniform1i( this.addr, unit );\r\n\t\t cache[ 0 ] = unit;\r\n \r\n\t }\r\n \r\n\t textures.setTexture2D( v || emptyTexture, unit );\r\n \r\n }\r\n \r\n function setValueT3D1( gl, v, textures ) {\r\n \r\n\t const cache = this.cache;\r\n\t const unit = textures.allocateTextureUnit();\r\n \r\n\t if ( cache[ 0 ] !== unit ) {\r\n \r\n\t\t gl.uniform1i( this.addr, unit );\r\n\t\t cache[ 0 ] = unit;\r\n \r\n\t }\r\n \r\n\t textures.setTexture3D( v || empty3dTexture, unit );\r\n \r\n }\r\n \r\n function setValueT6( gl, v, textures ) {\r\n \r\n\t const cache = this.cache;\r\n\t const unit = textures.allocateTextureUnit();\r\n \r\n\t if ( cache[ 0 ] !== unit ) {\r\n \r\n\t\t gl.uniform1i( this.addr, unit );\r\n\t\t cache[ 0 ] = unit;\r\n \r\n\t }\r\n \r\n\t textures.setTextureCube( v || emptyCubeTexture, unit );\r\n \r\n }\r\n \r\n function setValueT2DArray1( gl, v, textures ) {\r\n \r\n\t const cache = this.cache;\r\n\t const unit = textures.allocateTextureUnit();\r\n \r\n\t if ( cache[ 0 ] !== unit ) {\r\n \r\n\t\t gl.uniform1i( this.addr, unit );\r\n\t\t cache[ 0 ] = unit;\r\n \r\n\t }\r\n \r\n\t textures.setTexture2DArray( v || emptyArrayTexture, unit );\r\n \r\n }\r\n \r\n // Helper to pick the right setter for the singular case\r\n \r\n function getSingularSetter( type ) {\r\n \r\n\t switch ( type ) {\r\n \r\n\t\t case 0x1406: return setValueV1f; // FLOAT\r\n\t\t case 0x8b50: return setValueV2f; // _VEC2\r\n\t\t case 0x8b51: return setValueV3f; // _VEC3\r\n\t\t case 0x8b52: return setValueV4f; // _VEC4\r\n \r\n\t\t case 0x8b5a: return setValueM2; // _MAT2\r\n\t\t case 0x8b5b: return setValueM3; // _MAT3\r\n\t\t case 0x8b5c: return setValueM4; // _MAT4\r\n \r\n\t\t case 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\r\n\t\t case 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\r\n\t\t case 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\r\n\t\t case 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\r\n \r\n\t\t case 0x1405: return setValueV1ui; // UINT\r\n\t\t case 0x8dc6: return setValueV2ui; // _VEC2\r\n\t\t case 0x8dc7: return setValueV3ui; // _VEC3\r\n\t\t case 0x8dc8: return setValueV4ui; // _VEC4\r\n \r\n\t\t case 0x8b5e: // SAMPLER_2D\r\n\t\t case 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\t case 0x8dca: // INT_SAMPLER_2D\r\n\t\t case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\t case 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\t return setValueT1;\r\n \r\n\t\t case 0x8b5f: // SAMPLER_3D\r\n\t\t case 0x8dcb: // INT_SAMPLER_3D\r\n\t\t case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\t return setValueT3D1;\r\n \r\n\t\t case 0x8b60: // SAMPLER_CUBE\r\n\t\t case 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\t case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\t case 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\t return setValueT6;\r\n \r\n\t\t case 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\t case 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\t case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\t case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\t return setValueT2DArray1;\r\n \r\n\t }\r\n \r\n }\r\n \r\n \r\n // Array of scalars\r\n \r\n function setValueV1fArray( gl, v ) {\r\n \r\n\t gl.uniform1fv( this.addr, v );\r\n \r\n }\r\n \r\n // Array of vectors (from flat array or array of THREE.VectorN)\r\n \r\n function setValueV2fArray( gl, v ) {\r\n \r\n\t const data = flatten( v, this.size, 2 );\r\n \r\n\t gl.uniform2fv( this.addr, data );\r\n \r\n }\r\n \r\n function setValueV3fArray( gl, v ) {\r\n \r\n\t const data = flatten( v, this.size, 3 );\r\n \r\n\t gl.uniform3fv( this.addr, data );\r\n \r\n }\r\n \r\n function setValueV4fArray( gl, v ) {\r\n \r\n\t const data = flatten( v, this.size, 4 );\r\n \r\n\t gl.uniform4fv( this.addr, data );\r\n \r\n }\r\n \r\n // Array of matrices (from flat array or array of THREE.MatrixN)\r\n \r\n function setValueM2Array( gl, v ) {\r\n \r\n\t const data = flatten( v, this.size, 4 );\r\n \r\n\t gl.uniformMatrix2fv( this.addr, false, data );\r\n \r\n }\r\n \r\n function setValueM3Array( gl, v ) {\r\n \r\n\t const data = flatten( v, this.size, 9 );\r\n \r\n\t gl.uniformMatrix3fv( this.addr, false, data );\r\n \r\n }\r\n \r\n function setValueM4Array( gl, v ) {\r\n \r\n\t const data = flatten( v, this.size, 16 );\r\n \r\n\t gl.uniformMatrix4fv( this.addr, false, data );\r\n \r\n }\r\n \r\n // Array of integer / boolean\r\n \r\n function setValueV1iArray( gl, v ) {\r\n \r\n\t gl.uniform1iv( this.addr, v );\r\n \r\n }\r\n \r\n // Array of integer / boolean vectors (from flat array)\r\n \r\n function setValueV2iArray( gl, v ) {\r\n \r\n\t gl.uniform2iv( this.addr, v );\r\n \r\n }\r\n \r\n function setValueV3iArray( gl, v ) {\r\n \r\n\t gl.uniform3iv( this.addr, v );\r\n \r\n }\r\n \r\n function setValueV4iArray( gl, v ) {\r\n \r\n\t gl.uniform4iv( this.addr, v );\r\n \r\n }\r\n \r\n // Array of unsigned integer\r\n \r\n function setValueV1uiArray( gl, v ) {\r\n \r\n\t gl.uniform1uiv( this.addr, v );\r\n \r\n }\r\n \r\n // Array of unsigned integer vectors (from flat array)\r\n \r\n function setValueV2uiArray( gl, v ) {\r\n \r\n\t gl.uniform2uiv( this.addr, v );\r\n \r\n }\r\n \r\n function setValueV3uiArray( gl, v ) {\r\n \r\n\t gl.uniform3uiv( this.addr, v );\r\n \r\n }\r\n \r\n function setValueV4uiArray( gl, v ) {\r\n \r\n\t gl.uniform4uiv( this.addr, v );\r\n \r\n }\r\n \r\n \r\n // Array of textures (2D / 3D / Cube / 2DArray)\r\n \r\n function setValueT1Array( gl, v, textures ) {\r\n \r\n\t const n = v.length;\r\n \r\n\t const units = allocTexUnits( textures, n );\r\n \r\n\t gl.uniform1iv( this.addr, units );\r\n \r\n\t for ( let i = 0; i !== n; ++ i ) {\r\n \r\n\t\t textures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function setValueT3DArray( gl, v, textures ) {\r\n \r\n\t const n = v.length;\r\n \r\n\t const units = allocTexUnits( textures, n );\r\n \r\n\t gl.uniform1iv( this.addr, units );\r\n \r\n\t for ( let i = 0; i !== n; ++ i ) {\r\n \r\n\t\t textures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function setValueT6Array( gl, v, textures ) {\r\n \r\n\t const n = v.length;\r\n \r\n\t const units = allocTexUnits( textures, n );\r\n \r\n\t gl.uniform1iv( this.addr, units );\r\n \r\n\t for ( let i = 0; i !== n; ++ i ) {\r\n \r\n\t\t textures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function setValueT2DArrayArray( gl, v, textures ) {\r\n \r\n\t const n = v.length;\r\n \r\n\t const units = allocTexUnits( textures, n );\r\n \r\n\t gl.uniform1iv( this.addr, units );\r\n \r\n\t for ( let i = 0; i !== n; ++ i ) {\r\n \r\n\t\t textures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\r\n \r\n\t }\r\n \r\n }\r\n \r\n \r\n // Helper to pick the right setter for a pure (bottom-level) array\r\n \r\n function getPureArraySetter( type ) {\r\n \r\n\t switch ( type ) {\r\n \r\n\t\t case 0x1406: return setValueV1fArray; // FLOAT\r\n\t\t case 0x8b50: return setValueV2fArray; // _VEC2\r\n\t\t case 0x8b51: return setValueV3fArray; // _VEC3\r\n\t\t case 0x8b52: return setValueV4fArray; // _VEC4\r\n \r\n\t\t case 0x8b5a: return setValueM2Array; // _MAT2\r\n\t\t case 0x8b5b: return setValueM3Array; // _MAT3\r\n\t\t case 0x8b5c: return setValueM4Array; // _MAT4\r\n \r\n\t\t case 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\r\n\t\t case 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\r\n\t\t case 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\r\n\t\t case 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\r\n \r\n\t\t case 0x1405: return setValueV1uiArray; // UINT\r\n\t\t case 0x8dc6: return setValueV2uiArray; // _VEC2\r\n\t\t case 0x8dc7: return setValueV3uiArray; // _VEC3\r\n\t\t case 0x8dc8: return setValueV4uiArray; // _VEC4\r\n \r\n\t\t case 0x8b5e: // SAMPLER_2D\r\n\t\t case 0x8d66: // SAMPLER_EXTERNAL_OES\r\n\t\t case 0x8dca: // INT_SAMPLER_2D\r\n\t\t case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\r\n\t\t case 0x8b62: // SAMPLER_2D_SHADOW\r\n\t\t\t return setValueT1Array;\r\n \r\n\t\t case 0x8b5f: // SAMPLER_3D\r\n\t\t case 0x8dcb: // INT_SAMPLER_3D\r\n\t\t case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\r\n\t\t\t return setValueT3DArray;\r\n \r\n\t\t case 0x8b60: // SAMPLER_CUBE\r\n\t\t case 0x8dcc: // INT_SAMPLER_CUBE\r\n\t\t case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\r\n\t\t case 0x8dc5: // SAMPLER_CUBE_SHADOW\r\n\t\t\t return setValueT6Array;\r\n \r\n\t\t case 0x8dc1: // SAMPLER_2D_ARRAY\r\n\t\t case 0x8dcf: // INT_SAMPLER_2D_ARRAY\r\n\t\t case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\r\n\t\t case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\r\n\t\t\t return setValueT2DArrayArray;\r\n \r\n\t }\r\n \r\n }\r\n \r\n // --- Uniform Classes ---\r\n \r\n function SingleUniform( id, activeInfo, addr ) {\r\n \r\n\t this.id = id;\r\n\t this.addr = addr;\r\n\t this.cache = [];\r\n\t this.setValue = getSingularSetter( activeInfo.type );\r\n \r\n\t // this.path = activeInfo.name; // DEBUG\r\n \r\n }\r\n \r\n function PureArrayUniform( id, activeInfo, addr ) {\r\n \r\n\t this.id = id;\r\n\t this.addr = addr;\r\n\t this.cache = [];\r\n\t this.size = activeInfo.size;\r\n\t this.setValue = getPureArraySetter( activeInfo.type );\r\n \r\n\t // this.path = activeInfo.name; // DEBUG\r\n \r\n }\r\n \r\n PureArrayUniform.prototype.updateCache = function ( data ) {\r\n \r\n\t const cache = this.cache;\r\n \r\n\t if ( data instanceof Float32Array && cache.length !== data.length ) {\r\n \r\n\t\t this.cache = new Float32Array( data.length );\r\n \r\n\t }\r\n \r\n\t copyArray( cache, data );\r\n \r\n };\r\n \r\n function StructuredUniform( id ) {\r\n \r\n\t this.id = id;\r\n \r\n\t this.seq = [];\r\n\t this.map = {};\r\n \r\n }\r\n \r\n StructuredUniform.prototype.setValue = function ( gl, value, textures ) {\r\n \r\n\t const seq = this.seq;\r\n \r\n\t for ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n \r\n\t\t const u = seq[ i ];\r\n\t\t u.setValue( gl, value[ u.id ], textures );\r\n \r\n\t }\r\n \r\n };\r\n \r\n // --- Top-level ---\r\n \r\n // Parser - builds up the property tree from the path strings\r\n \r\n const RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\r\n \r\n // extracts\r\n // \t- the identifier (member name or array index)\r\n //  - followed by an optional right bracket (found when array index)\r\n //  - followed by an optional left bracket or dot (type of subscript)\r\n //\r\n // Note: These portions can be read in a non-overlapping fashion and\r\n // allow straightforward parsing of the hierarchy that WebGL encodes\r\n // in the uniform names.\r\n \r\n function addUniform( container, uniformObject ) {\r\n \r\n\t container.seq.push( uniformObject );\r\n\t container.map[ uniformObject.id ] = uniformObject;\r\n \r\n }\r\n \r\n function parseUniform( activeInfo, addr, container ) {\r\n \r\n\t const path = activeInfo.name,\r\n\t\t pathLength = path.length;\r\n \r\n\t // reset RegExp object, because of the early exit of a previous run\r\n\t RePathPart.lastIndex = 0;\r\n \r\n\t while ( true ) {\r\n \r\n\t\t const match = RePathPart.exec( path ),\r\n\t\t\t matchEnd = RePathPart.lastIndex;\r\n \r\n\t\t let id = match[ 1 ];\r\n\t\t const idIsIndex = match[ 2 ] === ']',\r\n\t\t\t subscript = match[ 3 ];\r\n \r\n\t\t if ( idIsIndex ) id = id | 0; // convert to integer\r\n \r\n\t\t if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\r\n \r\n\t\t\t // bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n \r\n\t\t\t addUniform( container, subscript === undefined ?\r\n\t\t\t\t new SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\t new PureArrayUniform( id, activeInfo, addr ) );\r\n \r\n\t\t\t break;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // step into inner node / create it in case it doesn't exist\r\n \r\n\t\t\t const map = container.map;\r\n\t\t\t let next = map[ id ];\r\n \r\n\t\t\t if ( next === undefined ) {\r\n \r\n\t\t\t\t next = new StructuredUniform( id );\r\n\t\t\t\t addUniform( container, next );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t container = next;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n // Root Container\r\n \r\n function WebGLUniforms( gl, program ) {\r\n \r\n\t this.seq = [];\r\n\t this.map = {};\r\n \r\n\t const n = gl.getProgramParameter( program, 35718 );\r\n \r\n\t for ( let i = 0; i < n; ++ i ) {\r\n \r\n\t\t const info = gl.getActiveUniform( program, i ),\r\n\t\t\t addr = gl.getUniformLocation( program, info.name );\r\n \r\n\t\t parseUniform( info, addr, this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n WebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\r\n \r\n\t const u = this.map[ name ];\r\n \r\n\t if ( u !== undefined ) u.setValue( gl, value, textures );\r\n \r\n };\r\n \r\n WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\r\n \r\n\t const v = object[ name ];\r\n \r\n\t if ( v !== undefined ) this.setValue( gl, name, v );\r\n \r\n };\r\n \r\n \r\n // Static interface\r\n \r\n WebGLUniforms.upload = function ( gl, seq, values, textures ) {\r\n \r\n\t for ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n \r\n\t\t const u = seq[ i ],\r\n\t\t\t v = values[ u.id ];\r\n \r\n\t\t if ( v.needsUpdate !== false ) {\r\n \r\n\t\t\t // note: always updating when .needsUpdate is undefined\r\n\t\t\t u.setValue( gl, v.value, textures );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n };\r\n \r\n WebGLUniforms.seqWithValue = function ( seq, values ) {\r\n \r\n\t const r = [];\r\n \r\n\t for ( let i = 0, n = seq.length; i !== n; ++ i ) {\r\n \r\n\t\t const u = seq[ i ];\r\n\t\t if ( u.id in values ) r.push( u );\r\n \r\n\t }\r\n \r\n\t return r;\r\n \r\n };\r\n \r\n function WebGLShader( gl, type, string ) {\r\n \r\n\t const shader = gl.createShader( type );\r\n \r\n\t gl.shaderSource( shader, string );\r\n\t gl.compileShader( shader );\r\n \r\n\t return shader;\r\n \r\n }\r\n \r\n let programIdCount = 0;\r\n \r\n function addLineNumbers( string ) {\r\n \r\n\t const lines = string.split( '\\n' );\r\n \r\n\t for ( let i = 0; i < lines.length; i ++ ) {\r\n \r\n\t\t lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n \r\n\t }\r\n \r\n\t return lines.join( '\\n' );\r\n \r\n }\r\n \r\n function getEncodingComponents( encoding ) {\r\n \r\n\t switch ( encoding ) {\r\n \r\n\t\t case LinearEncoding:\r\n\t\t\t return [ 'Linear', '( value )' ];\r\n\t\t case sRGBEncoding:\r\n\t\t\t return [ 'sRGB', '( value )' ];\r\n\t\t default:\r\n\t\t\t console.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\r\n\t\t\t return [ 'Linear', '( value )' ];\r\n \r\n\t }\r\n \r\n }\r\n \r\n function getShaderErrors( gl, shader, type ) {\r\n \r\n\t const status = gl.getShaderParameter( shader, 35713 );\r\n\t const errors = gl.getShaderInfoLog( shader ).trim();\r\n \r\n\t if ( status && errors === '' ) return '';\r\n \r\n\t // --enable-privileged-webgl-extension\r\n\t // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n \r\n\t return type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + addLineNumbers( gl.getShaderSource( shader ) );\r\n \r\n }\r\n \r\n function getTexelEncodingFunction( functionName, encoding ) {\r\n \r\n\t const components = getEncodingComponents( encoding );\r\n\t return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\r\n \r\n }\r\n \r\n function getToneMappingFunction( functionName, toneMapping ) {\r\n \r\n\t let toneMappingName;\r\n \r\n\t switch ( toneMapping ) {\r\n \r\n\t\t case LinearToneMapping:\r\n\t\t\t toneMappingName = 'Linear';\r\n\t\t\t break;\r\n \r\n\t\t case ReinhardToneMapping:\r\n\t\t\t toneMappingName = 'Reinhard';\r\n\t\t\t break;\r\n \r\n\t\t case CineonToneMapping:\r\n\t\t\t toneMappingName = 'OptimizedCineon';\r\n\t\t\t break;\r\n \r\n\t\t case ACESFilmicToneMapping:\r\n\t\t\t toneMappingName = 'ACESFilmic';\r\n\t\t\t break;\r\n \r\n\t\t case CustomToneMapping:\r\n\t\t\t toneMappingName = 'Custom';\r\n\t\t\t break;\r\n \r\n\t\t default:\r\n\t\t\t console.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\r\n\t\t\t toneMappingName = 'Linear';\r\n \r\n\t }\r\n \r\n\t return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\r\n \r\n }\r\n \r\n function generateExtensions( parameters ) {\r\n \r\n\t const chunks = [\r\n\t\t ( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t ( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t ( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t ( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\r\n\t ];\r\n \r\n\t return chunks.filter( filterEmptyLine ).join( '\\n' );\r\n \r\n }\r\n \r\n function generateDefines( defines ) {\r\n \r\n\t const chunks = [];\r\n \r\n\t for ( const name in defines ) {\r\n \r\n\t\t const value = defines[ name ];\r\n \r\n\t\t if ( value === false ) continue;\r\n \r\n\t\t chunks.push( '#define ' + name + ' ' + value );\r\n \r\n\t }\r\n \r\n\t return chunks.join( '\\n' );\r\n \r\n }\r\n \r\n function fetchAttributeLocations( gl, program ) {\r\n \r\n\t const attributes = {};\r\n \r\n\t const n = gl.getProgramParameter( program, 35721 );\r\n \r\n\t for ( let i = 0; i < n; i ++ ) {\r\n \r\n\t\t const info = gl.getActiveAttrib( program, i );\r\n\t\t const name = info.name;\r\n \r\n\t\t let locationSize = 1;\r\n\t\t if ( info.type === 35674 ) locationSize = 2;\r\n\t\t if ( info.type === 35675 ) locationSize = 3;\r\n\t\t if ( info.type === 35676 ) locationSize = 4;\r\n \r\n\t\t // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\r\n \r\n\t\t attributes[ name ] = {\r\n\t\t\t type: info.type,\r\n\t\t\t location: gl.getAttribLocation( program, name ),\r\n\t\t\t locationSize: locationSize\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t return attributes;\r\n \r\n }\r\n \r\n function filterEmptyLine( string ) {\r\n \r\n\t return string !== '';\r\n \r\n }\r\n \r\n function replaceLightNums( string, parameters ) {\r\n \r\n\t return string\r\n\t\t .replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t .replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t .replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\r\n\t\t .replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t .replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\r\n\t\t .replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\r\n\t\t .replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\r\n\t\t .replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\r\n \r\n }\r\n \r\n function replaceClippingPlaneNums( string, parameters ) {\r\n \r\n\t return string\r\n\t\t .replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\r\n\t\t .replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\r\n \r\n }\r\n \r\n // Resolve Includes\r\n \r\n const includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\r\n \r\n function resolveIncludes( string ) {\r\n \r\n\t return string.replace( includePattern, includeReplacer );\r\n \r\n }\r\n \r\n function includeReplacer( match, include ) {\r\n \r\n\t const string = ShaderChunk[ include ];\r\n \r\n\t if ( string === undefined ) {\r\n \r\n\t\t throw new Error( 'Can not resolve #include <' + include + '>' );\r\n \r\n\t }\r\n \r\n\t return resolveIncludes( string );\r\n \r\n }\r\n \r\n // Unroll Loops\r\n \r\n const deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n const unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\r\n \r\n function unrollLoops( string ) {\r\n \r\n\t return string\r\n\t\t .replace( unrollLoopPattern, loopReplacer )\r\n\t\t .replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );\r\n \r\n }\r\n \r\n function deprecatedLoopReplacer( match, start, end, snippet ) {\r\n \r\n\t console.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );\r\n\t return loopReplacer( match, start, end, snippet );\r\n \r\n }\r\n \r\n function loopReplacer( match, start, end, snippet ) {\r\n \r\n\t let string = '';\r\n \r\n\t for ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n \r\n\t\t string += snippet\r\n\t\t\t .replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\r\n\t\t\t .replace( /UNROLLED_LOOP_INDEX/g, i );\r\n \r\n\t }\r\n \r\n\t return string;\r\n \r\n }\r\n \r\n //\r\n \r\n function generatePrecision( parameters ) {\r\n \r\n\t let precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\r\n \r\n\t if ( parameters.precision === 'highp' ) {\r\n \r\n\t\t precisionstring += '\\n#define HIGH_PRECISION';\r\n \r\n\t } else if ( parameters.precision === 'mediump' ) {\r\n \r\n\t\t precisionstring += '\\n#define MEDIUM_PRECISION';\r\n \r\n\t } else if ( parameters.precision === 'lowp' ) {\r\n \r\n\t\t precisionstring += '\\n#define LOW_PRECISION';\r\n \r\n\t }\r\n \r\n\t return precisionstring;\r\n \r\n }\r\n \r\n function generateShadowMapTypeDefine( parameters ) {\r\n \r\n\t let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n \r\n\t if ( parameters.shadowMapType === PCFShadowMap ) {\r\n \r\n\t\t shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n \r\n\t } else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n \r\n\t\t shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n \r\n\t } else if ( parameters.shadowMapType === VSMShadowMap ) {\r\n \r\n\t\t shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\r\n \r\n\t }\r\n \r\n\t return shadowMapTypeDefine;\r\n \r\n }\r\n \r\n function generateEnvMapTypeDefine( parameters ) {\r\n \r\n\t let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n \r\n\t if ( parameters.envMap ) {\r\n \r\n\t\t switch ( parameters.envMapMode ) {\r\n \r\n\t\t\t case CubeReflectionMapping:\r\n\t\t\t case CubeRefractionMapping:\r\n\t\t\t\t envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t break;\r\n \r\n\t\t\t case CubeUVReflectionMapping:\r\n\t\t\t case CubeUVRefractionMapping:\r\n\t\t\t\t envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t break;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return envMapTypeDefine;\r\n \r\n }\r\n \r\n function generateEnvMapModeDefine( parameters ) {\r\n \r\n\t let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n \r\n\t if ( parameters.envMap ) {\r\n \r\n\t\t switch ( parameters.envMapMode ) {\r\n \r\n\t\t\t case CubeRefractionMapping:\r\n\t\t\t case CubeUVRefractionMapping:\r\n \r\n\t\t\t\t envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t break;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return envMapModeDefine;\r\n \r\n }\r\n \r\n function generateEnvMapBlendingDefine( parameters ) {\r\n \r\n\t let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\r\n \r\n\t if ( parameters.envMap ) {\r\n \r\n\t\t switch ( parameters.combine ) {\r\n \r\n\t\t\t case MultiplyOperation:\r\n\t\t\t\t envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t break;\r\n \r\n\t\t\t case MixOperation:\r\n\t\t\t\t envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t break;\r\n \r\n\t\t\t case AddOperation:\r\n\t\t\t\t envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t break;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return envMapBlendingDefine;\r\n \r\n }\r\n \r\n function generateCubeUVSize( parameters ) {\r\n \r\n\t const imageHeight = parameters.envMapCubeUVHeight;\r\n \r\n\t if ( imageHeight === null ) return null;\r\n \r\n\t const maxMip = Math.log2( imageHeight / 32 + 1 ) + 3;\r\n \r\n\t const texelHeight = 1.0 / imageHeight;\r\n \r\n\t const texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\r\n \r\n\t return { texelWidth, texelHeight, maxMip };\r\n \r\n }\r\n \r\n function WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\r\n \r\n\t // TODO Send this event to Three.js DevTools\r\n\t // console.log( 'WebGLProgram', cacheKey );\r\n \r\n\t const gl = renderer.getContext();\r\n \r\n\t const defines = parameters.defines;\r\n \r\n\t let vertexShader = parameters.vertexShader;\r\n\t let fragmentShader = parameters.fragmentShader;\r\n \r\n\t const shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\r\n\t const envMapTypeDefine = generateEnvMapTypeDefine( parameters );\r\n\t const envMapModeDefine = generateEnvMapModeDefine( parameters );\r\n\t const envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\r\n\t const envMapCubeUVSize = generateCubeUVSize( parameters );\r\n \r\n\t const customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\r\n \r\n\t const customDefines = generateDefines( defines );\r\n \r\n\t const program = gl.createProgram();\r\n \r\n\t let prefixVertex, prefixFragment;\r\n\t let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\r\n \r\n\t if ( parameters.isRawShaderMaterial ) {\r\n \r\n\t\t prefixVertex = [\r\n \r\n\t\t\t customDefines\r\n \r\n\t\t ].filter( filterEmptyLine ).join( '\\n' );\r\n \r\n\t\t if ( prefixVertex.length > 0 ) {\r\n \r\n\t\t\t prefixVertex += '\\n';\r\n \r\n\t\t }\r\n \r\n\t\t prefixFragment = [\r\n \r\n\t\t\t customExtensions,\r\n\t\t\t customDefines\r\n \r\n\t\t ].filter( filterEmptyLine ).join( '\\n' );\r\n \r\n\t\t if ( prefixFragment.length > 0 ) {\r\n \r\n\t\t\t prefixFragment += '\\n';\r\n \r\n\t\t }\r\n \r\n\t } else {\r\n \r\n\t\t prefixVertex = [\r\n \r\n\t\t\t generatePrecision( parameters ),\r\n \r\n\t\t\t '#define SHADER_NAME ' + parameters.shaderName,\r\n \r\n\t\t\t customDefines,\r\n \r\n\t\t\t parameters.instancing ? '#define USE_INSTANCING' : '',\r\n\t\t\t parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\r\n \r\n\t\t\t parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n \r\n\t\t\t '#define MAX_BONES ' + parameters.maxBones,\r\n\t\t\t ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t ( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\r\n \r\n\t\t\t parameters.map ? '#define USE_MAP' : '',\r\n\t\t\t parameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t parameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t parameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t parameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t parameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t parameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t ( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\r\n \r\n\t\t\t parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\t parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\t parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n \r\n\t\t\t parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n \r\n\t\t\t parameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\r\n\t\t\t parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\r\n \r\n\t\t\t parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n \r\n\t\t\t parameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\t parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\t parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n \r\n\t\t\t parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\r\n\t\t\t parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\r\n \r\n\t\t\t parameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n\t\t\t parameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\t\t parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\t parameters.vertexUvs ? '#define USE_UV' : '',\r\n\t\t\t parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\r\n \r\n\t\t\t parameters.flatShading ? '#define FLAT_SHADED' : '',\r\n \r\n\t\t\t parameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n \r\n\t\t\t parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t ( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\r\n\t\t\t ( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\r\n\t\t\t ( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\r\n\t\t\t ( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\r\n\t\t\t parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t parameters.flipSided ? '#define FLIP_SIDED' : '',\r\n \r\n\t\t\t parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n \r\n\t\t\t parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n \r\n\t\t\t parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t ( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n \r\n\t\t\t 'uniform mat4 modelMatrix;',\r\n\t\t\t 'uniform mat4 modelViewMatrix;',\r\n\t\t\t 'uniform mat4 projectionMatrix;',\r\n\t\t\t 'uniform mat4 viewMatrix;',\r\n\t\t\t 'uniform mat3 normalMatrix;',\r\n\t\t\t 'uniform vec3 cameraPosition;',\r\n\t\t\t 'uniform bool isOrthographic;',\r\n \r\n\t\t\t '#ifdef USE_INSTANCING',\r\n \r\n\t\t\t '\tattribute mat4 instanceMatrix;',\r\n \r\n\t\t\t '#endif',\r\n \r\n\t\t\t '#ifdef USE_INSTANCING_COLOR',\r\n \r\n\t\t\t '\tattribute vec3 instanceColor;',\r\n \r\n\t\t\t '#endif',\r\n \r\n\t\t\t 'attribute vec3 position;',\r\n\t\t\t 'attribute vec3 normal;',\r\n\t\t\t 'attribute vec2 uv;',\r\n \r\n\t\t\t '#ifdef USE_TANGENT',\r\n \r\n\t\t\t '\tattribute vec4 tangent;',\r\n \r\n\t\t\t '#endif',\r\n \r\n\t\t\t '#if defined( USE_COLOR_ALPHA )',\r\n \r\n\t\t\t '\tattribute vec4 color;',\r\n \r\n\t\t\t '#elif defined( USE_COLOR )',\r\n \r\n\t\t\t '\tattribute vec3 color;',\r\n \r\n\t\t\t '#endif',\r\n \r\n\t\t\t '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\r\n \r\n\t\t\t '\tattribute vec3 morphTarget0;',\r\n\t\t\t '\tattribute vec3 morphTarget1;',\r\n\t\t\t '\tattribute vec3 morphTarget2;',\r\n\t\t\t '\tattribute vec3 morphTarget3;',\r\n \r\n\t\t\t '\t#ifdef USE_MORPHNORMALS',\r\n \r\n\t\t\t '\t\tattribute vec3 morphNormal0;',\r\n\t\t\t '\t\tattribute vec3 morphNormal1;',\r\n\t\t\t '\t\tattribute vec3 morphNormal2;',\r\n\t\t\t '\t\tattribute vec3 morphNormal3;',\r\n \r\n\t\t\t '\t#else',\r\n \r\n\t\t\t '\t\tattribute vec3 morphTarget4;',\r\n\t\t\t '\t\tattribute vec3 morphTarget5;',\r\n\t\t\t '\t\tattribute vec3 morphTarget6;',\r\n\t\t\t '\t\tattribute vec3 morphTarget7;',\r\n \r\n\t\t\t '\t#endif',\r\n \r\n\t\t\t '#endif',\r\n \r\n\t\t\t '#ifdef USE_SKINNING',\r\n \r\n\t\t\t '\tattribute vec4 skinIndex;',\r\n\t\t\t '\tattribute vec4 skinWeight;',\r\n \r\n\t\t\t '#endif',\r\n \r\n\t\t\t '\\n'\r\n \r\n\t\t ].filter( filterEmptyLine ).join( '\\n' );\r\n \r\n\t\t prefixFragment = [\r\n \r\n\t\t\t customExtensions,\r\n \r\n\t\t\t generatePrecision( parameters ),\r\n \r\n\t\t\t '#define SHADER_NAME ' + parameters.shaderName,\r\n \r\n\t\t\t customDefines,\r\n \r\n\t\t\t ( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t ( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\r\n \r\n\t\t\t parameters.map ? '#define USE_MAP' : '',\r\n\t\t\t parameters.matcap ? '#define USE_MATCAP' : '',\r\n\t\t\t parameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t parameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t parameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t parameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t envMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\r\n\t\t\t envMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\r\n\t\t\t envMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\r\n\t\t\t parameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t parameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t parameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t parameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t ( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\r\n\t\t\t ( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\r\n \r\n\t\t\t parameters.clearcoat ? '#define USE_CLEARCOAT' : '',\r\n\t\t\t parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\r\n\t\t\t parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\r\n\t\t\t parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\r\n \r\n\t\t\t parameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\r\n\t\t\t parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\r\n\t\t\t parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n \r\n\t\t\t parameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t parameters.alphaTest ? '#define USE_ALPHATEST' : '',\r\n \r\n\t\t\t parameters.sheen ? '#define USE_SHEEN' : '',\r\n\t\t\t parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\r\n\t\t\t parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\r\n \r\n\t\t\t parameters.transmission ? '#define USE_TRANSMISSION' : '',\r\n\t\t\t parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\r\n\t\t\t parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\r\n \r\n\t\t\t parameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\r\n \r\n\t\t\t parameters.vertexTangents ? '#define USE_TANGENT' : '',\r\n\t\t\t parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\r\n\t\t\t parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\r\n\t\t\t parameters.vertexUvs ? '#define USE_UV' : '',\r\n\t\t\t parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\r\n \r\n\t\t\t parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\r\n \r\n\t\t\t parameters.flatShading ? '#define FLAT_SHADED' : '',\r\n \r\n\t\t\t parameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t parameters.flipSided ? '#define FLIP_SIDED' : '',\r\n \r\n\t\t\t parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n \r\n\t\t\t parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\r\n \r\n\t\t\t parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\r\n \r\n\t\t\t parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t ( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n \r\n\t\t\t 'uniform mat4 viewMatrix;',\r\n\t\t\t 'uniform vec3 cameraPosition;',\r\n\t\t\t 'uniform bool isOrthographic;',\r\n \r\n\t\t\t ( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\r\n\t\t\t ( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t ( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\r\n \r\n\t\t\t parameters.dithering ? '#define DITHERING' : '',\r\n\t\t\t parameters.opaque ? '#define OPAQUE' : '',\r\n \r\n\t\t\t ShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\r\n \r\n\t\t\t parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\r\n \r\n\t\t\t '\\n'\r\n \r\n\t\t ].filter( filterEmptyLine ).join( '\\n' );\r\n \r\n\t }\r\n \r\n\t vertexShader = resolveIncludes( vertexShader );\r\n\t vertexShader = replaceLightNums( vertexShader, parameters );\r\n\t vertexShader = replaceClippingPlaneNums( vertexShader, parameters );\r\n \r\n\t fragmentShader = resolveIncludes( fragmentShader );\r\n\t fragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\t fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\r\n \r\n\t vertexShader = unrollLoops( vertexShader );\r\n\t fragmentShader = unrollLoops( fragmentShader );\r\n \r\n\t if ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\r\n \r\n\t\t // GLSL 3.0 conversion for built-in materials and ShaderMaterial\r\n \r\n\t\t versionString = '#version 300 es\\n';\r\n \r\n\t\t prefixVertex = [\r\n\t\t\t 'precision mediump sampler2DArray;',\r\n\t\t\t '#define attribute in',\r\n\t\t\t '#define varying out',\r\n\t\t\t '#define texture2D texture'\r\n\t\t ].join( '\\n' ) + '\\n' + prefixVertex;\r\n \r\n\t\t prefixFragment = [\r\n\t\t\t '#define varying in',\r\n\t\t\t ( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\r\n\t\t\t ( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\r\n\t\t\t '#define gl_FragDepthEXT gl_FragDepth',\r\n\t\t\t '#define texture2D texture',\r\n\t\t\t '#define textureCube texture',\r\n\t\t\t '#define texture2DProj textureProj',\r\n\t\t\t '#define texture2DLodEXT textureLod',\r\n\t\t\t '#define texture2DProjLodEXT textureProjLod',\r\n\t\t\t '#define textureCubeLodEXT textureLod',\r\n\t\t\t '#define texture2DGradEXT textureGrad',\r\n\t\t\t '#define texture2DProjGradEXT textureProjGrad',\r\n\t\t\t '#define textureCubeGradEXT textureGrad'\r\n\t\t ].join( '\\n' ) + '\\n' + prefixFragment;\r\n \r\n\t }\r\n \r\n\t const vertexGlsl = versionString + prefixVertex + vertexShader;\r\n\t const fragmentGlsl = versionString + prefixFragment + fragmentShader;\r\n \r\n\t // console.log( '*VERTEX*', vertexGlsl );\r\n\t // console.log( '*FRAGMENT*', fragmentGlsl );\r\n \r\n\t const glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\r\n\t const glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\r\n \r\n\t gl.attachShader( program, glVertexShader );\r\n\t gl.attachShader( program, glFragmentShader );\r\n \r\n\t // Force a particular attribute to index 0.\r\n \r\n\t if ( parameters.index0AttributeName !== undefined ) {\r\n \r\n\t\t gl.bindAttribLocation( program, 0, parameters.index0AttributeName );\r\n \r\n\t } else if ( parameters.morphTargets === true ) {\r\n \r\n\t\t // programs with morphTargets displace position out of attribute 0\r\n\t\t gl.bindAttribLocation( program, 0, 'position' );\r\n \r\n\t }\r\n \r\n\t gl.linkProgram( program );\r\n \r\n\t // check for link errors\r\n\t if ( renderer.debug.checkShaderErrors ) {\r\n \r\n\t\t const programLog = gl.getProgramInfoLog( program ).trim();\r\n\t\t const vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\r\n\t\t const fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\r\n \r\n\t\t let runnable = true;\r\n\t\t let haveDiagnostics = true;\r\n \r\n\t\t if ( gl.getProgramParameter( program, 35714 ) === false ) {\r\n \r\n\t\t\t runnable = false;\r\n \r\n\t\t\t const vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\r\n\t\t\t const fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\r\n \r\n\t\t\t console.error(\r\n\t\t\t\t 'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\r\n\t\t\t\t 'VALIDATE_STATUS ' + gl.getProgramParameter( program, 35715 ) + '\\n\\n' +\r\n\t\t\t\t 'Program Info Log: ' + programLog + '\\n' +\r\n\t\t\t\t vertexErrors + '\\n' +\r\n\t\t\t\t fragmentErrors\r\n\t\t\t );\r\n \r\n\t\t } else if ( programLog !== '' ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\r\n \r\n\t\t } else if ( vertexLog === '' || fragmentLog === '' ) {\r\n \r\n\t\t\t haveDiagnostics = false;\r\n \r\n\t\t }\r\n \r\n\t\t if ( haveDiagnostics ) {\r\n \r\n\t\t\t this.diagnostics = {\r\n \r\n\t\t\t\t runnable: runnable,\r\n \r\n\t\t\t\t programLog: programLog,\r\n \r\n\t\t\t\t vertexShader: {\r\n \r\n\t\t\t\t\t log: vertexLog,\r\n\t\t\t\t\t prefix: prefixVertex\r\n \r\n\t\t\t\t },\r\n \r\n\t\t\t\t fragmentShader: {\r\n \r\n\t\t\t\t\t log: fragmentLog,\r\n\t\t\t\t\t prefix: prefixFragment\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // Clean up\r\n \r\n\t // Crashes in iOS9 and iOS10. #18402\r\n\t // gl.detachShader( program, glVertexShader );\r\n\t // gl.detachShader( program, glFragmentShader );\r\n \r\n\t gl.deleteShader( glVertexShader );\r\n\t gl.deleteShader( glFragmentShader );\r\n \r\n\t // set up caching for uniform locations\r\n \r\n\t let cachedUniforms;\r\n \r\n\t this.getUniforms = function () {\r\n \r\n\t\t if ( cachedUniforms === undefined ) {\r\n \r\n\t\t\t cachedUniforms = new WebGLUniforms( gl, program );\r\n \r\n\t\t }\r\n \r\n\t\t return cachedUniforms;\r\n \r\n\t };\r\n \r\n\t // set up caching for attribute locations\r\n \r\n\t let cachedAttributes;\r\n \r\n\t this.getAttributes = function () {\r\n \r\n\t\t if ( cachedAttributes === undefined ) {\r\n \r\n\t\t\t cachedAttributes = fetchAttributeLocations( gl, program );\r\n \r\n\t\t }\r\n \r\n\t\t return cachedAttributes;\r\n \r\n\t };\r\n \r\n\t // free resource\r\n \r\n\t this.destroy = function () {\r\n \r\n\t\t bindingStates.releaseStatesOfProgram( this );\r\n \r\n\t\t gl.deleteProgram( program );\r\n\t\t this.program = undefined;\r\n \r\n\t };\r\n \r\n\t //\r\n \r\n\t this.name = parameters.shaderName;\r\n\t this.id = programIdCount ++;\r\n\t this.cacheKey = cacheKey;\r\n\t this.usedTimes = 1;\r\n\t this.program = program;\r\n\t this.vertexShader = glVertexShader;\r\n\t this.fragmentShader = glFragmentShader;\r\n \r\n\t return this;\r\n \r\n }\r\n \r\n let _id = 0;\r\n \r\n class WebGLShaderCache {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.shaderCache = new Map();\r\n\t\t this.materialCache = new Map();\r\n \r\n\t }\r\n \r\n\t update( material ) {\r\n \r\n\t\t const vertexShader = material.vertexShader;\r\n\t\t const fragmentShader = material.fragmentShader;\r\n \r\n\t\t const vertexShaderStage = this._getShaderStage( vertexShader );\r\n\t\t const fragmentShaderStage = this._getShaderStage( fragmentShader );\r\n \r\n\t\t const materialShaders = this._getShaderCacheForMaterial( material );\r\n \r\n\t\t if ( materialShaders.has( vertexShaderStage ) === false ) {\r\n \r\n\t\t\t materialShaders.add( vertexShaderStage );\r\n\t\t\t vertexShaderStage.usedTimes ++;\r\n \r\n\t\t }\r\n \r\n\t\t if ( materialShaders.has( fragmentShaderStage ) === false ) {\r\n \r\n\t\t\t materialShaders.add( fragmentShaderStage );\r\n\t\t\t fragmentShaderStage.usedTimes ++;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t remove( material ) {\r\n \r\n\t\t const materialShaders = this.materialCache.get( material );\r\n \r\n\t\t for ( const shaderStage of materialShaders ) {\r\n \r\n\t\t\t shaderStage.usedTimes --;\r\n \r\n\t\t\t if ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage );\r\n \r\n\t\t }\r\n \r\n\t\t this.materialCache.delete( material );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getVertexShaderID( material ) {\r\n \r\n\t\t return this._getShaderStage( material.vertexShader ).id;\r\n \r\n\t }\r\n \r\n\t getFragmentShaderID( material ) {\r\n \r\n\t\t return this._getShaderStage( material.fragmentShader ).id;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.shaderCache.clear();\r\n\t\t this.materialCache.clear();\r\n \r\n\t }\r\n \r\n\t _getShaderCacheForMaterial( material ) {\r\n \r\n\t\t const cache = this.materialCache;\r\n \r\n\t\t if ( cache.has( material ) === false ) {\r\n \r\n\t\t\t cache.set( material, new Set() );\r\n \r\n\t\t }\r\n \r\n\t\t return cache.get( material );\r\n \r\n\t }\r\n \r\n\t _getShaderStage( code ) {\r\n \r\n\t\t const cache = this.shaderCache;\r\n \r\n\t\t if ( cache.has( code ) === false ) {\r\n \r\n\t\t\t const stage = new WebGLShaderStage();\r\n\t\t\t cache.set( code, stage );\r\n \r\n\t\t }\r\n \r\n\t\t return cache.get( code );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class WebGLShaderStage {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.id = _id ++;\r\n \r\n\t\t this.usedTimes = 0;\r\n \r\n\t }\r\n \r\n }\r\n \r\n function WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\r\n \r\n\t const _programLayers = new Layers();\r\n\t const _customShaders = new WebGLShaderCache();\r\n\t const programs = [];\r\n \r\n\t const isWebGL2 = capabilities.isWebGL2;\r\n\t const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\r\n\t const floatVertexTextures = capabilities.floatVertexTextures;\r\n\t const maxVertexUniforms = capabilities.maxVertexUniforms;\r\n\t const vertexTextures = capabilities.vertexTextures;\r\n\t let precision = capabilities.precision;\r\n \r\n\t const shaderIDs = {\r\n\t\t MeshDepthMaterial: 'depth',\r\n\t\t MeshDistanceMaterial: 'distanceRGBA',\r\n\t\t MeshNormalMaterial: 'normal',\r\n\t\t MeshBasicMaterial: 'basic',\r\n\t\t MeshLambertMaterial: 'lambert',\r\n\t\t MeshPhongMaterial: 'phong',\r\n\t\t MeshToonMaterial: 'toon',\r\n\t\t MeshStandardMaterial: 'physical',\r\n\t\t MeshPhysicalMaterial: 'physical',\r\n\t\t MeshMatcapMaterial: 'matcap',\r\n\t\t LineBasicMaterial: 'basic',\r\n\t\t LineDashedMaterial: 'dashed',\r\n\t\t PointsMaterial: 'points',\r\n\t\t ShadowMaterial: 'shadow',\r\n\t\t SpriteMaterial: 'sprite'\r\n\t };\r\n \r\n\t function getMaxBones( object ) {\r\n \r\n\t\t const skeleton = object.skeleton;\r\n\t\t const bones = skeleton.bones;\r\n \r\n\t\t if ( floatVertexTextures ) {\r\n \r\n\t\t\t return 1024;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // default for when object is not specified\r\n\t\t\t // ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t //\r\n\t\t\t //  - leave some extra space for other uniforms\r\n\t\t\t //  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t //    (up to 54 should be safe)\r\n \r\n\t\t\t const nVertexUniforms = maxVertexUniforms;\r\n\t\t\t const nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n \r\n\t\t\t const maxBones = Math.min( nVertexMatrices, bones.length );\r\n \r\n\t\t\t if ( maxBones < bones.length ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\r\n\t\t\t\t return 0;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return maxBones;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function getParameters( material, lights, shadows, scene, object ) {\r\n \r\n\t\t const fog = scene.fog;\r\n\t\t const geometry = object.geometry;\r\n\t\t const environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n \r\n\t\t const envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\r\n\t\t const envMapCubeUVHeight = ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ) ? envMap.image.height : null;\r\n \r\n\t\t const shaderID = shaderIDs[ material.type ];\r\n \r\n\t\t // heuristics to create shader parameters according to lights in the scene\r\n\t\t // (not to blow over maxLights budget)\r\n \r\n\t\t const maxBones = object.isSkinnedMesh ? getMaxBones( object ) : 0;\r\n \r\n\t\t if ( material.precision !== null ) {\r\n \r\n\t\t\t precision = capabilities.getMaxPrecision( material.precision );\r\n \r\n\t\t\t if ( precision !== material.precision ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\t const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n \r\n\t\t let morphTextureStride = 0;\r\n \r\n\t\t if ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\r\n\t\t if ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\r\n\t\t if ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\r\n \r\n\t\t //\r\n \r\n\t\t let vertexShader, fragmentShader;\r\n\t\t let customVertexShaderID, customFragmentShaderID;\r\n \r\n\t\t if ( shaderID ) {\r\n \r\n\t\t\t const shader = ShaderLib[ shaderID ];\r\n \r\n\t\t\t vertexShader = shader.vertexShader;\r\n\t\t\t fragmentShader = shader.fragmentShader;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t vertexShader = material.vertexShader;\r\n\t\t\t fragmentShader = material.fragmentShader;\r\n \r\n\t\t\t _customShaders.update( material );\r\n \r\n\t\t\t customVertexShaderID = _customShaders.getVertexShaderID( material );\r\n\t\t\t customFragmentShaderID = _customShaders.getFragmentShaderID( material );\r\n \r\n\t\t }\r\n \r\n\t\t const currentRenderTarget = renderer.getRenderTarget();\r\n \r\n\t\t const useAlphaTest = material.alphaTest > 0;\r\n\t\t const useClearcoat = material.clearcoat > 0;\r\n \r\n\t\t const parameters = {\r\n \r\n\t\t\t isWebGL2: isWebGL2,\r\n \r\n\t\t\t shaderID: shaderID,\r\n\t\t\t shaderName: material.type,\r\n \r\n\t\t\t vertexShader: vertexShader,\r\n\t\t\t fragmentShader: fragmentShader,\r\n\t\t\t defines: material.defines,\r\n \r\n\t\t\t customVertexShaderID: customVertexShaderID,\r\n\t\t\t customFragmentShaderID: customFragmentShaderID,\r\n \r\n\t\t\t isRawShaderMaterial: material.isRawShaderMaterial === true,\r\n\t\t\t glslVersion: material.glslVersion,\r\n \r\n\t\t\t precision: precision,\r\n \r\n\t\t\t instancing: object.isInstancedMesh === true,\r\n\t\t\t instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\r\n \r\n\t\t\t supportsVertexTextures: vertexTextures,\r\n\t\t\t outputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\r\n\t\t\t map: !! material.map,\r\n\t\t\t matcap: !! material.matcap,\r\n\t\t\t envMap: !! envMap,\r\n\t\t\t envMapMode: envMap && envMap.mapping,\r\n\t\t\t envMapCubeUVHeight: envMapCubeUVHeight,\r\n\t\t\t lightMap: !! material.lightMap,\r\n\t\t\t aoMap: !! material.aoMap,\r\n\t\t\t emissiveMap: !! material.emissiveMap,\r\n\t\t\t bumpMap: !! material.bumpMap,\r\n\t\t\t normalMap: !! material.normalMap,\r\n\t\t\t objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\r\n\t\t\t tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\r\n \r\n\t\t\t decodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\r\n \r\n\t\t\t clearcoat: useClearcoat,\r\n\t\t\t clearcoatMap: useClearcoat && !! material.clearcoatMap,\r\n\t\t\t clearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\r\n\t\t\t clearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\r\n \r\n\t\t\t displacementMap: !! material.displacementMap,\r\n\t\t\t roughnessMap: !! material.roughnessMap,\r\n\t\t\t metalnessMap: !! material.metalnessMap,\r\n\t\t\t specularMap: !! material.specularMap,\r\n\t\t\t specularIntensityMap: !! material.specularIntensityMap,\r\n\t\t\t specularColorMap: !! material.specularColorMap,\r\n \r\n\t\t\t opaque: material.transparent === false && material.blending === NormalBlending,\r\n \r\n\t\t\t alphaMap: !! material.alphaMap,\r\n\t\t\t alphaTest: useAlphaTest,\r\n \r\n\t\t\t gradientMap: !! material.gradientMap,\r\n \r\n\t\t\t sheen: material.sheen > 0,\r\n\t\t\t sheenColorMap: !! material.sheenColorMap,\r\n\t\t\t sheenRoughnessMap: !! material.sheenRoughnessMap,\r\n \r\n\t\t\t transmission: material.transmission > 0,\r\n\t\t\t transmissionMap: !! material.transmissionMap,\r\n\t\t\t thicknessMap: !! material.thicknessMap,\r\n \r\n\t\t\t combine: material.combine,\r\n \r\n\t\t\t vertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\r\n\t\t\t vertexColors: material.vertexColors,\r\n\t\t\t vertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\r\n\t\t\t vertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\r\n\t\t\t uvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\r\n \r\n\t\t\t fog: !! fog,\r\n\t\t\t useFog: material.fog,\r\n\t\t\t fogExp2: ( fog && fog.isFogExp2 ),\r\n \r\n\t\t\t flatShading: !! material.flatShading,\r\n \r\n\t\t\t sizeAttenuation: material.sizeAttenuation,\r\n\t\t\t logarithmicDepthBuffer: logarithmicDepthBuffer,\r\n \r\n\t\t\t skinning: object.isSkinnedMesh === true && maxBones > 0,\r\n\t\t\t maxBones: maxBones,\r\n\t\t\t useVertexTexture: floatVertexTextures,\r\n \r\n\t\t\t morphTargets: geometry.morphAttributes.position !== undefined,\r\n\t\t\t morphNormals: geometry.morphAttributes.normal !== undefined,\r\n\t\t\t morphColors: geometry.morphAttributes.color !== undefined,\r\n\t\t\t morphTargetsCount: morphTargetsCount,\r\n\t\t\t morphTextureStride: morphTextureStride,\r\n \r\n\t\t\t numDirLights: lights.directional.length,\r\n\t\t\t numPointLights: lights.point.length,\r\n\t\t\t numSpotLights: lights.spot.length,\r\n\t\t\t numRectAreaLights: lights.rectArea.length,\r\n\t\t\t numHemiLights: lights.hemi.length,\r\n \r\n\t\t\t numDirLightShadows: lights.directionalShadowMap.length,\r\n\t\t\t numPointLightShadows: lights.pointShadowMap.length,\r\n\t\t\t numSpotLightShadows: lights.spotShadowMap.length,\r\n \r\n\t\t\t numClippingPlanes: clipping.numPlanes,\r\n\t\t\t numClipIntersection: clipping.numIntersection,\r\n \r\n\t\t\t dithering: material.dithering,\r\n \r\n\t\t\t shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\r\n\t\t\t shadowMapType: renderer.shadowMap.type,\r\n \r\n\t\t\t toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\r\n\t\t\t physicallyCorrectLights: renderer.physicallyCorrectLights,\r\n \r\n\t\t\t premultipliedAlpha: material.premultipliedAlpha,\r\n \r\n\t\t\t doubleSided: material.side === DoubleSide,\r\n\t\t\t flipSided: material.side === BackSide,\r\n \r\n\t\t\t depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,\r\n \r\n\t\t\t index0AttributeName: material.index0AttributeName,\r\n \r\n\t\t\t extensionDerivatives: material.extensions && material.extensions.derivatives,\r\n\t\t\t extensionFragDepth: material.extensions && material.extensions.fragDepth,\r\n\t\t\t extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\r\n\t\t\t extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\r\n \r\n\t\t\t rendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\r\n\t\t\t rendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\r\n\t\t\t rendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\r\n \r\n\t\t\t customProgramCacheKey: material.customProgramCacheKey()\r\n \r\n\t\t };\r\n \r\n\t\t return parameters;\r\n \r\n\t }\r\n \r\n\t function getProgramCacheKey( parameters ) {\r\n \r\n\t\t const array = [];\r\n \r\n\t\t if ( parameters.shaderID ) {\r\n \r\n\t\t\t array.push( parameters.shaderID );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t array.push( parameters.customVertexShaderID );\r\n\t\t\t array.push( parameters.customFragmentShaderID );\r\n \r\n\t\t }\r\n \r\n\t\t if ( parameters.defines !== undefined ) {\r\n \r\n\t\t\t for ( const name in parameters.defines ) {\r\n \r\n\t\t\t\t array.push( name );\r\n\t\t\t\t array.push( parameters.defines[ name ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( parameters.isRawShaderMaterial === false ) {\r\n \r\n\t\t\t getProgramCacheKeyParameters( array, parameters );\r\n\t\t\t getProgramCacheKeyBooleans( array, parameters );\r\n\t\t\t array.push( renderer.outputEncoding );\r\n \r\n\t\t }\r\n \r\n\t\t array.push( parameters.customProgramCacheKey );\r\n \r\n\t\t return array.join();\r\n \r\n\t }\r\n \r\n\t function getProgramCacheKeyParameters( array, parameters ) {\r\n \r\n\t\t array.push( parameters.precision );\r\n\t\t array.push( parameters.outputEncoding );\r\n\t\t array.push( parameters.envMapMode );\r\n\t\t array.push( parameters.envMapCubeUVHeight );\r\n\t\t array.push( parameters.combine );\r\n\t\t array.push( parameters.vertexUvs );\r\n\t\t array.push( parameters.fogExp2 );\r\n\t\t array.push( parameters.sizeAttenuation );\r\n\t\t array.push( parameters.maxBones );\r\n\t\t array.push( parameters.morphTargetsCount );\r\n\t\t array.push( parameters.morphAttributeCount );\r\n\t\t array.push( parameters.numDirLights );\r\n\t\t array.push( parameters.numPointLights );\r\n\t\t array.push( parameters.numSpotLights );\r\n\t\t array.push( parameters.numHemiLights );\r\n\t\t array.push( parameters.numRectAreaLights );\r\n\t\t array.push( parameters.numDirLightShadows );\r\n\t\t array.push( parameters.numPointLightShadows );\r\n\t\t array.push( parameters.numSpotLightShadows );\r\n\t\t array.push( parameters.shadowMapType );\r\n\t\t array.push( parameters.toneMapping );\r\n\t\t array.push( parameters.numClippingPlanes );\r\n\t\t array.push( parameters.numClipIntersection );\r\n \r\n\t }\r\n \r\n\t function getProgramCacheKeyBooleans( array, parameters ) {\r\n \r\n\t\t _programLayers.disableAll();\r\n \r\n\t\t if ( parameters.isWebGL2 )\r\n\t\t\t _programLayers.enable( 0 );\r\n\t\t if ( parameters.supportsVertexTextures )\r\n\t\t\t _programLayers.enable( 1 );\r\n\t\t if ( parameters.instancing )\r\n\t\t\t _programLayers.enable( 2 );\r\n\t\t if ( parameters.instancingColor )\r\n\t\t\t _programLayers.enable( 3 );\r\n\t\t if ( parameters.map )\r\n\t\t\t _programLayers.enable( 4 );\r\n\t\t if ( parameters.matcap )\r\n\t\t\t _programLayers.enable( 5 );\r\n\t\t if ( parameters.envMap )\r\n\t\t\t _programLayers.enable( 6 );\r\n\t\t if ( parameters.lightMap )\r\n\t\t\t _programLayers.enable( 7 );\r\n\t\t if ( parameters.aoMap )\r\n\t\t\t _programLayers.enable( 8 );\r\n\t\t if ( parameters.emissiveMap )\r\n\t\t\t _programLayers.enable( 9 );\r\n\t\t if ( parameters.bumpMap )\r\n\t\t\t _programLayers.enable( 10 );\r\n\t\t if ( parameters.normalMap )\r\n\t\t\t _programLayers.enable( 11 );\r\n\t\t if ( parameters.objectSpaceNormalMap )\r\n\t\t\t _programLayers.enable( 12 );\r\n\t\t if ( parameters.tangentSpaceNormalMap )\r\n\t\t\t _programLayers.enable( 13 );\r\n\t\t if ( parameters.clearcoat )\r\n\t\t\t _programLayers.enable( 14 );\r\n\t\t if ( parameters.clearcoatMap )\r\n\t\t\t _programLayers.enable( 15 );\r\n\t\t if ( parameters.clearcoatRoughnessMap )\r\n\t\t\t _programLayers.enable( 16 );\r\n\t\t if ( parameters.clearcoatNormalMap )\r\n\t\t\t _programLayers.enable( 17 );\r\n\t\t if ( parameters.displacementMap )\r\n\t\t\t _programLayers.enable( 18 );\r\n\t\t if ( parameters.specularMap )\r\n\t\t\t _programLayers.enable( 19 );\r\n\t\t if ( parameters.roughnessMap )\r\n\t\t\t _programLayers.enable( 20 );\r\n\t\t if ( parameters.metalnessMap )\r\n\t\t\t _programLayers.enable( 21 );\r\n\t\t if ( parameters.gradientMap )\r\n\t\t\t _programLayers.enable( 22 );\r\n\t\t if ( parameters.alphaMap )\r\n\t\t\t _programLayers.enable( 23 );\r\n\t\t if ( parameters.alphaTest )\r\n\t\t\t _programLayers.enable( 24 );\r\n\t\t if ( parameters.vertexColors )\r\n\t\t\t _programLayers.enable( 25 );\r\n\t\t if ( parameters.vertexAlphas )\r\n\t\t\t _programLayers.enable( 26 );\r\n\t\t if ( parameters.vertexUvs )\r\n\t\t\t _programLayers.enable( 27 );\r\n\t\t if ( parameters.vertexTangents )\r\n\t\t\t _programLayers.enable( 28 );\r\n\t\t if ( parameters.uvsVertexOnly )\r\n\t\t\t _programLayers.enable( 29 );\r\n\t\t if ( parameters.fog )\r\n\t\t\t _programLayers.enable( 30 );\r\n \r\n\t\t array.push( _programLayers.mask );\r\n\t\t _programLayers.disableAll();\r\n \r\n\t\t if ( parameters.useFog )\r\n\t\t\t _programLayers.enable( 0 );\r\n\t\t if ( parameters.flatShading )\r\n\t\t\t _programLayers.enable( 1 );\r\n\t\t if ( parameters.logarithmicDepthBuffer )\r\n\t\t\t _programLayers.enable( 2 );\r\n\t\t if ( parameters.skinning )\r\n\t\t\t _programLayers.enable( 3 );\r\n\t\t if ( parameters.useVertexTexture )\r\n\t\t\t _programLayers.enable( 4 );\r\n\t\t if ( parameters.morphTargets )\r\n\t\t\t _programLayers.enable( 5 );\r\n\t\t if ( parameters.morphNormals )\r\n\t\t\t _programLayers.enable( 6 );\r\n\t\t if ( parameters.morphColors )\r\n\t\t\t _programLayers.enable( 7 );\r\n\t\t if ( parameters.premultipliedAlpha )\r\n\t\t\t _programLayers.enable( 8 );\r\n\t\t if ( parameters.shadowMapEnabled )\r\n\t\t\t _programLayers.enable( 9 );\r\n\t\t if ( parameters.physicallyCorrectLights )\r\n\t\t\t _programLayers.enable( 10 );\r\n\t\t if ( parameters.doubleSided )\r\n\t\t\t _programLayers.enable( 11 );\r\n\t\t if ( parameters.flipSided )\r\n\t\t\t _programLayers.enable( 12 );\r\n\t\t if ( parameters.depthPacking )\r\n\t\t\t _programLayers.enable( 13 );\r\n\t\t if ( parameters.dithering )\r\n\t\t\t _programLayers.enable( 14 );\r\n\t\t if ( parameters.specularIntensityMap )\r\n\t\t\t _programLayers.enable( 15 );\r\n\t\t if ( parameters.specularColorMap )\r\n\t\t\t _programLayers.enable( 16 );\r\n\t\t if ( parameters.transmission )\r\n\t\t\t _programLayers.enable( 17 );\r\n\t\t if ( parameters.transmissionMap )\r\n\t\t\t _programLayers.enable( 18 );\r\n\t\t if ( parameters.thicknessMap )\r\n\t\t\t _programLayers.enable( 19 );\r\n\t\t if ( parameters.sheen )\r\n\t\t\t _programLayers.enable( 20 );\r\n\t\t if ( parameters.sheenColorMap )\r\n\t\t\t _programLayers.enable( 21 );\r\n\t\t if ( parameters.sheenRoughnessMap )\r\n\t\t\t _programLayers.enable( 22 );\r\n\t\t if ( parameters.decodeVideoTexture )\r\n\t\t\t _programLayers.enable( 23 );\r\n\t\t if ( parameters.opaque )\r\n\t\t\t _programLayers.enable( 24 );\r\n \r\n\t\t array.push( _programLayers.mask );\r\n \r\n\t }\r\n \r\n\t function getUniforms( material ) {\r\n \r\n\t\t const shaderID = shaderIDs[ material.type ];\r\n\t\t let uniforms;\r\n \r\n\t\t if ( shaderID ) {\r\n \r\n\t\t\t const shader = ShaderLib[ shaderID ];\r\n\t\t\t uniforms = UniformsUtils.clone( shader.uniforms );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t uniforms = material.uniforms;\r\n \r\n\t\t }\r\n \r\n\t\t return uniforms;\r\n \r\n\t }\r\n \r\n\t function acquireProgram( parameters, cacheKey ) {\r\n \r\n\t\t let program;\r\n \r\n\t\t // Check if code has been already compiled\r\n\t\t for ( let p = 0, pl = programs.length; p < pl; p ++ ) {\r\n \r\n\t\t\t const preexistingProgram = programs[ p ];\r\n \r\n\t\t\t if ( preexistingProgram.cacheKey === cacheKey ) {\r\n \r\n\t\t\t\t program = preexistingProgram;\r\n\t\t\t\t ++ program.usedTimes;\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( program === undefined ) {\r\n \r\n\t\t\t program = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\r\n\t\t\t programs.push( program );\r\n \r\n\t\t }\r\n \r\n\t\t return program;\r\n \r\n\t }\r\n \r\n\t function releaseProgram( program ) {\r\n \r\n\t\t if ( -- program.usedTimes === 0 ) {\r\n \r\n\t\t\t // Remove from unordered set\r\n\t\t\t const i = programs.indexOf( program );\r\n\t\t\t programs[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t programs.pop();\r\n \r\n\t\t\t // Free WebGL resources\r\n\t\t\t program.destroy();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function releaseShaderCache( material ) {\r\n \r\n\t\t _customShaders.remove( material );\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t _customShaders.dispose();\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t getParameters: getParameters,\r\n\t\t getProgramCacheKey: getProgramCacheKey,\r\n\t\t getUniforms: getUniforms,\r\n\t\t acquireProgram: acquireProgram,\r\n\t\t releaseProgram: releaseProgram,\r\n\t\t releaseShaderCache: releaseShaderCache,\r\n\t\t // Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\t programs: programs,\r\n\t\t dispose: dispose\r\n\t };\r\n \r\n }\r\n \r\n function WebGLProperties() {\r\n \r\n\t let properties = new WeakMap();\r\n \r\n\t function get( object ) {\r\n \r\n\t\t let map = properties.get( object );\r\n \r\n\t\t if ( map === undefined ) {\r\n \r\n\t\t\t map = {};\r\n\t\t\t properties.set( object, map );\r\n \r\n\t\t }\r\n \r\n\t\t return map;\r\n \r\n\t }\r\n \r\n\t function remove( object ) {\r\n \r\n\t\t properties.delete( object );\r\n \r\n\t }\r\n \r\n\t function update( object, key, value ) {\r\n \r\n\t\t properties.get( object )[ key ] = value;\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t properties = new WeakMap();\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t get: get,\r\n\t\t remove: remove,\r\n\t\t update: update,\r\n\t\t dispose: dispose\r\n\t };\r\n \r\n }\r\n \r\n function painterSortStable( a, b ) {\r\n \r\n\t if ( a.groupOrder !== b.groupOrder ) {\r\n \r\n\t\t return a.groupOrder - b.groupOrder;\r\n \r\n\t } else if ( a.renderOrder !== b.renderOrder ) {\r\n \r\n\t\t return a.renderOrder - b.renderOrder;\r\n \r\n\t } else if ( a.material.id !== b.material.id ) {\r\n \r\n\t\t return a.material.id - b.material.id;\r\n \r\n\t } else if ( a.z !== b.z ) {\r\n \r\n\t\t return a.z - b.z;\r\n \r\n\t } else {\r\n \r\n\t\t return a.id - b.id;\r\n \r\n\t }\r\n \r\n }\r\n \r\n function reversePainterSortStable( a, b ) {\r\n \r\n\t if ( a.groupOrder !== b.groupOrder ) {\r\n \r\n\t\t return a.groupOrder - b.groupOrder;\r\n \r\n\t } else if ( a.renderOrder !== b.renderOrder ) {\r\n \r\n\t\t return a.renderOrder - b.renderOrder;\r\n \r\n\t } else if ( a.z !== b.z ) {\r\n \r\n\t\t return b.z - a.z;\r\n \r\n\t } else {\r\n \r\n\t\t return a.id - b.id;\r\n \r\n\t }\r\n \r\n }\r\n \r\n \r\n function WebGLRenderList() {\r\n \r\n\t const renderItems = [];\r\n\t let renderItemsIndex = 0;\r\n \r\n\t const opaque = [];\r\n\t const transmissive = [];\r\n\t const transparent = [];\r\n \r\n\t function init() {\r\n \r\n\t\t renderItemsIndex = 0;\r\n \r\n\t\t opaque.length = 0;\r\n\t\t transmissive.length = 0;\r\n\t\t transparent.length = 0;\r\n \r\n\t }\r\n \r\n\t function getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\r\n \r\n\t\t let renderItem = renderItems[ renderItemsIndex ];\r\n \r\n\t\t if ( renderItem === undefined ) {\r\n \r\n\t\t\t renderItem = {\r\n\t\t\t\t id: object.id,\r\n\t\t\t\t object: object,\r\n\t\t\t\t geometry: geometry,\r\n\t\t\t\t material: material,\r\n\t\t\t\t groupOrder: groupOrder,\r\n\t\t\t\t renderOrder: object.renderOrder,\r\n\t\t\t\t z: z,\r\n\t\t\t\t group: group\r\n\t\t\t };\r\n \r\n\t\t\t renderItems[ renderItemsIndex ] = renderItem;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t renderItem.id = object.id;\r\n\t\t\t renderItem.object = object;\r\n\t\t\t renderItem.geometry = geometry;\r\n\t\t\t renderItem.material = material;\r\n\t\t\t renderItem.groupOrder = groupOrder;\r\n\t\t\t renderItem.renderOrder = object.renderOrder;\r\n\t\t\t renderItem.z = z;\r\n\t\t\t renderItem.group = group;\r\n \r\n\t\t }\r\n \r\n\t\t renderItemsIndex ++;\r\n \r\n\t\t return renderItem;\r\n \r\n\t }\r\n \r\n\t function push( object, geometry, material, groupOrder, z, group ) {\r\n \r\n\t\t const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n \r\n\t\t if ( material.transmission > 0.0 ) {\r\n \r\n\t\t\t transmissive.push( renderItem );\r\n \r\n\t\t } else if ( material.transparent === true ) {\r\n \r\n\t\t\t transparent.push( renderItem );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t opaque.push( renderItem );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function unshift( object, geometry, material, groupOrder, z, group ) {\r\n \r\n\t\t const renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\r\n \r\n\t\t if ( material.transmission > 0.0 ) {\r\n \r\n\t\t\t transmissive.unshift( renderItem );\r\n \r\n\t\t } else if ( material.transparent === true ) {\r\n \r\n\t\t\t transparent.unshift( renderItem );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t opaque.unshift( renderItem );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function sort( customOpaqueSort, customTransparentSort ) {\r\n \r\n\t\t if ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\r\n\t\t if ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\r\n\t\t if ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\r\n \r\n\t }\r\n \r\n\t function finish() {\r\n \r\n\t\t // Clear references from inactive renderItems in the list\r\n \r\n\t\t for ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\r\n \r\n\t\t\t const renderItem = renderItems[ i ];\r\n \r\n\t\t\t if ( renderItem.id === null ) break;\r\n \r\n\t\t\t renderItem.id = null;\r\n\t\t\t renderItem.object = null;\r\n\t\t\t renderItem.geometry = null;\r\n\t\t\t renderItem.material = null;\r\n\t\t\t renderItem.group = null;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t opaque: opaque,\r\n\t\t transmissive: transmissive,\r\n\t\t transparent: transparent,\r\n \r\n\t\t init: init,\r\n\t\t push: push,\r\n\t\t unshift: unshift,\r\n\t\t finish: finish,\r\n \r\n\t\t sort: sort\r\n\t };\r\n \r\n }\r\n \r\n function WebGLRenderLists() {\r\n \r\n\t let lists = new WeakMap();\r\n \r\n\t function get( scene, renderCallDepth ) {\r\n \r\n\t\t let list;\r\n \r\n\t\t if ( lists.has( scene ) === false ) {\r\n \r\n\t\t\t list = new WebGLRenderList();\r\n\t\t\t lists.set( scene, [ list ] );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( renderCallDepth >= lists.get( scene ).length ) {\r\n \r\n\t\t\t\t list = new WebGLRenderList();\r\n\t\t\t\t lists.get( scene ).push( list );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t list = lists.get( scene )[ renderCallDepth ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return list;\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t lists = new WeakMap();\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t get: get,\r\n\t\t dispose: dispose\r\n\t };\r\n \r\n }\r\n \r\n function UniformsCache() {\r\n \r\n\t const lights = {};\r\n \r\n\t return {\r\n \r\n\t\t get: function ( light ) {\r\n \r\n\t\t\t if ( lights[ light.id ] !== undefined ) {\r\n \r\n\t\t\t\t return lights[ light.id ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t let uniforms;\r\n \r\n\t\t\t switch ( light.type ) {\r\n \r\n\t\t\t\t case 'DirectionalLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t direction: new Vector3(),\r\n\t\t\t\t\t\t color: new Color()\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'SpotLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t position: new Vector3(),\r\n\t\t\t\t\t\t direction: new Vector3(),\r\n\t\t\t\t\t\t color: new Color(),\r\n\t\t\t\t\t\t distance: 0,\r\n\t\t\t\t\t\t coneCos: 0,\r\n\t\t\t\t\t\t penumbraCos: 0,\r\n\t\t\t\t\t\t decay: 0\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'PointLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t position: new Vector3(),\r\n\t\t\t\t\t\t color: new Color(),\r\n\t\t\t\t\t\t distance: 0,\r\n\t\t\t\t\t\t decay: 0\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'HemisphereLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t direction: new Vector3(),\r\n\t\t\t\t\t\t skyColor: new Color(),\r\n\t\t\t\t\t\t groundColor: new Color()\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'RectAreaLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t color: new Color(),\r\n\t\t\t\t\t\t position: new Vector3(),\r\n\t\t\t\t\t\t halfWidth: new Vector3(),\r\n\t\t\t\t\t\t halfHeight: new Vector3()\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t lights[ light.id ] = uniforms;\r\n \r\n\t\t\t return uniforms;\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n }\r\n \r\n function ShadowUniformsCache() {\r\n \r\n\t const lights = {};\r\n \r\n\t return {\r\n \r\n\t\t get: function ( light ) {\r\n \r\n\t\t\t if ( lights[ light.id ] !== undefined ) {\r\n \r\n\t\t\t\t return lights[ light.id ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t let uniforms;\r\n \r\n\t\t\t switch ( light.type ) {\r\n \r\n\t\t\t\t case 'DirectionalLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t shadowBias: 0,\r\n\t\t\t\t\t\t shadowNormalBias: 0,\r\n\t\t\t\t\t\t shadowRadius: 1,\r\n\t\t\t\t\t\t shadowMapSize: new Vector2()\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'SpotLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t shadowBias: 0,\r\n\t\t\t\t\t\t shadowNormalBias: 0,\r\n\t\t\t\t\t\t shadowRadius: 1,\r\n\t\t\t\t\t\t shadowMapSize: new Vector2()\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'PointLight':\r\n\t\t\t\t\t uniforms = {\r\n\t\t\t\t\t\t shadowBias: 0,\r\n\t\t\t\t\t\t shadowNormalBias: 0,\r\n\t\t\t\t\t\t shadowRadius: 1,\r\n\t\t\t\t\t\t shadowMapSize: new Vector2(),\r\n\t\t\t\t\t\t shadowCameraNear: 1,\r\n\t\t\t\t\t\t shadowCameraFar: 1000\r\n\t\t\t\t\t };\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t // TODO (abelnation): set RectAreaLight shadow uniforms\r\n \r\n\t\t\t }\r\n \r\n\t\t\t lights[ light.id ] = uniforms;\r\n \r\n\t\t\t return uniforms;\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n }\r\n \r\n \r\n \r\n let nextVersion = 0;\r\n \r\n function shadowCastingLightsFirst( lightA, lightB ) {\r\n \r\n\t return ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\r\n \r\n }\r\n \r\n function WebGLLights( extensions, capabilities ) {\r\n \r\n\t const cache = new UniformsCache();\r\n \r\n\t const shadowCache = ShadowUniformsCache();\r\n \r\n\t const state = {\r\n \r\n\t\t version: 0,\r\n \r\n\t\t hash: {\r\n\t\t\t directionalLength: - 1,\r\n\t\t\t pointLength: - 1,\r\n\t\t\t spotLength: - 1,\r\n\t\t\t rectAreaLength: - 1,\r\n\t\t\t hemiLength: - 1,\r\n \r\n\t\t\t numDirectionalShadows: - 1,\r\n\t\t\t numPointShadows: - 1,\r\n\t\t\t numSpotShadows: - 1\r\n\t\t },\r\n \r\n\t\t ambient: [ 0, 0, 0 ],\r\n\t\t probe: [],\r\n\t\t directional: [],\r\n\t\t directionalShadow: [],\r\n\t\t directionalShadowMap: [],\r\n\t\t directionalShadowMatrix: [],\r\n\t\t spot: [],\r\n\t\t spotShadow: [],\r\n\t\t spotShadowMap: [],\r\n\t\t spotShadowMatrix: [],\r\n\t\t rectArea: [],\r\n\t\t rectAreaLTC1: null,\r\n\t\t rectAreaLTC2: null,\r\n\t\t point: [],\r\n\t\t pointShadow: [],\r\n\t\t pointShadowMap: [],\r\n\t\t pointShadowMatrix: [],\r\n\t\t hemi: []\r\n \r\n\t };\r\n \r\n\t for ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\r\n \r\n\t const vector3 = new Vector3();\r\n\t const matrix4 = new Matrix4();\r\n\t const matrix42 = new Matrix4();\r\n \r\n\t function setup( lights, physicallyCorrectLights ) {\r\n \r\n\t\t let r = 0, g = 0, b = 0;\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\r\n \r\n\t\t let directionalLength = 0;\r\n\t\t let pointLength = 0;\r\n\t\t let spotLength = 0;\r\n\t\t let rectAreaLength = 0;\r\n\t\t let hemiLength = 0;\r\n \r\n\t\t let numDirectionalShadows = 0;\r\n\t\t let numPointShadows = 0;\r\n\t\t let numSpotShadows = 0;\r\n \r\n\t\t lights.sort( shadowCastingLightsFirst );\r\n \r\n\t\t // artist-friendly light intensity scaling factor\r\n\t\t const scaleFactor = ( physicallyCorrectLights !== true ) ? Math.PI : 1;\r\n \r\n\t\t for ( let i = 0, l = lights.length; i < l; i ++ ) {\r\n \r\n\t\t\t const light = lights[ i ];\r\n \r\n\t\t\t const color = light.color;\r\n\t\t\t const intensity = light.intensity;\r\n\t\t\t const distance = light.distance;\r\n \r\n\t\t\t const shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n \r\n\t\t\t if ( light.isAmbientLight ) {\r\n \r\n\t\t\t\t r += color.r * intensity * scaleFactor;\r\n\t\t\t\t g += color.g * intensity * scaleFactor;\r\n\t\t\t\t b += color.b * intensity * scaleFactor;\r\n \r\n\t\t\t } else if ( light.isLightProbe ) {\r\n \r\n\t\t\t\t for ( let j = 0; j < 9; j ++ ) {\r\n \r\n\t\t\t\t\t state.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( light.isDirectionalLight ) {\r\n \r\n\t\t\t\t const uniforms = cache.get( light );\r\n \r\n\t\t\t\t uniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\r\n \r\n\t\t\t\t if ( light.castShadow ) {\r\n \r\n\t\t\t\t\t const shadow = light.shadow;\r\n \r\n\t\t\t\t\t const shadowUniforms = shadowCache.get( light );\r\n \r\n\t\t\t\t\t shadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t shadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t shadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t shadowUniforms.shadowMapSize = shadow.mapSize;\r\n \r\n\t\t\t\t\t state.directionalShadow[ directionalLength ] = shadowUniforms;\r\n\t\t\t\t\t state.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t\t state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n \r\n\t\t\t\t\t numDirectionalShadows ++;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t state.directional[ directionalLength ] = uniforms;\r\n \r\n\t\t\t\t directionalLength ++;\r\n \r\n\t\t\t } else if ( light.isSpotLight ) {\r\n \r\n\t\t\t\t const uniforms = cache.get( light );\r\n \r\n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n \r\n\t\t\t\t uniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\r\n\t\t\t\t uniforms.distance = distance;\r\n \r\n\t\t\t\t uniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\t uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\t uniforms.decay = light.decay;\r\n \r\n\t\t\t\t if ( light.castShadow ) {\r\n \r\n\t\t\t\t\t const shadow = light.shadow;\r\n \r\n\t\t\t\t\t const shadowUniforms = shadowCache.get( light );\r\n \r\n\t\t\t\t\t shadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t shadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t shadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t shadowUniforms.shadowMapSize = shadow.mapSize;\r\n \r\n\t\t\t\t\t state.spotShadow[ spotLength ] = shadowUniforms;\r\n\t\t\t\t\t state.spotShadowMap[ spotLength ] = shadowMap;\r\n\t\t\t\t\t state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n \r\n\t\t\t\t\t numSpotShadows ++;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t state.spot[ spotLength ] = uniforms;\r\n \r\n\t\t\t\t spotLength ++;\r\n \r\n\t\t\t } else if ( light.isRectAreaLight ) {\r\n \r\n\t\t\t\t const uniforms = cache.get( light );\r\n \r\n\t\t\t\t // (a) intensity is the total visible light emitted\r\n\t\t\t\t //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\r\n \r\n\t\t\t\t // (b) intensity is the brightness of the light\r\n\t\t\t\t uniforms.color.copy( color ).multiplyScalar( intensity );\r\n \r\n\t\t\t\t uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\t uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n \r\n\t\t\t\t state.rectArea[ rectAreaLength ] = uniforms;\r\n \r\n\t\t\t\t rectAreaLength ++;\r\n \r\n\t\t\t } else if ( light.isPointLight ) {\r\n \r\n\t\t\t\t const uniforms = cache.get( light );\r\n \r\n\t\t\t\t uniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\r\n\t\t\t\t uniforms.distance = light.distance;\r\n\t\t\t\t uniforms.decay = light.decay;\r\n \r\n\t\t\t\t if ( light.castShadow ) {\r\n \r\n\t\t\t\t\t const shadow = light.shadow;\r\n \r\n\t\t\t\t\t const shadowUniforms = shadowCache.get( light );\r\n \r\n\t\t\t\t\t shadowUniforms.shadowBias = shadow.bias;\r\n\t\t\t\t\t shadowUniforms.shadowNormalBias = shadow.normalBias;\r\n\t\t\t\t\t shadowUniforms.shadowRadius = shadow.radius;\r\n\t\t\t\t\t shadowUniforms.shadowMapSize = shadow.mapSize;\r\n\t\t\t\t\t shadowUniforms.shadowCameraNear = shadow.camera.near;\r\n\t\t\t\t\t shadowUniforms.shadowCameraFar = shadow.camera.far;\r\n \r\n\t\t\t\t\t state.pointShadow[ pointLength ] = shadowUniforms;\r\n\t\t\t\t\t state.pointShadowMap[ pointLength ] = shadowMap;\r\n\t\t\t\t\t state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\r\n \r\n\t\t\t\t\t numPointShadows ++;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t state.point[ pointLength ] = uniforms;\r\n \r\n\t\t\t\t pointLength ++;\r\n \r\n\t\t\t } else if ( light.isHemisphereLight ) {\r\n \r\n\t\t\t\t const uniforms = cache.get( light );\r\n \r\n\t\t\t\t uniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\r\n\t\t\t\t uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\r\n \r\n\t\t\t\t state.hemi[ hemiLength ] = uniforms;\r\n \r\n\t\t\t\t hemiLength ++;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( rectAreaLength > 0 ) {\r\n \r\n\t\t\t if ( capabilities.isWebGL2 ) {\r\n \r\n\t\t\t\t // WebGL 2\r\n \r\n\t\t\t\t state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\t state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // WebGL 1\r\n \r\n\t\t\t\t if ( extensions.has( 'OES_texture_float_linear' ) === true ) {\r\n \r\n\t\t\t\t\t state.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\r\n\t\t\t\t\t state.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\r\n \r\n\t\t\t\t } else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\r\n \r\n\t\t\t\t\t state.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\r\n\t\t\t\t\t state.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t state.ambient[ 0 ] = r;\r\n\t\t state.ambient[ 1 ] = g;\r\n\t\t state.ambient[ 2 ] = b;\r\n \r\n\t\t const hash = state.hash;\r\n \r\n\t\t if ( hash.directionalLength !== directionalLength ||\r\n\t\t\t hash.pointLength !== pointLength ||\r\n\t\t\t hash.spotLength !== spotLength ||\r\n\t\t\t hash.rectAreaLength !== rectAreaLength ||\r\n\t\t\t hash.hemiLength !== hemiLength ||\r\n\t\t\t hash.numDirectionalShadows !== numDirectionalShadows ||\r\n\t\t\t hash.numPointShadows !== numPointShadows ||\r\n\t\t\t hash.numSpotShadows !== numSpotShadows ) {\r\n \r\n\t\t\t state.directional.length = directionalLength;\r\n\t\t\t state.spot.length = spotLength;\r\n\t\t\t state.rectArea.length = rectAreaLength;\r\n\t\t\t state.point.length = pointLength;\r\n\t\t\t state.hemi.length = hemiLength;\r\n \r\n\t\t\t state.directionalShadow.length = numDirectionalShadows;\r\n\t\t\t state.directionalShadowMap.length = numDirectionalShadows;\r\n\t\t\t state.pointShadow.length = numPointShadows;\r\n\t\t\t state.pointShadowMap.length = numPointShadows;\r\n\t\t\t state.spotShadow.length = numSpotShadows;\r\n\t\t\t state.spotShadowMap.length = numSpotShadows;\r\n\t\t\t state.directionalShadowMatrix.length = numDirectionalShadows;\r\n\t\t\t state.pointShadowMatrix.length = numPointShadows;\r\n\t\t\t state.spotShadowMatrix.length = numSpotShadows;\r\n \r\n\t\t\t hash.directionalLength = directionalLength;\r\n\t\t\t hash.pointLength = pointLength;\r\n\t\t\t hash.spotLength = spotLength;\r\n\t\t\t hash.rectAreaLength = rectAreaLength;\r\n\t\t\t hash.hemiLength = hemiLength;\r\n \r\n\t\t\t hash.numDirectionalShadows = numDirectionalShadows;\r\n\t\t\t hash.numPointShadows = numPointShadows;\r\n\t\t\t hash.numSpotShadows = numSpotShadows;\r\n \r\n\t\t\t state.version = nextVersion ++;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function setupView( lights, camera ) {\r\n \r\n\t\t let directionalLength = 0;\r\n\t\t let pointLength = 0;\r\n\t\t let spotLength = 0;\r\n\t\t let rectAreaLength = 0;\r\n\t\t let hemiLength = 0;\r\n \r\n\t\t const viewMatrix = camera.matrixWorldInverse;\r\n \r\n\t\t for ( let i = 0, l = lights.length; i < l; i ++ ) {\r\n \r\n\t\t\t const light = lights[ i ];\r\n \r\n\t\t\t if ( light.isDirectionalLight ) {\r\n \r\n\t\t\t\t const uniforms = state.directional[ directionalLength ];\r\n \r\n\t\t\t\t uniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t uniforms.direction.sub( vector3 );\r\n\t\t\t\t uniforms.direction.transformDirection( viewMatrix );\r\n \r\n\t\t\t\t directionalLength ++;\r\n \r\n\t\t\t } else if ( light.isSpotLight ) {\r\n \r\n\t\t\t\t const uniforms = state.spot[ spotLength ];\r\n \r\n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t uniforms.position.applyMatrix4( viewMatrix );\r\n \r\n\t\t\t\t uniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t uniforms.direction.sub( vector3 );\r\n\t\t\t\t uniforms.direction.transformDirection( viewMatrix );\r\n \r\n\t\t\t\t spotLength ++;\r\n \r\n\t\t\t } else if ( light.isRectAreaLight ) {\r\n \r\n\t\t\t\t const uniforms = state.rectArea[ rectAreaLength ];\r\n \r\n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t uniforms.position.applyMatrix4( viewMatrix );\r\n \r\n\t\t\t\t // extract local rotation of light to derive width/height half vectors\r\n\t\t\t\t matrix42.identity();\r\n\t\t\t\t matrix4.copy( light.matrixWorld );\r\n\t\t\t\t matrix4.premultiply( viewMatrix );\r\n\t\t\t\t matrix42.extractRotation( matrix4 );\r\n \r\n\t\t\t\t uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\r\n\t\t\t\t uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\r\n \r\n\t\t\t\t uniforms.halfWidth.applyMatrix4( matrix42 );\r\n\t\t\t\t uniforms.halfHeight.applyMatrix4( matrix42 );\r\n \r\n\t\t\t\t rectAreaLength ++;\r\n \r\n\t\t\t } else if ( light.isPointLight ) {\r\n \r\n\t\t\t\t const uniforms = state.point[ pointLength ];\r\n \r\n\t\t\t\t uniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t uniforms.position.applyMatrix4( viewMatrix );\r\n \r\n\t\t\t\t pointLength ++;\r\n \r\n\t\t\t } else if ( light.isHemisphereLight ) {\r\n \r\n\t\t\t\t const uniforms = state.hemi[ hemiLength ];\r\n \r\n\t\t\t\t uniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t uniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\t uniforms.direction.normalize();\r\n \r\n\t\t\t\t hemiLength ++;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t setup: setup,\r\n\t\t setupView: setupView,\r\n\t\t state: state\r\n\t };\r\n \r\n }\r\n \r\n function WebGLRenderState( extensions, capabilities ) {\r\n \r\n\t const lights = new WebGLLights( extensions, capabilities );\r\n \r\n\t const lightsArray = [];\r\n\t const shadowsArray = [];\r\n \r\n\t function init() {\r\n \r\n\t\t lightsArray.length = 0;\r\n\t\t shadowsArray.length = 0;\r\n \r\n\t }\r\n \r\n\t function pushLight( light ) {\r\n \r\n\t\t lightsArray.push( light );\r\n \r\n\t }\r\n \r\n\t function pushShadow( shadowLight ) {\r\n \r\n\t\t shadowsArray.push( shadowLight );\r\n \r\n\t }\r\n \r\n\t function setupLights( physicallyCorrectLights ) {\r\n \r\n\t\t lights.setup( lightsArray, physicallyCorrectLights );\r\n \r\n\t }\r\n \r\n\t function setupLightsView( camera ) {\r\n \r\n\t\t lights.setupView( lightsArray, camera );\r\n \r\n\t }\r\n \r\n\t const state = {\r\n\t\t lightsArray: lightsArray,\r\n\t\t shadowsArray: shadowsArray,\r\n \r\n\t\t lights: lights\r\n\t };\r\n \r\n\t return {\r\n\t\t init: init,\r\n\t\t state: state,\r\n\t\t setupLights: setupLights,\r\n\t\t setupLightsView: setupLightsView,\r\n \r\n\t\t pushLight: pushLight,\r\n\t\t pushShadow: pushShadow\r\n\t };\r\n \r\n }\r\n \r\n function WebGLRenderStates( extensions, capabilities ) {\r\n \r\n\t let renderStates = new WeakMap();\r\n \r\n\t function get( scene, renderCallDepth = 0 ) {\r\n \r\n\t\t let renderState;\r\n \r\n\t\t if ( renderStates.has( scene ) === false ) {\r\n \r\n\t\t\t renderState = new WebGLRenderState( extensions, capabilities );\r\n\t\t\t renderStates.set( scene, [ renderState ] );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( renderCallDepth >= renderStates.get( scene ).length ) {\r\n \r\n\t\t\t\t renderState = new WebGLRenderState( extensions, capabilities );\r\n\t\t\t\t renderStates.get( scene ).push( renderState );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t renderState = renderStates.get( scene )[ renderCallDepth ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return renderState;\r\n \r\n\t }\r\n \r\n\t function dispose() {\r\n \r\n\t\t renderStates = new WeakMap();\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t get: get,\r\n\t\t dispose: dispose\r\n\t };\r\n \r\n }\r\n \r\n /**\r\n  * parameters = {\r\n  *\r\n  *  opacity: <float>,\r\n  *\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  displacementMap: new THREE.Texture( <Image> ),\r\n  *  displacementScale: <float>,\r\n  *  displacementBias: <float>,\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>\r\n  * }\r\n  */\r\n \r\n class MeshDepthMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'MeshDepthMaterial';\r\n \r\n\t\t this.depthPacking = BasicDepthPacking;\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.displacementMap = null;\r\n\t\t this.displacementScale = 1;\r\n\t\t this.displacementBias = 0;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n \r\n\t\t this.fog = false;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.depthPacking = source.depthPacking;\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.displacementMap = source.displacementMap;\r\n\t\t this.displacementScale = source.displacementScale;\r\n\t\t this.displacementBias = source.displacementBias;\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *\r\n  *  referencePosition: <float>,\r\n  *  nearDistance: <float>,\r\n  *  farDistance: <float>,\r\n  *\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  displacementMap: new THREE.Texture( <Image> ),\r\n  *  displacementScale: <float>,\r\n  *  displacementBias: <float>\r\n  *\r\n  * }\r\n  */\r\n \r\n class MeshDistanceMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'MeshDistanceMaterial';\r\n \r\n\t\t this.referencePosition = new Vector3();\r\n\t\t this.nearDistance = 1;\r\n\t\t this.farDistance = 1000;\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.displacementMap = null;\r\n\t\t this.displacementScale = 1;\r\n\t\t this.displacementBias = 0;\r\n \r\n\t\t this.fog = false;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.referencePosition.copy( source.referencePosition );\r\n\t\t this.nearDistance = source.nearDistance;\r\n\t\t this.farDistance = source.farDistance;\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.displacementMap = source.displacementMap;\r\n\t\t this.displacementScale = source.displacementScale;\r\n\t\t this.displacementBias = source.displacementBias;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\r\n \r\n const vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\r\n \r\n const fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\r\n \r\n function WebGLShadowMap( _renderer, _objects, _capabilities ) {\r\n \r\n\t let _frustum = new Frustum();\r\n \r\n\t const _shadowMapSize = new Vector2(),\r\n\t\t _viewportSize = new Vector2(),\r\n \r\n\t\t _viewport = new Vector4(),\r\n \r\n\t\t _depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\r\n\t\t _distanceMaterial = new MeshDistanceMaterial(),\r\n \r\n\t\t _materialCache = {},\r\n \r\n\t\t _maxTextureSize = _capabilities.maxTextureSize;\r\n \r\n\t const shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\r\n \r\n\t const shadowMaterialVertical = new ShaderMaterial( {\r\n\t\t defines: {\r\n\t\t\t VSM_SAMPLES: 8\r\n\t\t },\r\n\t\t uniforms: {\r\n\t\t\t shadow_pass: { value: null },\r\n\t\t\t resolution: { value: new Vector2() },\r\n\t\t\t radius: { value: 4.0 }\r\n\t\t },\r\n \r\n\t\t vertexShader: vertex,\r\n\t\t fragmentShader: fragment\r\n \r\n\t } );\r\n \r\n\t const shadowMaterialHorizontal = shadowMaterialVertical.clone();\r\n\t shadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\r\n \r\n\t const fullScreenTri = new BufferGeometry();\r\n\t fullScreenTri.setAttribute(\r\n\t\t 'position',\r\n\t\t new BufferAttribute(\r\n\t\t\t new Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\r\n\t\t\t 3\r\n\t\t )\r\n\t );\r\n \r\n\t const fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\r\n \r\n\t const scope = this;\r\n \r\n\t this.enabled = false;\r\n \r\n\t this.autoUpdate = true;\r\n\t this.needsUpdate = false;\r\n \r\n\t this.type = PCFShadowMap;\r\n \r\n\t this.render = function ( lights, scene, camera ) {\r\n \r\n\t\t if ( scope.enabled === false ) return;\r\n\t\t if ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n \r\n\t\t if ( lights.length === 0 ) return;\r\n \r\n\t\t const currentRenderTarget = _renderer.getRenderTarget();\r\n\t\t const activeCubeFace = _renderer.getActiveCubeFace();\r\n\t\t const activeMipmapLevel = _renderer.getActiveMipmapLevel();\r\n \r\n\t\t const _state = _renderer.state;\r\n \r\n\t\t // Set GL state for depth map.\r\n\t\t _state.setBlending( NoBlending );\r\n\t\t _state.buffers.color.setClear( 1, 1, 1, 1 );\r\n\t\t _state.buffers.depth.setTest( true );\r\n\t\t _state.setScissorTest( false );\r\n \r\n\t\t // render depth map\r\n \r\n\t\t for ( let i = 0, il = lights.length; i < il; i ++ ) {\r\n \r\n\t\t\t const light = lights[ i ];\r\n\t\t\t const shadow = light.shadow;\r\n \r\n\t\t\t if ( shadow === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\t continue;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\r\n \r\n\t\t\t _shadowMapSize.copy( shadow.mapSize );\r\n \r\n\t\t\t const shadowFrameExtents = shadow.getFrameExtents();\r\n \r\n\t\t\t _shadowMapSize.multiply( shadowFrameExtents );\r\n \r\n\t\t\t _viewportSize.copy( shadow.mapSize );\r\n \r\n\t\t\t if ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\r\n \r\n\t\t\t\t if ( _shadowMapSize.x > _maxTextureSize ) {\r\n \r\n\t\t\t\t\t _viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\r\n\t\t\t\t\t _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\r\n\t\t\t\t\t shadow.mapSize.x = _viewportSize.x;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( _shadowMapSize.y > _maxTextureSize ) {\r\n \r\n\t\t\t\t\t _viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\r\n\t\t\t\t\t _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\r\n\t\t\t\t\t shadow.mapSize.y = _viewportSize.y;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\r\n \r\n\t\t\t\t const pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\r\n \r\n\t\t\t\t shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\t\t\t shadow.map.texture.name = light.name + '.shadowMap';\r\n \r\n\t\t\t\t shadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n \r\n\t\t\t\t shadow.camera.updateProjectionMatrix();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( shadow.map === null ) {\r\n \r\n\t\t\t\t const pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\r\n \r\n\t\t\t\t shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\t\t\t\t shadow.map.texture.name = light.name + '.shadowMap';\r\n \r\n\t\t\t\t shadow.camera.updateProjectionMatrix();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _renderer.setRenderTarget( shadow.map );\r\n\t\t\t _renderer.clear();\r\n \r\n\t\t\t const viewportCount = shadow.getViewportCount();\r\n \r\n\t\t\t for ( let vp = 0; vp < viewportCount; vp ++ ) {\r\n \r\n\t\t\t\t const viewport = shadow.getViewport( vp );\r\n \r\n\t\t\t\t _viewport.set(\r\n\t\t\t\t\t _viewportSize.x * viewport.x,\r\n\t\t\t\t\t _viewportSize.y * viewport.y,\r\n\t\t\t\t\t _viewportSize.x * viewport.z,\r\n\t\t\t\t\t _viewportSize.y * viewport.w\r\n\t\t\t\t );\r\n \r\n\t\t\t\t _state.viewport( _viewport );\r\n \r\n\t\t\t\t shadow.updateMatrices( light, vp );\r\n \r\n\t\t\t\t _frustum = shadow.getFrustum();\r\n \r\n\t\t\t\t renderObject( scene, camera, shadow.camera, light, this.type );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // do blur pass for VSM\r\n \r\n\t\t\t if ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\r\n \r\n\t\t\t\t VSMPass( shadow, camera );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t shadow.needsUpdate = false;\r\n \r\n\t\t }\r\n \r\n\t\t scope.needsUpdate = false;\r\n \r\n\t\t _renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\r\n \r\n\t };\r\n \r\n\t function VSMPass( shadow, camera ) {\r\n \r\n\t\t const geometry = _objects.update( fullScreenMesh );\r\n \r\n\t\t if ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\r\n \r\n\t\t\t shadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\r\n\t\t\t shadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\r\n \r\n\t\t\t shadowMaterialVertical.needsUpdate = true;\r\n\t\t\t shadowMaterialHorizontal.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t\t // vertical pass\r\n \r\n\t\t shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\r\n\t\t shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\r\n\t\t shadowMaterialVertical.uniforms.radius.value = shadow.radius;\r\n\t\t _renderer.setRenderTarget( shadow.mapPass );\r\n\t\t _renderer.clear();\r\n\t\t _renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\r\n \r\n\t\t // horizontal pass\r\n \r\n\t\t shadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\r\n\t\t shadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\r\n\t\t shadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\r\n\t\t _renderer.setRenderTarget( shadow.map );\r\n\t\t _renderer.clear();\r\n\t\t _renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\r\n \r\n\t }\r\n \r\n\t function getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\r\n \r\n\t\t let result = null;\r\n \r\n\t\t const customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\r\n \r\n\t\t if ( customMaterial !== undefined ) {\r\n \r\n\t\t\t result = customMaterial;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t result = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\r\n \r\n\t\t }\r\n \r\n\t\t if ( ( _renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0 ) ||\r\n\t\t\t ( material.displacementMap && material.displacementScale !== 0 ) ||\r\n\t\t\t ( material.alphaMap && material.alphaTest > 0 ) ) {\r\n \r\n\t\t\t // in this case we need a unique material instance reflecting the\r\n\t\t\t // appropriate state\r\n \r\n\t\t\t const keyA = result.uuid, keyB = material.uuid;\r\n \r\n\t\t\t let materialsForVariant = _materialCache[ keyA ];\r\n \r\n\t\t\t if ( materialsForVariant === undefined ) {\r\n \r\n\t\t\t\t materialsForVariant = {};\r\n\t\t\t\t _materialCache[ keyA ] = materialsForVariant;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t let cachedMaterial = materialsForVariant[ keyB ];\r\n \r\n\t\t\t if ( cachedMaterial === undefined ) {\r\n \r\n\t\t\t\t cachedMaterial = result.clone();\r\n\t\t\t\t materialsForVariant[ keyB ] = cachedMaterial;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t result = cachedMaterial;\r\n \r\n\t\t }\r\n \r\n\t\t result.visible = material.visible;\r\n\t\t result.wireframe = material.wireframe;\r\n \r\n\t\t if ( type === VSMShadowMap ) {\r\n \r\n\t\t\t result.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t result.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\r\n \r\n\t\t }\r\n \r\n\t\t result.alphaMap = material.alphaMap;\r\n\t\t result.alphaTest = material.alphaTest;\r\n \r\n\t\t result.clipShadows = material.clipShadows;\r\n\t\t result.clippingPlanes = material.clippingPlanes;\r\n\t\t result.clipIntersection = material.clipIntersection;\r\n \r\n\t\t result.displacementMap = material.displacementMap;\r\n\t\t result.displacementScale = material.displacementScale;\r\n\t\t result.displacementBias = material.displacementBias;\r\n \r\n\t\t result.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\t result.linewidth = material.linewidth;\r\n \r\n\t\t if ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\r\n \r\n\t\t\t result.referencePosition.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t result.nearDistance = shadowCameraNear;\r\n\t\t\t result.farDistance = shadowCameraFar;\r\n \r\n\t\t }\r\n \r\n\t\t return result;\r\n \r\n\t }\r\n \r\n\t function renderObject( object, camera, shadowCamera, light, type ) {\r\n \r\n\t\t if ( object.visible === false ) return;\r\n \r\n\t\t const visible = object.layers.test( camera.layers );\r\n \r\n\t\t if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\r\n \r\n\t\t\t if ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\r\n \r\n\t\t\t\t object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n \r\n\t\t\t\t const geometry = _objects.update( object );\r\n\t\t\t\t const material = object.material;\r\n \r\n\t\t\t\t if ( Array.isArray( material ) ) {\r\n \r\n\t\t\t\t\t const groups = geometry.groups;\r\n \r\n\t\t\t\t\t for ( let k = 0, kl = groups.length; k < kl; k ++ ) {\r\n \r\n\t\t\t\t\t\t const group = groups[ k ];\r\n\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\r\n \r\n\t\t\t\t\t\t if ( groupMaterial && groupMaterial.visible ) {\r\n \r\n\t\t\t\t\t\t\t const depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\r\n \r\n\t\t\t\t\t\t\t _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else if ( material.visible ) {\r\n \r\n\t\t\t\t\t const depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\r\n \r\n\t\t\t\t\t _renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const children = object.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t renderObject( children[ i ], camera, shadowCamera, light, type );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n function WebGLState( gl, extensions, capabilities ) {\r\n \r\n\t const isWebGL2 = capabilities.isWebGL2;\r\n \r\n\t function ColorBuffer() {\r\n \r\n\t\t let locked = false;\r\n \r\n\t\t const color = new Vector4();\r\n\t\t let currentColorMask = null;\r\n\t\t const currentColorClear = new Vector4( 0, 0, 0, 0 );\r\n \r\n\t\t return {\r\n \r\n\t\t\t setMask: function ( colorMask ) {\r\n \r\n\t\t\t\t if ( currentColorMask !== colorMask && ! locked ) {\r\n \r\n\t\t\t\t\t gl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\t\t\t currentColorMask = colorMask;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setLocked: function ( lock ) {\r\n \r\n\t\t\t\t locked = lock;\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setClear: function ( r, g, b, a, premultipliedAlpha ) {\r\n \r\n\t\t\t\t if ( premultipliedAlpha === true ) {\r\n \r\n\t\t\t\t\t r *= a; g *= a; b *= a;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t color.set( r, g, b, a );\r\n \r\n\t\t\t\t if ( currentColorClear.equals( color ) === false ) {\r\n \r\n\t\t\t\t\t gl.clearColor( r, g, b, a );\r\n\t\t\t\t\t currentColorClear.copy( color );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t reset: function () {\r\n \r\n\t\t\t\t locked = false;\r\n \r\n\t\t\t\t currentColorMask = null;\r\n\t\t\t\t currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t function DepthBuffer() {\r\n \r\n\t\t let locked = false;\r\n \r\n\t\t let currentDepthMask = null;\r\n\t\t let currentDepthFunc = null;\r\n\t\t let currentDepthClear = null;\r\n \r\n\t\t return {\r\n \r\n\t\t\t setTest: function ( depthTest ) {\r\n \r\n\t\t\t\t if ( depthTest ) {\r\n \r\n\t\t\t\t\t enable( 2929 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t disable( 2929 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setMask: function ( depthMask ) {\r\n \r\n\t\t\t\t if ( currentDepthMask !== depthMask && ! locked ) {\r\n \r\n\t\t\t\t\t gl.depthMask( depthMask );\r\n\t\t\t\t\t currentDepthMask = depthMask;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setFunc: function ( depthFunc ) {\r\n \r\n\t\t\t\t if ( currentDepthFunc !== depthFunc ) {\r\n \r\n\t\t\t\t\t if ( depthFunc ) {\r\n \r\n\t\t\t\t\t\t switch ( depthFunc ) {\r\n \r\n\t\t\t\t\t\t\t case NeverDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 512 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case AlwaysDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 519 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case LessDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 513 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case LessEqualDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 515 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case EqualDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 514 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case GreaterEqualDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 518 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case GreaterDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 516 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t case NotEqualDepth:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 517 );\r\n\t\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t\t default:\r\n \r\n\t\t\t\t\t\t\t\t gl.depthFunc( 515 );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t gl.depthFunc( 515 );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t currentDepthFunc = depthFunc;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setLocked: function ( lock ) {\r\n \r\n\t\t\t\t locked = lock;\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setClear: function ( depth ) {\r\n \r\n\t\t\t\t if ( currentDepthClear !== depth ) {\r\n \r\n\t\t\t\t\t gl.clearDepth( depth );\r\n\t\t\t\t\t currentDepthClear = depth;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t reset: function () {\r\n \r\n\t\t\t\t locked = false;\r\n \r\n\t\t\t\t currentDepthMask = null;\r\n\t\t\t\t currentDepthFunc = null;\r\n\t\t\t\t currentDepthClear = null;\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t function StencilBuffer() {\r\n \r\n\t\t let locked = false;\r\n \r\n\t\t let currentStencilMask = null;\r\n\t\t let currentStencilFunc = null;\r\n\t\t let currentStencilRef = null;\r\n\t\t let currentStencilFuncMask = null;\r\n\t\t let currentStencilFail = null;\r\n\t\t let currentStencilZFail = null;\r\n\t\t let currentStencilZPass = null;\r\n\t\t let currentStencilClear = null;\r\n \r\n\t\t return {\r\n \r\n\t\t\t setTest: function ( stencilTest ) {\r\n \r\n\t\t\t\t if ( ! locked ) {\r\n \r\n\t\t\t\t\t if ( stencilTest ) {\r\n \r\n\t\t\t\t\t\t enable( 2960 );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t disable( 2960 );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setMask: function ( stencilMask ) {\r\n \r\n\t\t\t\t if ( currentStencilMask !== stencilMask && ! locked ) {\r\n \r\n\t\t\t\t\t gl.stencilMask( stencilMask );\r\n\t\t\t\t\t currentStencilMask = stencilMask;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setFunc: function ( stencilFunc, stencilRef, stencilMask ) {\r\n \r\n\t\t\t\t if ( currentStencilFunc !== stencilFunc ||\r\n\t\t\t\t\t  currentStencilRef !== stencilRef ||\r\n\t\t\t\t\t  currentStencilFuncMask !== stencilMask ) {\r\n \r\n\t\t\t\t\t gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\r\n \r\n\t\t\t\t\t currentStencilFunc = stencilFunc;\r\n\t\t\t\t\t currentStencilRef = stencilRef;\r\n\t\t\t\t\t currentStencilFuncMask = stencilMask;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setOp: function ( stencilFail, stencilZFail, stencilZPass ) {\r\n \r\n\t\t\t\t if ( currentStencilFail !== stencilFail ||\r\n\t\t\t\t\t  currentStencilZFail !== stencilZFail ||\r\n\t\t\t\t\t  currentStencilZPass !== stencilZPass ) {\r\n \r\n\t\t\t\t\t gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\r\n \r\n\t\t\t\t\t currentStencilFail = stencilFail;\r\n\t\t\t\t\t currentStencilZFail = stencilZFail;\r\n\t\t\t\t\t currentStencilZPass = stencilZPass;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setLocked: function ( lock ) {\r\n \r\n\t\t\t\t locked = lock;\r\n \r\n\t\t\t },\r\n \r\n\t\t\t setClear: function ( stencil ) {\r\n \r\n\t\t\t\t if ( currentStencilClear !== stencil ) {\r\n \r\n\t\t\t\t\t gl.clearStencil( stencil );\r\n\t\t\t\t\t currentStencilClear = stencil;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t },\r\n \r\n\t\t\t reset: function () {\r\n \r\n\t\t\t\t locked = false;\r\n \r\n\t\t\t\t currentStencilMask = null;\r\n\t\t\t\t currentStencilFunc = null;\r\n\t\t\t\t currentStencilRef = null;\r\n\t\t\t\t currentStencilFuncMask = null;\r\n\t\t\t\t currentStencilFail = null;\r\n\t\t\t\t currentStencilZFail = null;\r\n\t\t\t\t currentStencilZPass = null;\r\n\t\t\t\t currentStencilClear = null;\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t const colorBuffer = new ColorBuffer();\r\n\t const depthBuffer = new DepthBuffer();\r\n\t const stencilBuffer = new StencilBuffer();\r\n \r\n\t let enabledCapabilities = {};\r\n \r\n\t let currentBoundFramebuffers = {};\r\n\t let currentDrawbuffers = new WeakMap();\r\n\t let defaultDrawbuffers = [];\r\n \r\n\t let currentProgram = null;\r\n \r\n\t let currentBlendingEnabled = false;\r\n\t let currentBlending = null;\r\n\t let currentBlendEquation = null;\r\n\t let currentBlendSrc = null;\r\n\t let currentBlendDst = null;\r\n\t let currentBlendEquationAlpha = null;\r\n\t let currentBlendSrcAlpha = null;\r\n\t let currentBlendDstAlpha = null;\r\n\t let currentPremultipledAlpha = false;\r\n \r\n\t let currentFlipSided = null;\r\n\t let currentCullFace = null;\r\n \r\n\t let currentLineWidth = null;\r\n \r\n\t let currentPolygonOffsetFactor = null;\r\n\t let currentPolygonOffsetUnits = null;\r\n \r\n\t const maxTextures = gl.getParameter( 35661 );\r\n \r\n\t let lineWidthAvailable = false;\r\n\t let version = 0;\r\n\t const glVersion = gl.getParameter( 7938 );\r\n \r\n\t if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\r\n \r\n\t\t version = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\r\n\t\t lineWidthAvailable = ( version >= 1.0 );\r\n \r\n\t } else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\r\n \r\n\t\t version = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\r\n\t\t lineWidthAvailable = ( version >= 2.0 );\r\n \r\n\t }\r\n \r\n\t let currentTextureSlot = null;\r\n\t let currentBoundTextures = {};\r\n \r\n\t const scissorParam = gl.getParameter( 3088 );\r\n\t const viewportParam = gl.getParameter( 2978 );\r\n \r\n\t const currentScissor = new Vector4().fromArray( scissorParam );\r\n\t const currentViewport = new Vector4().fromArray( viewportParam );\r\n \r\n\t function createTexture( type, target, count ) {\r\n \r\n\t\t const data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\r\n\t\t const texture = gl.createTexture();\r\n \r\n\t\t gl.bindTexture( type, texture );\r\n\t\t gl.texParameteri( type, 10241, 9728 );\r\n\t\t gl.texParameteri( type, 10240, 9728 );\r\n \r\n\t\t for ( let i = 0; i < count; i ++ ) {\r\n \r\n\t\t\t gl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\r\n \r\n\t\t }\r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n\t const emptyTextures = {};\r\n\t emptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\r\n\t emptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\r\n \r\n\t // init\r\n \r\n\t colorBuffer.setClear( 0, 0, 0, 1 );\r\n\t depthBuffer.setClear( 1 );\r\n\t stencilBuffer.setClear( 0 );\r\n \r\n\t enable( 2929 );\r\n\t depthBuffer.setFunc( LessEqualDepth );\r\n \r\n\t setFlipSided( false );\r\n\t setCullFace( CullFaceBack );\r\n\t enable( 2884 );\r\n \r\n\t setBlending( NoBlending );\r\n \r\n\t //\r\n \r\n\t function enable( id ) {\r\n \r\n\t\t if ( enabledCapabilities[ id ] !== true ) {\r\n \r\n\t\t\t gl.enable( id );\r\n\t\t\t enabledCapabilities[ id ] = true;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function disable( id ) {\r\n \r\n\t\t if ( enabledCapabilities[ id ] !== false ) {\r\n \r\n\t\t\t gl.disable( id );\r\n\t\t\t enabledCapabilities[ id ] = false;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function bindFramebuffer( target, framebuffer ) {\r\n \r\n\t\t if ( currentBoundFramebuffers[ target ] !== framebuffer ) {\r\n \r\n\t\t\t gl.bindFramebuffer( target, framebuffer );\r\n \r\n\t\t\t currentBoundFramebuffers[ target ] = framebuffer;\r\n \r\n\t\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t\t // 36009 is equivalent to 36160\r\n \r\n\t\t\t\t if ( target === 36009 ) {\r\n \r\n\t\t\t\t\t currentBoundFramebuffers[ 36160 ] = framebuffer;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( target === 36160 ) {\r\n \r\n\t\t\t\t\t currentBoundFramebuffers[ 36009 ] = framebuffer;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return true;\r\n \r\n\t\t }\r\n \r\n\t\t return false;\r\n \r\n\t }\r\n \r\n\t function drawBuffers( renderTarget, framebuffer ) {\r\n \r\n\t\t let drawBuffers = defaultDrawbuffers;\r\n \r\n\t\t let needsUpdate = false;\r\n \r\n\t\t if ( renderTarget ) {\r\n \r\n\t\t\t drawBuffers = currentDrawbuffers.get( framebuffer );\r\n \r\n\t\t\t if ( drawBuffers === undefined ) {\r\n \r\n\t\t\t\t drawBuffers = [];\r\n\t\t\t\t currentDrawbuffers.set( framebuffer, drawBuffers );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( renderTarget.isWebGLMultipleRenderTargets ) {\r\n \r\n\t\t\t\t const textures = renderTarget.texture;\r\n \r\n\t\t\t\t if ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== 36064 ) {\r\n \r\n\t\t\t\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t drawBuffers[ i ] = 36064 + i;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t drawBuffers.length = textures.length;\r\n \r\n\t\t\t\t\t needsUpdate = true;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t if ( drawBuffers[ 0 ] !== 36064 ) {\r\n \r\n\t\t\t\t\t drawBuffers[ 0 ] = 36064;\r\n \r\n\t\t\t\t\t needsUpdate = true;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( drawBuffers[ 0 ] !== 1029 ) {\r\n \r\n\t\t\t\t drawBuffers[ 0 ] = 1029;\r\n \r\n\t\t\t\t needsUpdate = true;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( needsUpdate ) {\r\n \r\n\t\t\t if ( capabilities.isWebGL2 ) {\r\n \r\n\t\t\t\t gl.drawBuffers( drawBuffers );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t extensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n \r\n\t }\r\n \r\n\t function useProgram( program ) {\r\n \r\n\t\t if ( currentProgram !== program ) {\r\n \r\n\t\t\t gl.useProgram( program );\r\n \r\n\t\t\t currentProgram = program;\r\n \r\n\t\t\t return true;\r\n \r\n\t\t }\r\n \r\n\t\t return false;\r\n \r\n\t }\r\n \r\n\t const equationToGL = {\r\n\t\t [ AddEquation ]: 32774,\r\n\t\t [ SubtractEquation ]: 32778,\r\n\t\t [ ReverseSubtractEquation ]: 32779\r\n\t };\r\n \r\n\t if ( isWebGL2 ) {\r\n \r\n\t\t equationToGL[ MinEquation ] = 32775;\r\n\t\t equationToGL[ MaxEquation ] = 32776;\r\n \r\n\t } else {\r\n \r\n\t\t const extension = extensions.get( 'EXT_blend_minmax' );\r\n \r\n\t\t if ( extension !== null ) {\r\n \r\n\t\t\t equationToGL[ MinEquation ] = extension.MIN_EXT;\r\n\t\t\t equationToGL[ MaxEquation ] = extension.MAX_EXT;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t const factorToGL = {\r\n\t\t [ ZeroFactor ]: 0,\r\n\t\t [ OneFactor ]: 1,\r\n\t\t [ SrcColorFactor ]: 768,\r\n\t\t [ SrcAlphaFactor ]: 770,\r\n\t\t [ SrcAlphaSaturateFactor ]: 776,\r\n\t\t [ DstColorFactor ]: 774,\r\n\t\t [ DstAlphaFactor ]: 772,\r\n\t\t [ OneMinusSrcColorFactor ]: 769,\r\n\t\t [ OneMinusSrcAlphaFactor ]: 771,\r\n\t\t [ OneMinusDstColorFactor ]: 775,\r\n\t\t [ OneMinusDstAlphaFactor ]: 773\r\n\t };\r\n \r\n\t function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n \r\n\t\t if ( blending === NoBlending ) {\r\n \r\n\t\t\t if ( currentBlendingEnabled === true ) {\r\n \r\n\t\t\t\t disable( 3042 );\r\n\t\t\t\t currentBlendingEnabled = false;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( currentBlendingEnabled === false ) {\r\n \r\n\t\t\t enable( 3042 );\r\n\t\t\t currentBlendingEnabled = true;\r\n \r\n\t\t }\r\n \r\n\t\t if ( blending !== CustomBlending ) {\r\n \r\n\t\t\t if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n \r\n\t\t\t\t if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\r\n \r\n\t\t\t\t\t gl.blendEquation( 32774 );\r\n \r\n\t\t\t\t\t currentBlendEquation = AddEquation;\r\n\t\t\t\t\t currentBlendEquationAlpha = AddEquation;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( premultipliedAlpha ) {\r\n \r\n\t\t\t\t\t switch ( blending ) {\r\n \r\n\t\t\t\t\t\t case NormalBlending:\r\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 1, 771, 1, 771 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t case AdditiveBlending:\r\n\t\t\t\t\t\t\t gl.blendFunc( 1, 1 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t case SubtractiveBlending:\r\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 0, 769, 0, 1 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t case MultiplyBlending:\r\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 0, 768, 0, 770 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t default:\r\n\t\t\t\t\t\t\t console.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t switch ( blending ) {\r\n \r\n\t\t\t\t\t\t case NormalBlending:\r\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 770, 771, 1, 771 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t case AdditiveBlending:\r\n\t\t\t\t\t\t\t gl.blendFunc( 770, 1 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t case SubtractiveBlending:\r\n\t\t\t\t\t\t\t gl.blendFuncSeparate( 0, 769, 0, 1 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t case MultiplyBlending:\r\n\t\t\t\t\t\t\t gl.blendFunc( 0, 768 );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t default:\r\n\t\t\t\t\t\t\t console.error( 'THREE.WebGLState: Invalid blending: ', blending );\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t currentBlendSrc = null;\r\n\t\t\t\t currentBlendDst = null;\r\n\t\t\t\t currentBlendSrcAlpha = null;\r\n\t\t\t\t currentBlendDstAlpha = null;\r\n \r\n\t\t\t\t currentBlending = blending;\r\n\t\t\t\t currentPremultipledAlpha = premultipliedAlpha;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t // custom blending\r\n \r\n\t\t blendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t blendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t blendDstAlpha = blendDstAlpha || blendDst;\r\n \r\n\t\t if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n \r\n\t\t\t gl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\r\n \r\n\t\t\t currentBlendEquation = blendEquation;\r\n\t\t\t currentBlendEquationAlpha = blendEquationAlpha;\r\n \r\n\t\t }\r\n \r\n\t\t if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n \r\n\t\t\t gl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\r\n \r\n\t\t\t currentBlendSrc = blendSrc;\r\n\t\t\t currentBlendDst = blendDst;\r\n\t\t\t currentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t currentBlendDstAlpha = blendDstAlpha;\r\n \r\n\t\t }\r\n \r\n\t\t currentBlending = blending;\r\n\t\t currentPremultipledAlpha = null;\r\n \r\n\t }\r\n \r\n\t function setMaterial( material, frontFaceCW ) {\r\n \r\n\t\t material.side === DoubleSide\r\n\t\t\t ? disable( 2884 )\r\n\t\t\t : enable( 2884 );\r\n \r\n\t\t let flipSided = ( material.side === BackSide );\r\n\t\t if ( frontFaceCW ) flipSided = ! flipSided;\r\n \r\n\t\t setFlipSided( flipSided );\r\n \r\n\t\t ( material.blending === NormalBlending && material.transparent === false )\r\n\t\t\t ? setBlending( NoBlending )\r\n\t\t\t : setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n \r\n\t\t depthBuffer.setFunc( material.depthFunc );\r\n\t\t depthBuffer.setTest( material.depthTest );\r\n\t\t depthBuffer.setMask( material.depthWrite );\r\n\t\t colorBuffer.setMask( material.colorWrite );\r\n \r\n\t\t const stencilWrite = material.stencilWrite;\r\n\t\t stencilBuffer.setTest( stencilWrite );\r\n\t\t if ( stencilWrite ) {\r\n \r\n\t\t\t stencilBuffer.setMask( material.stencilWriteMask );\r\n\t\t\t stencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\r\n\t\t\t stencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\r\n \r\n\t\t }\r\n \r\n\t\t setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n \r\n\t\t material.alphaToCoverage === true\r\n\t\t\t ? enable( 32926 )\r\n\t\t\t : disable( 32926 );\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t function setFlipSided( flipSided ) {\r\n \r\n\t\t if ( currentFlipSided !== flipSided ) {\r\n \r\n\t\t\t if ( flipSided ) {\r\n \r\n\t\t\t\t gl.frontFace( 2304 );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t gl.frontFace( 2305 );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t currentFlipSided = flipSided;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function setCullFace( cullFace ) {\r\n \r\n\t\t if ( cullFace !== CullFaceNone ) {\r\n \r\n\t\t\t enable( 2884 );\r\n \r\n\t\t\t if ( cullFace !== currentCullFace ) {\r\n \r\n\t\t\t\t if ( cullFace === CullFaceBack ) {\r\n \r\n\t\t\t\t\t gl.cullFace( 1029 );\r\n \r\n\t\t\t\t } else if ( cullFace === CullFaceFront ) {\r\n \r\n\t\t\t\t\t gl.cullFace( 1028 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t gl.cullFace( 1032 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t disable( 2884 );\r\n \r\n\t\t }\r\n \r\n\t\t currentCullFace = cullFace;\r\n \r\n\t }\r\n \r\n\t function setLineWidth( width ) {\r\n \r\n\t\t if ( width !== currentLineWidth ) {\r\n \r\n\t\t\t if ( lineWidthAvailable ) gl.lineWidth( width );\r\n \r\n\t\t\t currentLineWidth = width;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function setPolygonOffset( polygonOffset, factor, units ) {\r\n \r\n\t\t if ( polygonOffset ) {\r\n \r\n\t\t\t enable( 32823 );\r\n \r\n\t\t\t if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n \r\n\t\t\t\t gl.polygonOffset( factor, units );\r\n \r\n\t\t\t\t currentPolygonOffsetFactor = factor;\r\n\t\t\t\t currentPolygonOffsetUnits = units;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t disable( 32823 );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function setScissorTest( scissorTest ) {\r\n \r\n\t\t if ( scissorTest ) {\r\n \r\n\t\t\t enable( 3089 );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t disable( 3089 );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // texture\r\n \r\n\t function activeTexture( webglSlot ) {\r\n \r\n\t\t if ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\r\n \r\n\t\t if ( currentTextureSlot !== webglSlot ) {\r\n \r\n\t\t\t gl.activeTexture( webglSlot );\r\n\t\t\t currentTextureSlot = webglSlot;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function bindTexture( webglType, webglTexture ) {\r\n \r\n\t\t if ( currentTextureSlot === null ) {\r\n \r\n\t\t\t activeTexture();\r\n \r\n\t\t }\r\n \r\n\t\t let boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n \r\n\t\t if ( boundTexture === undefined ) {\r\n \r\n\t\t\t boundTexture = { type: undefined, texture: undefined };\r\n\t\t\t currentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n \r\n\t\t }\r\n \r\n\t\t if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n \r\n\t\t\t gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n \r\n\t\t\t boundTexture.type = webglType;\r\n\t\t\t boundTexture.texture = webglTexture;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function unbindTexture() {\r\n \r\n\t\t const boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n \r\n\t\t if ( boundTexture !== undefined && boundTexture.type !== undefined ) {\r\n \r\n\t\t\t gl.bindTexture( boundTexture.type, null );\r\n \r\n\t\t\t boundTexture.type = undefined;\r\n\t\t\t boundTexture.texture = undefined;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function compressedTexImage2D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.compressedTexImage2D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function texSubImage2D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.texSubImage2D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function texSubImage3D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.texSubImage3D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function compressedTexSubImage2D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.compressedTexSubImage2D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function texStorage2D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.texStorage2D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function texStorage3D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.texStorage3D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function texImage2D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.texImage2D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function texImage3D() {\r\n \r\n\t\t try {\r\n \r\n\t\t\t gl.texImage3D.apply( gl, arguments );\r\n \r\n\t\t } catch ( error ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLState:', error );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t function scissor( scissor ) {\r\n \r\n\t\t if ( currentScissor.equals( scissor ) === false ) {\r\n \r\n\t\t\t gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\t currentScissor.copy( scissor );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function viewport( viewport ) {\r\n \r\n\t\t if ( currentViewport.equals( viewport ) === false ) {\r\n \r\n\t\t\t gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\t currentViewport.copy( viewport );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t function reset() {\r\n \r\n\t\t // reset state\r\n \r\n\t\t gl.disable( 3042 );\r\n\t\t gl.disable( 2884 );\r\n\t\t gl.disable( 2929 );\r\n\t\t gl.disable( 32823 );\r\n\t\t gl.disable( 3089 );\r\n\t\t gl.disable( 2960 );\r\n\t\t gl.disable( 32926 );\r\n \r\n\t\t gl.blendEquation( 32774 );\r\n\t\t gl.blendFunc( 1, 0 );\r\n\t\t gl.blendFuncSeparate( 1, 0, 1, 0 );\r\n \r\n\t\t gl.colorMask( true, true, true, true );\r\n\t\t gl.clearColor( 0, 0, 0, 0 );\r\n \r\n\t\t gl.depthMask( true );\r\n\t\t gl.depthFunc( 513 );\r\n\t\t gl.clearDepth( 1 );\r\n \r\n\t\t gl.stencilMask( 0xffffffff );\r\n\t\t gl.stencilFunc( 519, 0, 0xffffffff );\r\n\t\t gl.stencilOp( 7680, 7680, 7680 );\r\n\t\t gl.clearStencil( 0 );\r\n \r\n\t\t gl.cullFace( 1029 );\r\n\t\t gl.frontFace( 2305 );\r\n \r\n\t\t gl.polygonOffset( 0, 0 );\r\n \r\n\t\t gl.activeTexture( 33984 );\r\n \r\n\t\t gl.bindFramebuffer( 36160, null );\r\n \r\n\t\t if ( isWebGL2 === true ) {\r\n \r\n\t\t\t gl.bindFramebuffer( 36009, null );\r\n\t\t\t gl.bindFramebuffer( 36008, null );\r\n \r\n\t\t }\r\n \r\n\t\t gl.useProgram( null );\r\n \r\n\t\t gl.lineWidth( 1 );\r\n \r\n\t\t gl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\t\t gl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\r\n \r\n\t\t // reset internals\r\n \r\n\t\t enabledCapabilities = {};\r\n \r\n\t\t currentTextureSlot = null;\r\n\t\t currentBoundTextures = {};\r\n \r\n\t\t currentBoundFramebuffers = {};\r\n\t\t currentDrawbuffers = new WeakMap();\r\n\t\t defaultDrawbuffers = [];\r\n \r\n\t\t currentProgram = null;\r\n \r\n\t\t currentBlendingEnabled = false;\r\n\t\t currentBlending = null;\r\n\t\t currentBlendEquation = null;\r\n\t\t currentBlendSrc = null;\r\n\t\t currentBlendDst = null;\r\n\t\t currentBlendEquationAlpha = null;\r\n\t\t currentBlendSrcAlpha = null;\r\n\t\t currentBlendDstAlpha = null;\r\n\t\t currentPremultipledAlpha = false;\r\n \r\n\t\t currentFlipSided = null;\r\n\t\t currentCullFace = null;\r\n \r\n\t\t currentLineWidth = null;\r\n \r\n\t\t currentPolygonOffsetFactor = null;\r\n\t\t currentPolygonOffsetUnits = null;\r\n \r\n\t\t currentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\r\n\t\t currentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\r\n \r\n\t\t colorBuffer.reset();\r\n\t\t depthBuffer.reset();\r\n\t\t stencilBuffer.reset();\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t buffers: {\r\n\t\t\t color: colorBuffer,\r\n\t\t\t depth: depthBuffer,\r\n\t\t\t stencil: stencilBuffer\r\n\t\t },\r\n \r\n\t\t enable: enable,\r\n\t\t disable: disable,\r\n \r\n\t\t bindFramebuffer: bindFramebuffer,\r\n\t\t drawBuffers: drawBuffers,\r\n \r\n\t\t useProgram: useProgram,\r\n \r\n\t\t setBlending: setBlending,\r\n\t\t setMaterial: setMaterial,\r\n \r\n\t\t setFlipSided: setFlipSided,\r\n\t\t setCullFace: setCullFace,\r\n \r\n\t\t setLineWidth: setLineWidth,\r\n\t\t setPolygonOffset: setPolygonOffset,\r\n \r\n\t\t setScissorTest: setScissorTest,\r\n \r\n\t\t activeTexture: activeTexture,\r\n\t\t bindTexture: bindTexture,\r\n\t\t unbindTexture: unbindTexture,\r\n\t\t compressedTexImage2D: compressedTexImage2D,\r\n\t\t texImage2D: texImage2D,\r\n\t\t texImage3D: texImage3D,\r\n \r\n\t\t texStorage2D: texStorage2D,\r\n\t\t texStorage3D: texStorage3D,\r\n\t\t texSubImage2D: texSubImage2D,\r\n\t\t texSubImage3D: texSubImage3D,\r\n\t\t compressedTexSubImage2D: compressedTexSubImage2D,\r\n \r\n\t\t scissor: scissor,\r\n\t\t viewport: viewport,\r\n \r\n\t\t reset: reset\r\n \r\n\t };\r\n \r\n }\r\n \r\n function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\r\n \r\n\t const isWebGL2 = capabilities.isWebGL2;\r\n\t const maxTextures = capabilities.maxTextures;\r\n\t const maxCubemapSize = capabilities.maxCubemapSize;\r\n\t const maxTextureSize = capabilities.maxTextureSize;\r\n\t const maxSamples = capabilities.maxSamples;\r\n\t const multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\r\n \r\n\t const _videoTextures = new WeakMap();\r\n\t let _canvas;\r\n \r\n\t const _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\r\n \r\n\t // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\r\n\t // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\r\n\t // Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\r\n \r\n\t let useOffscreenCanvas = false;\r\n \r\n\t try {\r\n \r\n\t\t useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\r\n\t\t\t && ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\r\n \r\n\t } catch ( err ) {\r\n \r\n\t\t // Ignore any errors\r\n \r\n\t }\r\n \r\n\t function createCanvas( width, height ) {\r\n \r\n\t\t // Use OffscreenCanvas when available. Specially needed in web workers\r\n \r\n\t\t return useOffscreenCanvas ?\r\n\t\t\t new OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\r\n \r\n\t }\r\n \r\n\t function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\r\n \r\n\t\t let scale = 1;\r\n \r\n\t\t // handle case if texture exceeds max size\r\n \r\n\t\t if ( image.width > maxSize || image.height > maxSize ) {\r\n \r\n\t\t\t scale = maxSize / Math.max( image.width, image.height );\r\n \r\n\t\t }\r\n \r\n\t\t // only perform resize if necessary\r\n \r\n\t\t if ( scale < 1 || needsPowerOfTwo === true ) {\r\n \r\n\t\t\t // only perform resize for certain image types\r\n \r\n\t\t\t if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t\t ( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t\t ( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n \r\n\t\t\t\t const floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\r\n \r\n\t\t\t\t const width = floor( scale * image.width );\r\n\t\t\t\t const height = floor( scale * image.height );\r\n \r\n\t\t\t\t if ( _canvas === undefined ) _canvas = createCanvas( width, height );\r\n \r\n\t\t\t\t // cube textures can't reuse the same canvas\r\n \r\n\t\t\t\t const canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\r\n \r\n\t\t\t\t canvas.width = width;\r\n\t\t\t\t canvas.height = height;\r\n \r\n\t\t\t\t const context = canvas.getContext( '2d' );\r\n\t\t\t\t context.drawImage( image, 0, 0, width, height );\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\r\n \r\n\t\t\t\t return canvas;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t if ( 'data' in image ) {\r\n \r\n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t return image;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return image;\r\n \r\n\t }\r\n \r\n\t function isPowerOfTwo$1( image ) {\r\n \r\n\t\t return isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\r\n \r\n\t }\r\n \r\n\t function textureNeedsPowerOfTwo( texture ) {\r\n \r\n\t\t if ( isWebGL2 ) return false;\r\n \r\n\t\t return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\r\n\t\t\t ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\r\n \r\n\t }\r\n \r\n\t function textureNeedsGenerateMipmaps( texture, supportsMips ) {\r\n \r\n\t\t return texture.generateMipmaps && supportsMips &&\r\n\t\t\t texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\r\n \r\n\t }\r\n \r\n\t function generateMipmap( target ) {\r\n \r\n\t\t _gl.generateMipmap( target );\r\n \r\n\t }\r\n \r\n\t function getInternalFormat( internalFormatName, glFormat, glType, encoding, isVideoTexture = false ) {\r\n \r\n\t\t if ( isWebGL2 === false ) return glFormat;\r\n \r\n\t\t if ( internalFormatName !== null ) {\r\n \r\n\t\t\t if ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\r\n \r\n\t\t }\r\n \r\n\t\t let internalFormat = glFormat;\r\n \r\n\t\t if ( glFormat === 6403 ) {\r\n \r\n\t\t\t if ( glType === 5126 ) internalFormat = 33326;\r\n\t\t\t if ( glType === 5131 ) internalFormat = 33325;\r\n\t\t\t if ( glType === 5121 ) internalFormat = 33321;\r\n \r\n\t\t }\r\n \r\n\t\t if ( glFormat === 33319 ) {\r\n \r\n\t\t\t if ( glType === 5126 ) internalFormat = 33328;\r\n\t\t\t if ( glType === 5131 ) internalFormat = 33327;\r\n\t\t\t if ( glType === 5121 ) internalFormat = 33323;\r\n \r\n\t\t }\r\n \r\n\t\t if ( glFormat === 6408 ) {\r\n \r\n\t\t\t if ( glType === 5126 ) internalFormat = 34836;\r\n\t\t\t if ( glType === 5131 ) internalFormat = 34842;\r\n\t\t\t if ( glType === 5121 ) internalFormat = ( encoding === sRGBEncoding && isVideoTexture === false ) ? 35907 : 32856;\r\n\t\t\t if ( glType === 32819 ) internalFormat = 32854;\r\n\t\t\t if ( glType === 32820 ) internalFormat = 32855;\r\n \r\n\t\t }\r\n \r\n\t\t if ( internalFormat === 33325 || internalFormat === 33326 ||\r\n\t\t\t internalFormat === 33327 || internalFormat === 33328 ||\r\n\t\t\t internalFormat === 34842 || internalFormat === 34836 ) {\r\n \r\n\t\t\t extensions.get( 'EXT_color_buffer_float' );\r\n \r\n\t\t }\r\n \r\n\t\t return internalFormat;\r\n \r\n\t }\r\n \r\n\t function getMipLevels( texture, image, supportsMips ) {\r\n \r\n\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\r\n \r\n\t\t\t return Math.log2( Math.max( image.width, image.height ) ) + 1;\r\n \r\n\t\t } else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\r\n \r\n\t\t\t // user-defined mipmaps\r\n \r\n\t\t\t return texture.mipmaps.length;\r\n \r\n\t\t } else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\r\n \r\n\t\t\t return image.mipmaps.length;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // texture without mipmaps (only base level)\r\n \r\n\t\t\t return 1;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // Fallback filters for non-power-of-2 textures\r\n \r\n\t function filterFallback( f ) {\r\n \r\n\t\t if ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\r\n \r\n\t\t\t return 9728;\r\n \r\n\t\t }\r\n \r\n\t\t return 9729;\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t function onTextureDispose( event ) {\r\n \r\n\t\t const texture = event.target;\r\n \r\n\t\t texture.removeEventListener( 'dispose', onTextureDispose );\r\n \r\n\t\t deallocateTexture( texture );\r\n \r\n\t\t if ( texture.isVideoTexture ) {\r\n \r\n\t\t\t _videoTextures.delete( texture );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function onRenderTargetDispose( event ) {\r\n \r\n\t\t const renderTarget = event.target;\r\n \r\n\t\t renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n \r\n\t\t deallocateRenderTarget( renderTarget );\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t function deallocateTexture( texture ) {\r\n \r\n\t\t const textureProperties = properties.get( texture );\r\n \r\n\t\t if ( textureProperties.__webglInit === undefined ) return;\r\n \r\n\t\t // check if it's necessary to remove the WebGLTexture object\r\n \r\n\t\t const source = texture.source;\r\n\t\t const webglTextures = _sources.get( source );\r\n \r\n\t\t if ( webglTextures ) {\r\n \r\n\t\t\t const webglTexture = webglTextures[ textureProperties.__cacheKey ];\r\n\t\t\t webglTexture.usedTimes --;\r\n \r\n\t\t\t // the WebGLTexture object is not used anymore, remove it\r\n \r\n\t\t\t if ( webglTexture.usedTimes === 0 ) {\r\n \r\n\t\t\t\t deleteTexture( texture );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // remove the weak map entry if no WebGLTexture uses the source anymore\r\n \r\n\t\t\t if ( Object.keys( webglTextures ).length === 0 ) {\r\n \r\n\t\t\t\t _sources.delete( source );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t properties.remove( texture );\r\n \r\n\t }\r\n \r\n\t function deleteTexture( texture ) {\r\n \r\n\t\t const textureProperties = properties.get( texture );\r\n\t\t _gl.deleteTexture( textureProperties.__webglTexture );\r\n \r\n\t\t const source = texture.source;\r\n\t\t const webglTextures = _sources.get( source );\r\n\t\t delete webglTextures[ textureProperties.__cacheKey ];\r\n \r\n\t\t info.memory.textures --;\r\n \r\n\t }\r\n \r\n\t function deallocateRenderTarget( renderTarget ) {\r\n \r\n\t\t const texture = renderTarget.texture;\r\n \r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n\t\t const textureProperties = properties.get( texture );\r\n \r\n\t\t if ( textureProperties.__webglTexture !== undefined ) {\r\n \r\n\t\t\t _gl.deleteTexture( textureProperties.__webglTexture );\r\n \r\n\t\t\t info.memory.textures --;\r\n \r\n\t\t }\r\n \r\n\t\t if ( renderTarget.depthTexture ) {\r\n \r\n\t\t\t renderTarget.depthTexture.dispose();\r\n \r\n\t\t }\r\n \r\n\t\t if ( renderTarget.isWebGLCubeRenderTarget ) {\r\n \r\n\t\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t\t _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t if ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\t\t\t if ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t if ( renderTargetProperties.__webglColorRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer );\r\n\t\t\t if ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\r\n \r\n\t\t }\r\n \r\n\t\t if ( renderTarget.isWebGLMultipleRenderTargets ) {\r\n \r\n\t\t\t for ( let i = 0, il = texture.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t const attachmentProperties = properties.get( texture[ i ] );\r\n \r\n\t\t\t\t if ( attachmentProperties.__webglTexture ) {\r\n \r\n\t\t\t\t\t _gl.deleteTexture( attachmentProperties.__webglTexture );\r\n \r\n\t\t\t\t\t info.memory.textures --;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t properties.remove( texture[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t properties.remove( texture );\r\n\t\t properties.remove( renderTarget );\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t let textureUnits = 0;\r\n \r\n\t function resetTextureUnits() {\r\n \r\n\t\t textureUnits = 0;\r\n \r\n\t }\r\n \r\n\t function allocateTextureUnit() {\r\n \r\n\t\t const textureUnit = textureUnits;\r\n \r\n\t\t if ( textureUnit >= maxTextures ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\r\n \r\n\t\t }\r\n \r\n\t\t textureUnits += 1;\r\n \r\n\t\t return textureUnit;\r\n \r\n\t }\r\n \r\n\t function getTextureCacheKey( texture ) {\r\n \r\n\t\t const array = [];\r\n \r\n\t\t array.push( texture.wrapS );\r\n\t\t array.push( texture.wrapT );\r\n\t\t array.push( texture.magFilter );\r\n\t\t array.push( texture.minFilter );\r\n\t\t array.push( texture.anisotropy );\r\n\t\t array.push( texture.internalFormat );\r\n\t\t array.push( texture.format );\r\n\t\t array.push( texture.type );\r\n\t\t array.push( texture.generateMipmaps );\r\n\t\t array.push( texture.premultiplyAlpha );\r\n\t\t array.push( texture.flipY );\r\n\t\t array.push( texture.unpackAlignment );\r\n\t\t array.push( texture.encoding );\r\n \r\n\t\t return array.join();\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t function setTexture2D( texture, slot ) {\r\n \r\n\t\t const textureProperties = properties.get( texture );\r\n \r\n\t\t if ( texture.isVideoTexture ) updateVideoTexture( texture );\r\n \r\n\t\t if ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n \r\n\t\t\t const image = texture.image;\r\n \r\n\t\t\t if ( image === null ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\r\n \r\n\t\t\t } else if ( image.complete === false ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t uploadTexture( textureProperties, texture, slot );\r\n\t\t\t\t return;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t state.activeTexture( 33984 + slot );\r\n\t\t state.bindTexture( 3553, textureProperties.__webglTexture );\r\n \r\n\t }\r\n \r\n\t function setTexture2DArray( texture, slot ) {\r\n \r\n\t\t const textureProperties = properties.get( texture );\r\n \r\n\t\t if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n \r\n\t\t\t uploadTexture( textureProperties, texture, slot );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t state.activeTexture( 33984 + slot );\r\n\t\t state.bindTexture( 35866, textureProperties.__webglTexture );\r\n \r\n\t }\r\n \r\n\t function setTexture3D( texture, slot ) {\r\n \r\n\t\t const textureProperties = properties.get( texture );\r\n \r\n\t\t if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n \r\n\t\t\t uploadTexture( textureProperties, texture, slot );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t state.activeTexture( 33984 + slot );\r\n\t\t state.bindTexture( 32879, textureProperties.__webglTexture );\r\n \r\n\t }\r\n \r\n\t function setTextureCube( texture, slot ) {\r\n \r\n\t\t const textureProperties = properties.get( texture );\r\n \r\n\t\t if ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n \r\n\t\t\t uploadCubeTexture( textureProperties, texture, slot );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t state.activeTexture( 33984 + slot );\r\n\t\t state.bindTexture( 34067, textureProperties.__webglTexture );\r\n \r\n\t }\r\n \r\n\t const wrappingToGL = {\r\n\t\t [ RepeatWrapping ]: 10497,\r\n\t\t [ ClampToEdgeWrapping ]: 33071,\r\n\t\t [ MirroredRepeatWrapping ]: 33648\r\n\t };\r\n \r\n\t const filterToGL = {\r\n\t\t [ NearestFilter ]: 9728,\r\n\t\t [ NearestMipmapNearestFilter ]: 9984,\r\n\t\t [ NearestMipmapLinearFilter ]: 9986,\r\n \r\n\t\t [ LinearFilter ]: 9729,\r\n\t\t [ LinearMipmapNearestFilter ]: 9985,\r\n\t\t [ LinearMipmapLinearFilter ]: 9987\r\n\t };\r\n \r\n\t function setTextureParameters( textureType, texture, supportsMips ) {\r\n \r\n\t\t if ( supportsMips ) {\r\n \r\n\t\t\t _gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\r\n\t\t\t _gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\r\n \r\n\t\t\t if ( textureType === 32879 || textureType === 35866 ) {\r\n \r\n\t\t\t\t _gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\r\n\t\t\t _gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _gl.texParameteri( textureType, 10242, 33071 );\r\n\t\t\t _gl.texParameteri( textureType, 10243, 33071 );\r\n \r\n\t\t\t if ( textureType === 32879 || textureType === 35866 ) {\r\n \r\n\t\t\t\t _gl.texParameteri( textureType, 32882, 33071 );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\r\n\t\t\t _gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\r\n \r\n\t\t\t if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\r\n \r\n\t\t\t const extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n \r\n\t\t\t if ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\r\n\t\t\t if ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\r\n \r\n\t\t\t if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n \r\n\t\t\t\t _gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\r\n\t\t\t\t properties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function initTexture( textureProperties, texture ) {\r\n \r\n\t\t let forceUpload = false;\r\n \r\n\t\t if ( textureProperties.__webglInit === undefined ) {\r\n \r\n\t\t\t textureProperties.__webglInit = true;\r\n \r\n\t\t\t texture.addEventListener( 'dispose', onTextureDispose );\r\n \r\n\t\t }\r\n \r\n\t\t // create Source <-> WebGLTextures mapping if necessary\r\n \r\n\t\t const source = texture.source;\r\n\t\t let webglTextures = _sources.get( source );\r\n \r\n\t\t if ( webglTextures === undefined ) {\r\n \r\n\t\t\t webglTextures = {};\r\n\t\t\t _sources.set( source, webglTextures );\r\n \r\n\t\t }\r\n \r\n\t\t // check if there is already a WebGLTexture object for the given texture parameters\r\n \r\n\t\t const textureCacheKey = getTextureCacheKey( texture );\r\n \r\n\t\t if ( textureCacheKey !== textureProperties.__cacheKey ) {\r\n \r\n\t\t\t // if not, create a new instance of WebGLTexture\r\n \r\n\t\t\t if ( webglTextures[ textureCacheKey ] === undefined ) {\r\n \r\n\t\t\t\t // create new entry\r\n \r\n\t\t\t\t webglTextures[ textureCacheKey ] = {\r\n\t\t\t\t\t texture: _gl.createTexture(),\r\n\t\t\t\t\t usedTimes: 0\r\n\t\t\t\t };\r\n \r\n\t\t\t\t info.memory.textures ++;\r\n \r\n\t\t\t\t // when a new instance of WebGLTexture was created, a texture upload is required\r\n\t\t\t\t // even if the image contents are identical\r\n \r\n\t\t\t\t forceUpload = true;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t webglTextures[ textureCacheKey ].usedTimes ++;\r\n \r\n\t\t\t // every time the texture cache key changes, it's necessary to check if an instance of\r\n\t\t\t // WebGLTexture can be deleted in order to avoid a memory leak.\r\n \r\n\t\t\t const webglTexture = webglTextures[ textureProperties.__cacheKey ];\r\n \r\n\t\t\t if ( webglTexture !== undefined ) {\r\n \r\n\t\t\t\t webglTextures[ textureProperties.__cacheKey ].usedTimes --;\r\n \r\n\t\t\t\t if ( webglTexture.usedTimes === 0 ) {\r\n \r\n\t\t\t\t\t deleteTexture( texture );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // store references to cache key and WebGLTexture object\r\n \r\n\t\t\t textureProperties.__cacheKey = textureCacheKey;\r\n\t\t\t textureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\r\n \r\n\t\t }\r\n \r\n\t\t return forceUpload;\r\n \r\n\t }\r\n \r\n\t function uploadTexture( textureProperties, texture, slot ) {\r\n \r\n\t\t let textureType = 3553;\r\n \r\n\t\t if ( texture.isDataArrayTexture ) textureType = 35866;\r\n\t\t if ( texture.isData3DTexture ) textureType = 32879;\r\n \r\n\t\t const forceUpload = initTexture( textureProperties, texture );\r\n\t\t const source = texture.source;\r\n \r\n\t\t state.activeTexture( 33984 + slot );\r\n\t\t state.bindTexture( textureType, textureProperties.__webglTexture );\r\n \r\n\t\t if ( source.version !== source.__currentVersion || forceUpload === true ) {\r\n \r\n\t\t\t _gl.pixelStorei( 37440, texture.flipY );\r\n\t\t\t _gl.pixelStorei( 37441, texture.premultiplyAlpha );\r\n\t\t\t _gl.pixelStorei( 3317, texture.unpackAlignment );\r\n\t\t\t _gl.pixelStorei( 37443, 0 );\r\n \r\n\t\t\t const needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\r\n\t\t\t let image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\r\n\t\t\t image = verifyColorSpace( texture, image );\r\n \r\n\t\t\t const supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\r\n\t\t\t\t glFormat = utils.convert( texture.format, texture.encoding );\r\n \r\n\t\t\t let glType = utils.convert( texture.type ),\r\n\t\t\t\t glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding, texture.isVideoTexture );\r\n \r\n\t\t\t setTextureParameters( textureType, texture, supportsMips );\r\n \r\n\t\t\t let mipmap;\r\n\t\t\t const mipmaps = texture.mipmaps;\r\n \r\n\t\t\t const useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\r\n\t\t\t const allocateMemory = ( textureProperties.__version === undefined );\r\n\t\t\t const levels = getMipLevels( texture, image, supportsMips );\r\n \r\n\t\t\t if ( texture.isDepthTexture ) {\r\n \r\n\t\t\t\t // populate depth texture with dummy data\r\n \r\n\t\t\t\t glInternalFormat = 6402;\r\n \r\n\t\t\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t\t\t if ( texture.type === FloatType ) {\r\n \r\n\t\t\t\t\t\t glInternalFormat = 36012;\r\n \r\n\t\t\t\t\t } else if ( texture.type === UnsignedIntType ) {\r\n \r\n\t\t\t\t\t\t glInternalFormat = 33190;\r\n \r\n\t\t\t\t\t } else if ( texture.type === UnsignedInt248Type ) {\r\n \r\n\t\t\t\t\t\t glInternalFormat = 35056;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t if ( texture.type === FloatType ) {\r\n \r\n\t\t\t\t\t\t console.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // validation checks for WebGL 1\r\n \r\n\t\t\t\t if ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\r\n \r\n\t\t\t\t\t // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\r\n\t\t\t\t\t // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\t if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\r\n \r\n\t\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\r\n \r\n\t\t\t\t\t\t texture.type = UnsignedShortType;\r\n\t\t\t\t\t\t glType = utils.convert( texture.type );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {\r\n \r\n\t\t\t\t\t // Depth stencil textures need the DEPTH_STENCIL internal format\r\n\t\t\t\t\t // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\t glInternalFormat = 34041;\r\n \r\n\t\t\t\t\t // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\r\n\t\t\t\t\t // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\r\n\t\t\t\t\t // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n\t\t\t\t\t if ( texture.type !== UnsignedInt248Type ) {\r\n \r\n\t\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\r\n \r\n\t\t\t\t\t\t texture.type = UnsignedInt248Type;\r\n\t\t\t\t\t\t glType = utils.convert( texture.type );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t //\r\n \r\n\t\t\t\t if ( useTexStorage && allocateMemory ) {\r\n \r\n\t\t\t\t\t state.texStorage2D( 3553, 1, glInternalFormat, image.width, image.height );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( texture.isDataTexture ) {\r\n \r\n\t\t\t\t // use manually created mipmaps if available\r\n\t\t\t\t // if there are no manual mipmaps\r\n\t\t\t\t // set 0 level mipmap and then use GL to generate other mipmap levels\r\n \r\n\t\t\t\t if ( mipmaps.length > 0 && supportsMips ) {\r\n \r\n\t\t\t\t\t if ( useTexStorage && allocateMemory ) {\r\n \r\n\t\t\t\t\t\t state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t mipmap = mipmaps[ i ];\r\n \r\n\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t state.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t texture.generateMipmaps = false;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t if ( allocateMemory ) {\r\n \r\n\t\t\t\t\t\t\t state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t state.texSubImage2D( 3553, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( texture.isCompressedTexture ) {\r\n \r\n\t\t\t\t if ( useTexStorage && allocateMemory ) {\r\n \r\n\t\t\t\t\t state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t mipmap = mipmaps[ i ];\r\n \r\n\t\t\t\t\t if ( texture.format !== RGBAFormat ) {\r\n \r\n\t\t\t\t\t\t if ( glFormat !== null ) {\r\n \r\n\t\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t\t state.compressedTexSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t state.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t state.texSubImage2D( 3553, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( texture.isDataArrayTexture ) {\r\n \r\n\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t if ( allocateMemory ) {\r\n \r\n\t\t\t\t\t\t state.texStorage3D( 35866, levels, glInternalFormat, image.width, image.height, image.depth );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t state.texSubImage3D( 35866, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t state.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( texture.isData3DTexture ) {\r\n \r\n\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t if ( allocateMemory ) {\r\n \r\n\t\t\t\t\t\t state.texStorage3D( 32879, levels, glInternalFormat, image.width, image.height, image.depth );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t state.texSubImage3D( 32879, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t state.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( texture.isFramebufferTexture ) {\r\n \r\n\t\t\t\t if ( useTexStorage && allocateMemory ) {\r\n \r\n\t\t\t\t\t state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // regular Texture (image, video, canvas)\r\n \r\n\t\t\t\t // use manually created mipmaps if available\r\n\t\t\t\t // if there are no manual mipmaps\r\n\t\t\t\t // set 0 level mipmap and then use GL to generate other mipmap levels\r\n \r\n\t\t\t\t if ( mipmaps.length > 0 && supportsMips ) {\r\n \r\n\t\t\t\t\t if ( useTexStorage && allocateMemory ) {\r\n \r\n\t\t\t\t\t\t state.texStorage2D( 3553, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t for ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t mipmap = mipmaps[ i ];\r\n \r\n\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t state.texSubImage2D( 3553, i, 0, 0, glFormat, glType, mipmap );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t state.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t texture.generateMipmaps = false;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t if ( allocateMemory ) {\r\n \r\n\t\t\t\t\t\t\t state.texStorage2D( 3553, levels, glInternalFormat, image.width, image.height );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t state.texSubImage2D( 3553, 0, 0, 0, glFormat, glType, image );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t state.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n \r\n\t\t\t\t generateMipmap( textureType );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t source.__currentVersion = source.version;\r\n \r\n\t\t\t if ( texture.onUpdate ) texture.onUpdate( texture );\r\n \r\n\t\t }\r\n \r\n\t\t textureProperties.__version = texture.version;\r\n \r\n\t }\r\n \r\n\t function uploadCubeTexture( textureProperties, texture, slot ) {\r\n \r\n\t\t if ( texture.image.length !== 6 ) return;\r\n \r\n\t\t const forceUpload = initTexture( textureProperties, texture );\r\n\t\t const source = texture.source;\r\n \r\n\t\t state.activeTexture( 33984 + slot );\r\n\t\t state.bindTexture( 34067, textureProperties.__webglTexture );\r\n \r\n\t\t if ( source.version !== source.__currentVersion || forceUpload === true ) {\r\n \r\n\t\t\t _gl.pixelStorei( 37440, texture.flipY );\r\n\t\t\t _gl.pixelStorei( 37441, texture.premultiplyAlpha );\r\n\t\t\t _gl.pixelStorei( 3317, texture.unpackAlignment );\r\n\t\t\t _gl.pixelStorei( 37443, 0 );\r\n \r\n\t\t\t const isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\r\n\t\t\t const isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\r\n \r\n\t\t\t const cubeImage = [];\r\n \r\n\t\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t\t if ( ! isCompressed && ! isDataTexture ) {\r\n \r\n\t\t\t\t\t cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t cubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const image = cubeImage[ 0 ],\r\n\t\t\t\t supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\r\n\t\t\t\t glFormat = utils.convert( texture.format, texture.encoding ),\r\n\t\t\t\t glType = utils.convert( texture.type ),\r\n\t\t\t\t glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\r\n \r\n\t\t\t const useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\r\n\t\t\t const allocateMemory = ( textureProperties.__version === undefined );\r\n\t\t\t let levels = getMipLevels( texture, image, supportsMips );\r\n \r\n\t\t\t setTextureParameters( 34067, texture, supportsMips );\r\n \r\n\t\t\t let mipmaps;\r\n \r\n\t\t\t if ( isCompressed ) {\r\n \r\n\t\t\t\t if ( useTexStorage && allocateMemory ) {\r\n \r\n\t\t\t\t\t state.texStorage2D( 34067, levels, glInternalFormat, image.width, image.height );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t\t\t mipmaps = cubeImage[ i ].mipmaps;\r\n \r\n\t\t\t\t\t for ( let j = 0; j < mipmaps.length; j ++ ) {\r\n \r\n\t\t\t\t\t\t const mipmap = mipmaps[ j ];\r\n \r\n\t\t\t\t\t\t if ( texture.format !== RGBAFormat ) {\r\n \r\n\t\t\t\t\t\t\t if ( glFormat !== null ) {\r\n \r\n\t\t\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t\t\t state.compressedTexSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\r\n \r\n\t\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t\t state.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n \r\n\t\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t\t state.texSubImage2D( 34069 + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t state.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t mipmaps = texture.mipmaps;\r\n \r\n\t\t\t\t if ( useTexStorage && allocateMemory ) {\r\n \r\n\t\t\t\t\t // TODO: Uniformly handle mipmap definitions\r\n\t\t\t\t\t // Normal textures and compressed cube textures define base level + mips with their mipmap array\r\n\t\t\t\t\t // Uncompressed cube textures use their mipmap array only for mips (no base level)\r\n \r\n\t\t\t\t\t if ( mipmaps.length > 0 ) levels ++;\r\n \r\n\t\t\t\t\t state.texStorage2D( 34067, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t\t\t if ( isDataTexture ) {\r\n \r\n\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t state.texSubImage2D( 34069 + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t state.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t for ( let j = 0; j < mipmaps.length; j ++ ) {\r\n \r\n\t\t\t\t\t\t\t const mipmap = mipmaps[ j ];\r\n\t\t\t\t\t\t\t const mipmapImage = mipmap.image[ i ].image;\r\n \r\n\t\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t\t state.texSubImage2D( 34069 + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t state.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t state.texSubImage2D( 34069 + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t state.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t for ( let j = 0; j < mipmaps.length; j ++ ) {\r\n \r\n\t\t\t\t\t\t\t const mipmap = mipmaps[ j ];\r\n \r\n\t\t\t\t\t\t\t if ( useTexStorage ) {\r\n \r\n\t\t\t\t\t\t\t\t state.texSubImage2D( 34069 + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t state.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n \r\n\t\t\t\t // We assume images for cube map have the same size.\r\n\t\t\t\t generateMipmap( 34067 );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t source.__currentVersion = source.version;\r\n \r\n\t\t\t if ( texture.onUpdate ) texture.onUpdate( texture );\r\n \r\n\t\t }\r\n \r\n\t\t textureProperties.__version = texture.version;\r\n \r\n\t }\r\n \r\n\t // Render targets\r\n \r\n\t // Setup storage for target texture and bind it to correct framebuffer\r\n\t function setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget ) {\r\n \r\n\t\t const glFormat = utils.convert( texture.format, texture.encoding );\r\n\t\t const glType = utils.convert( texture.type );\r\n\t\t const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n \r\n\t\t if ( ! renderTargetProperties.__hasExternalTextures ) {\r\n \r\n\t\t\t if ( textureTarget === 32879 || textureTarget === 35866 ) {\r\n \r\n\t\t\t\t state.texImage3D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t state.bindFramebuffer( 36160, framebuffer );\r\n \r\n\t\t if ( useMultisampledRTT( renderTarget ) ) {\r\n \r\n\t\t\t multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( texture ).__webglTexture, 0 );\r\n \r\n\t\t }\r\n \r\n\t\t state.bindFramebuffer( 36160, null );\r\n \r\n\t }\r\n \r\n \r\n\t // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\t function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\r\n \r\n\t\t _gl.bindRenderbuffer( 36161, renderbuffer );\r\n \r\n\t\t if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n \r\n\t\t\t let glInternalFormat = 33189;\r\n \r\n\t\t\t if ( isMultisample || useMultisampledRTT( renderTarget ) ) {\r\n \r\n\t\t\t\t const depthTexture = renderTarget.depthTexture;\r\n \r\n\t\t\t\t if ( depthTexture && depthTexture.isDepthTexture ) {\r\n \r\n\t\t\t\t\t if ( depthTexture.type === FloatType ) {\r\n \r\n\t\t\t\t\t\t glInternalFormat = 36012;\r\n \r\n\t\t\t\t\t } else if ( depthTexture.type === UnsignedIntType ) {\r\n \r\n\t\t\t\t\t\t glInternalFormat = 33190;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t const samples = getRenderTargetSamples( renderTarget );\r\n \r\n\t\t\t\t if ( useMultisampledRTT( renderTarget ) ) {\r\n \r\n\t\t\t\t\t multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\r\n \r\n\t\t } else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n \r\n\t\t\t const samples = getRenderTargetSamples( renderTarget );\r\n \r\n\t\t\t if ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\r\n \r\n\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t } else if ( useMultisampledRTT( renderTarget ) ) {\r\n \r\n\t\t\t\t multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, 35056, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t _gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // Use the first texture for MRT so far\r\n\t\t\t const texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[ 0 ] : renderTarget.texture;\r\n \r\n\t\t\t const glFormat = utils.convert( texture.format, texture.encoding );\r\n\t\t\t const glType = utils.convert( texture.type );\r\n\t\t\t const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\r\n\t\t\t const samples = getRenderTargetSamples( renderTarget );\r\n \r\n\t\t\t if ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\r\n \r\n\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t } else if ( useMultisampledRTT( renderTarget ) ) {\r\n \r\n\t\t\t\t multisampledRTTExt.renderbufferStorageMultisampleEXT( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t _gl.bindRenderbuffer( 36161, null );\r\n \r\n\t }\r\n \r\n\t // Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\t function setupDepthTexture( framebuffer, renderTarget ) {\r\n \r\n\t\t const isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\r\n\t\t if ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\r\n \r\n\t\t state.bindFramebuffer( 36160, framebuffer );\r\n \r\n\t\t if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\r\n \r\n\t\t\t throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\r\n \r\n\t\t }\r\n \r\n\t\t // upload an empty depth texture with framebuffer size\r\n\t\t if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n\t\t\t\t renderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\t renderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n \r\n\t\t\t renderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\t renderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\t renderTarget.depthTexture.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t\t setTexture2D( renderTarget.depthTexture, 0 );\r\n \r\n\t\t const webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\t\t const samples = getRenderTargetSamples( renderTarget );\r\n \r\n\t\t if ( renderTarget.depthTexture.format === DepthFormat ) {\r\n \r\n\t\t\t if ( useMultisampledRTT( renderTarget ) ) {\r\n \r\n\t\t\t\t multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 36096, 3553, webglDepthTexture, 0, samples );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\r\n \r\n\t\t\t if ( useMultisampledRTT( renderTarget ) ) {\r\n \r\n\t\t\t\t multisampledRTTExt.framebufferTexture2DMultisampleEXT( 36160, 33306, 3553, webglDepthTexture, 0, samples );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t throw new Error( 'Unknown depthTexture format' );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // Setup GL resources for a non-texture depth buffer\r\n\t function setupDepthRenderbuffer( renderTarget ) {\r\n \r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n\t\t const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\r\n \r\n\t\t if ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\r\n \r\n\t\t\t if ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\r\n \r\n\t\t\t setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( isCube ) {\r\n \r\n\t\t\t\t renderTargetProperties.__webglDepthbuffer = [];\r\n \r\n\t\t\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t\t\t state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\t setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t state.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t state.bindFramebuffer( 36160, null );\r\n \r\n\t }\r\n \r\n\t // rebind framebuffer with external textures\r\n\t function rebindTextures( renderTarget, colorTexture, depthTexture ) {\r\n \r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n \r\n\t\t if ( colorTexture !== undefined ) {\r\n \r\n\t\t\t setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, 36064, 3553 );\r\n \r\n\t\t }\r\n \r\n\t\t if ( depthTexture !== undefined ) {\r\n \r\n\t\t\t setupDepthRenderbuffer( renderTarget );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // Set up GL resources for the render target\r\n\t function setupRenderTarget( renderTarget ) {\r\n \r\n\t\t const texture = renderTarget.texture;\r\n \r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n\t\t const textureProperties = properties.get( texture );\r\n \r\n\t\t renderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n \r\n\t\t if ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\r\n \r\n\t\t\t if ( textureProperties.__webglTexture === undefined ) {\r\n \r\n\t\t\t\t textureProperties.__webglTexture = _gl.createTexture();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t textureProperties.__version = texture.version;\r\n\t\t\t info.memory.textures ++;\r\n \r\n\t\t }\r\n \r\n\t\t const isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\r\n\t\t const isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\r\n\t\t const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\r\n \r\n\t\t // Setup framebuffer\r\n \r\n\t\t if ( isCube ) {\r\n \r\n\t\t\t renderTargetProperties.__webglFramebuffer = [];\r\n \r\n\t\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t\t renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n \r\n\t\t\t if ( isMultipleRenderTargets ) {\r\n \r\n\t\t\t\t if ( capabilities.drawBuffers ) {\r\n \r\n\t\t\t\t\t const textures = renderTarget.texture;\r\n \r\n\t\t\t\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t const attachmentProperties = properties.get( textures[ i ] );\r\n \r\n\t\t\t\t\t\t if ( attachmentProperties.__webglTexture === undefined ) {\r\n \r\n\t\t\t\t\t\t\t attachmentProperties.__webglTexture = _gl.createTexture();\r\n \r\n\t\t\t\t\t\t\t info.memory.textures ++;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\r\n \r\n\t\t\t\t renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\r\n\t\t\t\t renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\r\n \r\n\t\t\t\t _gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\r\n \r\n\t\t\t\t const glFormat = utils.convert( texture.format, texture.encoding );\r\n\t\t\t\t const glType = utils.convert( texture.type );\r\n\t\t\t\t const glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.encoding );\r\n\t\t\t\t const samples = getRenderTargetSamples( renderTarget );\r\n\t\t\t\t _gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\r\n \r\n\t\t\t\t state.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t\t _gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\r\n\t\t\t\t _gl.bindRenderbuffer( 36161, null );\r\n \r\n\t\t\t\t if ( renderTarget.depthBuffer ) {\r\n \r\n\t\t\t\t\t renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\r\n\t\t\t\t\t setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t state.bindFramebuffer( 36160, null );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // Setup color buffer\r\n \r\n\t\t if ( isCube ) {\r\n \r\n\t\t\t state.bindTexture( 34067, textureProperties.__webglTexture );\r\n\t\t\t setTextureParameters( 34067, texture, supportsMips );\r\n \r\n\t\t\t for ( let i = 0; i < 6; i ++ ) {\r\n \r\n\t\t\t\t setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, 36064, 34069 + i );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n \r\n\t\t\t\t generateMipmap( 34067 );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t state.unbindTexture();\r\n \r\n\t\t } else if ( isMultipleRenderTargets ) {\r\n \r\n\t\t\t const textures = renderTarget.texture;\r\n \r\n\t\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t const attachment = textures[ i ];\r\n\t\t\t\t const attachmentProperties = properties.get( attachment );\r\n \r\n\t\t\t\t state.bindTexture( 3553, attachmentProperties.__webglTexture );\r\n\t\t\t\t setTextureParameters( 3553, attachment, supportsMips );\r\n\t\t\t\t setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, 36064 + i, 3553 );\r\n \r\n\t\t\t\t if ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\r\n \r\n\t\t\t\t\t generateMipmap( 3553 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t state.unbindTexture();\r\n \r\n\t\t } else {\r\n \r\n\t\t\t let glTextureType = 3553;\r\n \r\n\t\t\t if ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\r\n \r\n\t\t\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t\t\t glTextureType = renderTarget.isWebGL3DRenderTarget ? 32879 : 35866;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t state.bindTexture( glTextureType, textureProperties.__webglTexture );\r\n\t\t\t setTextureParameters( glTextureType, texture, supportsMips );\r\n\t\t\t setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, 36064, glTextureType );\r\n \r\n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n \r\n\t\t\t\t generateMipmap( glTextureType );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t state.unbindTexture();\r\n \r\n\t\t }\r\n \r\n\t\t // Setup depth and stencil buffers\r\n \r\n\t\t if ( renderTarget.depthBuffer ) {\r\n \r\n\t\t\t setupDepthRenderbuffer( renderTarget );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function updateRenderTargetMipmap( renderTarget ) {\r\n \r\n\t\t const supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\r\n \r\n\t\t const textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\r\n \r\n\t\t for ( let i = 0, il = textures.length; i < il; i ++ ) {\r\n \r\n\t\t\t const texture = textures[ i ];\r\n \r\n\t\t\t if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\r\n \r\n\t\t\t\t const target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;\r\n\t\t\t\t const webglTexture = properties.get( texture ).__webglTexture;\r\n \r\n\t\t\t\t state.bindTexture( target, webglTexture );\r\n\t\t\t\t generateMipmap( target );\r\n\t\t\t\t state.unbindTexture();\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function updateMultisampleRenderTarget( renderTarget ) {\r\n \r\n\t\t if ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\r\n \r\n\t\t\t const width = renderTarget.width;\r\n\t\t\t const height = renderTarget.height;\r\n\t\t\t let mask = 16384;\r\n\t\t\t const invalidationArray = [ 36064 ];\r\n\t\t\t const depthStyle = renderTarget.stencilBuffer ? 33306 : 36096;\r\n \r\n\t\t\t if ( renderTarget.depthBuffer ) {\r\n \r\n\t\t\t\t invalidationArray.push( depthStyle );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const renderTargetProperties = properties.get( renderTarget );\r\n\t\t\t const ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\r\n \r\n\t\t\t if ( ignoreDepthValues === false ) {\r\n \r\n\t\t\t\t if ( renderTarget.depthBuffer ) mask |= 256;\r\n\t\t\t\t if ( renderTarget.stencilBuffer ) mask |= 1024;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t state.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\r\n\t\t\t state.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\r\n \r\n\t\t\t if ( ignoreDepthValues === true ) {\r\n \r\n\t\t\t\t _gl.invalidateFramebuffer( 36008, [ depthStyle ] );\r\n\t\t\t\t _gl.invalidateFramebuffer( 36009, [ depthStyle ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\r\n\t\t\t _gl.invalidateFramebuffer( 36008, invalidationArray );\r\n \r\n\t\t\t state.bindFramebuffer( 36008, null );\r\n\t\t\t state.bindFramebuffer( 36009, renderTargetProperties.__webglMultisampledFramebuffer );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function getRenderTargetSamples( renderTarget ) {\r\n \r\n\t\t return Math.min( maxSamples, renderTarget.samples );\r\n \r\n\t }\r\n \r\n\t function useMultisampledRTT( renderTarget ) {\r\n \r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n \r\n\t\t return isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\r\n \r\n\t }\r\n \r\n\t function updateVideoTexture( texture ) {\r\n \r\n\t\t const frame = info.render.frame;\r\n \r\n\t\t // Check the last frame we updated the VideoTexture\r\n \r\n\t\t if ( _videoTextures.get( texture ) !== frame ) {\r\n \r\n\t\t\t _videoTextures.set( texture, frame );\r\n\t\t\t texture.update();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function verifyColorSpace( texture, image ) {\r\n \r\n\t\t const encoding = texture.encoding;\r\n\t\t const format = texture.format;\r\n\t\t const type = texture.type;\r\n \r\n\t\t if ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\r\n \r\n\t\t if ( encoding !== LinearEncoding ) {\r\n \r\n\t\t\t // sRGB\r\n \r\n\t\t\t if ( encoding === sRGBEncoding ) {\r\n \r\n\t\t\t\t if ( isWebGL2 === false ) {\r\n \r\n\t\t\t\t\t // in WebGL 1, try to use EXT_sRGB extension and unsized formats\r\n \r\n\t\t\t\t\t if ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\r\n \r\n\t\t\t\t\t\t texture.format = _SRGBAFormat;\r\n \r\n\t\t\t\t\t\t // it's not possible to generate mips in WebGL 1 with this extension\r\n \r\n\t\t\t\t\t\t texture.minFilter = LinearFilter;\r\n\t\t\t\t\t\t texture.generateMipmaps = false;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t // slow fallback (CPU decode)\r\n \r\n\t\t\t\t\t\t image = ImageUtils.sRGBToLinear( image );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\r\n \r\n\t\t\t\t\t if ( format !== RGBAFormat || type !== UnsignedByteType ) {\r\n \r\n\t\t\t\t\t\t console.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t console.error( 'THREE.WebGLTextures: Unsupported texture encoding:', encoding );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return image;\r\n \r\n\t }\r\n \r\n\t //\r\n \r\n\t this.allocateTextureUnit = allocateTextureUnit;\r\n\t this.resetTextureUnits = resetTextureUnits;\r\n \r\n\t this.setTexture2D = setTexture2D;\r\n\t this.setTexture2DArray = setTexture2DArray;\r\n\t this.setTexture3D = setTexture3D;\r\n\t this.setTextureCube = setTextureCube;\r\n\t this.rebindTextures = rebindTextures;\r\n\t this.setupRenderTarget = setupRenderTarget;\r\n\t this.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\t this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\r\n\t this.setupDepthRenderbuffer = setupDepthRenderbuffer;\r\n\t this.setupFrameBufferTexture = setupFrameBufferTexture;\r\n\t this.useMultisampledRTT = useMultisampledRTT;\r\n \r\n }\r\n \r\n function WebGLUtils( gl, extensions, capabilities ) {\r\n \r\n\t const isWebGL2 = capabilities.isWebGL2;\r\n \r\n\t function convert( p, encoding = null ) {\r\n \r\n\t\t let extension;\r\n \r\n\t\t if ( p === UnsignedByteType ) return 5121;\r\n\t\t if ( p === UnsignedShort4444Type ) return 32819;\r\n\t\t if ( p === UnsignedShort5551Type ) return 32820;\r\n \r\n\t\t if ( p === ByteType ) return 5120;\r\n\t\t if ( p === ShortType ) return 5122;\r\n\t\t if ( p === UnsignedShortType ) return 5123;\r\n\t\t if ( p === IntType ) return 5124;\r\n\t\t if ( p === UnsignedIntType ) return 5125;\r\n\t\t if ( p === FloatType ) return 5126;\r\n \r\n\t\t if ( p === HalfFloatType ) {\r\n \r\n\t\t\t if ( isWebGL2 ) return 5131;\r\n \r\n\t\t\t extension = extensions.get( 'OES_texture_half_float' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t return extension.HALF_FLOAT_OES;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( p === AlphaFormat ) return 6406;\r\n\t\t if ( p === RGBAFormat ) return 6408;\r\n\t\t if ( p === LuminanceFormat ) return 6409;\r\n\t\t if ( p === LuminanceAlphaFormat ) return 6410;\r\n\t\t if ( p === DepthFormat ) return 6402;\r\n\t\t if ( p === DepthStencilFormat ) return 34041;\r\n\t\t if ( p === RedFormat ) return 6403;\r\n \r\n\t\t if ( p === RGBFormat ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\r\n\t\t\t return 6408;\r\n \r\n\t\t }\r\n \r\n\t\t // WebGL 1 sRGB fallback\r\n \r\n\t\t if ( p === _SRGBAFormat ) {\r\n \r\n\t\t\t extension = extensions.get( 'EXT_sRGB' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t return extension.SRGB_ALPHA_EXT;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // WebGL2 formats.\r\n \r\n\t\t if ( p === RedIntegerFormat ) return 36244;\r\n\t\t if ( p === RGFormat ) return 33319;\r\n\t\t if ( p === RGIntegerFormat ) return 33320;\r\n\t\t if ( p === RGBAIntegerFormat ) return 36249;\r\n \r\n\t\t // S3TC\r\n \r\n\t\t if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\r\n \r\n\t\t\t if ( encoding === sRGBEncoding ) {\r\n \r\n\t\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\r\n \r\n\t\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t\t if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\t if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\r\n\t\t\t\t\t if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\r\n\t\t\t\t\t if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t return null;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n \r\n\t\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t\t if ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\t\t if ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\t\t if ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\t\t if ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t return null;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // PVRTC\r\n \r\n\t\t if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\r\n \r\n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t if ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t if ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\t if ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\t if ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // ETC1\r\n \r\n\t\t if ( p === RGB_ETC1_Format ) {\r\n \r\n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // ETC2\r\n \r\n\t\t if ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\r\n \r\n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_etc' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t if ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\r\n\t\t\t\t if ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // ASTC\r\n \r\n\t\t if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\r\n\t\t\t p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\r\n\t\t\t p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\r\n\t\t\t p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\r\n\t\t\t p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\r\n \r\n\t\t\t extension = extensions.get( 'WEBGL_compressed_texture_astc' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t if ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\r\n\t\t\t\t if ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // BPTC\r\n \r\n\t\t if ( p === RGBA_BPTC_Format ) {\r\n \r\n\t\t\t extension = extensions.get( 'EXT_texture_compression_bptc' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t if ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t if ( p === UnsignedInt248Type ) {\r\n \r\n\t\t\t if ( isWebGL2 ) return 34042;\r\n \r\n\t\t\t extension = extensions.get( 'WEBGL_depth_texture' );\r\n \r\n\t\t\t if ( extension !== null ) {\r\n \r\n\t\t\t\t return extension.UNSIGNED_INT_24_8_WEBGL;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return { convert: convert };\r\n \r\n }\r\n \r\n class ArrayCamera extends PerspectiveCamera {\r\n \r\n\t constructor( array = [] ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.cameras = array;\r\n \r\n\t }\r\n \r\n }\r\n \r\n ArrayCamera.prototype.isArrayCamera = true;\r\n \r\n class Group extends Object3D {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Group';\r\n \r\n\t }\r\n \r\n }\r\n \r\n Group.prototype.isGroup = true;\r\n \r\n const _moveEvent = { type: 'move' };\r\n \r\n class WebXRController {\r\n \r\n\t constructor() {\r\n \r\n\t\t this._targetRay = null;\r\n\t\t this._grip = null;\r\n\t\t this._hand = null;\r\n \r\n\t }\r\n \r\n\t getHandSpace() {\r\n \r\n\t\t if ( this._hand === null ) {\r\n \r\n\t\t\t this._hand = new Group();\r\n\t\t\t this._hand.matrixAutoUpdate = false;\r\n\t\t\t this._hand.visible = false;\r\n \r\n\t\t\t this._hand.joints = {};\r\n\t\t\t this._hand.inputState = { pinching: false };\r\n \r\n\t\t }\r\n \r\n\t\t return this._hand;\r\n \r\n\t }\r\n \r\n\t getTargetRaySpace() {\r\n \r\n\t\t if ( this._targetRay === null ) {\r\n \r\n\t\t\t this._targetRay = new Group();\r\n\t\t\t this._targetRay.matrixAutoUpdate = false;\r\n\t\t\t this._targetRay.visible = false;\r\n\t\t\t this._targetRay.hasLinearVelocity = false;\r\n\t\t\t this._targetRay.linearVelocity = new Vector3();\r\n\t\t\t this._targetRay.hasAngularVelocity = false;\r\n\t\t\t this._targetRay.angularVelocity = new Vector3();\r\n \r\n\t\t }\r\n \r\n\t\t return this._targetRay;\r\n \r\n\t }\r\n \r\n\t getGripSpace() {\r\n \r\n\t\t if ( this._grip === null ) {\r\n \r\n\t\t\t this._grip = new Group();\r\n\t\t\t this._grip.matrixAutoUpdate = false;\r\n\t\t\t this._grip.visible = false;\r\n\t\t\t this._grip.hasLinearVelocity = false;\r\n\t\t\t this._grip.linearVelocity = new Vector3();\r\n\t\t\t this._grip.hasAngularVelocity = false;\r\n\t\t\t this._grip.angularVelocity = new Vector3();\r\n \r\n\t\t }\r\n \r\n\t\t return this._grip;\r\n \r\n\t }\r\n \r\n\t dispatchEvent( event ) {\r\n \r\n\t\t if ( this._targetRay !== null ) {\r\n \r\n\t\t\t this._targetRay.dispatchEvent( event );\r\n \r\n\t\t }\r\n \r\n\t\t if ( this._grip !== null ) {\r\n \r\n\t\t\t this._grip.dispatchEvent( event );\r\n \r\n\t\t }\r\n \r\n\t\t if ( this._hand !== null ) {\r\n \r\n\t\t\t this._hand.dispatchEvent( event );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t disconnect( inputSource ) {\r\n \r\n\t\t this.dispatchEvent( { type: 'disconnected', data: inputSource } );\r\n \r\n\t\t if ( this._targetRay !== null ) {\r\n \r\n\t\t\t this._targetRay.visible = false;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this._grip !== null ) {\r\n \r\n\t\t\t this._grip.visible = false;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this._hand !== null ) {\r\n \r\n\t\t\t this._hand.visible = false;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t update( inputSource, frame, referenceSpace ) {\r\n \r\n\t\t let inputPose = null;\r\n\t\t let gripPose = null;\r\n\t\t let handPose = null;\r\n \r\n\t\t const targetRay = this._targetRay;\r\n\t\t const grip = this._grip;\r\n\t\t const hand = this._hand;\r\n \r\n\t\t if ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\r\n \r\n\t\t\t if ( targetRay !== null ) {\r\n \r\n\t\t\t\t inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\r\n \r\n\t\t\t\t if ( inputPose !== null ) {\r\n \r\n\t\t\t\t\t targetRay.matrix.fromArray( inputPose.transform.matrix );\r\n\t\t\t\t\t targetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\r\n \r\n\t\t\t\t\t if ( inputPose.linearVelocity ) {\r\n \r\n\t\t\t\t\t\t targetRay.hasLinearVelocity = true;\r\n\t\t\t\t\t\t targetRay.linearVelocity.copy( inputPose.linearVelocity );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t targetRay.hasLinearVelocity = false;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( inputPose.angularVelocity ) {\r\n \r\n\t\t\t\t\t\t targetRay.hasAngularVelocity = true;\r\n\t\t\t\t\t\t targetRay.angularVelocity.copy( inputPose.angularVelocity );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t targetRay.hasAngularVelocity = false;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t this.dispatchEvent( _moveEvent );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( hand && inputSource.hand ) {\r\n \r\n\t\t\t\t handPose = true;\r\n \r\n\t\t\t\t for ( const inputjoint of inputSource.hand.values() ) {\r\n \r\n\t\t\t\t\t // Update the joints groups with the XRJoint poses\r\n\t\t\t\t\t const jointPose = frame.getJointPose( inputjoint, referenceSpace );\r\n \r\n\t\t\t\t\t if ( hand.joints[ inputjoint.jointName ] === undefined ) {\r\n \r\n\t\t\t\t\t\t // The transform of this joint will be updated with the joint pose on each frame\r\n\t\t\t\t\t\t const joint = new Group();\r\n\t\t\t\t\t\t joint.matrixAutoUpdate = false;\r\n\t\t\t\t\t\t joint.visible = false;\r\n\t\t\t\t\t\t hand.joints[ inputjoint.jointName ] = joint;\r\n\t\t\t\t\t\t // ??\r\n\t\t\t\t\t\t hand.add( joint );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t const joint = hand.joints[ inputjoint.jointName ];\r\n \r\n\t\t\t\t\t if ( jointPose !== null ) {\r\n \r\n\t\t\t\t\t\t joint.matrix.fromArray( jointPose.transform.matrix );\r\n\t\t\t\t\t\t joint.matrix.decompose( joint.position, joint.rotation, joint.scale );\r\n\t\t\t\t\t\t joint.jointRadius = jointPose.radius;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t joint.visible = jointPose !== null;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // Custom events\r\n \r\n\t\t\t\t // Check pinchz\r\n\t\t\t\t const indexTip = hand.joints[ 'index-finger-tip' ];\r\n\t\t\t\t const thumbTip = hand.joints[ 'thumb-tip' ];\r\n\t\t\t\t const distance = indexTip.position.distanceTo( thumbTip.position );\r\n \r\n\t\t\t\t const distanceToPinch = 0.02;\r\n\t\t\t\t const threshold = 0.005;\r\n \r\n\t\t\t\t if ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\r\n \r\n\t\t\t\t\t hand.inputState.pinching = false;\r\n\t\t\t\t\t this.dispatchEvent( {\r\n\t\t\t\t\t\t type: 'pinchend',\r\n\t\t\t\t\t\t handedness: inputSource.handedness,\r\n\t\t\t\t\t\t target: this\r\n\t\t\t\t\t } );\r\n \r\n\t\t\t\t } else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\r\n \r\n\t\t\t\t\t hand.inputState.pinching = true;\r\n\t\t\t\t\t this.dispatchEvent( {\r\n\t\t\t\t\t\t type: 'pinchstart',\r\n\t\t\t\t\t\t handedness: inputSource.handedness,\r\n\t\t\t\t\t\t target: this\r\n\t\t\t\t\t } );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t if ( grip !== null && inputSource.gripSpace ) {\r\n \r\n\t\t\t\t\t gripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\r\n \r\n\t\t\t\t\t if ( gripPose !== null ) {\r\n \r\n\t\t\t\t\t\t grip.matrix.fromArray( gripPose.transform.matrix );\r\n\t\t\t\t\t\t grip.matrix.decompose( grip.position, grip.rotation, grip.scale );\r\n \r\n\t\t\t\t\t\t if ( gripPose.linearVelocity ) {\r\n \r\n\t\t\t\t\t\t\t grip.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\t grip.linearVelocity.copy( gripPose.linearVelocity );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t grip.hasLinearVelocity = false;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t if ( gripPose.angularVelocity ) {\r\n \r\n\t\t\t\t\t\t\t grip.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\t grip.angularVelocity.copy( gripPose.angularVelocity );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t grip.hasAngularVelocity = false;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( targetRay !== null ) {\r\n \r\n\t\t\t targetRay.visible = ( inputPose !== null );\r\n \r\n\t\t }\r\n \r\n\t\t if ( grip !== null ) {\r\n \r\n\t\t\t grip.visible = ( gripPose !== null );\r\n \r\n\t\t }\r\n \r\n\t\t if ( hand !== null ) {\r\n \r\n\t\t\t hand.visible = ( handPose !== null );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class DepthTexture extends Texture {\r\n \r\n\t constructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\r\n \r\n\t\t format = format !== undefined ? format : DepthFormat;\r\n \r\n\t\t if ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n \r\n\t\t\t throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\r\n \r\n\t\t }\r\n \r\n\t\t if ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\r\n\t\t if ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\r\n \r\n\t\t super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n \r\n\t\t this.image = { width: width, height: height };\r\n \r\n\t\t this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\t this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n \r\n\t\t this.flipY = false;\r\n\t\t this.generateMipmaps\t= false;\r\n \r\n\t }\r\n \r\n \r\n }\r\n \r\n DepthTexture.prototype.isDepthTexture = true;\r\n \r\n class WebXRManager extends EventDispatcher {\r\n \r\n\t constructor( renderer, gl ) {\r\n \r\n\t\t super();\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t let session = null;\r\n\t\t let framebufferScaleFactor = 1.0;\r\n \r\n\t\t let referenceSpace = null;\r\n\t\t let referenceSpaceType = 'local-floor';\r\n \r\n\t\t let pose = null;\r\n\t\t let glBinding = null;\r\n\t\t let glProjLayer = null;\r\n\t\t let glBaseLayer = null;\r\n\t\t let xrFrame = null;\r\n\t\t const attributes = gl.getContextAttributes();\r\n\t\t let initialRenderTarget = null;\r\n\t\t let newRenderTarget = null;\r\n \r\n\t\t const controllers = [];\r\n\t\t const inputSourcesMap = new Map();\r\n \r\n\t\t //\r\n \r\n\t\t const cameraL = new PerspectiveCamera();\r\n\t\t cameraL.layers.enable( 1 );\r\n\t\t cameraL.viewport = new Vector4();\r\n \r\n\t\t const cameraR = new PerspectiveCamera();\r\n\t\t cameraR.layers.enable( 2 );\r\n\t\t cameraR.viewport = new Vector4();\r\n \r\n\t\t const cameras = [ cameraL, cameraR ];\r\n \r\n\t\t const cameraVR = new ArrayCamera();\r\n\t\t cameraVR.layers.enable( 1 );\r\n\t\t cameraVR.layers.enable( 2 );\r\n \r\n\t\t let _currentDepthNear = null;\r\n\t\t let _currentDepthFar = null;\r\n \r\n\t\t //\r\n \r\n\t\t this.cameraAutoUpdate = true;\r\n\t\t this.enabled = false;\r\n \r\n\t\t this.isPresenting = false;\r\n \r\n\t\t this.getController = function ( index ) {\r\n \r\n\t\t\t let controller = controllers[ index ];\r\n \r\n\t\t\t if ( controller === undefined ) {\r\n \r\n\t\t\t\t controller = new WebXRController();\r\n\t\t\t\t controllers[ index ] = controller;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return controller.getTargetRaySpace();\r\n \r\n\t\t };\r\n \r\n\t\t this.getControllerGrip = function ( index ) {\r\n \r\n\t\t\t let controller = controllers[ index ];\r\n \r\n\t\t\t if ( controller === undefined ) {\r\n \r\n\t\t\t\t controller = new WebXRController();\r\n\t\t\t\t controllers[ index ] = controller;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return controller.getGripSpace();\r\n \r\n\t\t };\r\n \r\n\t\t this.getHand = function ( index ) {\r\n \r\n\t\t\t let controller = controllers[ index ];\r\n \r\n\t\t\t if ( controller === undefined ) {\r\n \r\n\t\t\t\t controller = new WebXRController();\r\n\t\t\t\t controllers[ index ] = controller;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return controller.getHandSpace();\r\n \r\n\t\t };\r\n \r\n\t\t //\r\n \r\n\t\t function onSessionEvent( event ) {\r\n \r\n\t\t\t const controller = inputSourcesMap.get( event.inputSource );\r\n \r\n\t\t\t if ( controller ) {\r\n \r\n\t\t\t\t controller.dispatchEvent( { type: event.type, data: event.inputSource } );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function onSessionEnd() {\r\n \r\n\t\t\t inputSourcesMap.forEach( function ( controller, inputSource ) {\r\n \r\n\t\t\t\t controller.disconnect( inputSource );\r\n \r\n\t\t\t } );\r\n \r\n\t\t\t inputSourcesMap.clear();\r\n \r\n\t\t\t _currentDepthNear = null;\r\n\t\t\t _currentDepthFar = null;\r\n \r\n\t\t\t // restore framebuffer/rendering state\r\n \r\n\t\t\t renderer.setRenderTarget( initialRenderTarget );\r\n \r\n\t\t\t glBaseLayer = null;\r\n\t\t\t glProjLayer = null;\r\n\t\t\t glBinding = null;\r\n\t\t\t session = null;\r\n\t\t\t newRenderTarget = null;\r\n \r\n\t\t\t //\r\n \r\n\t\t\t animation.stop();\r\n \r\n\t\t\t scope.isPresenting = false;\r\n \r\n\t\t\t scope.dispatchEvent( { type: 'sessionend' } );\r\n \r\n\t\t }\r\n \r\n\t\t this.setFramebufferScaleFactor = function ( value ) {\r\n \r\n\t\t\t framebufferScaleFactor = value;\r\n \r\n\t\t\t if ( scope.isPresenting === true ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t this.setReferenceSpaceType = function ( value ) {\r\n \r\n\t\t\t referenceSpaceType = value;\r\n \r\n\t\t\t if ( scope.isPresenting === true ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t this.getReferenceSpace = function () {\r\n \r\n\t\t\t return referenceSpace;\r\n \r\n\t\t };\r\n \r\n\t\t this.getBaseLayer = function () {\r\n \r\n\t\t\t return glProjLayer !== null ? glProjLayer : glBaseLayer;\r\n \r\n\t\t };\r\n \r\n\t\t this.getBinding = function () {\r\n \r\n\t\t\t return glBinding;\r\n \r\n\t\t };\r\n \r\n\t\t this.getFrame = function () {\r\n \r\n\t\t\t return xrFrame;\r\n \r\n\t\t };\r\n \r\n\t\t this.getSession = function () {\r\n \r\n\t\t\t return session;\r\n \r\n\t\t };\r\n \r\n\t\t this.setSession = async function ( value ) {\r\n \r\n\t\t\t session = value;\r\n \r\n\t\t\t if ( session !== null ) {\r\n \r\n\t\t\t\t initialRenderTarget = renderer.getRenderTarget();\r\n \r\n\t\t\t\t session.addEventListener( 'select', onSessionEvent );\r\n\t\t\t\t session.addEventListener( 'selectstart', onSessionEvent );\r\n\t\t\t\t session.addEventListener( 'selectend', onSessionEvent );\r\n\t\t\t\t session.addEventListener( 'squeeze', onSessionEvent );\r\n\t\t\t\t session.addEventListener( 'squeezestart', onSessionEvent );\r\n\t\t\t\t session.addEventListener( 'squeezeend', onSessionEvent );\r\n\t\t\t\t session.addEventListener( 'end', onSessionEnd );\r\n\t\t\t\t session.addEventListener( 'inputsourceschange', onInputSourcesChange );\r\n \r\n\t\t\t\t if ( attributes.xrCompatible !== true ) {\r\n \r\n\t\t\t\t\t await gl.makeXRCompatible();\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\r\n \r\n\t\t\t\t\t const layerInit = {\r\n\t\t\t\t\t\t antialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\r\n\t\t\t\t\t\t alpha: attributes.alpha,\r\n\t\t\t\t\t\t depth: attributes.depth,\r\n\t\t\t\t\t\t stencil: attributes.stencil,\r\n\t\t\t\t\t\t framebufferScaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t };\r\n \r\n\t\t\t\t\t glBaseLayer = new XRWebGLLayer( session, gl, layerInit );\r\n \r\n\t\t\t\t\t session.updateRenderState( { baseLayer: glBaseLayer } );\r\n \r\n\t\t\t\t\t newRenderTarget = new WebGLRenderTarget(\r\n\t\t\t\t\t\t glBaseLayer.framebufferWidth,\r\n\t\t\t\t\t\t glBaseLayer.framebufferHeight,\r\n\t\t\t\t\t\t {\r\n\t\t\t\t\t\t\t format: RGBAFormat,\r\n\t\t\t\t\t\t\t type: UnsignedByteType,\r\n\t\t\t\t\t\t\t encoding: renderer.outputEncoding\r\n\t\t\t\t\t\t }\r\n\t\t\t\t\t );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t let depthFormat = null;\r\n\t\t\t\t\t let depthType = null;\r\n\t\t\t\t\t let glDepthFormat = null;\r\n \r\n\t\t\t\t\t if ( attributes.depth ) {\r\n \r\n\t\t\t\t\t\t glDepthFormat = attributes.stencil ? 35056 : 33190;\r\n\t\t\t\t\t\t depthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\r\n\t\t\t\t\t\t depthType = attributes.stencil ? UnsignedInt248Type : UnsignedShortType;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t const projectionlayerInit = {\r\n\t\t\t\t\t\t colorFormat: ( renderer.outputEncoding === sRGBEncoding ) ? 35907 : 32856,\r\n\t\t\t\t\t\t depthFormat: glDepthFormat,\r\n\t\t\t\t\t\t scaleFactor: framebufferScaleFactor\r\n\t\t\t\t\t };\r\n \r\n\t\t\t\t\t glBinding = new XRWebGLBinding( session, gl );\r\n \r\n\t\t\t\t\t glProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\r\n \r\n\t\t\t\t\t session.updateRenderState( { layers: [ glProjLayer ] } );\r\n \r\n\t\t\t\t\t newRenderTarget = new WebGLRenderTarget(\r\n\t\t\t\t\t\t glProjLayer.textureWidth,\r\n\t\t\t\t\t\t glProjLayer.textureHeight,\r\n\t\t\t\t\t\t {\r\n\t\t\t\t\t\t\t format: RGBAFormat,\r\n\t\t\t\t\t\t\t type: UnsignedByteType,\r\n\t\t\t\t\t\t\t depthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\r\n\t\t\t\t\t\t\t stencilBuffer: attributes.stencil,\r\n\t\t\t\t\t\t\t encoding: renderer.outputEncoding,\r\n\t\t\t\t\t\t\t samples: attributes.antialias ? 4 : 0\r\n\t\t\t\t\t\t } );\r\n \r\n\t\t\t\t\t const renderTargetProperties = renderer.properties.get( newRenderTarget );\r\n\t\t\t\t\t renderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t newRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\r\n \r\n\t\t\t\t // Set foveation to maximum.\r\n\t\t\t\t this.setFoveation( 1.0 );\r\n \r\n\t\t\t\t referenceSpace = await session.requestReferenceSpace( referenceSpaceType );\r\n \r\n\t\t\t\t animation.setContext( session );\r\n\t\t\t\t animation.start();\r\n \r\n\t\t\t\t scope.isPresenting = true;\r\n \r\n\t\t\t\t scope.dispatchEvent( { type: 'sessionstart' } );\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t function onInputSourcesChange( event ) {\r\n \r\n\t\t\t const inputSources = session.inputSources;\r\n \r\n\t\t\t // Assign inputSources to available controllers\r\n \r\n\t\t\t for ( let i = 0; i < controllers.length; i ++ ) {\r\n \r\n\t\t\t\t inputSourcesMap.set( inputSources[ i ], controllers[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Notify disconnected\r\n \r\n\t\t\t for ( let i = 0; i < event.removed.length; i ++ ) {\r\n \r\n\t\t\t\t const inputSource = event.removed[ i ];\r\n\t\t\t\t const controller = inputSourcesMap.get( inputSource );\r\n \r\n\t\t\t\t if ( controller ) {\r\n \r\n\t\t\t\t\t controller.dispatchEvent( { type: 'disconnected', data: inputSource } );\r\n\t\t\t\t\t inputSourcesMap.delete( inputSource );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Notify connected\r\n \r\n\t\t\t for ( let i = 0; i < event.added.length; i ++ ) {\r\n \r\n\t\t\t\t const inputSource = event.added[ i ];\r\n\t\t\t\t const controller = inputSourcesMap.get( inputSource );\r\n \r\n\t\t\t\t if ( controller ) {\r\n \r\n\t\t\t\t\t controller.dispatchEvent( { type: 'connected', data: inputSource } );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t const cameraLPos = new Vector3();\r\n\t\t const cameraRPos = new Vector3();\r\n \r\n\t\t /**\r\n\t\t  * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n\t\t  * the cameras' projection and world matrices have already been set.\r\n\t\t  * And that near and far planes are identical for both cameras.\r\n\t\t  * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n\t\t  */\r\n\t\t function setProjectionFromUnion( camera, cameraL, cameraR ) {\r\n \r\n\t\t\t cameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\r\n\t\t\t cameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\r\n \r\n\t\t\t const ipd = cameraLPos.distanceTo( cameraRPos );\r\n \r\n\t\t\t const projL = cameraL.projectionMatrix.elements;\r\n\t\t\t const projR = cameraR.projectionMatrix.elements;\r\n \r\n\t\t\t // VR systems will have identical far and near planes, and\r\n\t\t\t // most likely identical top and bottom frustum extents.\r\n\t\t\t // Use the left camera for these values.\r\n\t\t\t const near = projL[ 14 ] / ( projL[ 10 ] - 1 );\r\n\t\t\t const far = projL[ 14 ] / ( projL[ 10 ] + 1 );\r\n\t\t\t const topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\r\n\t\t\t const bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\r\n \r\n\t\t\t const leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\r\n\t\t\t const rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\r\n\t\t\t const left = near * leftFov;\r\n\t\t\t const right = near * rightFov;\r\n \r\n\t\t\t // Calculate the new camera's position offset from the\r\n\t\t\t // left camera. xOffset should be roughly half `ipd`.\r\n\t\t\t const zOffset = ipd / ( - leftFov + rightFov );\r\n\t\t\t const xOffset = zOffset * - leftFov;\r\n \r\n\t\t\t // TODO: Better way to apply this offset?\r\n\t\t\t cameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\t camera.translateX( xOffset );\r\n\t\t\t camera.translateZ( zOffset );\r\n\t\t\t camera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\r\n\t\t\t camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\r\n \r\n\t\t\t // Find the union of the frustum values of the cameras and scale\r\n\t\t\t // the values so that the near plane's position does not change in world space,\r\n\t\t\t // although must now be relative to the new union camera.\r\n\t\t\t const near2 = near + zOffset;\r\n\t\t\t const far2 = far + zOffset;\r\n\t\t\t const left2 = left - xOffset;\r\n\t\t\t const right2 = right + ( ipd - xOffset );\r\n\t\t\t const top2 = topFov * far / far2 * near2;\r\n\t\t\t const bottom2 = bottomFov * far / far2 * near2;\r\n \r\n\t\t\t camera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\r\n \r\n\t\t }\r\n \r\n\t\t function updateCamera( camera, parent ) {\r\n \r\n\t\t\t if ( parent === null ) {\r\n \r\n\t\t\t\t camera.matrixWorld.copy( camera.matrix );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t camera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\r\n \r\n\t\t }\r\n \r\n\t\t this.updateCamera = function ( camera ) {\r\n \r\n\t\t\t if ( session === null ) return;\r\n \r\n\t\t\t cameraVR.near = cameraR.near = cameraL.near = camera.near;\r\n\t\t\t cameraVR.far = cameraR.far = cameraL.far = camera.far;\r\n \r\n\t\t\t if ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {\r\n \r\n\t\t\t\t // Note that the new renderState won't apply until the next frame. See #18320\r\n \r\n\t\t\t\t session.updateRenderState( {\r\n\t\t\t\t\t depthNear: cameraVR.near,\r\n\t\t\t\t\t depthFar: cameraVR.far\r\n\t\t\t\t } );\r\n \r\n\t\t\t\t _currentDepthNear = cameraVR.near;\r\n\t\t\t\t _currentDepthFar = cameraVR.far;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const parent = camera.parent;\r\n\t\t\t const cameras = cameraVR.cameras;\r\n \r\n\t\t\t updateCamera( cameraVR, parent );\r\n \r\n\t\t\t for ( let i = 0; i < cameras.length; i ++ ) {\r\n \r\n\t\t\t\t updateCamera( cameras[ i ], parent );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t cameraVR.matrixWorld.decompose( cameraVR.position, cameraVR.quaternion, cameraVR.scale );\r\n \r\n\t\t\t // update user camera and its children\r\n \r\n\t\t\t camera.position.copy( cameraVR.position );\r\n\t\t\t camera.quaternion.copy( cameraVR.quaternion );\r\n\t\t\t camera.scale.copy( cameraVR.scale );\r\n\t\t\t camera.matrix.copy( cameraVR.matrix );\r\n\t\t\t camera.matrixWorld.copy( cameraVR.matrixWorld );\r\n \r\n\t\t\t const children = camera.children;\r\n \r\n\t\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t children[ i ].updateMatrixWorld( true );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // update projection matrix for proper view frustum culling\r\n \r\n\t\t\t if ( cameras.length === 2 ) {\r\n \r\n\t\t\t\t setProjectionFromUnion( cameraVR, cameraL, cameraR );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // assume single camera setup (AR)\r\n \r\n\t\t\t\t cameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t this.getCamera = function () {\r\n \r\n\t\t\t return cameraVR;\r\n \r\n\t\t };\r\n \r\n\t\t this.getFoveation = function () {\r\n \r\n\t\t\t if ( glProjLayer !== null ) {\r\n \r\n\t\t\t\t return glProjLayer.fixedFoveation;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( glBaseLayer !== null ) {\r\n \r\n\t\t\t\t return glBaseLayer.fixedFoveation;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return undefined;\r\n \r\n\t\t };\r\n \r\n\t\t this.setFoveation = function ( foveation ) {\r\n \r\n\t\t\t // 0 = no foveation = full resolution\r\n\t\t\t // 1 = maximum foveation = the edges render at lower resolution\r\n \r\n\t\t\t if ( glProjLayer !== null ) {\r\n \r\n\t\t\t\t glProjLayer.fixedFoveation = foveation;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\r\n \r\n\t\t\t\t glBaseLayer.fixedFoveation = foveation;\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t // Animation Loop\r\n \r\n\t\t let onAnimationFrameCallback = null;\r\n \r\n\t\t function onAnimationFrame( time, frame ) {\r\n \r\n\t\t\t pose = frame.getViewerPose( referenceSpace );\r\n\t\t\t xrFrame = frame;\r\n \r\n\t\t\t if ( pose !== null ) {\r\n \r\n\t\t\t\t const views = pose.views;\r\n \r\n\t\t\t\t if ( glBaseLayer !== null ) {\r\n \r\n\t\t\t\t\t renderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\r\n\t\t\t\t\t renderer.setRenderTarget( newRenderTarget );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t let cameraVRNeedsUpdate = false;\r\n \r\n\t\t\t\t // check if it's necessary to rebuild cameraVR's camera list\r\n \r\n\t\t\t\t if ( views.length !== cameraVR.cameras.length ) {\r\n \r\n\t\t\t\t\t cameraVR.cameras.length = 0;\r\n\t\t\t\t\t cameraVRNeedsUpdate = true;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t for ( let i = 0; i < views.length; i ++ ) {\r\n \r\n\t\t\t\t\t const view = views[ i ];\r\n \r\n\t\t\t\t\t let viewport = null;\r\n \r\n\t\t\t\t\t if ( glBaseLayer !== null ) {\r\n \r\n\t\t\t\t\t\t viewport = glBaseLayer.getViewport( view );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t const glSubImage = glBinding.getViewSubImage( glProjLayer, view );\r\n\t\t\t\t\t\t viewport = glSubImage.viewport;\r\n \r\n\t\t\t\t\t\t // For side-by-side projection, we only produce a single texture for both eyes.\r\n\t\t\t\t\t\t if ( i === 0 ) {\r\n \r\n\t\t\t\t\t\t\t renderer.setRenderTargetTextures(\r\n\t\t\t\t\t\t\t\t newRenderTarget,\r\n\t\t\t\t\t\t\t\t glSubImage.colorTexture,\r\n\t\t\t\t\t\t\t\t glProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\r\n \r\n\t\t\t\t\t\t\t renderer.setRenderTarget( newRenderTarget );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t const camera = cameras[ i ];\r\n \r\n\t\t\t\t\t camera.matrix.fromArray( view.transform.matrix );\r\n\t\t\t\t\t camera.projectionMatrix.fromArray( view.projectionMatrix );\r\n\t\t\t\t\t camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\r\n \r\n\t\t\t\t\t if ( i === 0 ) {\r\n \r\n\t\t\t\t\t\t cameraVR.matrix.copy( camera.matrix );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( cameraVRNeedsUpdate === true ) {\r\n \r\n\t\t\t\t\t\t cameraVR.cameras.push( camera );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t //\r\n \r\n\t\t\t const inputSources = session.inputSources;\r\n \r\n\t\t\t for ( let i = 0; i < controllers.length; i ++ ) {\r\n \r\n\t\t\t\t const controller = controllers[ i ];\r\n\t\t\t\t const inputSource = inputSources[ i ];\r\n \r\n\t\t\t\t controller.update( inputSource, frame, referenceSpace );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\r\n \r\n\t\t\t xrFrame = null;\r\n \r\n\t\t }\r\n \r\n\t\t const animation = new WebGLAnimation();\r\n \r\n\t\t animation.setAnimationLoop( onAnimationFrame );\r\n \r\n\t\t this.setAnimationLoop = function ( callback ) {\r\n \r\n\t\t\t onAnimationFrameCallback = callback;\r\n \r\n\t\t };\r\n \r\n\t\t this.dispose = function () {};\r\n \r\n\t }\r\n \r\n }\r\n \r\n function WebGLMaterials( properties ) {\r\n \r\n\t function refreshFogUniforms( uniforms, fog ) {\r\n \r\n\t\t uniforms.fogColor.value.copy( fog.color );\r\n \r\n\t\t if ( fog.isFog ) {\r\n \r\n\t\t\t uniforms.fogNear.value = fog.near;\r\n\t\t\t uniforms.fogFar.value = fog.far;\r\n \r\n\t\t } else if ( fog.isFogExp2 ) {\r\n \r\n\t\t\t uniforms.fogDensity.value = fog.density;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\r\n \r\n\t\t if ( material.isMeshBasicMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n \r\n\t\t } else if ( material.isMeshLambertMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n\t\t\t refreshUniformsLambert( uniforms, material );\r\n \r\n\t\t } else if ( material.isMeshToonMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n\t\t\t refreshUniformsToon( uniforms, material );\r\n \r\n\t\t } else if ( material.isMeshPhongMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n\t\t\t refreshUniformsPhong( uniforms, material );\r\n \r\n\t\t } else if ( material.isMeshStandardMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n \r\n\t\t\t if ( material.isMeshPhysicalMaterial ) {\r\n \r\n\t\t\t\t refreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t refreshUniformsStandard( uniforms, material );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( material.isMeshMatcapMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n\t\t\t refreshUniformsMatcap( uniforms, material );\r\n \r\n\t\t } else if ( material.isMeshDepthMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n\t\t\t refreshUniformsDepth( uniforms, material );\r\n \r\n\t\t } else if ( material.isMeshDistanceMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n\t\t\t refreshUniformsDistance( uniforms, material );\r\n \r\n\t\t } else if ( material.isMeshNormalMaterial ) {\r\n \r\n\t\t\t refreshUniformsCommon( uniforms, material );\r\n\t\t\t refreshUniformsNormal( uniforms, material );\r\n \r\n\t\t } else if ( material.isLineBasicMaterial ) {\r\n \r\n\t\t\t refreshUniformsLine( uniforms, material );\r\n \r\n\t\t\t if ( material.isLineDashedMaterial ) {\r\n \r\n\t\t\t\t refreshUniformsDash( uniforms, material );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( material.isPointsMaterial ) {\r\n \r\n\t\t\t refreshUniformsPoints( uniforms, material, pixelRatio, height );\r\n \r\n\t\t } else if ( material.isSpriteMaterial ) {\r\n \r\n\t\t\t refreshUniformsSprites( uniforms, material );\r\n \r\n\t\t } else if ( material.isShadowMaterial ) {\r\n \r\n\t\t\t uniforms.color.value.copy( material.color );\r\n\t\t\t uniforms.opacity.value = material.opacity;\r\n \r\n\t\t } else if ( material.isShaderMaterial ) {\r\n \r\n\t\t\t material.uniformsNeedUpdate = false; // #15581\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsCommon( uniforms, material ) {\r\n \r\n\t\t uniforms.opacity.value = material.opacity;\r\n \r\n\t\t if ( material.color ) {\r\n \r\n\t\t\t uniforms.diffuse.value.copy( material.color );\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.emissive ) {\r\n \r\n\t\t\t uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.map ) {\r\n \r\n\t\t\t uniforms.map.value = material.map;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.alphaMap ) {\r\n \r\n\t\t\t uniforms.alphaMap.value = material.alphaMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.specularMap ) {\r\n \r\n\t\t\t uniforms.specularMap.value = material.specularMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.alphaTest > 0 ) {\r\n \r\n\t\t\t uniforms.alphaTest.value = material.alphaTest;\r\n \r\n\t\t }\r\n \r\n\t\t const envMap = properties.get( material ).envMap;\r\n \r\n\t\t if ( envMap ) {\r\n \r\n\t\t\t uniforms.envMap.value = envMap;\r\n \r\n\t\t\t uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\r\n \r\n\t\t\t uniforms.reflectivity.value = material.reflectivity;\r\n\t\t\t uniforms.ior.value = material.ior;\r\n\t\t\t uniforms.refractionRatio.value = material.refractionRatio;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.lightMap ) {\r\n \r\n\t\t\t uniforms.lightMap.value = material.lightMap;\r\n\t\t\t uniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.aoMap ) {\r\n \r\n\t\t\t uniforms.aoMap.value = material.aoMap;\r\n\t\t\t uniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n \r\n\t\t }\r\n \r\n\t\t // uv repeat and offset setting priorities\r\n\t\t // 1. color map\r\n\t\t // 2. specular map\r\n\t\t // 3. displacementMap map\r\n\t\t // 4. normal map\r\n\t\t // 5. bump map\r\n\t\t // 6. roughnessMap map\r\n\t\t // 7. metalnessMap map\r\n\t\t // 8. alphaMap map\r\n\t\t // 9. emissiveMap map\r\n\t\t // 10. clearcoat map\r\n\t\t // 11. clearcoat normal map\r\n\t\t // 12. clearcoat roughnessMap map\r\n\t\t // 13. specular intensity map\r\n\t\t // 14. specular tint map\r\n\t\t // 15. transmission map\r\n\t\t // 16. thickness map\r\n \r\n\t\t let uvScaleMap;\r\n \r\n\t\t if ( material.map ) {\r\n \r\n\t\t\t uvScaleMap = material.map;\r\n \r\n\t\t } else if ( material.specularMap ) {\r\n \r\n\t\t\t uvScaleMap = material.specularMap;\r\n \r\n\t\t } else if ( material.displacementMap ) {\r\n \r\n\t\t\t uvScaleMap = material.displacementMap;\r\n \r\n\t\t } else if ( material.normalMap ) {\r\n \r\n\t\t\t uvScaleMap = material.normalMap;\r\n \r\n\t\t } else if ( material.bumpMap ) {\r\n \r\n\t\t\t uvScaleMap = material.bumpMap;\r\n \r\n\t\t } else if ( material.roughnessMap ) {\r\n \r\n\t\t\t uvScaleMap = material.roughnessMap;\r\n \r\n\t\t } else if ( material.metalnessMap ) {\r\n \r\n\t\t\t uvScaleMap = material.metalnessMap;\r\n \r\n\t\t } else if ( material.alphaMap ) {\r\n \r\n\t\t\t uvScaleMap = material.alphaMap;\r\n \r\n\t\t } else if ( material.emissiveMap ) {\r\n \r\n\t\t\t uvScaleMap = material.emissiveMap;\r\n \r\n\t\t } else if ( material.clearcoatMap ) {\r\n \r\n\t\t\t uvScaleMap = material.clearcoatMap;\r\n \r\n\t\t } else if ( material.clearcoatNormalMap ) {\r\n \r\n\t\t\t uvScaleMap = material.clearcoatNormalMap;\r\n \r\n\t\t } else if ( material.clearcoatRoughnessMap ) {\r\n \r\n\t\t\t uvScaleMap = material.clearcoatRoughnessMap;\r\n \r\n\t\t } else if ( material.specularIntensityMap ) {\r\n \r\n\t\t\t uvScaleMap = material.specularIntensityMap;\r\n \r\n\t\t } else if ( material.specularColorMap ) {\r\n \r\n\t\t\t uvScaleMap = material.specularColorMap;\r\n \r\n\t\t } else if ( material.transmissionMap ) {\r\n \r\n\t\t\t uvScaleMap = material.transmissionMap;\r\n \r\n\t\t } else if ( material.thicknessMap ) {\r\n \r\n\t\t\t uvScaleMap = material.thicknessMap;\r\n \r\n\t\t } else if ( material.sheenColorMap ) {\r\n \r\n\t\t\t uvScaleMap = material.sheenColorMap;\r\n \r\n\t\t } else if ( material.sheenRoughnessMap ) {\r\n \r\n\t\t\t uvScaleMap = material.sheenRoughnessMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( uvScaleMap !== undefined ) {\r\n \r\n\t\t\t // backwards compatibility\r\n\t\t\t if ( uvScaleMap.isWebGLRenderTarget ) {\r\n \r\n\t\t\t\t uvScaleMap = uvScaleMap.texture;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( uvScaleMap.matrixAutoUpdate === true ) {\r\n \r\n\t\t\t\t uvScaleMap.updateMatrix();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t uniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n \r\n\t\t }\r\n \r\n\t\t // uv repeat and offset setting priorities for uv2\r\n\t\t // 1. ao map\r\n\t\t // 2. light map\r\n \r\n\t\t let uv2ScaleMap;\r\n \r\n\t\t if ( material.aoMap ) {\r\n \r\n\t\t\t uv2ScaleMap = material.aoMap;\r\n \r\n\t\t } else if ( material.lightMap ) {\r\n \r\n\t\t\t uv2ScaleMap = material.lightMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( uv2ScaleMap !== undefined ) {\r\n \r\n\t\t\t // backwards compatibility\r\n\t\t\t if ( uv2ScaleMap.isWebGLRenderTarget ) {\r\n \r\n\t\t\t\t uv2ScaleMap = uv2ScaleMap.texture;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( uv2ScaleMap.matrixAutoUpdate === true ) {\r\n \r\n\t\t\t\t uv2ScaleMap.updateMatrix();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t uniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsLine( uniforms, material ) {\r\n \r\n\t\t uniforms.diffuse.value.copy( material.color );\r\n\t\t uniforms.opacity.value = material.opacity;\r\n \r\n\t }\r\n \r\n\t function refreshUniformsDash( uniforms, material ) {\r\n \r\n\t\t uniforms.dashSize.value = material.dashSize;\r\n\t\t uniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t uniforms.scale.value = material.scale;\r\n \r\n\t }\r\n \r\n\t function refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\r\n \r\n\t\t uniforms.diffuse.value.copy( material.color );\r\n\t\t uniforms.opacity.value = material.opacity;\r\n\t\t uniforms.size.value = material.size * pixelRatio;\r\n\t\t uniforms.scale.value = height * 0.5;\r\n \r\n\t\t if ( material.map ) {\r\n \r\n\t\t\t uniforms.map.value = material.map;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.alphaMap ) {\r\n \r\n\t\t\t uniforms.alphaMap.value = material.alphaMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.alphaTest > 0 ) {\r\n \r\n\t\t\t uniforms.alphaTest.value = material.alphaTest;\r\n \r\n\t\t }\r\n \r\n\t\t // uv repeat and offset setting priorities\r\n\t\t // 1. color map\r\n\t\t // 2. alpha map\r\n \r\n\t\t let uvScaleMap;\r\n \r\n\t\t if ( material.map ) {\r\n \r\n\t\t\t uvScaleMap = material.map;\r\n \r\n\t\t } else if ( material.alphaMap ) {\r\n \r\n\t\t\t uvScaleMap = material.alphaMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( uvScaleMap !== undefined ) {\r\n \r\n\t\t\t if ( uvScaleMap.matrixAutoUpdate === true ) {\r\n \r\n\t\t\t\t uvScaleMap.updateMatrix();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t uniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsSprites( uniforms, material ) {\r\n \r\n\t\t uniforms.diffuse.value.copy( material.color );\r\n\t\t uniforms.opacity.value = material.opacity;\r\n\t\t uniforms.rotation.value = material.rotation;\r\n \r\n\t\t if ( material.map ) {\r\n \r\n\t\t\t uniforms.map.value = material.map;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.alphaMap ) {\r\n \r\n\t\t\t uniforms.alphaMap.value = material.alphaMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.alphaTest > 0 ) {\r\n \r\n\t\t\t uniforms.alphaTest.value = material.alphaTest;\r\n \r\n\t\t }\r\n \r\n\t\t // uv repeat and offset setting priorities\r\n\t\t // 1. color map\r\n\t\t // 2. alpha map\r\n \r\n\t\t let uvScaleMap;\r\n \r\n\t\t if ( material.map ) {\r\n \r\n\t\t\t uvScaleMap = material.map;\r\n \r\n\t\t } else if ( material.alphaMap ) {\r\n \r\n\t\t\t uvScaleMap = material.alphaMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( uvScaleMap !== undefined ) {\r\n \r\n\t\t\t if ( uvScaleMap.matrixAutoUpdate === true ) {\r\n \r\n\t\t\t\t uvScaleMap.updateMatrix();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t uniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsLambert( uniforms, material ) {\r\n \r\n\t\t if ( material.emissiveMap ) {\r\n \r\n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsPhong( uniforms, material ) {\r\n \r\n\t\t uniforms.specular.value.copy( material.specular );\r\n\t\t uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n \r\n\t\t if ( material.emissiveMap ) {\r\n \r\n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.bumpMap ) {\r\n \r\n\t\t\t uniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.normalMap ) {\r\n \r\n\t\t\t uniforms.normalMap.value = material.normalMap;\r\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.displacementMap ) {\r\n \r\n\t\t\t uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsToon( uniforms, material ) {\r\n \r\n\t\t if ( material.gradientMap ) {\r\n \r\n\t\t\t uniforms.gradientMap.value = material.gradientMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.emissiveMap ) {\r\n \r\n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.bumpMap ) {\r\n \r\n\t\t\t uniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.normalMap ) {\r\n \r\n\t\t\t uniforms.normalMap.value = material.normalMap;\r\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.displacementMap ) {\r\n \r\n\t\t\t uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsStandard( uniforms, material ) {\r\n \r\n\t\t uniforms.roughness.value = material.roughness;\r\n\t\t uniforms.metalness.value = material.metalness;\r\n \r\n\t\t if ( material.roughnessMap ) {\r\n \r\n\t\t\t uniforms.roughnessMap.value = material.roughnessMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.metalnessMap ) {\r\n \r\n\t\t\t uniforms.metalnessMap.value = material.metalnessMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.emissiveMap ) {\r\n \r\n\t\t\t uniforms.emissiveMap.value = material.emissiveMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.bumpMap ) {\r\n \r\n\t\t\t uniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.normalMap ) {\r\n \r\n\t\t\t uniforms.normalMap.value = material.normalMap;\r\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.displacementMap ) {\r\n \r\n\t\t\t uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t\t const envMap = properties.get( material ).envMap;\r\n \r\n\t\t if ( envMap ) {\r\n \r\n\t\t\t //uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\t uniforms.envMapIntensity.value = material.envMapIntensity;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\r\n \r\n\t\t refreshUniformsStandard( uniforms, material );\r\n \r\n\t\t uniforms.ior.value = material.ior; // also part of uniforms common\r\n \r\n\t\t if ( material.sheen > 0 ) {\r\n \r\n\t\t\t uniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\r\n \r\n\t\t\t uniforms.sheenRoughness.value = material.sheenRoughness;\r\n \r\n\t\t\t if ( material.sheenColorMap ) {\r\n \r\n\t\t\t\t uniforms.sheenColorMap.value = material.sheenColorMap;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( material.sheenRoughnessMap ) {\r\n \r\n\t\t\t\t uniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.clearcoat > 0 ) {\r\n \r\n\t\t\t uniforms.clearcoat.value = material.clearcoat;\r\n\t\t\t uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\r\n \r\n\t\t\t if ( material.clearcoatMap ) {\r\n \r\n\t\t\t\t uniforms.clearcoatMap.value = material.clearcoatMap;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( material.clearcoatRoughnessMap ) {\r\n \r\n\t\t\t\t uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( material.clearcoatNormalMap ) {\r\n \r\n\t\t\t\t uniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\r\n\t\t\t\t uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\r\n \r\n\t\t\t\t if ( material.side === BackSide ) {\r\n \r\n\t\t\t\t\t uniforms.clearcoatNormalScale.value.negate();\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.transmission > 0 ) {\r\n \r\n\t\t\t uniforms.transmission.value = material.transmission;\r\n\t\t\t uniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\r\n\t\t\t uniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\r\n \r\n\t\t\t if ( material.transmissionMap ) {\r\n \r\n\t\t\t\t uniforms.transmissionMap.value = material.transmissionMap;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t uniforms.thickness.value = material.thickness;\r\n \r\n\t\t\t if ( material.thicknessMap ) {\r\n \r\n\t\t\t\t uniforms.thicknessMap.value = material.thicknessMap;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t uniforms.attenuationDistance.value = material.attenuationDistance;\r\n\t\t\t uniforms.attenuationColor.value.copy( material.attenuationColor );\r\n \r\n\t\t }\r\n \r\n\t\t uniforms.specularIntensity.value = material.specularIntensity;\r\n\t\t uniforms.specularColor.value.copy( material.specularColor );\r\n \r\n\t\t if ( material.specularIntensityMap ) {\r\n \r\n\t\t\t uniforms.specularIntensityMap.value = material.specularIntensityMap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.specularColorMap ) {\r\n \r\n\t\t\t uniforms.specularColorMap.value = material.specularColorMap;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsMatcap( uniforms, material ) {\r\n \r\n\t\t if ( material.matcap ) {\r\n \r\n\t\t\t uniforms.matcap.value = material.matcap;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.bumpMap ) {\r\n \r\n\t\t\t uniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.normalMap ) {\r\n \r\n\t\t\t uniforms.normalMap.value = material.normalMap;\r\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.displacementMap ) {\r\n \r\n\t\t\t uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsDepth( uniforms, material ) {\r\n \r\n\t\t if ( material.displacementMap ) {\r\n \r\n\t\t\t uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function refreshUniformsDistance( uniforms, material ) {\r\n \r\n\t\t if ( material.displacementMap ) {\r\n \r\n\t\t\t uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t\t uniforms.referencePosition.value.copy( material.referencePosition );\r\n\t\t uniforms.nearDistance.value = material.nearDistance;\r\n\t\t uniforms.farDistance.value = material.farDistance;\r\n \r\n\t }\r\n \r\n\t function refreshUniformsNormal( uniforms, material ) {\r\n \r\n\t\t if ( material.bumpMap ) {\r\n \r\n\t\t\t uniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t uniforms.bumpScale.value = material.bumpScale;\r\n\t\t\t if ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.normalMap ) {\r\n \r\n\t\t\t uniforms.normalMap.value = material.normalMap;\r\n\t\t\t uniforms.normalScale.value.copy( material.normalScale );\r\n\t\t\t if ( material.side === BackSide ) uniforms.normalScale.value.negate();\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.displacementMap ) {\r\n \r\n\t\t\t uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t uniforms.displacementBias.value = material.displacementBias;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t return {\r\n\t\t refreshFogUniforms: refreshFogUniforms,\r\n\t\t refreshMaterialUniforms: refreshMaterialUniforms\r\n\t };\r\n \r\n }\r\n \r\n function createCanvasElement() {\r\n \r\n\t const canvas = createElementNS( 'canvas' );\r\n\t canvas.style.display = 'block';\r\n\t return canvas;\r\n \r\n }\r\n \r\n function WebGLRenderer( parameters = {} ) {\r\n \r\n\t const _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\r\n\t\t _context = parameters.context !== undefined ? parameters.context : null,\r\n \r\n\t\t _depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\t _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\r\n\t\t _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\r\n \r\n\t let _alpha;\r\n \r\n\t if ( parameters.context !== undefined ) {\r\n \r\n\t\t _alpha = _context.getContextAttributes().alpha;\r\n \r\n\t } else {\r\n \r\n\t\t _alpha = parameters.alpha !== undefined ? parameters.alpha : false;\r\n \r\n\t }\r\n \r\n\t let currentRenderList = null;\r\n\t let currentRenderState = null;\r\n \r\n\t // render() can be called from within a callback triggered by another render.\r\n\t // We track this so that the nested render call gets its list and state isolated from the parent render call.\r\n \r\n\t const renderListStack = [];\r\n\t const renderStateStack = [];\r\n \r\n\t // public properties\r\n \r\n\t this.domElement = _canvas;\r\n \r\n\t // Debug configuration container\r\n\t this.debug = {\r\n \r\n\t\t /**\r\n\t\t  * Enables error checking and reporting when shader programs are being compiled\r\n\t\t  * @type {boolean}\r\n\t\t  */\r\n\t\t checkShaderErrors: true\r\n\t };\r\n \r\n\t // clearing\r\n \r\n\t this.autoClear = true;\r\n\t this.autoClearColor = true;\r\n\t this.autoClearDepth = true;\r\n\t this.autoClearStencil = true;\r\n \r\n\t // scene graph\r\n \r\n\t this.sortObjects = true;\r\n \r\n\t // user-defined clipping\r\n \r\n\t this.clippingPlanes = [];\r\n\t this.localClippingEnabled = false;\r\n \r\n\t // physically based shading\r\n \r\n\t this.outputEncoding = LinearEncoding;\r\n \r\n\t // physical lights\r\n \r\n\t this.physicallyCorrectLights = false;\r\n \r\n\t // tone mapping\r\n \r\n\t this.toneMapping = NoToneMapping;\r\n\t this.toneMappingExposure = 1.0;\r\n \r\n\t // internal properties\r\n \r\n\t const _this = this;\r\n \r\n\t let _isContextLost = false;\r\n \r\n\t // internal state cache\r\n \r\n\t let _currentActiveCubeFace = 0;\r\n\t let _currentActiveMipmapLevel = 0;\r\n\t let _currentRenderTarget = null;\r\n\t let _currentMaterialId = - 1;\r\n \r\n\t let _currentCamera = null;\r\n \r\n\t const _currentViewport = new Vector4();\r\n\t const _currentScissor = new Vector4();\r\n\t let _currentScissorTest = null;\r\n \r\n\t //\r\n \r\n\t let _width = _canvas.width;\r\n\t let _height = _canvas.height;\r\n \r\n\t let _pixelRatio = 1;\r\n\t let _opaqueSort = null;\r\n\t let _transparentSort = null;\r\n \r\n\t const _viewport = new Vector4( 0, 0, _width, _height );\r\n\t const _scissor = new Vector4( 0, 0, _width, _height );\r\n\t let _scissorTest = false;\r\n \r\n\t // frustum\r\n \r\n\t const _frustum = new Frustum();\r\n \r\n\t // clipping\r\n \r\n\t let _clippingEnabled = false;\r\n\t let _localClippingEnabled = false;\r\n \r\n\t // transmission\r\n \r\n\t let _transmissionRenderTarget = null;\r\n \r\n\t // camera matrices cache\r\n \r\n\t const _projScreenMatrix = new Matrix4();\r\n \r\n\t const _vector2 = new Vector2();\r\n\t const _vector3 = new Vector3();\r\n \r\n\t const _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\r\n \r\n\t function getTargetPixelRatio() {\r\n \r\n\t\t return _currentRenderTarget === null ? _pixelRatio : 1;\r\n \r\n\t }\r\n \r\n\t // initialize\r\n \r\n\t let _gl = _context;\r\n \r\n\t function getContext( contextNames, contextAttributes ) {\r\n \r\n\t\t for ( let i = 0; i < contextNames.length; i ++ ) {\r\n \r\n\t\t\t const contextName = contextNames[ i ];\r\n\t\t\t const context = _canvas.getContext( contextName, contextAttributes );\r\n\t\t\t if ( context !== null ) return context;\r\n \r\n\t\t }\r\n \r\n\t\t return null;\r\n \r\n\t }\r\n \r\n\t try {\r\n \r\n\t\t const contextAttributes = {\r\n\t\t\t alpha: true,\r\n\t\t\t depth: _depth,\r\n\t\t\t stencil: _stencil,\r\n\t\t\t antialias: _antialias,\r\n\t\t\t premultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t preserveDrawingBuffer: _preserveDrawingBuffer,\r\n\t\t\t powerPreference: _powerPreference,\r\n\t\t\t failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\r\n\t\t };\r\n \r\n\t\t // OffscreenCanvas does not have setAttribute, see #22811\r\n\t\t if ( 'setAttribute' in _canvas ) _canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\r\n \r\n\t\t // event listeners must be registered before WebGL context is created, see #12753\r\n\t\t _canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t _canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\r\n \r\n\t\t if ( _gl === null ) {\r\n \r\n\t\t\t const contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\r\n \r\n\t\t\t if ( _this.isWebGL1Renderer === true ) {\r\n \r\n\t\t\t\t contextNames.shift();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _gl = getContext( contextNames, contextAttributes );\r\n \r\n\t\t\t if ( _gl === null ) {\r\n \r\n\t\t\t\t if ( getContext( contextNames ) ) {\r\n \r\n\t\t\t\t\t throw new Error( 'Error creating WebGL context with your selected attributes.' );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t throw new Error( 'Error creating WebGL context.' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n \r\n\t\t if ( _gl.getShaderPrecisionFormat === undefined ) {\r\n \r\n\t\t\t _gl.getShaderPrecisionFormat = function () {\r\n \r\n\t\t\t\t return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n \r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t } catch ( error ) {\r\n \r\n\t\t console.error( 'THREE.WebGLRenderer: ' + error.message );\r\n\t\t throw error;\r\n \r\n\t }\r\n \r\n\t let extensions, capabilities, state, info;\r\n\t let properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\r\n\t let programCache, materials, renderLists, renderStates, clipping, shadowMap;\r\n \r\n\t let background, morphtargets, bufferRenderer, indexedBufferRenderer;\r\n \r\n\t let utils, bindingStates;\r\n \r\n\t function initGLContext() {\r\n \r\n\t\t extensions = new WebGLExtensions( _gl );\r\n \r\n\t\t capabilities = new WebGLCapabilities( _gl, extensions, parameters );\r\n \r\n\t\t extensions.init( capabilities );\r\n \r\n\t\t utils = new WebGLUtils( _gl, extensions, capabilities );\r\n \r\n\t\t state = new WebGLState( _gl, extensions, capabilities );\r\n \r\n\t\t info = new WebGLInfo( _gl );\r\n\t\t properties = new WebGLProperties();\r\n\t\t textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\r\n\t\t cubemaps = new WebGLCubeMaps( _this );\r\n\t\t cubeuvmaps = new WebGLCubeUVMaps( _this );\r\n\t\t attributes = new WebGLAttributes( _gl, capabilities );\r\n\t\t bindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\r\n\t\t geometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\r\n\t\t objects = new WebGLObjects( _gl, geometries, attributes, info );\r\n\t\t morphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\r\n\t\t clipping = new WebGLClipping( properties );\r\n\t\t programCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\r\n\t\t materials = new WebGLMaterials( properties );\r\n\t\t renderLists = new WebGLRenderLists();\r\n\t\t renderStates = new WebGLRenderStates( extensions, capabilities );\r\n\t\t background = new WebGLBackground( _this, cubemaps, state, objects, _alpha, _premultipliedAlpha );\r\n\t\t shadowMap = new WebGLShadowMap( _this, objects, capabilities );\r\n \r\n\t\t bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\r\n\t\t indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\r\n \r\n\t\t info.programs = programCache.programs;\r\n \r\n\t\t _this.capabilities = capabilities;\r\n\t\t _this.extensions = extensions;\r\n\t\t _this.properties = properties;\r\n\t\t _this.renderLists = renderLists;\r\n\t\t _this.shadowMap = shadowMap;\r\n\t\t _this.state = state;\r\n\t\t _this.info = info;\r\n \r\n\t }\r\n \r\n\t initGLContext();\r\n \r\n\t // xr\r\n \r\n\t const xr = new WebXRManager( _this, _gl );\r\n \r\n\t this.xr = xr;\r\n \r\n\t // API\r\n \r\n\t this.getContext = function () {\r\n \r\n\t\t return _gl;\r\n \r\n\t };\r\n \r\n\t this.getContextAttributes = function () {\r\n \r\n\t\t return _gl.getContextAttributes();\r\n \r\n\t };\r\n \r\n\t this.forceContextLoss = function () {\r\n \r\n\t\t const extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t if ( extension ) extension.loseContext();\r\n \r\n\t };\r\n \r\n\t this.forceContextRestore = function () {\r\n \r\n\t\t const extension = extensions.get( 'WEBGL_lose_context' );\r\n\t\t if ( extension ) extension.restoreContext();\r\n \r\n\t };\r\n \r\n\t this.getPixelRatio = function () {\r\n \r\n\t\t return _pixelRatio;\r\n \r\n\t };\r\n \r\n\t this.setPixelRatio = function ( value ) {\r\n \r\n\t\t if ( value === undefined ) return;\r\n \r\n\t\t _pixelRatio = value;\r\n \r\n\t\t this.setSize( _width, _height, false );\r\n \r\n\t };\r\n \r\n\t this.getSize = function ( target ) {\r\n \r\n\t\t return target.set( _width, _height );\r\n \r\n\t };\r\n \r\n\t this.setSize = function ( width, height, updateStyle ) {\r\n \r\n\t\t if ( xr.isPresenting ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t _width = width;\r\n\t\t _height = height;\r\n \r\n\t\t _canvas.width = Math.floor( width * _pixelRatio );\r\n\t\t _canvas.height = Math.floor( height * _pixelRatio );\r\n \r\n\t\t if ( updateStyle !== false ) {\r\n \r\n\t\t\t _canvas.style.width = width + 'px';\r\n\t\t\t _canvas.style.height = height + 'px';\r\n \r\n\t\t }\r\n \r\n\t\t this.setViewport( 0, 0, width, height );\r\n \r\n\t };\r\n \r\n\t this.getDrawingBufferSize = function ( target ) {\r\n \r\n\t\t return target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\r\n \r\n\t };\r\n \r\n\t this.setDrawingBufferSize = function ( width, height, pixelRatio ) {\r\n \r\n\t\t _width = width;\r\n\t\t _height = height;\r\n \r\n\t\t _pixelRatio = pixelRatio;\r\n \r\n\t\t _canvas.width = Math.floor( width * pixelRatio );\r\n\t\t _canvas.height = Math.floor( height * pixelRatio );\r\n \r\n\t\t this.setViewport( 0, 0, width, height );\r\n \r\n\t };\r\n \r\n\t this.getCurrentViewport = function ( target ) {\r\n \r\n\t\t return target.copy( _currentViewport );\r\n \r\n\t };\r\n \r\n\t this.getViewport = function ( target ) {\r\n \r\n\t\t return target.copy( _viewport );\r\n \r\n\t };\r\n \r\n\t this.setViewport = function ( x, y, width, height ) {\r\n \r\n\t\t if ( x.isVector4 ) {\r\n \r\n\t\t\t _viewport.set( x.x, x.y, x.z, x.w );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _viewport.set( x, y, width, height );\r\n \r\n\t\t }\r\n \r\n\t\t state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\r\n \r\n\t };\r\n \r\n\t this.getScissor = function ( target ) {\r\n \r\n\t\t return target.copy( _scissor );\r\n \r\n\t };\r\n \r\n\t this.setScissor = function ( x, y, width, height ) {\r\n \r\n\t\t if ( x.isVector4 ) {\r\n \r\n\t\t\t _scissor.set( x.x, x.y, x.z, x.w );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _scissor.set( x, y, width, height );\r\n \r\n\t\t }\r\n \r\n\t\t state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\r\n \r\n\t };\r\n \r\n\t this.getScissorTest = function () {\r\n \r\n\t\t return _scissorTest;\r\n \r\n\t };\r\n \r\n\t this.setScissorTest = function ( boolean ) {\r\n \r\n\t\t state.setScissorTest( _scissorTest = boolean );\r\n \r\n\t };\r\n \r\n\t this.setOpaqueSort = function ( method ) {\r\n \r\n\t\t _opaqueSort = method;\r\n \r\n\t };\r\n \r\n\t this.setTransparentSort = function ( method ) {\r\n \r\n\t\t _transparentSort = method;\r\n \r\n\t };\r\n \r\n\t // Clearing\r\n \r\n\t this.getClearColor = function ( target ) {\r\n \r\n\t\t return target.copy( background.getClearColor() );\r\n \r\n\t };\r\n \r\n\t this.setClearColor = function () {\r\n \r\n\t\t background.setClearColor.apply( background, arguments );\r\n \r\n\t };\r\n \r\n\t this.getClearAlpha = function () {\r\n \r\n\t\t return background.getClearAlpha();\r\n \r\n\t };\r\n \r\n\t this.setClearAlpha = function () {\r\n \r\n\t\t background.setClearAlpha.apply( background, arguments );\r\n \r\n\t };\r\n \r\n\t this.clear = function ( color = true, depth = true, stencil = true ) {\r\n \r\n\t\t let bits = 0;\r\n \r\n\t\t if ( color ) bits |= 16384;\r\n\t\t if ( depth ) bits |= 256;\r\n\t\t if ( stencil ) bits |= 1024;\r\n \r\n\t\t _gl.clear( bits );\r\n \r\n\t };\r\n \r\n\t this.clearColor = function () {\r\n \r\n\t\t this.clear( true, false, false );\r\n \r\n\t };\r\n \r\n\t this.clearDepth = function () {\r\n \r\n\t\t this.clear( false, true, false );\r\n \r\n\t };\r\n \r\n\t this.clearStencil = function () {\r\n \r\n\t\t this.clear( false, false, true );\r\n \r\n\t };\r\n \r\n\t //\r\n \r\n\t this.dispose = function () {\r\n \r\n\t\t _canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\t _canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\r\n \r\n\t\t renderLists.dispose();\r\n\t\t renderStates.dispose();\r\n\t\t properties.dispose();\r\n\t\t cubemaps.dispose();\r\n\t\t cubeuvmaps.dispose();\r\n\t\t objects.dispose();\r\n\t\t bindingStates.dispose();\r\n\t\t programCache.dispose();\r\n \r\n\t\t xr.dispose();\r\n \r\n\t\t xr.removeEventListener( 'sessionstart', onXRSessionStart );\r\n\t\t xr.removeEventListener( 'sessionend', onXRSessionEnd );\r\n \r\n\t\t if ( _transmissionRenderTarget ) {\r\n \r\n\t\t\t _transmissionRenderTarget.dispose();\r\n\t\t\t _transmissionRenderTarget = null;\r\n \r\n\t\t }\r\n \r\n\t\t animation.stop();\r\n \r\n\t };\r\n \r\n\t // Events\r\n \r\n\t function onContextLost( event ) {\r\n \r\n\t\t event.preventDefault();\r\n \r\n\t\t console.log( 'THREE.WebGLRenderer: Context Lost.' );\r\n \r\n\t\t _isContextLost = true;\r\n \r\n\t }\r\n \r\n\t function onContextRestore( /* event */ ) {\r\n \r\n\t\t console.log( 'THREE.WebGLRenderer: Context Restored.' );\r\n \r\n\t\t _isContextLost = false;\r\n \r\n\t\t const infoAutoReset = info.autoReset;\r\n\t\t const shadowMapEnabled = shadowMap.enabled;\r\n\t\t const shadowMapAutoUpdate = shadowMap.autoUpdate;\r\n\t\t const shadowMapNeedsUpdate = shadowMap.needsUpdate;\r\n\t\t const shadowMapType = shadowMap.type;\r\n \r\n\t\t initGLContext();\r\n \r\n\t\t info.autoReset = infoAutoReset;\r\n\t\t shadowMap.enabled = shadowMapEnabled;\r\n\t\t shadowMap.autoUpdate = shadowMapAutoUpdate;\r\n\t\t shadowMap.needsUpdate = shadowMapNeedsUpdate;\r\n\t\t shadowMap.type = shadowMapType;\r\n \r\n\t }\r\n \r\n\t function onMaterialDispose( event ) {\r\n \r\n\t\t const material = event.target;\r\n \r\n\t\t material.removeEventListener( 'dispose', onMaterialDispose );\r\n \r\n\t\t deallocateMaterial( material );\r\n \r\n\t }\r\n \r\n\t // Buffer deallocation\r\n \r\n\t function deallocateMaterial( material ) {\r\n \r\n\t\t releaseMaterialProgramReferences( material );\r\n \r\n\t\t properties.remove( material );\r\n \r\n\t }\r\n \r\n \r\n\t function releaseMaterialProgramReferences( material ) {\r\n \r\n\t\t const programs = properties.get( material ).programs;\r\n \r\n\t\t if ( programs !== undefined ) {\r\n \r\n\t\t\t programs.forEach( function ( program ) {\r\n \r\n\t\t\t\t programCache.releaseProgram( program );\r\n \r\n\t\t\t } );\r\n \r\n\t\t\t if ( material.isShaderMaterial ) {\r\n \r\n\t\t\t\t programCache.releaseShaderCache( material );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // Buffer rendering\r\n \r\n\t this.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\r\n \r\n\t\t if ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\r\n \r\n\t\t const frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\r\n \r\n\t\t const program = setProgram( camera, scene, geometry, material, object );\r\n \r\n\t\t state.setMaterial( material, frontFaceCW );\r\n \r\n\t\t //\r\n \r\n\t\t let index = geometry.index;\r\n\t\t const position = geometry.attributes.position;\r\n \r\n\t\t //\r\n \r\n\t\t if ( index === null ) {\r\n \r\n\t\t\t if ( position === undefined || position.count === 0 ) return;\r\n \r\n\t\t } else if ( index.count === 0 ) {\r\n \r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t let rangeFactor = 1;\r\n \r\n\t\t if ( material.wireframe === true ) {\r\n \r\n\t\t\t index = geometries.getWireframeAttribute( geometry );\r\n\t\t\t rangeFactor = 2;\r\n \r\n\t\t }\r\n \r\n\t\t bindingStates.setup( object, material, program, geometry, index );\r\n \r\n\t\t let attribute;\r\n\t\t let renderer = bufferRenderer;\r\n \r\n\t\t if ( index !== null ) {\r\n \r\n\t\t\t attribute = attributes.get( index );\r\n \r\n\t\t\t renderer = indexedBufferRenderer;\r\n\t\t\t renderer.setIndex( attribute );\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t const dataCount = ( index !== null ) ? index.count : position.count;\r\n \r\n\t\t const rangeStart = geometry.drawRange.start * rangeFactor;\r\n\t\t const rangeCount = geometry.drawRange.count * rangeFactor;\r\n \r\n\t\t const groupStart = group !== null ? group.start * rangeFactor : 0;\r\n\t\t const groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n \r\n\t\t const drawStart = Math.max( rangeStart, groupStart );\r\n\t\t const drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n \r\n\t\t const drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n \r\n\t\t if ( drawCount === 0 ) return;\r\n \r\n\t\t //\r\n \r\n\t\t if ( object.isMesh ) {\r\n \r\n\t\t\t if ( material.wireframe === true ) {\r\n \r\n\t\t\t\t state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\t renderer.setMode( 1 );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t renderer.setMode( 4 );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( object.isLine ) {\r\n \r\n\t\t\t let lineWidth = material.linewidth;\r\n \r\n\t\t\t if ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n \r\n\t\t\t state.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n \r\n\t\t\t if ( object.isLineSegments ) {\r\n \r\n\t\t\t\t renderer.setMode( 1 );\r\n \r\n\t\t\t } else if ( object.isLineLoop ) {\r\n \r\n\t\t\t\t renderer.setMode( 2 );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t renderer.setMode( 3 );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( object.isPoints ) {\r\n \r\n\t\t\t renderer.setMode( 0 );\r\n \r\n\t\t } else if ( object.isSprite ) {\r\n \r\n\t\t\t renderer.setMode( 4 );\r\n \r\n\t\t }\r\n \r\n\t\t if ( object.isInstancedMesh ) {\r\n \r\n\t\t\t renderer.renderInstances( drawStart, drawCount, object.count );\r\n \r\n\t\t } else if ( geometry.isInstancedBufferGeometry ) {\r\n \r\n\t\t\t const instanceCount = Math.min( geometry.instanceCount, geometry._maxInstanceCount );\r\n \r\n\t\t\t renderer.renderInstances( drawStart, drawCount, instanceCount );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t renderer.render( drawStart, drawCount );\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n\t // Compile\r\n \r\n\t this.compile = function ( scene, camera ) {\r\n \r\n\t\t currentRenderState = renderStates.get( scene );\r\n\t\t currentRenderState.init();\r\n \r\n\t\t renderStateStack.push( currentRenderState );\r\n \r\n\t\t scene.traverseVisible( function ( object ) {\r\n \r\n\t\t\t if ( object.isLight && object.layers.test( camera.layers ) ) {\r\n \r\n\t\t\t\t currentRenderState.pushLight( object );\r\n \r\n\t\t\t\t if ( object.castShadow ) {\r\n \r\n\t\t\t\t\t currentRenderState.pushShadow( object );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } );\r\n \r\n\t\t currentRenderState.setupLights( _this.physicallyCorrectLights );\r\n \r\n\t\t scene.traverse( function ( object ) {\r\n \r\n\t\t\t const material = object.material;\r\n \r\n\t\t\t if ( material ) {\r\n \r\n\t\t\t\t if ( Array.isArray( material ) ) {\r\n \r\n\t\t\t\t\t for ( let i = 0; i < material.length; i ++ ) {\r\n \r\n\t\t\t\t\t\t const material2 = material[ i ];\r\n \r\n\t\t\t\t\t\t getProgram( material2, scene, object );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t getProgram( material, scene, object );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } );\r\n \r\n\t\t renderStateStack.pop();\r\n\t\t currentRenderState = null;\r\n \r\n\t };\r\n \r\n\t // Animation Loop\r\n \r\n\t let onAnimationFrameCallback = null;\r\n \r\n\t function onAnimationFrame( time ) {\r\n \r\n\t\t if ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\r\n \r\n\t }\r\n \r\n\t function onXRSessionStart() {\r\n \r\n\t\t animation.stop();\r\n \r\n\t }\r\n \r\n\t function onXRSessionEnd() {\r\n \r\n\t\t animation.start();\r\n \r\n\t }\r\n \r\n\t const animation = new WebGLAnimation();\r\n\t animation.setAnimationLoop( onAnimationFrame );\r\n \r\n\t if ( typeof window !== 'undefined' ) animation.setContext( window );\r\n \r\n\t this.setAnimationLoop = function ( callback ) {\r\n \r\n\t\t onAnimationFrameCallback = callback;\r\n\t\t xr.setAnimationLoop( callback );\r\n \r\n\t\t ( callback === null ) ? animation.stop() : animation.start();\r\n \r\n\t };\r\n \r\n\t xr.addEventListener( 'sessionstart', onXRSessionStart );\r\n\t xr.addEventListener( 'sessionend', onXRSessionEnd );\r\n \r\n\t // Rendering\r\n \r\n\t this.render = function ( scene, camera ,renderObjects,lights) {\r\n \r\n\t\t if ( camera !== undefined && camera.isCamera !== true ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( _isContextLost === true ) return;\r\n \r\n\t\t // update scene graph\r\n \r\n\t\t if ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n \r\n\t\t // update camera matrices and frustum\r\n \r\n\t\t if ( camera.parent === null ) camera.updateMatrixWorld();\r\n \r\n\t\t if ( xr.enabled === true && xr.isPresenting === true ) {\r\n \r\n\t\t\t if ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\r\n \r\n\t\t\t camera = xr.getCamera(); // use XR camera for rendering\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n\t\t if ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\r\n \r\n\t\t currentRenderState = renderStates.get( scene, renderStateStack.length );\r\n\t\t currentRenderState.init();\r\n \r\n\t\t renderStateStack.push( currentRenderState );\r\n \r\n\t\t _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t _frustum.setFromProjectionMatrix( _projScreenMatrix );\r\n \r\n\t\t _localClippingEnabled = this.localClippingEnabled;\r\n\t\t _clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\r\n \r\n\t\t currentRenderList = renderLists.get( scene, renderListStack.length );\r\n\t\t currentRenderList.init();\r\n \r\n\t\t renderListStack.push( currentRenderList );\r\n \r\n\t\t // projectLight( lights, camera, 0, _this.sortObjects );\r\n\t\t // projectObject( renderObjects, camera, 0, _this.sortObjects );\r\n \r\n\t\t let pickRender=scene.pickRender\r\n\t\t projectObject( scene, camera, 0, _this.sortObjects ,pickRender);\r\n \r\n\t\t currentRenderList.finish();\r\n \r\n\t\t if ( _this.sortObjects === true ) {\r\n \r\n\t\t\t currentRenderList.sort( _opaqueSort, _transparentSort );\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t if ( _clippingEnabled === true ) clipping.beginShadows();\r\n \r\n\t\t const shadowsArray = currentRenderState.state.shadowsArray;\r\n \r\n\t\t shadowMap.render( shadowsArray, scene, camera );\r\n \r\n\t\t if ( _clippingEnabled === true ) clipping.endShadows();\r\n \r\n\t\t //\r\n \r\n\t\t if ( this.info.autoReset === true ) this.info.reset();\r\n \r\n\t\t //\r\n \r\n\t\t background.render( currentRenderList, scene );\r\n \r\n\t\t // render scene\r\n \r\n\t\t currentRenderState.setupLights( _this.physicallyCorrectLights );\r\n \r\n\t\t if ( camera.isArrayCamera ) {\r\n \r\n\t\t\t const cameras = camera.cameras;\r\n \r\n\t\t\t for ( let i = 0, l = cameras.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const camera2 = cameras[ i ];\r\n \r\n\t\t\t\t renderScene( currentRenderList, scene, camera2, camera2.viewport );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t renderScene( currentRenderList, scene, camera );\r\n \r\n\t\t }\r\n \r\n\t\t \r\n \r\n\t\t if ( _currentRenderTarget !== null ) {\r\n \r\n\t\t\t // resolve multisample renderbuffers to a single-sample texture if necessary\r\n \r\n\t\t\t textures.updateMultisampleRenderTarget( _currentRenderTarget );\r\n \r\n\t\t\t // Generate mipmap if we're using any kind of mipmap filtering\r\n \r\n\t\t\t textures.updateRenderTargetMipmap( _currentRenderTarget );\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t if ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\r\n \r\n\t\t // _gl.finish();\r\n \r\n\t\t bindingStates.resetDefaultState();\r\n\t\t _currentMaterialId = - 1;\r\n\t\t _currentCamera = null;\r\n \r\n\t\t renderStateStack.pop();\r\n \r\n\t\t if ( renderStateStack.length > 0 ) {\r\n \r\n\t\t\t currentRenderState = renderStateStack[ renderStateStack.length - 1 ];\r\n \r\n\t\t } else {\r\n \r\n\t\t\t //currentRenderState = null;\r\n \r\n\t\t }\r\n \r\n\t\t renderListStack.pop();\r\n \r\n\t\t if ( renderListStack.length > 0 ) {\r\n \r\n\t\t\t currentRenderList = renderListStack[ renderListStack.length - 1 ];\r\n \r\n\t\t } else {\r\n \r\n\t\t\t //currentRenderList = null;\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n \r\n\t function projectLight( object, camera, groupOrder ) {\r\n \r\n\t\t if ( object.visible === false ) return;\r\n \r\n\t\t const visible = object.layers.test( camera.layers );\r\n \r\n\t\t if ( visible ) {\r\n \r\n\t\t\t if ( object.isGroup ) {\r\n \r\n\t\t\t\t groupOrder = object.renderOrder;\r\n\t\t\t } else if ( object.isLight ) {\r\n \r\n\t\t\t\t currentRenderState.pushLight( object );\r\n \r\n\t\t\t\t if ( object.castShadow ) {\r\n \r\n\t\t\t\t\t currentRenderState.pushShadow( object );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } \r\n\t\t }\r\n \r\n\t\t const children = object.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t projectLight( children[ i ], camera, groupOrder );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function projectObject( object, camera, groupOrder, sortObjects,pickRender ) {\r\n \r\n\t\t if ( object.visible === false ) return;\r\n \r\n\t\t //不可以拾取\r\n\t\t if (pickRender&& object.notPickRender) return;\r\n \r\n\t\t if (pickRender&& object.notPick) return\r\n \r\n\t\t const visible = object.layers.test( camera.layers );\r\n \r\n\t\t if ( visible ) {\r\n \r\n\t\t\t if ( object.isGroup ) {\r\n \r\n\t\t\t\t groupOrder = object.renderOrder;\r\n \r\n\t\t\t } else if ( object.isLOD ) {\r\n \r\n\t\t\t\t if ( object.autoUpdate === true ) object.update( camera );\r\n \r\n\t\t\t } else if ( object.isLight ) {\r\n \r\n\t\t\t\t currentRenderState.pushLight( object );\r\n \r\n\t\t\t\t if ( object.castShadow ) {\r\n \r\n\t\t\t\t\t currentRenderState.pushShadow( object );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( object.isSprite ) {\r\n \r\n\t\t\t\t if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\r\n \r\n\t\t\t\t\t if ( sortObjects ) {\r\n \r\n\t\t\t\t\t\t _vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t .applyMatrix4( _projScreenMatrix );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t const geometry = objects.update( object );\r\n\t\t\t\t\t const material = object.material;\r\n \r\n\t\t\t\t\t if ( material.visible ) {\r\n \r\n\t\t\t\t\t\t currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( object.isMesh || object.isLine || object.isPoints ) {\r\n \r\n\t\t\t\t if ( object.isSkinnedMesh ) {\r\n \r\n\t\t\t\t\t // update skeleton only once in a frame\r\n \r\n\t\t\t\t\t if ( object.skeleton.frame !== info.render.frame ) {\r\n \r\n\t\t\t\t\t\t object.skeleton.update();\r\n\t\t\t\t\t\t object.skeleton.frame = info.render.frame;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\r\n \r\n\t\t\t\t\t if ( sortObjects ) {\r\n \r\n\t\t\t\t\t\t _vector3.setFromMatrixPosition( object.matrixWorld )\r\n\t\t\t\t\t\t\t .applyMatrix4( _projScreenMatrix );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t const geometry = objects.update( object );\r\n\t\t\t\t\t //const material = object.material\r\n\t\t\t\t\t const material = pickRender&&object.pickMaterial?object.pickMaterial: object.material;\r\n\t\t\t\t \r\n\t\t\t\t\t if ( Array.isArray( material ) ) {\r\n \r\n\t\t\t\t\t\t const groups = geometry.groups;\r\n \r\n\t\t\t\t\t\t for ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t const group = groups[ i ];\r\n\t\t\t\t\t\t\t const groupMaterial = material[ group.materialIndex ];\r\n \r\n\t\t\t\t\t\t\t if ( groupMaterial && groupMaterial.visible ) {\r\n \r\n\t\t\t\t\t\t\t\t currentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t } else if ( material.visible ) {\r\n \r\n\t\t\t\t\t\t currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const children = object.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t projectObject( children[ i ], camera, groupOrder, sortObjects ,pickRender);\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t function renderScene( currentRenderList, scene, camera, viewport ) {\r\n \r\n\t\t const opaqueObjects = currentRenderList.opaque;\r\n\t\t const transmissiveObjects = currentRenderList.transmissive;\r\n\t\t const transparentObjects = currentRenderList.transparent;\r\n \r\n\t\t currentRenderState.setupLightsView( camera );\r\n \r\n\t\t if ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, scene, camera );\r\n \r\n\t\t if ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\r\n \r\n\t\t if ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\r\n\t\t if ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\r\n\t\t if ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\r\n \r\n\t\t // Ensure depth buffer writing is enabled so it can be cleared on next render\r\n \r\n\t\t state.buffers.depth.setTest( true );\r\n\t\t state.buffers.depth.setMask( true );\r\n\t\t state.buffers.color.setMask( true );\r\n \r\n\t\t state.setPolygonOffset( false );\r\n \r\n\t }\r\n \r\n\t function renderTransmissionPass( opaqueObjects, scene, camera ) {\r\n \r\n\t\t const isWebGL2 = capabilities.isWebGL2;\r\n \r\n\t\t if ( _transmissionRenderTarget === null ) {\r\n \r\n\t\t\t _transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\r\n\t\t\t\t generateMipmaps: true,\r\n\t\t\t\t type: utils.convert( HalfFloatType ) !== null ? HalfFloatType : UnsignedByteType,\r\n\t\t\t\t minFilter: LinearMipmapLinearFilter,\r\n\t\t\t\t samples: ( isWebGL2 && _antialias === true ) ? 4 : 0\r\n\t\t\t } );\r\n \r\n\t\t }\r\n \r\n\t\t _this.getDrawingBufferSize( _vector2 );\r\n \r\n\t\t if ( isWebGL2 ) {\r\n \r\n\t\t\t _transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t const currentRenderTarget = _this.getRenderTarget();\r\n\t\t _this.setRenderTarget( _transmissionRenderTarget );\r\n\t\t _this.clear();\r\n \r\n\t\t // Turn off the features which can affect the frag color for opaque objects pass.\r\n\t\t // Otherwise they are applied twice in opaque objects pass and transmission objects pass.\r\n\t\t const currentToneMapping = _this.toneMapping;\r\n\t\t _this.toneMapping = NoToneMapping;\r\n \r\n\t\t renderObjects( opaqueObjects, scene, camera );\r\n \r\n\t\t _this.toneMapping = currentToneMapping;\r\n \r\n\t\t textures.updateMultisampleRenderTarget( _transmissionRenderTarget );\r\n\t\t textures.updateRenderTargetMipmap( _transmissionRenderTarget );\r\n \r\n\t\t _this.setRenderTarget( currentRenderTarget );\r\n \r\n\t }\r\n \r\n \r\n\t function renderObjects( renderList, scene, camera ) {\r\n\t\t \r\n\t\t // const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n\t\t const overrideMaterial = scene.overrideMaterial;\r\n\t\t for ( let i = 0, l = renderList.length; i < l; i ++ ) {\r\n \r\n\t\t\t const renderItem = renderList[ i ];\r\n \r\n\t\t\t const object = renderItem.object;\r\n\t\t\t const geometry = renderItem.geometry;\r\n\t\t\t const material = overrideMaterial === null ? renderItem.material : overrideMaterial;\r\n\t\t\t const group = renderItem.group;\r\n \r\n\t\t\t if ( object.layers.test( camera.layers ) ) {\r\n \r\n\t\t\t\t renderObject( object, scene, camera, geometry, material, group );\r\n \r\n\t\t\t }\r\n\t\t }\r\n \r\n\t\t \r\n\t\t // var newRender = true;//new render request flag\r\n\t\t // var result = [];\r\n\t\t // var randerOnece = 100;//一次渲染2000个构件\r\n\t\t // for (var i = 0; i < renderList.length; i += randerOnece) {\r\n\t\t // \tresult.push(renderList.slice(i, i + randerOnece));\r\n\t\t // }\r\n\t\t // if (result.length === 0) {\r\n\t\t // \treturn;\r\n\t\t // }\r\n\t\t // var curIndex = 0;\r\n\t\t // doTimeout();\r\n\t\t // function doTimeout() {//分时加载\r\n\t\t // \tif (curIndex < result.length) {\r\n\t\t // \t\tif (randerStop)\r\n\t\t // \t\t\treturn;\r\n\t\t // \t\t//randerStop作为全局变量，如果下一次渲染开始了，前面一次渲染就标记为true，强行中断掉      \r\n\t\t // \t\tvar onceRenderObjects = result[curIndex];\r\n\t\t // \t\trenderObjects_threejs(onceRenderObjects, scene, camera);  \r\n\t\t // \t\t//提交当前批渲染,renderObjects_threejs为原来threejs的那部分代码\r\n\t\t // \t\tcurIndex++;\r\n\t\t // \t\tsetTimeout(doTimeout, 100);//准备下一批渲染  \r\n\t\t // \t}\r\n\t\t // }\r\n \r\n \r\n\t\t // let addItem = (items) => {\r\n\t\t // \tconsole.log(\"渲染\")\r\n\t\t // \trenderObjects_threejs(items, scene, camera)\r\n\t\t // }\r\n\t\t // let callback = (item) => {\r\n\t\t // \t//取消\r\n\t\t // \tconsole.log(\"取消\")\r\n\t\t // }\r\n\t\t // timedChunk(renderList,addItem,null, callback)\r\n\t }\r\n \r\n \r\n\t function timedChunk(renderList, process, context, callback) {\r\n\t\t //克隆数组\r\n\t\t //let todo = items.concat();\r\n\t\t let curIndex = 0;\r\n\t\t var result = [];\r\n\t\t var randerOnece = 100;//一次渲染2000个构件\r\n\t\t for (var i = 0; i < renderList.length; i += randerOnece) {\r\n\t\t\t result.push(renderList.slice(i, i + randerOnece));\r\n\t\t }\r\n \r\n\t\t let fn=function () {\r\n\t\t\t let start = +new Date();\r\n\t\t\t  //执行50ms的`process`方法(前提数组足够大)\r\n\t\t\t do {\r\n\t\t\t\t // process.call(context, todo.shift());\r\n\t\t\t\t process.call(context, result[curIndex]);\r\n\t\t\t\t curIndex+=1\r\n\t\t\t } while (curIndex <  result.length && (+new Date() - start < 50));\r\n\t\t\t // } while (curIndex <  result.length );\r\n\t\t }\r\n\t\t//延时25ms执行\r\n\t\t setTimeout(function () {\r\n\t\t\t fn();\r\n\t\t\t //如果`items`数组不为空，延迟100ms(提供100ms来更新UI界面)然后回调上方的`setTimeout`函数\r\n\t\t\t if (curIndex <result.length) {\r\n\t\t\t\t setTimeout(fn, 25);\r\n\t\t\t } else {\r\n\t\t\t\t callback(renderList);\r\n\t\t\t }\r\n\t\t }, 25);\r\n\t }\r\n \r\n \r\n\t function renderObjects_threejs( renderList, scene, camera ) {\r\n \r\n\t\t const overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\r\n \r\n\t\t for ( let i = 0, l = renderList.length; i < l; i ++ ) {\r\n \r\n\t\t\t const renderItem = renderList[ i ];\r\n \r\n\t\t\t const object = renderItem.object;\r\n\t\t\t const geometry = renderItem.geometry;\r\n\t\t\t const material = overrideMaterial === null ? renderItem.material : overrideMaterial;\r\n\t\t\t const group = renderItem.group;\r\n \r\n\t\t\t if ( object.layers.test( camera.layers ) ) {\r\n \r\n\t\t\t\t renderObject( object, scene, camera, geometry, material, group );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t \r\n\t }\r\n \r\n\t function renderObject( object, scene, camera, geometry, material, group ) {\r\n \r\n\t\t object.onBeforeRender( _this, scene, camera, geometry, material, group );\r\n \r\n\t\t object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t object.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n \r\n\t\t material.onBeforeRender( _this, scene, camera, geometry, object, group );\r\n \r\n\t\t if ( material.transparent === true && material.side === DoubleSide ) {\r\n \r\n\t\t\t material.side = BackSide;\r\n\t\t\t material.needsUpdate = true;\r\n\t\t\t _this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n \r\n\t\t\t material.side = FrontSide;\r\n\t\t\t material.needsUpdate = true;\r\n\t\t\t _this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n \r\n\t\t\t material.side = DoubleSide;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _this.renderBufferDirect( camera, scene, geometry, material, object, group );\r\n \r\n\t\t }\r\n \r\n\t\t object.onAfterRender( _this, scene, camera, geometry, material, group );\r\n \r\n\t }\r\n \r\n\t function getProgram( material, scene, object ) {\r\n \r\n\t\t if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n \r\n\t\t const materialProperties = properties.get( material );\r\n \r\n\t\t const lights = currentRenderState.state.lights;\r\n\t\t const shadowsArray = currentRenderState.state.shadowsArray;\r\n \r\n\t\t const lightsStateVersion = lights.state.version;\r\n \r\n\t\t const parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\r\n\t\t const programCacheKey = programCache.getProgramCacheKey( parameters );\r\n \r\n\t\t let programs = materialProperties.programs;\r\n \r\n\t\t // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\r\n \r\n\t\t materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t materialProperties.fog = scene.fog;\r\n\t\t materialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\r\n \r\n\t\t if ( programs === undefined ) {\r\n \r\n\t\t\t // new material\r\n \r\n\t\t\t material.addEventListener( 'dispose', onMaterialDispose );\r\n \r\n\t\t\t programs = new Map();\r\n\t\t\t materialProperties.programs = programs;\r\n \r\n\t\t }\r\n \r\n\t\t let program = programs.get( programCacheKey );\r\n \r\n\t\t if ( program !== undefined ) {\r\n \r\n\t\t\t // early out if program and light state is identical\r\n \r\n\t\t\t if ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\r\n \r\n\t\t\t\t updateCommonMaterialProperties( material, parameters );\r\n \r\n\t\t\t\t return program;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t parameters.uniforms = programCache.getUniforms( material );\r\n \r\n\t\t\t material.onBuild( object, parameters, _this );\r\n \r\n\t\t\t material.onBeforeCompile( parameters, _this );\r\n \r\n\t\t\t program = programCache.acquireProgram( parameters, programCacheKey );\r\n\t\t\t programs.set( programCacheKey, program );\r\n \r\n\t\t\t materialProperties.uniforms = parameters.uniforms;\r\n \r\n\t\t }\r\n \r\n\t\t const uniforms = materialProperties.uniforms;\r\n \r\n\t\t if ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\r\n \r\n\t\t\t uniforms.clippingPlanes = clipping.uniform;\r\n \r\n\t\t }\r\n \r\n\t\t updateCommonMaterialProperties( material, parameters );\r\n \r\n\t\t // store the light setup it was created for\r\n \r\n\t\t materialProperties.needsLights = materialNeedsLights( material );\r\n\t\t materialProperties.lightsStateVersion = lightsStateVersion;\r\n \r\n\t\t if ( materialProperties.needsLights ) {\r\n \r\n\t\t\t // wire up the material to this renderer's lighting state\r\n \r\n\t\t\t uniforms.ambientLightColor.value = lights.state.ambient;\r\n\t\t\t uniforms.lightProbe.value = lights.state.probe;\r\n\t\t\t uniforms.directionalLights.value = lights.state.directional;\r\n\t\t\t uniforms.directionalLightShadows.value = lights.state.directionalShadow;\r\n\t\t\t uniforms.spotLights.value = lights.state.spot;\r\n\t\t\t uniforms.spotLightShadows.value = lights.state.spotShadow;\r\n\t\t\t uniforms.rectAreaLights.value = lights.state.rectArea;\r\n\t\t\t uniforms.ltc_1.value = lights.state.rectAreaLTC1;\r\n\t\t\t uniforms.ltc_2.value = lights.state.rectAreaLTC2;\r\n\t\t\t uniforms.pointLights.value = lights.state.point;\r\n\t\t\t uniforms.pointLightShadows.value = lights.state.pointShadow;\r\n\t\t\t uniforms.hemisphereLights.value = lights.state.hemi;\r\n \r\n\t\t\t uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\r\n\t\t\t uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\r\n\t\t\t uniforms.spotShadowMap.value = lights.state.spotShadowMap;\r\n\t\t\t uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\r\n\t\t\t uniforms.pointShadowMap.value = lights.state.pointShadowMap;\r\n\t\t\t uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\r\n\t\t\t // TODO (abelnation): add area lights shadow info to uniforms\r\n \r\n\t\t }\r\n \r\n\t\t const progUniforms = program.getUniforms();\r\n\t\t const uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\r\n \r\n\t\t materialProperties.currentProgram = program;\r\n\t\t materialProperties.uniformsList = uniformsList;\r\n \r\n\t\t return program;\r\n \r\n\t }\r\n \r\n\t function updateCommonMaterialProperties( material, parameters ) {\r\n \r\n\t\t const materialProperties = properties.get( material );\r\n \r\n\t\t materialProperties.outputEncoding = parameters.outputEncoding;\r\n\t\t materialProperties.instancing = parameters.instancing;\r\n\t\t materialProperties.skinning = parameters.skinning;\r\n\t\t materialProperties.morphTargets = parameters.morphTargets;\r\n\t\t materialProperties.morphNormals = parameters.morphNormals;\r\n\t\t materialProperties.morphColors = parameters.morphColors;\r\n\t\t materialProperties.morphTargetsCount = parameters.morphTargetsCount;\r\n\t\t materialProperties.numClippingPlanes = parameters.numClippingPlanes;\r\n\t\t materialProperties.numIntersection = parameters.numClipIntersection;\r\n\t\t materialProperties.vertexAlphas = parameters.vertexAlphas;\r\n\t\t materialProperties.vertexTangents = parameters.vertexTangents;\r\n\t\t materialProperties.toneMapping = parameters.toneMapping;\r\n \r\n\t }\r\n \r\n\t function setProgram( camera, scene, geometry, material, object ) {\r\n \r\n\t\t if ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\r\n \r\n\t\t textures.resetTextureUnits();\r\n \r\n\t\t const fog = scene.fog;\r\n\t\t const environment = material.isMeshStandardMaterial ? scene.environment : null;\r\n\t\t const encoding = ( _currentRenderTarget === null ) ? _this.outputEncoding : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.encoding : LinearEncoding );\r\n\t\t const envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\r\n\t\t const vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\r\n\t\t const vertexTangents = !! material.normalMap && !! geometry.attributes.tangent;\r\n\t\t const morphTargets = !! geometry.morphAttributes.position;\r\n\t\t const morphNormals = !! geometry.morphAttributes.normal;\r\n\t\t const morphColors = !! geometry.morphAttributes.color;\r\n\t\t const toneMapping = material.toneMapped ? _this.toneMapping : NoToneMapping;\r\n \r\n\t\t const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\r\n\t\t const morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\r\n \r\n\t\t const materialProperties = properties.get( material );\r\n\t\t const lights = currentRenderState.state.lights;\r\n \r\n\t\t if ( _clippingEnabled === true ) {\r\n \r\n\t\t\t if ( _localClippingEnabled === true || camera !== _currentCamera ) {\r\n \r\n\t\t\t\t const useCache =\r\n\t\t\t\t\t camera === _currentCamera &&\r\n\t\t\t\t\t material.id === _currentMaterialId;\r\n \r\n\t\t\t\t // we might want to call this function with some ClippingGroup\r\n\t\t\t\t // object instead of the material, once it becomes feasible\r\n\t\t\t\t // (#8465, #8379)\r\n\t\t\t\t clipping.setState( material, camera, useCache );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t let needsProgramChange = false;\r\n \r\n\t\t if ( material.version === materialProperties.__version ) {\r\n \r\n\t\t\t if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.outputEncoding !== encoding ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.envMap !== envMap ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( material.fog && materialProperties.fog !== fog ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\t ( materialProperties.numClippingPlanes !== clipping.numPlanes ||\r\n\t\t\t\t materialProperties.numIntersection !== clipping.numIntersection ) ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.vertexTangents !== vertexTangents ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.morphTargets !== morphTargets ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.morphNormals !== morphNormals ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.morphColors !== morphColors ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( materialProperties.toneMapping !== toneMapping ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t } else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\r\n \r\n\t\t\t\t needsProgramChange = true;\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t needsProgramChange = true;\r\n\t\t\t materialProperties.__version = material.version;\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t let program = materialProperties.currentProgram;\r\n \r\n\t\t if ( needsProgramChange === true ) {\r\n \r\n\t\t\t program = getProgram( material, scene, object );\r\n \r\n\t\t }\r\n \r\n\t\t let refreshProgram = false;\r\n\t\t let refreshMaterial = false;\r\n\t\t let refreshLights = false;\r\n \r\n\t\t const p_uniforms = program.getUniforms(),\r\n\t\t\t m_uniforms = materialProperties.uniforms;\r\n \r\n\t\t if ( state.useProgram( program.program ) ) {\r\n \r\n\t\t\t refreshProgram = true;\r\n\t\t\t refreshMaterial = true;\r\n\t\t\t refreshLights = true;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.id !== _currentMaterialId ) {\r\n \r\n\t\t\t _currentMaterialId = material.id;\r\n \r\n\t\t\t refreshMaterial = true;\r\n \r\n\t\t }\r\n \r\n\t\t if ( refreshProgram || _currentCamera !== camera ) {\r\n \r\n\t\t\t p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\r\n \r\n\t\t\t if ( capabilities.logarithmicDepthBuffer ) {\r\n \r\n\t\t\t\t p_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( _currentCamera !== camera ) {\r\n \r\n\t\t\t\t _currentCamera = camera;\r\n \r\n\t\t\t\t // lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t // now, in case this material supports lights - or later, when\r\n\t\t\t\t // the next material that does gets activated:\r\n \r\n\t\t\t\t refreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\t refreshLights = true;\t\t// remains set until update done\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // load material specific uniforms\r\n\t\t\t // (shader material also gets them for the sake of genericity)\r\n \r\n\t\t\t if ( material.isShaderMaterial ||\r\n\t\t\t\t material.isMeshPhongMaterial ||\r\n\t\t\t\t material.isMeshToonMaterial ||\r\n\t\t\t\t material.isMeshStandardMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n \r\n\t\t\t\t const uCamPos = p_uniforms.map.cameraPosition;\r\n \r\n\t\t\t\t if ( uCamPos !== undefined ) {\r\n \r\n\t\t\t\t\t uCamPos.setValue( _gl,\r\n\t\t\t\t\t\t _vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( material.isMeshPhongMaterial ||\r\n\t\t\t\t material.isMeshToonMaterial ||\r\n\t\t\t\t material.isMeshLambertMaterial ||\r\n\t\t\t\t material.isMeshBasicMaterial ||\r\n\t\t\t\t material.isMeshStandardMaterial ||\r\n\t\t\t\t material.isShaderMaterial ) {\r\n \r\n\t\t\t\t p_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( material.isMeshPhongMaterial ||\r\n\t\t\t\t material.isMeshToonMaterial ||\r\n\t\t\t\t material.isMeshLambertMaterial ||\r\n\t\t\t\t material.isMeshBasicMaterial ||\r\n\t\t\t\t material.isMeshStandardMaterial ||\r\n\t\t\t\t material.isShaderMaterial ||\r\n\t\t\t\t material.isShadowMaterial ||\r\n\t\t\t\t object.isSkinnedMesh ) {\r\n \r\n\t\t\t\t p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // skinning and morph target uniforms must be set even if material didn't change\r\n\t\t // auto-setting of texture unit for bone and morph texture must go before other textures\r\n\t\t // otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\r\n \r\n\t\t if ( object.isSkinnedMesh ) {\r\n \r\n\t\t\t p_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\t p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n \r\n\t\t\t const skeleton = object.skeleton;\r\n \r\n\t\t\t if ( skeleton ) {\r\n \r\n\t\t\t\t if ( capabilities.floatVertexTextures ) {\r\n \r\n\t\t\t\t\t if ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\r\n \r\n\t\t\t\t\t p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\r\n\t\t\t\t\t p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const morphAttributes = geometry.morphAttributes;\r\n \r\n\t\t if ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\r\n \r\n\t\t\t morphtargets.update( object, geometry, material, program );\r\n \r\n\t\t }\r\n \r\n \r\n\t\t if ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\r\n \r\n\t\t\t materialProperties.receiveShadow = object.receiveShadow;\r\n\t\t\t p_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\r\n \r\n\t\t }\r\n \r\n\t\t if ( refreshMaterial ) {\r\n \r\n\t\t\t p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\r\n \r\n\t\t\t if ( materialProperties.needsLights ) {\r\n \r\n\t\t\t\t // the current material requires lighting info\r\n \r\n\t\t\t\t // note: all lighting uniforms are always set correctly\r\n\t\t\t\t // they simply reference the renderer's state for their\r\n\t\t\t\t // values\r\n\t\t\t\t //\r\n\t\t\t\t // use the current material's .needsUpdate flags to set\r\n\t\t\t\t // the GL state when required\r\n \r\n\t\t\t\t markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // refresh uniforms common to several materials\r\n \r\n\t\t\t if ( fog && material.fog ) {\r\n \r\n\t\t\t\t materials.refreshFogUniforms( m_uniforms, fog );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t materials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\r\n \r\n\t\t\t WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\r\n \r\n\t\t\t WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\r\n\t\t\t material.uniformsNeedUpdate = false;\r\n \r\n\t\t }\r\n \r\n\t\t if ( material.isSpriteMaterial ) {\r\n \r\n\t\t\t p_uniforms.setValue( _gl, 'center', object.center );\r\n \r\n\t\t }\r\n \r\n\t\t // common matrices\r\n \r\n\t\t p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\r\n\t\t p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\r\n\t\t p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n \r\n\t\t return program;\r\n \r\n\t }\r\n \r\n\t // If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n \r\n\t function markUniformsLightsNeedsUpdate( uniforms, value ) {\r\n \r\n\t\t uniforms.ambientLightColor.needsUpdate = value;\r\n\t\t uniforms.lightProbe.needsUpdate = value;\r\n \r\n\t\t uniforms.directionalLights.needsUpdate = value;\r\n\t\t uniforms.directionalLightShadows.needsUpdate = value;\r\n\t\t uniforms.pointLights.needsUpdate = value;\r\n\t\t uniforms.pointLightShadows.needsUpdate = value;\r\n\t\t uniforms.spotLights.needsUpdate = value;\r\n\t\t uniforms.spotLightShadows.needsUpdate = value;\r\n\t\t uniforms.rectAreaLights.needsUpdate = value;\r\n\t\t uniforms.hemisphereLights.needsUpdate = value;\r\n \r\n\t }\r\n \r\n\t function materialNeedsLights( material ) {\r\n \r\n\t\t return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\r\n\t\t\t material.isMeshStandardMaterial || material.isShadowMaterial ||\r\n\t\t\t ( material.isShaderMaterial && material.lights === true );\r\n \r\n\t }\r\n \r\n\t this.getActiveCubeFace = function () {\r\n \r\n\t\t return _currentActiveCubeFace;\r\n \r\n\t };\r\n \r\n\t this.getActiveMipmapLevel = function () {\r\n \r\n\t\t return _currentActiveMipmapLevel;\r\n \r\n\t };\r\n \r\n\t this.getRenderTarget = function () {\r\n \r\n\t\t return _currentRenderTarget;\r\n \r\n\t };\r\n \r\n\t this.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\r\n \r\n\t\t properties.get( renderTarget.texture ).__webglTexture = colorTexture;\r\n\t\t properties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\r\n \r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n\t\t renderTargetProperties.__hasExternalTextures = true;\r\n \r\n\t\t if ( renderTargetProperties.__hasExternalTextures ) {\r\n \r\n\t\t\t renderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\r\n \r\n\t\t\t if ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\r\n \r\n\t\t\t\t // The multisample_render_to_texture extension doesn't work properly if there\r\n\t\t\t\t // are midframe flushes and an external depth buffer. Disable use of the extension.\r\n\t\t\t\t if ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\r\n \r\n\t\t\t\t\t console.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\r\n\t\t\t\t\t renderTargetProperties.__useRenderToTexture = false;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n\t this.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\r\n \r\n\t\t const renderTargetProperties = properties.get( renderTarget );\r\n\t\t renderTargetProperties.__webglFramebuffer = defaultFramebuffer;\r\n\t\t renderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\r\n \r\n\t };\r\n \r\n\t this.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\r\n \r\n\t\t _currentRenderTarget = renderTarget;\r\n\t\t _currentActiveCubeFace = activeCubeFace;\r\n\t\t _currentActiveMipmapLevel = activeMipmapLevel;\r\n \r\n\t\t let useDefaultFramebuffer = true;\r\n \r\n\t\t if ( renderTarget ) {\r\n \r\n\t\t\t const renderTargetProperties = properties.get( renderTarget );\r\n \r\n\t\t\t if ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\r\n \r\n\t\t\t\t // We need to make sure to rebind the framebuffer.\r\n\t\t\t\t state.bindFramebuffer( 36160, null );\r\n\t\t\t\t useDefaultFramebuffer = false;\r\n \r\n\t\t\t } else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\r\n \r\n\t\t\t\t textures.setupRenderTarget( renderTarget );\r\n \r\n\t\t\t } else if ( renderTargetProperties.__hasExternalTextures ) {\r\n \r\n\t\t\t\t // Color and depth texture must be rebound in order for the swapchain to update.\r\n\t\t\t\t textures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t let framebuffer = null;\r\n\t\t let isCube = false;\r\n\t\t let isRenderTarget3D = false;\r\n \r\n\t\t if ( renderTarget ) {\r\n \r\n\t\t\t const texture = renderTarget.texture;\r\n \r\n\t\t\t if ( texture.isData3DTexture || texture.isDataArrayTexture ) {\r\n \r\n\t\t\t\t isRenderTarget3D = true;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n \r\n\t\t\t if ( renderTarget.isWebGLCubeRenderTarget ) {\r\n \r\n\t\t\t\t framebuffer = __webglFramebuffer[ activeCubeFace ];\r\n\t\t\t\t isCube = true;\r\n \r\n\t\t\t } else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\r\n \r\n\t\t\t\t framebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t framebuffer = __webglFramebuffer;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _currentViewport.copy( renderTarget.viewport );\r\n\t\t\t _currentScissor.copy( renderTarget.scissor );\r\n\t\t\t _currentScissorTest = renderTarget.scissorTest;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\r\n\t\t\t _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\r\n\t\t\t _currentScissorTest = _scissorTest;\r\n \r\n\t\t }\r\n \r\n\t\t const framebufferBound = state.bindFramebuffer( 36160, framebuffer );\r\n \r\n\t\t if ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\r\n \r\n\t\t\t state.drawBuffers( renderTarget, framebuffer );\r\n \r\n\t\t }\r\n \r\n\t\t state.viewport( _currentViewport );\r\n\t\t state.scissor( _currentScissor );\r\n\t\t state.setScissorTest( _currentScissorTest );\r\n \r\n\t\t if ( isCube ) {\r\n \r\n\t\t\t const textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t _gl.framebufferTexture2D( 36160, 36064, 34069 + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\r\n \r\n\t\t } else if ( isRenderTarget3D ) {\r\n \r\n\t\t\t const textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t const layer = activeCubeFace || 0;\r\n\t\t\t _gl.framebufferTextureLayer( 36160, 36064, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\r\n \r\n\t\t }\r\n \r\n\t\t _currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\r\n \r\n\t };\r\n \r\n\t this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\r\n \r\n\t\t if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t let framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n \r\n\t\t if ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\r\n \r\n\t\t\t framebuffer = framebuffer[ activeCubeFaceIndex ];\r\n \r\n\t\t }\r\n \r\n\t\t if ( framebuffer ) {\r\n \r\n\t\t\t state.bindFramebuffer( 36160, framebuffer );\r\n \r\n\t\t\t try {\r\n \r\n\t\t\t\t const texture = renderTarget.texture;\r\n\t\t\t\t const textureFormat = texture.format;\r\n\t\t\t\t const textureType = texture.type;\r\n \r\n\t\t\t\t if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\r\n \r\n\t\t\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t return;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t const halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\r\n \r\n\t\t\t\t if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // Edge and Chrome Mac < 52 (#9513)\r\n\t\t\t\t\t ! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\r\n\t\t\t\t\t ! halfFloatSupportedByExt ) {\r\n \r\n\t\t\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t return;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\r\n \r\n\t\t\t\t\t // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n \r\n\t\t\t\t\t if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n \r\n\t\t\t\t\t\t _gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } finally {\r\n \r\n\t\t\t\t // restore framebuffer of current render target if necessary\r\n \r\n\t\t\t\t const framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\r\n\t\t\t\t state.bindFramebuffer( 36160, framebuffer );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n\t this.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\r\n \r\n\t\t if ( texture.isFramebufferTexture !== true ) {\r\n \r\n\t\t\t console.error( 'THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t const levelScale = Math.pow( 2, - level );\r\n\t\t const width = Math.floor( texture.image.width * levelScale );\r\n\t\t const height = Math.floor( texture.image.height * levelScale );\r\n \r\n\t\t textures.setTexture2D( texture, 0 );\r\n \r\n\t\t _gl.copyTexSubImage2D( 3553, level, 0, 0, position.x, position.y, width, height );\r\n \r\n\t\t state.unbindTexture();\r\n \r\n\t };\r\n \r\n\t this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\r\n \r\n\t\t const width = srcTexture.image.width;\r\n\t\t const height = srcTexture.image.height;\r\n\t\t const glFormat = utils.convert( dstTexture.format );\r\n\t\t const glType = utils.convert( dstTexture.type );\r\n \r\n\t\t textures.setTexture2D( dstTexture, 0 );\r\n \r\n\t\t // As another texture upload may have changed pixelStorei\r\n\t\t // parameters, make sure they are correct for the dstTexture\r\n\t\t _gl.pixelStorei( 37440, dstTexture.flipY );\r\n\t\t _gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\r\n\t\t _gl.pixelStorei( 3317, dstTexture.unpackAlignment );\r\n \r\n\t\t if ( srcTexture.isDataTexture ) {\r\n \r\n\t\t\t _gl.texSubImage2D( 3553, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( srcTexture.isCompressedTexture ) {\r\n \r\n\t\t\t\t _gl.compressedTexSubImage2D( 3553, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _gl.texSubImage2D( 3553, level, position.x, position.y, glFormat, glType, srcTexture.image );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // Generate mipmaps only when copying level 0\r\n\t\t if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( 3553 );\r\n \r\n\t\t state.unbindTexture();\r\n \r\n\t };\r\n \r\n\t this.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\r\n \r\n\t\t if ( _this.isWebGL1Renderer ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t const width = sourceBox.max.x - sourceBox.min.x + 1;\r\n\t\t const height = sourceBox.max.y - sourceBox.min.y + 1;\r\n\t\t const depth = sourceBox.max.z - sourceBox.min.z + 1;\r\n\t\t const glFormat = utils.convert( dstTexture.format );\r\n\t\t const glType = utils.convert( dstTexture.type );\r\n\t\t let glTarget;\r\n \r\n\t\t if ( dstTexture.isData3DTexture ) {\r\n \r\n\t\t\t textures.setTexture3D( dstTexture, 0 );\r\n\t\t\t glTarget = 32879;\r\n \r\n\t\t } else if ( dstTexture.isDataArrayTexture ) {\r\n \r\n\t\t\t textures.setTexture2DArray( dstTexture, 0 );\r\n\t\t\t glTarget = 35866;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t _gl.pixelStorei( 37440, dstTexture.flipY );\r\n\t\t _gl.pixelStorei( 37441, dstTexture.premultiplyAlpha );\r\n\t\t _gl.pixelStorei( 3317, dstTexture.unpackAlignment );\r\n \r\n\t\t const unpackRowLen = _gl.getParameter( 3314 );\r\n\t\t const unpackImageHeight = _gl.getParameter( 32878 );\r\n\t\t const unpackSkipPixels = _gl.getParameter( 3316 );\r\n\t\t const unpackSkipRows = _gl.getParameter( 3315 );\r\n\t\t const unpackSkipImages = _gl.getParameter( 32877 );\r\n \r\n\t\t const image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\r\n \r\n\t\t _gl.pixelStorei( 3314, image.width );\r\n\t\t _gl.pixelStorei( 32878, image.height );\r\n\t\t _gl.pixelStorei( 3316, sourceBox.min.x );\r\n\t\t _gl.pixelStorei( 3315, sourceBox.min.y );\r\n\t\t _gl.pixelStorei( 32877, sourceBox.min.z );\r\n \r\n\t\t if ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\r\n \r\n\t\t\t _gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( srcTexture.isCompressedTexture ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\r\n\t\t\t\t _gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t _gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t _gl.pixelStorei( 3314, unpackRowLen );\r\n\t\t _gl.pixelStorei( 32878, unpackImageHeight );\r\n\t\t _gl.pixelStorei( 3316, unpackSkipPixels );\r\n\t\t _gl.pixelStorei( 3315, unpackSkipRows );\r\n\t\t _gl.pixelStorei( 32877, unpackSkipImages );\r\n \r\n\t\t // Generate mipmaps only when copying level 0\r\n\t\t if ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\r\n \r\n\t\t state.unbindTexture();\r\n \r\n\t };\r\n \r\n\t this.initTexture = function ( texture ) {\r\n \r\n\t\t textures.setTexture2D( texture, 0 );\r\n \r\n\t\t state.unbindTexture();\r\n \r\n\t };\r\n \r\n\t this.resetState = function () {\r\n \r\n\t\t _currentActiveCubeFace = 0;\r\n\t\t _currentActiveMipmapLevel = 0;\r\n\t\t _currentRenderTarget = null;\r\n \r\n\t\t state.reset();\r\n\t\t bindingStates.reset();\r\n \r\n\t };\r\n \r\n\t if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n \r\n\t\t __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\r\n \r\n\t }\r\n \r\n }\r\n \r\n WebGLRenderer.prototype.isWebGLRenderer = true;\r\n \r\n class WebGL1Renderer extends WebGLRenderer {}\r\n \r\n WebGL1Renderer.prototype.isWebGL1Renderer = true;\r\n \r\n class FogExp2 {\r\n \r\n\t constructor( color, density = 0.00025 ) {\r\n \r\n\t\t this.name = '';\r\n \r\n\t\t this.color = new Color( color );\r\n\t\t this.density = density;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new FogExp2( this.color, this.density );\r\n \r\n\t }\r\n \r\n\t toJSON( /* meta */ ) {\r\n \r\n\t\t return {\r\n\t\t\t type: 'FogExp2',\r\n\t\t\t color: this.color.getHex(),\r\n\t\t\t density: this.density\r\n\t\t };\r\n \r\n\t }\r\n \r\n }\r\n \r\n FogExp2.prototype.isFogExp2 = true;\r\n \r\n class Fog {\r\n \r\n\t constructor( color, near = 1, far = 1000 ) {\r\n \r\n\t\t this.name = '';\r\n \r\n\t\t this.color = new Color( color );\r\n \r\n\t\t this.near = near;\r\n\t\t this.far = far;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new Fog( this.color, this.near, this.far );\r\n \r\n\t }\r\n \r\n\t toJSON( /* meta */ ) {\r\n \r\n\t\t return {\r\n\t\t\t type: 'Fog',\r\n\t\t\t color: this.color.getHex(),\r\n\t\t\t near: this.near,\r\n\t\t\t far: this.far\r\n\t\t };\r\n \r\n\t }\r\n \r\n }\r\n \r\n Fog.prototype.isFog = true;\r\n \r\n class Scene extends Object3D {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Scene';\r\n \r\n\t\t this.background = null;\r\n\t\t this.environment = null;\r\n\t\t this.fog = null;\r\n \r\n\t\t this.overrideMaterial = null;\r\n \r\n\t\t this.autoUpdate = true; // checked by the renderer\r\n \r\n\t\t if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n \r\n\t\t\t __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t copy( source, recursive ) {\r\n \r\n\t\t super.copy( source, recursive );\r\n \r\n\t\t if ( source.background !== null ) this.background = source.background.clone();\r\n\t\t if ( source.environment !== null ) this.environment = source.environment.clone();\r\n\t\t if ( source.fog !== null ) this.fog = source.fog.clone();\r\n \r\n\t\t if ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n \r\n\t\t this.autoUpdate = source.autoUpdate;\r\n\t\t this.matrixAutoUpdate = source.matrixAutoUpdate;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t if ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Scene.prototype.isScene = true;\r\n \r\n class InterleavedBuffer {\r\n \r\n\t constructor( array, stride ) {\r\n \r\n\t\t this.array = array;\r\n\t\t this.stride = stride;\r\n\t\t this.count = array !== undefined ? array.length / stride : 0;\r\n \r\n\t\t this.usage = StaticDrawUsage;\r\n\t\t this.updateRange = { offset: 0, count: - 1 };\r\n \r\n\t\t this.version = 0;\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t }\r\n \r\n\t onUploadCallback() {}\r\n \r\n\t set needsUpdate( value ) {\r\n \r\n\t\t if ( value === true ) this.version ++;\r\n \r\n\t }\r\n \r\n\t setUsage( value ) {\r\n \r\n\t\t this.usage = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.array = new source.array.constructor( source.array );\r\n\t\t this.count = source.count;\r\n\t\t this.stride = source.stride;\r\n\t\t this.usage = source.usage;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copyAt( index1, attribute, index2 ) {\r\n \r\n\t\t index1 *= this.stride;\r\n\t\t index2 *= attribute.stride;\r\n \r\n\t\t for ( let i = 0, l = this.stride; i < l; i ++ ) {\r\n \r\n\t\t\t this.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t set( value, offset = 0 ) {\r\n \r\n\t\t this.array.set( value, offset );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone( data ) {\r\n \r\n\t\t if ( data.arrayBuffers === undefined ) {\r\n \r\n\t\t\t data.arrayBuffers = {};\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.array.buffer._uuid === undefined ) {\r\n \r\n\t\t\t this.array.buffer._uuid = generateUUID();\r\n \r\n\t\t }\r\n \r\n\t\t if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\r\n \r\n\t\t\t data.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\r\n \r\n\t\t }\r\n \r\n\t\t const array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\r\n \r\n\t\t const ib = new this.constructor( array, this.stride );\r\n\t\t ib.setUsage( this.usage );\r\n \r\n\t\t return ib;\r\n \r\n\t }\r\n \r\n\t onUpload( callback ) {\r\n \r\n\t\t this.onUploadCallback = callback;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON( data ) {\r\n \r\n\t\t if ( data.arrayBuffers === undefined ) {\r\n \r\n\t\t\t data.arrayBuffers = {};\r\n \r\n\t\t }\r\n \r\n\t\t // generate UUID for array buffer if necessary\r\n \r\n\t\t if ( this.array.buffer._uuid === undefined ) {\r\n \r\n\t\t\t this.array.buffer._uuid = generateUUID();\r\n \r\n\t\t }\r\n \r\n\t\t if ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\r\n \r\n\t\t\t data.arrayBuffers[ this.array.buffer._uuid ] = Array.prototype.slice.call( new Uint32Array( this.array.buffer ) );\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t return {\r\n\t\t\t uuid: this.uuid,\r\n\t\t\t buffer: this.array.buffer._uuid,\r\n\t\t\t type: this.array.constructor.name,\r\n\t\t\t stride: this.stride\r\n\t\t };\r\n \r\n\t }\r\n \r\n }\r\n \r\n InterleavedBuffer.prototype.isInterleavedBuffer = true;\r\n \r\n const _vector$6 = /*@__PURE__*/ new Vector3();\r\n \r\n class InterleavedBufferAttribute {\r\n \r\n\t constructor( interleavedBuffer, itemSize, offset, normalized = false ) {\r\n \r\n\t\t this.name = '';\r\n \r\n\t\t this.data = interleavedBuffer;\r\n\t\t this.itemSize = itemSize;\r\n\t\t this.offset = offset;\r\n \r\n\t\t this.normalized = normalized === true;\r\n \r\n\t }\r\n \r\n\t get count() {\r\n \r\n\t\t return this.data.count;\r\n \r\n\t }\r\n \r\n\t get array() {\r\n \r\n\t\t return this.data.array;\r\n \r\n\t }\r\n \r\n\t set needsUpdate( value ) {\r\n \r\n\t\t this.data.needsUpdate = value;\r\n \r\n\t }\r\n \r\n\t applyMatrix4( m ) {\r\n \r\n\t\t for ( let i = 0, l = this.data.count; i < l; i ++ ) {\r\n \r\n\t\t\t _vector$6.x = this.getX( i );\r\n\t\t\t _vector$6.y = this.getY( i );\r\n\t\t\t _vector$6.z = this.getZ( i );\r\n \r\n\t\t\t _vector$6.applyMatrix4( m );\r\n \r\n\t\t\t this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t applyNormalMatrix( m ) {\r\n \r\n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\r\n \r\n\t\t\t _vector$6.x = this.getX( i );\r\n\t\t\t _vector$6.y = this.getY( i );\r\n\t\t\t _vector$6.z = this.getZ( i );\r\n \r\n\t\t\t _vector$6.applyNormalMatrix( m );\r\n \r\n\t\t\t this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t transformDirection( m ) {\r\n \r\n\t\t for ( let i = 0, l = this.count; i < l; i ++ ) {\r\n \r\n\t\t\t _vector$6.x = this.getX( i );\r\n\t\t\t _vector$6.y = this.getY( i );\r\n\t\t\t _vector$6.z = this.getZ( i );\r\n \r\n\t\t\t _vector$6.transformDirection( m );\r\n \r\n\t\t\t this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setX( index, x ) {\r\n \r\n\t\t this.data.array[ index * this.data.stride + this.offset ] = x;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setY( index, y ) {\r\n \r\n\t\t this.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setZ( index, z ) {\r\n \r\n\t\t this.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setW( index, w ) {\r\n \r\n\t\t this.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getX( index ) {\r\n \r\n\t\t return this.data.array[ index * this.data.stride + this.offset ];\r\n \r\n\t }\r\n \r\n\t getY( index ) {\r\n \r\n\t\t return this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n \r\n\t }\r\n \r\n\t getZ( index ) {\r\n \r\n\t\t return this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n \r\n\t }\r\n \r\n\t getW( index ) {\r\n \r\n\t\t return this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n \r\n\t }\r\n \r\n\t setXY( index, x, y ) {\r\n \r\n\t\t index = index * this.data.stride + this.offset;\r\n \r\n\t\t this.data.array[ index + 0 ] = x;\r\n\t\t this.data.array[ index + 1 ] = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setXYZ( index, x, y, z ) {\r\n \r\n\t\t index = index * this.data.stride + this.offset;\r\n \r\n\t\t this.data.array[ index + 0 ] = x;\r\n\t\t this.data.array[ index + 1 ] = y;\r\n\t\t this.data.array[ index + 2 ] = z;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setXYZW( index, x, y, z, w ) {\r\n \r\n\t\t index = index * this.data.stride + this.offset;\r\n \r\n\t\t this.data.array[ index + 0 ] = x;\r\n\t\t this.data.array[ index + 1 ] = y;\r\n\t\t this.data.array[ index + 2 ] = z;\r\n\t\t this.data.array[ index + 3 ] = w;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone( data ) {\r\n \r\n\t\t if ( data === undefined ) {\r\n \r\n\t\t\t console.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.' );\r\n \r\n\t\t\t const array = [];\r\n \r\n\t\t\t for ( let i = 0; i < this.count; i ++ ) {\r\n \r\n\t\t\t\t const index = i * this.data.stride + this.offset;\r\n \r\n\t\t\t\t for ( let j = 0; j < this.itemSize; j ++ ) {\r\n \r\n\t\t\t\t\t array.push( this.data.array[ index + j ] );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( data.interleavedBuffers === undefined ) {\r\n \r\n\t\t\t\t data.interleavedBuffers = {};\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\r\n \r\n\t\t\t\t data.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toJSON( data ) {\r\n \r\n\t\t if ( data === undefined ) {\r\n \r\n\t\t\t console.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.' );\r\n \r\n\t\t\t const array = [];\r\n \r\n\t\t\t for ( let i = 0; i < this.count; i ++ ) {\r\n \r\n\t\t\t\t const index = i * this.data.stride + this.offset;\r\n \r\n\t\t\t\t for ( let j = 0; j < this.itemSize; j ++ ) {\r\n \r\n\t\t\t\t\t array.push( this.data.array[ index + j ] );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // deinterleave data and save it as an ordinary buffer attribute for now\r\n \r\n\t\t\t return {\r\n\t\t\t\t itemSize: this.itemSize,\r\n\t\t\t\t type: this.array.constructor.name,\r\n\t\t\t\t array: array,\r\n\t\t\t\t normalized: this.normalized\r\n\t\t\t };\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // save as true interlaved attribtue\r\n \r\n\t\t\t if ( data.interleavedBuffers === undefined ) {\r\n \r\n\t\t\t\t data.interleavedBuffers = {};\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\r\n \r\n\t\t\t\t data.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return {\r\n\t\t\t\t isInterleavedBufferAttribute: true,\r\n\t\t\t\t itemSize: this.itemSize,\r\n\t\t\t\t data: this.data.uuid,\r\n\t\t\t\t offset: this.offset,\r\n\t\t\t\t normalized: this.normalized\r\n\t\t\t };\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *  rotation: <float>,\r\n  *  sizeAttenuation: <bool>\r\n  * }\r\n  */\r\n \r\n class SpriteMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'SpriteMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff );\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.rotation = 0;\r\n \r\n\t\t this.sizeAttenuation = true;\r\n \r\n\t\t this.transparent = true;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.rotation = source.rotation;\r\n \r\n\t\t this.sizeAttenuation = source.sizeAttenuation;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n SpriteMaterial.prototype.isSpriteMaterial = true;\r\n \r\n let _geometry;\r\n \r\n const _intersectPoint = /*@__PURE__*/ new Vector3();\r\n const _worldScale = /*@__PURE__*/ new Vector3();\r\n const _mvPosition = /*@__PURE__*/ new Vector3();\r\n \r\n const _alignedPosition = /*@__PURE__*/ new Vector2();\r\n const _rotatedPosition = /*@__PURE__*/ new Vector2();\r\n const _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n \r\n const _vA = /*@__PURE__*/ new Vector3();\r\n const _vB = /*@__PURE__*/ new Vector3();\r\n const _vC = /*@__PURE__*/ new Vector3();\r\n \r\n const _uvA = /*@__PURE__*/ new Vector2();\r\n const _uvB = /*@__PURE__*/ new Vector2();\r\n const _uvC = /*@__PURE__*/ new Vector2();\r\n \r\n class Sprite extends Object3D {\r\n \r\n\t constructor( material ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Sprite';\r\n \r\n\t\t if ( _geometry === undefined ) {\r\n \r\n\t\t\t _geometry = new BufferGeometry();\r\n \r\n\t\t\t const float32Array = new Float32Array( [\r\n\t\t\t\t - 0.5, - 0.5, 0, 0, 0,\r\n\t\t\t\t 0.5, - 0.5, 0, 1, 0,\r\n\t\t\t\t 0.5, 0.5, 0, 1, 1,\r\n\t\t\t\t - 0.5, 0.5, 0, 0, 1\r\n\t\t\t ] );\r\n \r\n\t\t\t const interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\r\n \r\n\t\t\t _geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\r\n\t\t\t _geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\r\n\t\t\t _geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\r\n \r\n\t\t }\r\n \r\n\t\t this.geometry = _geometry;\r\n\t\t this.material = ( material !== undefined ) ? material : new SpriteMaterial();\r\n \r\n\t\t this.center = new Vector2( 0.5, 0.5 );\r\n \r\n\t }\r\n \r\n\t raycast( raycaster, intersects ) {\r\n \r\n\t\t if ( raycaster.camera === null ) {\r\n \r\n\t\t\t console.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\r\n \r\n\t\t }\r\n \r\n\t\t _worldScale.setFromMatrixScale( this.matrixWorld );\r\n \r\n\t\t _viewWorldMatrix.copy( raycaster.camera.matrixWorld );\r\n\t\t this.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\r\n \r\n\t\t _mvPosition.setFromMatrixPosition( this.modelViewMatrix );\r\n \r\n\t\t if ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\r\n \r\n\t\t\t _worldScale.multiplyScalar( - _mvPosition.z );\r\n \r\n\t\t }\r\n \r\n\t\t const rotation = this.material.rotation;\r\n\t\t let sin, cos;\r\n \r\n\t\t if ( rotation !== 0 ) {\r\n \r\n\t\t\t cos = Math.cos( rotation );\r\n\t\t\t sin = Math.sin( rotation );\r\n \r\n\t\t }\r\n \r\n\t\t const center = this.center;\r\n \r\n\t\t transformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\t transformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\t transformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n \r\n\t\t _uvA.set( 0, 0 );\r\n\t\t _uvB.set( 1, 0 );\r\n\t\t _uvC.set( 1, 1 );\r\n \r\n\t\t // check first triangle\r\n\t\t let intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\r\n \r\n\t\t if ( intersect === null ) {\r\n \r\n\t\t\t // check second triangle\r\n\t\t\t transformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\t\t _uvB.set( 0, 1 );\r\n \r\n\t\t\t intersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\r\n\t\t\t if ( intersect === null ) {\r\n \r\n\t\t\t\t return;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const distance = raycaster.ray.origin.distanceTo( _intersectPoint );\r\n \r\n\t\t if ( distance < raycaster.near || distance > raycaster.far ) return;\r\n \r\n\t\t intersects.push( {\r\n \r\n\t\t\t distance: distance,\r\n\t\t\t point: _intersectPoint.clone(),\r\n\t\t\t uv: Triangle.getUV( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\r\n\t\t\t face: null,\r\n\t\t\t object: this\r\n \r\n\t\t } );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t if ( source.center !== undefined ) this.center.copy( source.center );\r\n \r\n\t\t this.material = source.material;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Sprite.prototype.isSprite = true;\r\n \r\n function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\r\n \r\n\t // compute position in camera space\r\n\t _alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\r\n \r\n\t // to check if rotation is not zero\r\n\t if ( sin !== undefined ) {\r\n \r\n\t\t _rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\r\n\t\t _rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\r\n \r\n\t } else {\r\n \r\n\t\t _rotatedPosition.copy( _alignedPosition );\r\n \r\n\t }\r\n \r\n \r\n\t vertexPosition.copy( mvPosition );\r\n\t vertexPosition.x += _rotatedPosition.x;\r\n\t vertexPosition.y += _rotatedPosition.y;\r\n \r\n\t // transform to world space\r\n\t vertexPosition.applyMatrix4( _viewWorldMatrix );\r\n \r\n }\r\n \r\n const _v1$2 = /*@__PURE__*/ new Vector3();\r\n const _v2$1 = /*@__PURE__*/ new Vector3();\r\n \r\n class LOD extends Object3D {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this._currentLevel = 0;\r\n \r\n\t\t this.type = 'LOD';\r\n \r\n\t\t Object.defineProperties( this, {\r\n\t\t\t levels: {\r\n\t\t\t\t enumerable: true,\r\n\t\t\t\t value: []\r\n\t\t\t },\r\n\t\t\t isLOD: {\r\n\t\t\t\t value: true,\r\n\t\t\t }\r\n\t\t } );\r\n \r\n\t\t this.autoUpdate = true;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source, false );\r\n \r\n\t\t const levels = source.levels;\r\n \r\n\t\t for ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n \r\n\t\t\t const level = levels[ i ];\r\n \r\n\t\t\t this.addLevel( level.object.clone(), level.distance );\r\n \r\n\t\t }\r\n \r\n\t\t this.autoUpdate = source.autoUpdate;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addLevel( object, distance = 0 ) {\r\n \r\n\t\t distance = Math.abs( distance );\r\n \r\n\t\t const levels = this.levels;\r\n \r\n\t\t let l;\r\n \r\n\t\t for ( l = 0; l < levels.length; l ++ ) {\r\n \r\n\t\t\t if ( distance < levels[ l ].distance ) {\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t levels.splice( l, 0, { distance: distance, object: object } );\r\n \r\n\t\t this.add( object );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getCurrentLevel() {\r\n \r\n\t\t return this._currentLevel;\r\n \r\n\t }\r\n \r\n\t getObjectForDistance( distance ) {\r\n \r\n\t\t const levels = this.levels;\r\n \r\n\t\t if ( levels.length > 0 ) {\r\n \r\n\t\t\t let i, l;\r\n \r\n\t\t\t for ( i = 1, l = levels.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t if ( distance < levels[ i ].distance ) {\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return levels[ i - 1 ].object;\r\n \r\n\t\t }\r\n \r\n\t\t return null;\r\n \r\n\t }\r\n \r\n\t raycast( raycaster, intersects ) {\r\n \r\n\t\t const levels = this.levels;\r\n \r\n\t\t if ( levels.length > 0 ) {\r\n \r\n\t\t\t _v1$2.setFromMatrixPosition( this.matrixWorld );\r\n \r\n\t\t\t const distance = raycaster.ray.origin.distanceTo( _v1$2 );\r\n \r\n\t\t\t this.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t update( camera ) {\r\n \r\n\t\t const levels = this.levels;\r\n \r\n\t\t if ( levels.length > 1 ) {\r\n \r\n\t\t\t _v1$2.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t _v2$1.setFromMatrixPosition( this.matrixWorld );\r\n \r\n\t\t\t const distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\r\n \r\n\t\t\t levels[ 0 ].object.visible = true;\r\n \r\n\t\t\t let i, l;\r\n \r\n\t\t\t for ( i = 1, l = levels.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t if ( distance >= levels[ i ].distance ) {\r\n \r\n\t\t\t\t\t levels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t levels[ i ].object.visible = true;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this._currentLevel = i - 1;\r\n \r\n\t\t\t for ( ; i < l; i ++ ) {\r\n \r\n\t\t\t\t levels[ i ].object.visible = false;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t if ( this.autoUpdate === false ) data.object.autoUpdate = false;\r\n \r\n\t\t data.object.levels = [];\r\n \r\n\t\t const levels = this.levels;\r\n \r\n\t\t for ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n \r\n\t\t\t const level = levels[ i ];\r\n \r\n\t\t\t data.object.levels.push( {\r\n\t\t\t\t object: level.object.uuid,\r\n\t\t\t\t distance: level.distance\r\n\t\t\t } );\r\n \r\n\t\t }\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _basePosition = /*@__PURE__*/ new Vector3();\r\n \r\n const _skinIndex = /*@__PURE__*/ new Vector4();\r\n const _skinWeight = /*@__PURE__*/ new Vector4();\r\n \r\n const _vector$5 = /*@__PURE__*/ new Vector3();\r\n const _matrix = /*@__PURE__*/ new Matrix4();\r\n \r\n class SkinnedMesh extends Mesh {\r\n \r\n\t constructor( geometry, material ) {\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'SkinnedMesh';\r\n \r\n\t\t this.bindMode = 'attached';\r\n\t\t this.bindMatrix = new Matrix4();\r\n\t\t this.bindMatrixInverse = new Matrix4();\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.bindMode = source.bindMode;\r\n\t\t this.bindMatrix.copy( source.bindMatrix );\r\n\t\t this.bindMatrixInverse.copy( source.bindMatrixInverse );\r\n \r\n\t\t this.skeleton = source.skeleton;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t bind( skeleton, bindMatrix ) {\r\n \r\n\t\t this.skeleton = skeleton;\r\n \r\n\t\t if ( bindMatrix === undefined ) {\r\n \r\n\t\t\t this.updateMatrixWorld( true );\r\n \r\n\t\t\t this.skeleton.calculateInverses();\r\n \r\n\t\t\t bindMatrix = this.matrixWorld;\r\n \r\n\t\t }\r\n \r\n\t\t this.bindMatrix.copy( bindMatrix );\r\n\t\t this.bindMatrixInverse.copy( bindMatrix ).invert();\r\n \r\n\t }\r\n \r\n\t pose() {\r\n \r\n\t\t this.skeleton.pose();\r\n \r\n\t }\r\n \r\n\t normalizeSkinWeights() {\r\n \r\n\t\t const vector = new Vector4();\r\n \r\n\t\t const skinWeight = this.geometry.attributes.skinWeight;\r\n \r\n\t\t for ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\r\n \r\n\t\t\t vector.x = skinWeight.getX( i );\r\n\t\t\t vector.y = skinWeight.getY( i );\r\n\t\t\t vector.z = skinWeight.getZ( i );\r\n\t\t\t vector.w = skinWeight.getW( i );\r\n \r\n\t\t\t const scale = 1.0 / vector.manhattanLength();\r\n \r\n\t\t\t if ( scale !== Infinity ) {\r\n \r\n\t\t\t\t vector.multiplyScalar( scale );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t vector.set( 1, 0, 0, 0 ); // do something reasonable\r\n \r\n\t\t\t }\r\n \r\n\t\t\t skinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t super.updateMatrixWorld( force );\r\n \r\n\t\t if ( this.bindMode === 'attached' ) {\r\n \r\n\t\t\t this.bindMatrixInverse.copy( this.matrixWorld ).invert();\r\n \r\n\t\t } else if ( this.bindMode === 'detached' ) {\r\n \r\n\t\t\t this.bindMatrixInverse.copy( this.bindMatrix ).invert();\r\n \r\n\t\t } else {\r\n \r\n\t\t\t console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t boneTransform( index, target ) {\r\n \r\n\t\t const skeleton = this.skeleton;\r\n\t\t const geometry = this.geometry;\r\n \r\n\t\t _skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\r\n\t\t _skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\r\n \r\n\t\t _basePosition.copy( target ).applyMatrix4( this.bindMatrix );\r\n \r\n\t\t target.set( 0, 0, 0 );\r\n \r\n\t\t for ( let i = 0; i < 4; i ++ ) {\r\n \r\n\t\t\t const weight = _skinWeight.getComponent( i );\r\n \r\n\t\t\t if ( weight !== 0 ) {\r\n \r\n\t\t\t\t const boneIndex = _skinIndex.getComponent( i );\r\n \r\n\t\t\t\t _matrix.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\r\n \r\n\t\t\t\t target.addScaledVector( _vector$5.copy( _basePosition ).applyMatrix4( _matrix ), weight );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return target.applyMatrix4( this.bindMatrixInverse );\r\n \r\n\t }\r\n \r\n }\r\n \r\n SkinnedMesh.prototype.isSkinnedMesh = true;\r\n \r\n class Bone extends Object3D {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Bone';\r\n \r\n\t }\r\n \r\n }\r\n \r\n Bone.prototype.isBone = true;\r\n \r\n class DataTexture extends Texture {\r\n \r\n\t constructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\r\n \r\n\t\t super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n \r\n\t\t this.image = { data: data, width: width, height: height };\r\n \r\n\t\t this.generateMipmaps = false;\r\n\t\t this.flipY = false;\r\n\t\t this.unpackAlignment = 1;\r\n \r\n\t }\r\n \r\n }\r\n \r\n DataTexture.prototype.isDataTexture = true;\r\n \r\n const _offsetMatrix = /*@__PURE__*/ new Matrix4();\r\n const _identityMatrix = /*@__PURE__*/ new Matrix4();\r\n \r\n class Skeleton {\r\n \r\n\t constructor( bones = [], boneInverses = [] ) {\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t this.bones = bones.slice( 0 );\r\n\t\t this.boneInverses = boneInverses;\r\n\t\t this.boneMatrices = null;\r\n \r\n\t\t this.boneTexture = null;\r\n\t\t this.boneTextureSize = 0;\r\n \r\n\t\t this.frame = - 1;\r\n \r\n\t\t this.init();\r\n \r\n\t }\r\n \r\n\t init() {\r\n \r\n\t\t const bones = this.bones;\r\n\t\t const boneInverses = this.boneInverses;\r\n \r\n\t\t this.boneMatrices = new Float32Array( bones.length * 16 );\r\n \r\n\t\t // calculate inverse bone matrices if necessary\r\n \r\n\t\t if ( boneInverses.length === 0 ) {\r\n \r\n\t\t\t this.calculateInverses();\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // handle special case\r\n \r\n\t\t\t if ( bones.length !== boneInverses.length ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\r\n \r\n\t\t\t\t this.boneInverses = [];\r\n \r\n\t\t\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t this.boneInverses.push( new Matrix4() );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t calculateInverses() {\r\n \r\n\t\t this.boneInverses.length = 0;\r\n \r\n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n \r\n\t\t\t const inverse = new Matrix4();\r\n \r\n\t\t\t if ( this.bones[ i ] ) {\r\n \r\n\t\t\t\t inverse.copy( this.bones[ i ].matrixWorld ).invert();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.boneInverses.push( inverse );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t pose() {\r\n \r\n\t\t // recover the bind-time world matrices\r\n \r\n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n \r\n\t\t\t const bone = this.bones[ i ];\r\n \r\n\t\t\t if ( bone ) {\r\n \r\n\t\t\t\t bone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // compute the local matrices, positions, rotations and scales\r\n \r\n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n \r\n\t\t\t const bone = this.bones[ i ];\r\n \r\n\t\t\t if ( bone ) {\r\n \r\n\t\t\t\t if ( bone.parent && bone.parent.isBone ) {\r\n \r\n\t\t\t\t\t bone.matrix.copy( bone.parent.matrixWorld ).invert();\r\n\t\t\t\t\t bone.matrix.multiply( bone.matrixWorld );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t bone.matrix.copy( bone.matrixWorld );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t update() {\r\n \r\n\t\t const bones = this.bones;\r\n\t\t const boneInverses = this.boneInverses;\r\n\t\t const boneMatrices = this.boneMatrices;\r\n\t\t const boneTexture = this.boneTexture;\r\n \r\n\t\t // flatten bone matrices to array\r\n \r\n\t\t for ( let i = 0, il = bones.length; i < il; i ++ ) {\r\n \r\n\t\t\t // compute the offset between the current and the original transform\r\n \r\n\t\t\t const matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\r\n \r\n\t\t\t _offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\r\n\t\t\t _offsetMatrix.toArray( boneMatrices, i * 16 );\r\n \r\n\t\t }\r\n \r\n\t\t if ( boneTexture !== null ) {\r\n \r\n\t\t\t boneTexture.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new Skeleton( this.bones, this.boneInverses );\r\n \r\n\t }\r\n \r\n\t computeBoneTexture() {\r\n \r\n\t\t // layout (1 matrix = 4 pixels)\r\n\t\t //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n \r\n\t\t let size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t size = ceilPowerOfTwo( size );\r\n\t\t size = Math.max( size, 4 );\r\n \r\n\t\t const boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\t boneMatrices.set( this.boneMatrices ); // copy current values\r\n \r\n\t\t const boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\r\n\t\t boneTexture.needsUpdate = true;\r\n \r\n\t\t this.boneMatrices = boneMatrices;\r\n\t\t this.boneTexture = boneTexture;\r\n\t\t this.boneTextureSize = size;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getBoneByName( name ) {\r\n \r\n\t\t for ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n \r\n\t\t\t const bone = this.bones[ i ];\r\n \r\n\t\t\t if ( bone.name === name ) {\r\n \r\n\t\t\t\t return bone;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return undefined;\r\n \r\n\t }\r\n \r\n\t dispose( ) {\r\n \r\n\t\t if ( this.boneTexture !== null ) {\r\n \r\n\t\t\t this.boneTexture.dispose();\r\n \r\n\t\t\t this.boneTexture = null;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t fromJSON( json, bones ) {\r\n \r\n\t\t this.uuid = json.uuid;\r\n \r\n\t\t for ( let i = 0, l = json.bones.length; i < l; i ++ ) {\r\n \r\n\t\t\t const uuid = json.bones[ i ];\r\n\t\t\t let bone = bones[ uuid ];\r\n \r\n\t\t\t if ( bone === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\r\n\t\t\t\t bone = new Bone();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.bones.push( bone );\r\n\t\t\t this.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\r\n \r\n\t\t }\r\n \r\n\t\t this.init();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = {\r\n\t\t\t metadata: {\r\n\t\t\t\t version: 4.5,\r\n\t\t\t\t type: 'Skeleton',\r\n\t\t\t\t generator: 'Skeleton.toJSON'\r\n\t\t\t },\r\n\t\t\t bones: [],\r\n\t\t\t boneInverses: []\r\n\t\t };\r\n \r\n\t\t data.uuid = this.uuid;\r\n \r\n\t\t const bones = this.bones;\r\n\t\t const boneInverses = this.boneInverses;\r\n \r\n\t\t for ( let i = 0, l = bones.length; i < l; i ++ ) {\r\n \r\n\t\t\t const bone = bones[ i ];\r\n\t\t\t data.bones.push( bone.uuid );\r\n \r\n\t\t\t const boneInverse = boneInverses[ i ];\r\n\t\t\t data.boneInverses.push( boneInverse.toArray() );\r\n \r\n\t\t }\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class InstancedBufferAttribute extends BufferAttribute {\r\n \r\n\t constructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\r\n \r\n\t\t if ( typeof normalized === 'number' ) {\r\n \r\n\t\t\t meshPerAttribute = normalized;\r\n \r\n\t\t\t normalized = false;\r\n \r\n\t\t\t console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\r\n \r\n\t\t }\r\n \r\n\t\t super( array, itemSize, normalized );\r\n \r\n\t\t this.meshPerAttribute = meshPerAttribute;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.meshPerAttribute = source.meshPerAttribute;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.meshPerAttribute = this.meshPerAttribute;\r\n \r\n\t\t data.isInstancedBufferAttribute = true;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\r\n \r\n const _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\r\n const _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n \r\n const _instanceIntersects = [];\r\n \r\n const _mesh = /*@__PURE__*/ new Mesh();\r\n \r\n class InstancedMesh extends Mesh {\r\n \r\n\t constructor( geometry, material, count ) {\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\r\n\t\t this.instanceColor = null;\r\n \r\n\t\t this.count = count;\r\n \r\n\t\t this.frustumCulled = false;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.instanceMatrix.copy( source.instanceMatrix );\r\n \r\n\t\t if ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\r\n \r\n\t\t this.count = source.count;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getColorAt( index, color ) {\r\n \r\n\t\t color.fromArray( this.instanceColor.array, index * 3 );\r\n \r\n\t }\r\n \r\n\t getMatrixAt( index, matrix ) {\r\n \r\n\t\t matrix.fromArray( this.instanceMatrix.array, index * 16 );\r\n \r\n\t }\r\n \r\n\t raycast( raycaster, intersects ) {\r\n \r\n\t\t const matrixWorld = this.matrixWorld;\r\n\t\t const raycastTimes = this.count;\r\n \r\n\t\t _mesh.geometry = this.geometry;\r\n\t\t _mesh.material = this.material;\r\n \r\n\t\t if ( _mesh.material === undefined ) return;\r\n \r\n\t\t for ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\r\n \r\n\t\t\t // calculate the world matrix for each instance\r\n \r\n\t\t\t this.getMatrixAt( instanceId, _instanceLocalMatrix );\r\n \r\n\t\t\t _instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\r\n \r\n\t\t\t // the mesh represents this single instance\r\n \r\n\t\t\t _mesh.matrixWorld = _instanceWorldMatrix;\r\n \r\n\t\t\t _mesh.raycast( raycaster, _instanceIntersects );\r\n \r\n\t\t\t // process the result of raycast\r\n \r\n\t\t\t for ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const intersect = _instanceIntersects[ i ];\r\n\t\t\t\t intersect.instanceId = instanceId;\r\n\t\t\t\t intersect.object = this;\r\n\t\t\t\t intersects.push( intersect );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t _instanceIntersects.length = 0;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t setColorAt( index, color ) {\r\n \r\n\t\t if ( this.instanceColor === null ) {\r\n \r\n\t\t\t this.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\r\n \r\n\t\t }\r\n \r\n\t\t color.toArray( this.instanceColor.array, index * 3 );\r\n \r\n\t }\r\n \r\n\t setMatrixAt( index, matrix ) {\r\n \r\n\t\t matrix.toArray( this.instanceMatrix.array, index * 16 );\r\n \r\n\t }\r\n \r\n\t updateMorphTargets() {\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.dispatchEvent( { type: 'dispose' } );\r\n \r\n\t }\r\n \r\n }\r\n \r\n InstancedMesh.prototype.isInstancedMesh = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  opacity: <float>,\r\n  *\r\n  *  linewidth: <float>,\r\n  *  linecap: \"round\",\r\n  *  linejoin: \"round\"\r\n  * }\r\n  */\r\n \r\n class LineBasicMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'LineBasicMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff );\r\n \r\n\t\t this.linewidth = 1;\r\n\t\t this.linecap = 'round';\r\n\t\t this.linejoin = 'round';\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t this.linewidth = source.linewidth;\r\n\t\t this.linecap = source.linecap;\r\n\t\t this.linejoin = source.linejoin;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n LineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n \r\n const _start$1 = /*@__PURE__*/ new Vector3();\r\n const _end$1 = /*@__PURE__*/ new Vector3();\r\n const _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\r\n const _ray$1 = /*@__PURE__*/ new Ray();\r\n const _sphere$1 = /*@__PURE__*/ new Sphere();\r\n \r\n class Line extends Object3D {\r\n \r\n\t constructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Line';\r\n \r\n\t\t this.geometry = geometry;\r\n\t\t this.material = material;\r\n \r\n\t\t this.updateMorphTargets();\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.material = source.material;\r\n\t\t this.geometry = source.geometry;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t computeLineDistances() {\r\n \r\n\t\t const geometry = this.geometry;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t // we assume non-indexed geometry\r\n \r\n\t\t\t if ( geometry.index === null ) {\r\n \r\n\t\t\t\t const positionAttribute = geometry.attributes.position;\r\n\t\t\t\t const lineDistances = [ 0 ];\r\n \r\n\t\t\t\t for ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t _start$1.fromBufferAttribute( positionAttribute, i - 1 );\r\n\t\t\t\t\t _end$1.fromBufferAttribute( positionAttribute, i );\r\n \r\n\t\t\t\t\t lineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\t\t lineDistances[ i ] += _start$1.distanceTo( _end$1 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( geometry.isGeometry ) {\r\n \r\n\t\t\t console.error( 'THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t raycast( raycaster, intersects ) {\r\n \r\n\t\t const geometry = this.geometry;\r\n\t\t const matrixWorld = this.matrixWorld;\r\n\t\t const threshold = raycaster.params.Line.threshold;\r\n\t\t const drawRange = geometry.drawRange;\r\n \r\n\t\t // Checking boundingSphere distance to ray\r\n \r\n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n \r\n\t\t _sphere$1.copy( geometry.boundingSphere );\r\n\t\t _sphere$1.applyMatrix4( matrixWorld );\r\n\t\t _sphere$1.radius += threshold;\r\n \r\n\t\t if ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\r\n \r\n\t\t //\r\n \r\n\t\t _inverseMatrix$1.copy( matrixWorld ).invert();\r\n\t\t _ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\r\n \r\n\t\t const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t const localThresholdSq = localThreshold * localThreshold;\r\n \r\n\t\t const vStart = new Vector3();\r\n\t\t const vEnd = new Vector3();\r\n\t\t const interSegment = new Vector3();\r\n\t\t const interRay = new Vector3();\r\n\t\t const step = this.isLineSegments ? 2 : 1;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t const index = geometry.index;\r\n\t\t\t const attributes = geometry.attributes;\r\n\t\t\t const positionAttribute = attributes.position;\r\n \r\n\t\t\t if ( index !== null ) {\r\n \r\n\t\t\t\t const start = Math.max( 0, drawRange.start );\r\n\t\t\t\t const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n \r\n\t\t\t\t for ( let i = start, l = end - 1; i < l; i += step ) {\r\n \r\n\t\t\t\t\t const a = index.getX( i );\r\n\t\t\t\t\t const b = index.getX( i + 1 );\r\n \r\n\t\t\t\t\t vStart.fromBufferAttribute( positionAttribute, a );\r\n\t\t\t\t\t vEnd.fromBufferAttribute( positionAttribute, b );\r\n \r\n\t\t\t\t\t const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n \r\n\t\t\t\t\t if ( distSq > localThresholdSq ) continue;\r\n \r\n\t\t\t\t\t interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n \r\n\t\t\t\t\t const distance = raycaster.ray.origin.distanceTo( interRay );\r\n \r\n\t\t\t\t\t if ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n \r\n\t\t\t\t\t intersects.push( {\r\n \r\n\t\t\t\t\t\t distance: distance,\r\n\t\t\t\t\t\t // What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t // point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t point: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t index: i,\r\n\t\t\t\t\t\t face: null,\r\n\t\t\t\t\t\t faceIndex: null,\r\n\t\t\t\t\t\t object: this\r\n \r\n\t\t\t\t\t } );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t const start = Math.max( 0, drawRange.start );\r\n\t\t\t\t const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\r\n \r\n\t\t\t\t for ( let i = start, l = end - 1; i < l; i += step ) {\r\n \r\n\t\t\t\t\t vStart.fromBufferAttribute( positionAttribute, i );\r\n\t\t\t\t\t vEnd.fromBufferAttribute( positionAttribute, i + 1 );\r\n \r\n\t\t\t\t\t const distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n \r\n\t\t\t\t\t if ( distSq > localThresholdSq ) continue;\r\n \r\n\t\t\t\t\t interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n \r\n\t\t\t\t\t const distance = raycaster.ray.origin.distanceTo( interRay );\r\n \r\n\t\t\t\t\t if ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n \r\n\t\t\t\t\t intersects.push( {\r\n \r\n\t\t\t\t\t\t distance: distance,\r\n\t\t\t\t\t\t // What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t // point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t point: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t index: i,\r\n\t\t\t\t\t\t face: null,\r\n\t\t\t\t\t\t faceIndex: null,\r\n\t\t\t\t\t\t object: this\r\n \r\n\t\t\t\t\t } );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( geometry.isGeometry ) {\r\n \r\n\t\t\t console.error( 'THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t updateMorphTargets() {\r\n \r\n\t\t const geometry = this.geometry;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t const morphAttributes = geometry.morphAttributes;\r\n\t\t\t const keys = Object.keys( morphAttributes );\r\n \r\n\t\t\t if ( keys.length > 0 ) {\r\n \r\n\t\t\t\t const morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n \r\n\t\t\t\t if ( morphAttribute !== undefined ) {\r\n \r\n\t\t\t\t\t this.morphTargetInfluences = [];\r\n\t\t\t\t\t this.morphTargetDictionary = {};\r\n \r\n\t\t\t\t\t for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n \r\n\t\t\t\t\t\t const name = morphAttribute[ m ].name || String( m );\r\n \r\n\t\t\t\t\t\t this.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\t this.morphTargetDictionary[ name ] = m;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const morphTargets = geometry.morphTargets;\r\n \r\n\t\t\t if ( morphTargets !== undefined && morphTargets.length > 0 ) {\r\n \r\n\t\t\t\t console.error( 'THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n Line.prototype.isLine = true;\r\n \r\n const _start = /*@__PURE__*/ new Vector3();\r\n const _end = /*@__PURE__*/ new Vector3();\r\n \r\n class LineSegments extends Line {\r\n \r\n\t constructor( geometry, material ) {\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'LineSegments';\r\n \r\n\t }\r\n \r\n\t computeLineDistances() {\r\n \r\n\t\t const geometry = this.geometry;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t // we assume non-indexed geometry\r\n \r\n\t\t\t if ( geometry.index === null ) {\r\n \r\n\t\t\t\t const positionAttribute = geometry.attributes.position;\r\n\t\t\t\t const lineDistances = [];\r\n \r\n\t\t\t\t for ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\r\n \r\n\t\t\t\t\t _start.fromBufferAttribute( positionAttribute, i );\r\n\t\t\t\t\t _end.fromBufferAttribute( positionAttribute, i + 1 );\r\n \r\n\t\t\t\t\t lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\t\t lineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else if ( geometry.isGeometry ) {\r\n \r\n\t\t\t console.error( 'THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n LineSegments.prototype.isLineSegments = true;\r\n \r\n class LineLoop extends Line {\r\n \r\n\t constructor( geometry, material ) {\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'LineLoop';\r\n \r\n\t }\r\n \r\n }\r\n \r\n LineLoop.prototype.isLineLoop = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  opacity: <float>,\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  size: <float>,\r\n  *  sizeAttenuation: <bool>\r\n  *\r\n  * }\r\n  */\r\n \r\n class PointsMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'PointsMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff );\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.size = 1;\r\n\t\t this.sizeAttenuation = true;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.size = source.size;\r\n\t\t this.sizeAttenuation = source.sizeAttenuation;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n PointsMaterial.prototype.isPointsMaterial = true;\r\n \r\n const _inverseMatrix = /*@__PURE__*/ new Matrix4();\r\n const _ray = /*@__PURE__*/ new Ray();\r\n const _sphere = /*@__PURE__*/ new Sphere();\r\n const _position$2 = /*@__PURE__*/ new Vector3();\r\n \r\n class Points extends Object3D {\r\n \r\n\t constructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Points';\r\n \r\n\t\t this.geometry = geometry;\r\n\t\t this.material = material;\r\n \r\n\t\t this.updateMorphTargets();\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.material = source.material;\r\n\t\t this.geometry = source.geometry;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t raycast( raycaster, intersects ) {\r\n \r\n\t\t const geometry = this.geometry;\r\n\t\t const matrixWorld = this.matrixWorld;\r\n\t\t const threshold = raycaster.params.Points.threshold;\r\n\t\t const drawRange = geometry.drawRange;\r\n \r\n\t\t // Checking boundingSphere distance to ray\r\n \r\n\t\t if ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n \r\n\t\t _sphere.copy( geometry.boundingSphere );\r\n\t\t _sphere.applyMatrix4( matrixWorld );\r\n\t\t _sphere.radius += threshold;\r\n \r\n\t\t if ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\r\n \r\n\t\t //\r\n \r\n\t\t _inverseMatrix.copy( matrixWorld ).invert();\r\n\t\t _ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\r\n \r\n\t\t const localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t const localThresholdSq = localThreshold * localThreshold;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t const index = geometry.index;\r\n\t\t\t const attributes = geometry.attributes;\r\n\t\t\t const positionAttribute = attributes.position;\r\n \r\n\t\t\t if ( index !== null ) {\r\n \r\n\t\t\t\t const start = Math.max( 0, drawRange.start );\r\n\t\t\t\t const end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n \r\n\t\t\t\t for ( let i = start, il = end; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const a = index.getX( i );\r\n \r\n\t\t\t\t\t _position$2.fromBufferAttribute( positionAttribute, a );\r\n \r\n\t\t\t\t\t testPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t const start = Math.max( 0, drawRange.start );\r\n\t\t\t\t const end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\r\n \r\n\t\t\t\t for ( let i = start, l = end; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t _position$2.fromBufferAttribute( positionAttribute, i );\r\n \r\n\t\t\t\t\t testPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t console.error( 'THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t updateMorphTargets() {\r\n \r\n\t\t const geometry = this.geometry;\r\n \r\n\t\t if ( geometry.isBufferGeometry ) {\r\n \r\n\t\t\t const morphAttributes = geometry.morphAttributes;\r\n\t\t\t const keys = Object.keys( morphAttributes );\r\n \r\n\t\t\t if ( keys.length > 0 ) {\r\n \r\n\t\t\t\t const morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n \r\n\t\t\t\t if ( morphAttribute !== undefined ) {\r\n \r\n\t\t\t\t\t this.morphTargetInfluences = [];\r\n\t\t\t\t\t this.morphTargetDictionary = {};\r\n \r\n\t\t\t\t\t for ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n \r\n\t\t\t\t\t\t const name = morphAttribute[ m ].name || String( m );\r\n \r\n\t\t\t\t\t\t this.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\t\t this.morphTargetDictionary[ name ] = m;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const morphTargets = geometry.morphTargets;\r\n \r\n\t\t\t if ( morphTargets !== undefined && morphTargets.length > 0 ) {\r\n \r\n\t\t\t\t console.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n Points.prototype.isPoints = true;\r\n \r\n function testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\r\n \r\n\t const rayPointDistanceSq = _ray.distanceSqToPoint( point );\r\n \r\n\t if ( rayPointDistanceSq < localThresholdSq ) {\r\n \r\n\t\t const intersectPoint = new Vector3();\r\n \r\n\t\t _ray.closestPointToPoint( point, intersectPoint );\r\n\t\t intersectPoint.applyMatrix4( matrixWorld );\r\n \r\n\t\t const distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n \r\n\t\t if ( distance < raycaster.near || distance > raycaster.far ) return;\r\n \r\n\t\t intersects.push( {\r\n \r\n\t\t\t distance: distance,\r\n\t\t\t distanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t point: intersectPoint,\r\n\t\t\t index: index,\r\n\t\t\t face: null,\r\n\t\t\t object: object\r\n \r\n\t\t } );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class VideoTexture extends Texture {\r\n \r\n\t constructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n \r\n\t\t super( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n \r\n\t\t this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\r\n\t\t this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n \r\n\t\t this.generateMipmaps = false;\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t function updateVideo() {\r\n \r\n\t\t\t scope.needsUpdate = true;\r\n\t\t\t video.requestVideoFrameCallback( updateVideo );\r\n \r\n\t\t }\r\n \r\n\t\t if ( 'requestVideoFrameCallback' in video ) {\r\n \r\n\t\t\t video.requestVideoFrameCallback( updateVideo );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor( this.image ).copy( this );\r\n \r\n\t }\r\n \r\n\t update() {\r\n \r\n\t\t const video = this.image;\r\n\t\t const hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\r\n \r\n\t\t if ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n \r\n\t\t\t this.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n VideoTexture.prototype.isVideoTexture = true;\r\n \r\n class FramebufferTexture extends Texture {\r\n \r\n\t constructor( width, height, format ) {\r\n \r\n\t\t super( { width, height } );\r\n \r\n\t\t this.format = format;\r\n \r\n\t\t this.magFilter = NearestFilter;\r\n\t\t this.minFilter = NearestFilter;\r\n \r\n\t\t this.generateMipmaps = false;\r\n \r\n\t\t this.needsUpdate = true;\r\n \r\n\t }\r\n \r\n }\r\n \r\n FramebufferTexture.prototype.isFramebufferTexture = true;\r\n \r\n class CompressedTexture extends Texture {\r\n \r\n\t constructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n \r\n\t\t super( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n \r\n\t\t this.image = { width: width, height: height };\r\n\t\t this.mipmaps = mipmaps;\r\n \r\n\t\t // no flipping for cube textures\r\n\t\t // (also flipping doesn't work for compressed textures )\r\n \r\n\t\t this.flipY = false;\r\n \r\n\t\t // can't generate mipmaps for compressed textures\r\n\t\t // mips must be embedded in DDS files\r\n \r\n\t\t this.generateMipmaps = false;\r\n \r\n\t }\r\n \r\n }\r\n \r\n CompressedTexture.prototype.isCompressedTexture = true;\r\n \r\n class CanvasTexture extends Texture {\r\n \r\n\t constructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n \r\n\t\t super( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n \r\n\t\t this.needsUpdate = true;\r\n \r\n\t }\r\n \r\n }\r\n \r\n CanvasTexture.prototype.isCanvasTexture = true;\r\n \r\n class CircleGeometry extends BufferGeometry {\r\n \r\n\t constructor( radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'CircleGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t segments: segments,\r\n\t\t\t thetaStart: thetaStart,\r\n\t\t\t thetaLength: thetaLength\r\n\t\t };\r\n \r\n\t\t segments = Math.max( 3, segments );\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // helper variables\r\n \r\n\t\t const vertex = new Vector3();\r\n\t\t const uv = new Vector2();\r\n \r\n\t\t // center point\r\n \r\n\t\t vertices.push( 0, 0, 0 );\r\n\t\t normals.push( 0, 0, 1 );\r\n\t\t uvs.push( 0.5, 0.5 );\r\n \r\n\t\t for ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\r\n \r\n\t\t\t const segment = thetaStart + s / segments * thetaLength;\r\n \r\n\t\t\t // vertex\r\n \r\n\t\t\t vertex.x = radius * Math.cos( segment );\r\n\t\t\t vertex.y = radius * Math.sin( segment );\r\n \r\n\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t // normal\r\n \r\n\t\t\t normals.push( 0, 0, 1 );\r\n \r\n\t\t\t // uvs\r\n \r\n\t\t\t uv.x = ( vertices[ i ] / radius + 1 ) / 2;\r\n\t\t\t uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\r\n \r\n\t\t\t uvs.push( uv.x, uv.y );\r\n \r\n\t\t }\r\n \r\n\t\t // indices\r\n \r\n\t\t for ( let i = 1; i <= segments; i ++ ) {\r\n \r\n\t\t\t indices.push( i, i + 1, 0 );\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class CylinderGeometry extends BufferGeometry {\r\n \r\n\t constructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'CylinderGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radiusTop: radiusTop,\r\n\t\t\t radiusBottom: radiusBottom,\r\n\t\t\t height: height,\r\n\t\t\t radialSegments: radialSegments,\r\n\t\t\t heightSegments: heightSegments,\r\n\t\t\t openEnded: openEnded,\r\n\t\t\t thetaStart: thetaStart,\r\n\t\t\t thetaLength: thetaLength\r\n\t\t };\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t radialSegments = Math.floor( radialSegments );\r\n\t\t heightSegments = Math.floor( heightSegments );\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // helper variables\r\n \r\n\t\t let index = 0;\r\n\t\t const indexArray = [];\r\n\t\t const halfHeight = height / 2;\r\n\t\t let groupStart = 0;\r\n \r\n\t\t // generate geometry\r\n \r\n\t\t generateTorso();\r\n \r\n\t\t if ( openEnded === false ) {\r\n \r\n\t\t\t if ( radiusTop > 0 ) generateCap( true );\r\n\t\t\t if ( radiusBottom > 0 ) generateCap( false );\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t\t function generateTorso() {\r\n \r\n\t\t\t const normal = new Vector3();\r\n\t\t\t const vertex = new Vector3();\r\n \r\n\t\t\t let groupCount = 0;\r\n \r\n\t\t\t // this will be used to calculate the normal\r\n\t\t\t const slope = ( radiusBottom - radiusTop ) / height;\r\n \r\n\t\t\t // generate vertices, normals and uvs\r\n \r\n\t\t\t for ( let y = 0; y <= heightSegments; y ++ ) {\r\n \r\n\t\t\t\t const indexRow = [];\r\n \r\n\t\t\t\t const v = y / heightSegments;\r\n \r\n\t\t\t\t // calculate the radius of the current row\r\n \r\n\t\t\t\t const radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n \r\n\t\t\t\t for ( let x = 0; x <= radialSegments; x ++ ) {\r\n \r\n\t\t\t\t\t const u = x / radialSegments;\r\n \r\n\t\t\t\t\t const theta = u * thetaLength + thetaStart;\r\n \r\n\t\t\t\t\t const sinTheta = Math.sin( theta );\r\n\t\t\t\t\t const cosTheta = Math.cos( theta );\r\n \r\n\t\t\t\t\t // vertex\r\n \r\n\t\t\t\t\t vertex.x = radius * sinTheta;\r\n\t\t\t\t\t vertex.y = - v * height + halfHeight;\r\n\t\t\t\t\t vertex.z = radius * cosTheta;\r\n\t\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t\t\t // normal\r\n \r\n\t\t\t\t\t normal.set( sinTheta, slope, cosTheta ).normalize();\r\n\t\t\t\t\t normals.push( normal.x, normal.y, normal.z );\r\n \r\n\t\t\t\t\t // uv\r\n \r\n\t\t\t\t\t uvs.push( u, 1 - v );\r\n \r\n\t\t\t\t\t // save index of vertex in respective row\r\n \r\n\t\t\t\t\t indexRow.push( index ++ );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // now save vertices of the row in our index array\r\n \r\n\t\t\t\t indexArray.push( indexRow );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // generate indices\r\n \r\n\t\t\t for ( let x = 0; x < radialSegments; x ++ ) {\r\n \r\n\t\t\t\t for ( let y = 0; y < heightSegments; y ++ ) {\r\n \r\n\t\t\t\t\t // we use the index array to access the correct indices\r\n \r\n\t\t\t\t\t const a = indexArray[ y ][ x ];\r\n\t\t\t\t\t const b = indexArray[ y + 1 ][ x ];\r\n\t\t\t\t\t const c = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\t\t const d = indexArray[ y ][ x + 1 ];\r\n \r\n\t\t\t\t\t // faces\r\n \r\n\t\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t\t indices.push( b, c, d );\r\n \r\n\t\t\t\t\t // update group counter\r\n \r\n\t\t\t\t\t groupCount += 6;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // add a group to the geometry. this will ensure multi material support\r\n \r\n\t\t\t scope.addGroup( groupStart, groupCount, 0 );\r\n \r\n\t\t\t // calculate new start value for groups\r\n \r\n\t\t\t groupStart += groupCount;\r\n \r\n\t\t }\r\n \r\n\t\t function generateCap( top ) {\r\n \r\n\t\t\t // save the index of the first center vertex\r\n\t\t\t const centerIndexStart = index;\r\n \r\n\t\t\t const uv = new Vector2();\r\n\t\t\t const vertex = new Vector3();\r\n \r\n\t\t\t let groupCount = 0;\r\n \r\n\t\t\t const radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\t\t const sign = ( top === true ) ? 1 : - 1;\r\n \r\n\t\t\t // first we generate the center vertex data of the cap.\r\n\t\t\t // because the geometry needs one set of uvs per face,\r\n\t\t\t // we must generate a center vertex per face/segment\r\n \r\n\t\t\t for ( let x = 1; x <= radialSegments; x ++ ) {\r\n \r\n\t\t\t\t // vertex\r\n \r\n\t\t\t\t vertices.push( 0, halfHeight * sign, 0 );\r\n \r\n\t\t\t\t // normal\r\n \r\n\t\t\t\t normals.push( 0, sign, 0 );\r\n \r\n\t\t\t\t // uv\r\n \r\n\t\t\t\t uvs.push( 0.5, 0.5 );\r\n \r\n\t\t\t\t // increase index\r\n \r\n\t\t\t\t index ++;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // save the index of the last center vertex\r\n\t\t\t const centerIndexEnd = index;\r\n \r\n\t\t\t // now we generate the surrounding vertices, normals and uvs\r\n \r\n\t\t\t for ( let x = 0; x <= radialSegments; x ++ ) {\r\n \r\n\t\t\t\t const u = x / radialSegments;\r\n\t\t\t\t const theta = u * thetaLength + thetaStart;\r\n \r\n\t\t\t\t const cosTheta = Math.cos( theta );\r\n\t\t\t\t const sinTheta = Math.sin( theta );\r\n \r\n\t\t\t\t // vertex\r\n \r\n\t\t\t\t vertex.x = radius * sinTheta;\r\n\t\t\t\t vertex.y = halfHeight * sign;\r\n\t\t\t\t vertex.z = radius * cosTheta;\r\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t\t // normal\r\n \r\n\t\t\t\t normals.push( 0, sign, 0 );\r\n \r\n\t\t\t\t // uv\r\n \r\n\t\t\t\t uv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\t\t uv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\t\t uvs.push( uv.x, uv.y );\r\n \r\n\t\t\t\t // increase index\r\n \r\n\t\t\t\t index ++;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // generate indices\r\n \r\n\t\t\t for ( let x = 0; x < radialSegments; x ++ ) {\r\n \r\n\t\t\t\t const c = centerIndexStart + x;\r\n\t\t\t\t const i = centerIndexEnd + x;\r\n \r\n\t\t\t\t if ( top === true ) {\r\n \r\n\t\t\t\t\t // face top\r\n \r\n\t\t\t\t\t indices.push( i, i + 1, c );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // face bottom\r\n \r\n\t\t\t\t\t indices.push( i + 1, i, c );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t groupCount += 3;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // add a group to the geometry. this will ensure multi material support\r\n \r\n\t\t\t scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n \r\n\t\t\t // calculate new start value for groups\r\n \r\n\t\t\t groupStart += groupCount;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class ConeGeometry extends CylinderGeometry {\r\n \r\n\t constructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n \r\n\t\t super( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n \r\n\t\t this.type = 'ConeGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t height: height,\r\n\t\t\t radialSegments: radialSegments,\r\n\t\t\t heightSegments: heightSegments,\r\n\t\t\t openEnded: openEnded,\r\n\t\t\t thetaStart: thetaStart,\r\n\t\t\t thetaLength: thetaLength\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class PolyhedronGeometry extends BufferGeometry {\r\n \r\n\t constructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'PolyhedronGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t vertices: vertices,\r\n\t\t\t indices: indices,\r\n\t\t\t radius: radius,\r\n\t\t\t detail: detail\r\n\t\t };\r\n \r\n\t\t // default buffer data\r\n \r\n\t\t const vertexBuffer = [];\r\n\t\t const uvBuffer = [];\r\n \r\n\t\t // the subdivision creates the vertex buffer data\r\n \r\n\t\t subdivide( detail );\r\n \r\n\t\t // all vertices should lie on a conceptual sphere with a given radius\r\n \r\n\t\t applyRadius( radius );\r\n \r\n\t\t // finally, create the uv data\r\n \r\n\t\t generateUVs();\r\n \r\n\t\t // build non-indexed geometry\r\n \r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\r\n \r\n\t\t if ( detail === 0 ) {\r\n \r\n\t\t\t this.computeVertexNormals(); // flat normals\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.normalizeNormals(); // smooth normals\r\n \r\n\t\t }\r\n \r\n\t\t // helper functions\r\n \r\n\t\t function subdivide( detail ) {\r\n \r\n\t\t\t const a = new Vector3();\r\n\t\t\t const b = new Vector3();\r\n\t\t\t const c = new Vector3();\r\n \r\n\t\t\t // iterate over all faces and apply a subdivison with the given detail value\r\n \r\n\t\t\t for ( let i = 0; i < indices.length; i += 3 ) {\r\n \r\n\t\t\t\t // get the vertices of the face\r\n \r\n\t\t\t\t getVertexByIndex( indices[ i + 0 ], a );\r\n\t\t\t\t getVertexByIndex( indices[ i + 1 ], b );\r\n\t\t\t\t getVertexByIndex( indices[ i + 2 ], c );\r\n \r\n\t\t\t\t // perform subdivision\r\n \r\n\t\t\t\t subdivideFace( a, b, c, detail );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function subdivideFace( a, b, c, detail ) {\r\n \r\n\t\t\t const cols = detail + 1;\r\n \r\n\t\t\t // we use this multidimensional array as a data structure for creating the subdivision\r\n \r\n\t\t\t const v = [];\r\n \r\n\t\t\t // construct all of the vertices for this subdivision\r\n \r\n\t\t\t for ( let i = 0; i <= cols; i ++ ) {\r\n \r\n\t\t\t\t v[ i ] = [];\r\n \r\n\t\t\t\t const aj = a.clone().lerp( c, i / cols );\r\n\t\t\t\t const bj = b.clone().lerp( c, i / cols );\r\n \r\n\t\t\t\t const rows = cols - i;\r\n \r\n\t\t\t\t for ( let j = 0; j <= rows; j ++ ) {\r\n \r\n\t\t\t\t\t if ( j === 0 && i === cols ) {\r\n \r\n\t\t\t\t\t\t v[ i ][ j ] = aj;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t v[ i ][ j ] = aj.clone().lerp( bj, j / rows );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // construct all of the faces\r\n \r\n\t\t\t for ( let i = 0; i < cols; i ++ ) {\r\n \r\n\t\t\t\t for ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n \r\n\t\t\t\t\t const k = Math.floor( j / 2 );\r\n \r\n\t\t\t\t\t if ( j % 2 === 0 ) {\r\n \r\n\t\t\t\t\t\t pushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\t pushVertex( v[ i + 1 ][ k ] );\r\n\t\t\t\t\t\t pushVertex( v[ i ][ k ] );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t pushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\t pushVertex( v[ i + 1 ][ k + 1 ] );\r\n\t\t\t\t\t\t pushVertex( v[ i + 1 ][ k ] );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function applyRadius( radius ) {\r\n \r\n\t\t\t const vertex = new Vector3();\r\n \r\n\t\t\t // iterate over the entire buffer and apply the radius to each vertex\r\n \r\n\t\t\t for ( let i = 0; i < vertexBuffer.length; i += 3 ) {\r\n \r\n\t\t\t\t vertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\t vertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\t vertex.z = vertexBuffer[ i + 2 ];\r\n \r\n\t\t\t\t vertex.normalize().multiplyScalar( radius );\r\n \r\n\t\t\t\t vertexBuffer[ i + 0 ] = vertex.x;\r\n\t\t\t\t vertexBuffer[ i + 1 ] = vertex.y;\r\n\t\t\t\t vertexBuffer[ i + 2 ] = vertex.z;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function generateUVs() {\r\n \r\n\t\t\t const vertex = new Vector3();\r\n \r\n\t\t\t for ( let i = 0; i < vertexBuffer.length; i += 3 ) {\r\n \r\n\t\t\t\t vertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\t vertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\t vertex.z = vertexBuffer[ i + 2 ];\r\n \r\n\t\t\t\t const u = azimuth( vertex ) / 2 / Math.PI + 0.5;\r\n\t\t\t\t const v = inclination( vertex ) / Math.PI + 0.5;\r\n\t\t\t\t uvBuffer.push( u, 1 - v );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t correctUVs();\r\n \r\n\t\t\t correctSeam();\r\n \r\n\t\t }\r\n \r\n\t\t function correctSeam() {\r\n \r\n\t\t\t // handle case when face straddles the seam, see #3269\r\n \r\n\t\t\t for ( let i = 0; i < uvBuffer.length; i += 6 ) {\r\n \r\n\t\t\t\t // uv data of a single face\r\n \r\n\t\t\t\t const x0 = uvBuffer[ i + 0 ];\r\n\t\t\t\t const x1 = uvBuffer[ i + 2 ];\r\n\t\t\t\t const x2 = uvBuffer[ i + 4 ];\r\n \r\n\t\t\t\t const max = Math.max( x0, x1, x2 );\r\n\t\t\t\t const min = Math.min( x0, x1, x2 );\r\n \r\n\t\t\t\t // 0.9 is somewhat arbitrary\r\n \r\n\t\t\t\t if ( max > 0.9 && min < 0.1 ) {\r\n \r\n\t\t\t\t\t if ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\r\n\t\t\t\t\t if ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\r\n\t\t\t\t\t if ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function pushVertex( vertex ) {\r\n \r\n\t\t\t vertexBuffer.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t }\r\n \r\n\t\t function getVertexByIndex( index, vertex ) {\r\n \r\n\t\t\t const stride = index * 3;\r\n \r\n\t\t\t vertex.x = vertices[ stride + 0 ];\r\n\t\t\t vertex.y = vertices[ stride + 1 ];\r\n\t\t\t vertex.z = vertices[ stride + 2 ];\r\n \r\n\t\t }\r\n \r\n\t\t function correctUVs() {\r\n \r\n\t\t\t const a = new Vector3();\r\n\t\t\t const b = new Vector3();\r\n\t\t\t const c = new Vector3();\r\n \r\n\t\t\t const centroid = new Vector3();\r\n \r\n\t\t\t const uvA = new Vector2();\r\n\t\t\t const uvB = new Vector2();\r\n\t\t\t const uvC = new Vector2();\r\n \r\n\t\t\t for ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\r\n \r\n\t\t\t\t a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\r\n\t\t\t\t b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\r\n\t\t\t\t c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\r\n \r\n\t\t\t\t uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\r\n\t\t\t\t uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\r\n\t\t\t\t uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\r\n \r\n\t\t\t\t centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\r\n \r\n\t\t\t\t const azi = azimuth( centroid );\r\n \r\n\t\t\t\t correctUV( uvA, j + 0, a, azi );\r\n\t\t\t\t correctUV( uvB, j + 2, b, azi );\r\n\t\t\t\t correctUV( uvC, j + 4, c, azi );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function correctUV( uv, stride, vector, azimuth ) {\r\n \r\n\t\t\t if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\r\n \r\n\t\t\t\t uvBuffer[ stride ] = uv.x - 1;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\r\n \r\n\t\t\t\t uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // Angle around the Y axis, counter-clockwise when looking from above.\r\n \r\n\t\t function azimuth( vector ) {\r\n \r\n\t\t\t return Math.atan2( vector.z, - vector.x );\r\n \r\n\t\t }\r\n \r\n \r\n\t\t // Angle above the XZ plane.\r\n \r\n\t\t function inclination( vector ) {\r\n \r\n\t\t\t return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class DodecahedronGeometry extends PolyhedronGeometry {\r\n \r\n\t constructor( radius = 1, detail = 0 ) {\r\n \r\n\t\t const t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\t const r = 1 / t;\r\n \r\n\t\t const vertices = [\r\n \r\n\t\t\t // (±1, ±1, ±1)\r\n\t\t\t - 1, - 1, - 1,\t- 1, - 1, 1,\r\n\t\t\t - 1, 1, - 1, - 1, 1, 1,\r\n\t\t\t 1, - 1, - 1, 1, - 1, 1,\r\n\t\t\t 1, 1, - 1, 1, 1, 1,\r\n \r\n\t\t\t // (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t, 0, - r, t,\r\n\t\t\t 0, r, - t, 0, r, t,\r\n \r\n\t\t\t // (±1/φ, ±φ, 0)\r\n\t\t\t - r, - t, 0, - r, t, 0,\r\n\t\t\t r, - t, 0, r, t, 0,\r\n \r\n\t\t\t // (±φ, 0, ±1/φ)\r\n\t\t\t - t, 0, - r, t, 0, - r,\r\n\t\t\t - t, 0, r, t, 0, r\r\n\t\t ];\r\n \r\n\t\t const indices = [\r\n\t\t\t 3, 11, 7, \t3, 7, 15, \t3, 15, 13,\r\n\t\t\t 7, 19, 17, \t7, 17, 6, \t7, 6, 15,\r\n\t\t\t 17, 4, 8, \t17, 8, 10, \t17, 10, 6,\r\n\t\t\t 8, 0, 16, \t8, 16, 2, \t8, 2, 10,\r\n\t\t\t 0, 12, 1, \t0, 1, 18, \t0, 18, 16,\r\n\t\t\t 6, 10, 2, \t6, 2, 13, \t6, 13, 15,\r\n\t\t\t 2, 16, 18, \t2, 18, 3, \t2, 3, 13,\r\n\t\t\t 18, 1, 9, \t18, 9, 11, \t18, 11, 3,\r\n\t\t\t 4, 14, 12, \t4, 12, 0, \t4, 0, 8,\r\n\t\t\t 11, 9, 5, \t11, 5, 19, \t11, 19, 7,\r\n\t\t\t 19, 5, 14, \t19, 14, 4, \t19, 4, 17,\r\n\t\t\t 1, 12, 14, \t1, 14, 5, \t1, 5, 9\r\n\t\t ];\r\n \r\n\t\t super( vertices, indices, radius, detail );\r\n \r\n\t\t this.type = 'DodecahedronGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t detail: detail\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new DodecahedronGeometry( data.radius, data.detail );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _v0 = new Vector3();\r\n const _v1$1 = new Vector3();\r\n const _normal = new Vector3();\r\n const _triangle = new Triangle();\r\n \r\n class EdgesGeometry extends BufferGeometry {\r\n \r\n\t constructor( geometry = null, thresholdAngle = 1 ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'EdgesGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t geometry: geometry,\r\n\t\t\t thresholdAngle: thresholdAngle\r\n\t\t };\r\n \r\n\t\t if ( geometry !== null ) {\r\n \r\n\t\t\t const precisionPoints = 4;\r\n\t\t\t const precision = Math.pow( 10, precisionPoints );\r\n\t\t\t const thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\r\n \r\n\t\t\t const indexAttr = geometry.getIndex();\r\n\t\t\t const positionAttr = geometry.getAttribute( 'position' );\r\n\t\t\t const indexCount = indexAttr ? indexAttr.count : positionAttr.count;\r\n \r\n\t\t\t const indexArr = [ 0, 0, 0 ];\r\n\t\t\t const vertKeys = [ 'a', 'b', 'c' ];\r\n\t\t\t const hashes = new Array( 3 );\r\n \r\n\t\t\t const edgeData = {};\r\n\t\t\t const vertices = [];\r\n\t\t\t for ( let i = 0; i < indexCount; i += 3 ) {\r\n \r\n\t\t\t\t if ( indexAttr ) {\r\n \r\n\t\t\t\t\t indexArr[ 0 ] = indexAttr.getX( i );\r\n\t\t\t\t\t indexArr[ 1 ] = indexAttr.getX( i + 1 );\r\n\t\t\t\t\t indexArr[ 2 ] = indexAttr.getX( i + 2 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t indexArr[ 0 ] = i;\r\n\t\t\t\t\t indexArr[ 1 ] = i + 1;\r\n\t\t\t\t\t indexArr[ 2 ] = i + 2;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t const { a, b, c } = _triangle;\r\n\t\t\t\t a.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\r\n\t\t\t\t b.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\r\n\t\t\t\t c.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\r\n\t\t\t\t _triangle.getNormal( _normal );\r\n \r\n\t\t\t\t // create hashes for the edge from the vertices\r\n\t\t\t\t hashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\r\n\t\t\t\t hashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\r\n\t\t\t\t hashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\r\n \r\n\t\t\t\t // skip degenerate triangles\r\n\t\t\t\t if ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\r\n \r\n\t\t\t\t\t continue;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // iterate over every edge\r\n\t\t\t\t for ( let j = 0; j < 3; j ++ ) {\r\n \r\n\t\t\t\t\t // get the first and next vertex making up the edge\r\n\t\t\t\t\t const jNext = ( j + 1 ) % 3;\r\n\t\t\t\t\t const vecHash0 = hashes[ j ];\r\n\t\t\t\t\t const vecHash1 = hashes[ jNext ];\r\n\t\t\t\t\t const v0 = _triangle[ vertKeys[ j ] ];\r\n\t\t\t\t\t const v1 = _triangle[ vertKeys[ jNext ] ];\r\n \r\n\t\t\t\t\t const hash = `${ vecHash0 }_${ vecHash1 }`;\r\n\t\t\t\t\t const reverseHash = `${ vecHash1 }_${ vecHash0 }`;\r\n \r\n\t\t\t\t\t if ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\r\n \r\n\t\t\t\t\t\t // if we found a sibling edge add it into the vertex array if\r\n\t\t\t\t\t\t // it meets the angle threshold and delete the edge from the map.\r\n\t\t\t\t\t\t if ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\r\n \r\n\t\t\t\t\t\t\t vertices.push( v0.x, v0.y, v0.z );\r\n\t\t\t\t\t\t\t vertices.push( v1.x, v1.y, v1.z );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t edgeData[ reverseHash ] = null;\r\n \r\n\t\t\t\t\t } else if ( ! ( hash in edgeData ) ) {\r\n \r\n\t\t\t\t\t\t // if we've already got an edge here then skip adding a new one\r\n\t\t\t\t\t\t edgeData[ hash ] = {\r\n \r\n\t\t\t\t\t\t\t index0: indexArr[ j ],\r\n\t\t\t\t\t\t\t index1: indexArr[ jNext ],\r\n\t\t\t\t\t\t\t normal: _normal.clone(),\r\n \r\n\t\t\t\t\t\t };\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // iterate over all remaining, unmatched edges and add them to the vertex array\r\n\t\t\t for ( const key in edgeData ) {\r\n \r\n\t\t\t\t if ( edgeData[ key ] ) {\r\n \r\n\t\t\t\t\t const { index0, index1 } = edgeData[ key ];\r\n\t\t\t\t\t _v0.fromBufferAttribute( positionAttr, index0 );\r\n\t\t\t\t\t _v1$1.fromBufferAttribute( positionAttr, index1 );\r\n \r\n\t\t\t\t\t vertices.push( _v0.x, _v0.y, _v0.z );\r\n\t\t\t\t\t vertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Extensible curve object.\r\n  *\r\n  * Some common of curve methods:\r\n  * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\r\n  * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\r\n  * .getPoints(), .getSpacedPoints()\r\n  * .getLength()\r\n  * .updateArcLengths()\r\n  *\r\n  * This following curves inherit from THREE.Curve:\r\n  *\r\n  * -- 2D curves --\r\n  * THREE.ArcCurve\r\n  * THREE.CubicBezierCurve\r\n  * THREE.EllipseCurve\r\n  * THREE.LineCurve\r\n  * THREE.QuadraticBezierCurve\r\n  * THREE.SplineCurve\r\n  *\r\n  * -- 3D curves --\r\n  * THREE.CatmullRomCurve3\r\n  * THREE.CubicBezierCurve3\r\n  * THREE.LineCurve3\r\n  * THREE.QuadraticBezierCurve3\r\n  *\r\n  * A series of curves can be represented as a THREE.CurvePath.\r\n  *\r\n  **/\r\n \r\n class Curve {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.type = 'Curve';\r\n \r\n\t\t this.arcLengthDivisions = 200;\r\n \r\n\t }\r\n \r\n\t // Virtual base class method to overwrite and implement in subclasses\r\n\t //\t- t [0 .. 1]\r\n \r\n\t getPoint( /* t, optionalTarget */ ) {\r\n \r\n\t\t console.warn( 'THREE.Curve: .getPoint() not implemented.' );\r\n\t\t return null;\r\n \r\n\t }\r\n \r\n\t // Get point at relative position in curve according to arc length\r\n\t // - u [0 .. 1]\r\n \r\n\t getPointAt( u, optionalTarget ) {\r\n \r\n\t\t const t = this.getUtoTmapping( u );\r\n\t\t return this.getPoint( t, optionalTarget );\r\n \r\n\t }\r\n \r\n\t // Get sequence of points using getPoint( t )\r\n \r\n\t getPoints( divisions = 5 ) {\r\n \r\n\t\t const points = [];\r\n \r\n\t\t for ( let d = 0; d <= divisions; d ++ ) {\r\n \r\n\t\t\t points.push( this.getPoint( d / divisions ) );\r\n \r\n\t\t }\r\n \r\n\t\t return points;\r\n \r\n\t }\r\n \r\n\t // Get sequence of points using getPointAt( u )\r\n \r\n\t getSpacedPoints( divisions = 5 ) {\r\n \r\n\t\t const points = [];\r\n \r\n\t\t for ( let d = 0; d <= divisions; d ++ ) {\r\n \r\n\t\t\t points.push( this.getPointAt( d / divisions ) );\r\n \r\n\t\t }\r\n \r\n\t\t return points;\r\n \r\n\t }\r\n \r\n\t // Get total curve arc length\r\n \r\n\t getLength() {\r\n \r\n\t\t const lengths = this.getLengths();\r\n\t\t return lengths[ lengths.length - 1 ];\r\n \r\n\t }\r\n \r\n\t // Get list of cumulative segment lengths\r\n \r\n\t getLengths( divisions = this.arcLengthDivisions ) {\r\n \r\n\t\t if ( this.cacheArcLengths &&\r\n\t\t\t ( this.cacheArcLengths.length === divisions + 1 ) &&\r\n\t\t\t ! this.needsUpdate ) {\r\n \r\n\t\t\t return this.cacheArcLengths;\r\n \r\n\t\t }\r\n \r\n\t\t this.needsUpdate = false;\r\n \r\n\t\t const cache = [];\r\n\t\t let current, last = this.getPoint( 0 );\r\n\t\t let sum = 0;\r\n \r\n\t\t cache.push( 0 );\r\n \r\n\t\t for ( let p = 1; p <= divisions; p ++ ) {\r\n \r\n\t\t\t current = this.getPoint( p / divisions );\r\n\t\t\t sum += current.distanceTo( last );\r\n\t\t\t cache.push( sum );\r\n\t\t\t last = current;\r\n \r\n\t\t }\r\n \r\n\t\t this.cacheArcLengths = cache;\r\n \r\n\t\t return cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n \r\n\t }\r\n \r\n\t updateArcLengths() {\r\n \r\n\t\t this.needsUpdate = true;\r\n\t\t this.getLengths();\r\n \r\n\t }\r\n \r\n\t // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n \r\n\t getUtoTmapping( u, distance ) {\r\n \r\n\t\t const arcLengths = this.getLengths();\r\n \r\n\t\t let i = 0;\r\n\t\t const il = arcLengths.length;\r\n \r\n\t\t let targetArcLength; // The targeted u distance value to get\r\n \r\n\t\t if ( distance ) {\r\n \r\n\t\t\t targetArcLength = distance;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t targetArcLength = u * arcLengths[ il - 1 ];\r\n \r\n\t\t }\r\n \r\n\t\t // binary search for the index with largest value smaller than target u distance\r\n \r\n\t\t let low = 0, high = il - 1, comparison;\r\n \r\n\t\t while ( low <= high ) {\r\n \r\n\t\t\t i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n \r\n\t\t\t comparison = arcLengths[ i ] - targetArcLength;\r\n \r\n\t\t\t if ( comparison < 0 ) {\r\n \r\n\t\t\t\t low = i + 1;\r\n \r\n\t\t\t } else if ( comparison > 0 ) {\r\n \r\n\t\t\t\t high = i - 1;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t high = i;\r\n\t\t\t\t break;\r\n \r\n\t\t\t\t // DONE\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t i = high;\r\n \r\n\t\t if ( arcLengths[ i ] === targetArcLength ) {\r\n \r\n\t\t\t return i / ( il - 1 );\r\n \r\n\t\t }\r\n \r\n\t\t // we could get finer grain at lengths, or use simple interpolation between two points\r\n \r\n\t\t const lengthBefore = arcLengths[ i ];\r\n\t\t const lengthAfter = arcLengths[ i + 1 ];\r\n \r\n\t\t const segmentLength = lengthAfter - lengthBefore;\r\n \r\n\t\t // determine where we are between the 'before' and 'after' points\r\n \r\n\t\t const segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n \r\n\t\t // add that fractional amount to t\r\n \r\n\t\t const t = ( i + segmentFraction ) / ( il - 1 );\r\n \r\n\t\t return t;\r\n \r\n\t }\r\n \r\n\t // Returns a unit vector tangent at t\r\n\t // In case any sub curve does not implement its tangent derivation,\r\n\t // 2 points a small delta apart will be used to find its gradient\r\n\t // which seems to give a reasonable approximation\r\n \r\n\t getTangent( t, optionalTarget ) {\r\n \r\n\t\t const delta = 0.0001;\r\n\t\t let t1 = t - delta;\r\n\t\t let t2 = t + delta;\r\n \r\n\t\t // Capping in case of danger\r\n \r\n\t\t if ( t1 < 0 ) t1 = 0;\r\n\t\t if ( t2 > 1 ) t2 = 1;\r\n \r\n\t\t const pt1 = this.getPoint( t1 );\r\n\t\t const pt2 = this.getPoint( t2 );\r\n \r\n\t\t const tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\r\n \r\n\t\t tangent.copy( pt2 ).sub( pt1 ).normalize();\r\n \r\n\t\t return tangent;\r\n \r\n\t }\r\n \r\n\t getTangentAt( u, optionalTarget ) {\r\n \r\n\t\t const t = this.getUtoTmapping( u );\r\n\t\t return this.getTangent( t, optionalTarget );\r\n \r\n\t }\r\n \r\n\t computeFrenetFrames( segments, closed ) {\r\n \r\n\t\t // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n \r\n\t\t const normal = new Vector3();\r\n \r\n\t\t const tangents = [];\r\n\t\t const normals = [];\r\n\t\t const binormals = [];\r\n \r\n\t\t const vec = new Vector3();\r\n\t\t const mat = new Matrix4();\r\n \r\n\t\t // compute the tangent vectors for each segment on the curve\r\n \r\n\t\t for ( let i = 0; i <= segments; i ++ ) {\r\n \r\n\t\t\t const u = i / segments;\r\n \r\n\t\t\t tangents[ i ] = this.getTangentAt( u, new Vector3() );\r\n \r\n\t\t }\r\n \r\n\t\t // select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t // and in the direction of the minimum tangent xyz component\r\n \r\n\t\t normals[ 0 ] = new Vector3();\r\n\t\t binormals[ 0 ] = new Vector3();\r\n\t\t let min = Number.MAX_VALUE;\r\n\t\t const tx = Math.abs( tangents[ 0 ].x );\r\n\t\t const ty = Math.abs( tangents[ 0 ].y );\r\n\t\t const tz = Math.abs( tangents[ 0 ].z );\r\n \r\n\t\t if ( tx <= min ) {\r\n \r\n\t\t\t min = tx;\r\n\t\t\t normal.set( 1, 0, 0 );\r\n \r\n\t\t }\r\n \r\n\t\t if ( ty <= min ) {\r\n \r\n\t\t\t min = ty;\r\n\t\t\t normal.set( 0, 1, 0 );\r\n \r\n\t\t }\r\n \r\n\t\t if ( tz <= min ) {\r\n \r\n\t\t\t normal.set( 0, 0, 1 );\r\n \r\n\t\t }\r\n \r\n\t\t vec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n \r\n\t\t normals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n \r\n \r\n\t\t // compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n \r\n\t\t for ( let i = 1; i <= segments; i ++ ) {\r\n \r\n\t\t\t normals[ i ] = normals[ i - 1 ].clone();\r\n \r\n\t\t\t binormals[ i ] = binormals[ i - 1 ].clone();\r\n \r\n\t\t\t vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n \r\n\t\t\t if ( vec.length() > Number.EPSILON ) {\r\n \r\n\t\t\t\t vec.normalize();\r\n \r\n\t\t\t\t const theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n \r\n\t\t\t\t normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n \r\n\t\t if ( closed === true ) {\r\n \r\n\t\t\t let theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\r\n\t\t\t theta /= segments;\r\n \r\n\t\t\t if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\r\n \r\n\t\t\t\t theta = - theta;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t for ( let i = 1; i <= segments; i ++ ) {\r\n \r\n\t\t\t\t // twist a little...\r\n\t\t\t\t normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\t binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return {\r\n\t\t\t tangents: tangents,\r\n\t\t\t normals: normals,\r\n\t\t\t binormals: binormals\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.arcLengthDivisions = source.arcLengthDivisions;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = {\r\n\t\t\t metadata: {\r\n\t\t\t\t version: 4.5,\r\n\t\t\t\t type: 'Curve',\r\n\t\t\t\t generator: 'Curve.toJSON'\r\n\t\t\t }\r\n\t\t };\r\n \r\n\t\t data.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\t data.type = this.type;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t this.arcLengthDivisions = json.arcLengthDivisions;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class EllipseCurve extends Curve {\r\n \r\n\t constructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'EllipseCurve';\r\n \r\n\t\t this.aX = aX;\r\n\t\t this.aY = aY;\r\n \r\n\t\t this.xRadius = xRadius;\r\n\t\t this.yRadius = yRadius;\r\n \r\n\t\t this.aStartAngle = aStartAngle;\r\n\t\t this.aEndAngle = aEndAngle;\r\n \r\n\t\t this.aClockwise = aClockwise;\r\n \r\n\t\t this.aRotation = aRotation;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget ) {\r\n \r\n\t\t const point = optionalTarget || new Vector2();\r\n \r\n\t\t const twoPi = Math.PI * 2;\r\n\t\t let deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\t const samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\r\n \r\n\t\t // ensures that deltaAngle is 0 .. 2 PI\r\n\t\t while ( deltaAngle < 0 ) deltaAngle += twoPi;\r\n\t\t while ( deltaAngle > twoPi ) deltaAngle -= twoPi;\r\n \r\n\t\t if ( deltaAngle < Number.EPSILON ) {\r\n \r\n\t\t\t if ( samePoints ) {\r\n \r\n\t\t\t\t deltaAngle = 0;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t deltaAngle = twoPi;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.aClockwise === true && ! samePoints ) {\r\n \r\n\t\t\t if ( deltaAngle === twoPi ) {\r\n \r\n\t\t\t\t deltaAngle = - twoPi;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t deltaAngle = deltaAngle - twoPi;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const angle = this.aStartAngle + t * deltaAngle;\r\n\t\t let x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\t let y = this.aY + this.yRadius * Math.sin( angle );\r\n \r\n\t\t if ( this.aRotation !== 0 ) {\r\n \r\n\t\t\t const cos = Math.cos( this.aRotation );\r\n\t\t\t const sin = Math.sin( this.aRotation );\r\n \r\n\t\t\t const tx = x - this.aX;\r\n\t\t\t const ty = y - this.aY;\r\n \r\n\t\t\t // Rotate the point about the center of the ellipse.\r\n\t\t\t x = tx * cos - ty * sin + this.aX;\r\n\t\t\t y = tx * sin + ty * cos + this.aY;\r\n \r\n\t\t }\r\n \r\n\t\t return point.set( x, y );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.aX = source.aX;\r\n\t\t this.aY = source.aY;\r\n \r\n\t\t this.xRadius = source.xRadius;\r\n\t\t this.yRadius = source.yRadius;\r\n \r\n\t\t this.aStartAngle = source.aStartAngle;\r\n\t\t this.aEndAngle = source.aEndAngle;\r\n \r\n\t\t this.aClockwise = source.aClockwise;\r\n \r\n\t\t this.aRotation = source.aRotation;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.aX = this.aX;\r\n\t\t data.aY = this.aY;\r\n \r\n\t\t data.xRadius = this.xRadius;\r\n\t\t data.yRadius = this.yRadius;\r\n \r\n\t\t data.aStartAngle = this.aStartAngle;\r\n\t\t data.aEndAngle = this.aEndAngle;\r\n \r\n\t\t data.aClockwise = this.aClockwise;\r\n \r\n\t\t data.aRotation = this.aRotation;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.aX = json.aX;\r\n\t\t this.aY = json.aY;\r\n \r\n\t\t this.xRadius = json.xRadius;\r\n\t\t this.yRadius = json.yRadius;\r\n \r\n\t\t this.aStartAngle = json.aStartAngle;\r\n\t\t this.aEndAngle = json.aEndAngle;\r\n \r\n\t\t this.aClockwise = json.aClockwise;\r\n \r\n\t\t this.aRotation = json.aRotation;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n EllipseCurve.prototype.isEllipseCurve = true;\r\n \r\n class ArcCurve extends EllipseCurve {\r\n \r\n\t constructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n \r\n\t\t super( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n \r\n\t\t this.type = 'ArcCurve';\r\n \r\n\t }\r\n \r\n }\r\n \r\n ArcCurve.prototype.isArcCurve = true;\r\n \r\n /**\r\n  * Centripetal CatmullRom Curve - which is useful for avoiding\r\n  * cusps and self-intersections in non-uniform catmull rom curves.\r\n  * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n  *\r\n  * curve.type accepts centripetal(default), chordal and catmullrom\r\n  * curve.tension is used for catmullrom which defaults to 0.5\r\n  */\r\n \r\n \r\n /*\r\n Based on an optimized c++ solution in\r\n  - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n  - http://ideone.com/NoEbVM\r\n \r\n This CubicPoly class could be used for reusing some variables and calculations,\r\n but for three.js curve use, it could be possible inlined and flatten into a single function call\r\n which can be placed in CurveUtils.\r\n */\r\n \r\n function CubicPoly() {\r\n \r\n\t let c0 = 0, c1 = 0, c2 = 0, c3 = 0;\r\n \r\n\t /*\r\n\t  * Compute coefficients for a cubic polynomial\r\n\t  *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t  * such that\r\n\t  *   p(0) = x0, p(1) = x1\r\n\t  *  and\r\n\t  *   p'(0) = t0, p'(1) = t1.\r\n\t  */\r\n\t function init( x0, x1, t0, t1 ) {\r\n \r\n\t\t c0 = x0;\r\n\t\t c1 = t0;\r\n\t\t c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n \r\n\t }\r\n \r\n\t return {\r\n \r\n\t\t initCatmullRom: function ( x0, x1, x2, x3, tension ) {\r\n \r\n\t\t\t init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n \r\n\t\t },\r\n \r\n\t\t initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n \r\n\t\t\t // compute tangents when parameterized in [t1,t2]\r\n\t\t\t let t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\t let t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n \r\n\t\t\t // rescale tangents for parametrization in [0,1]\r\n\t\t\t t1 *= dt1;\r\n\t\t\t t2 *= dt1;\r\n \r\n\t\t\t init( x1, x2, t1, t2 );\r\n \r\n\t\t },\r\n \r\n\t\t calc: function ( t ) {\r\n \r\n\t\t\t const t2 = t * t;\r\n\t\t\t const t3 = t2 * t;\r\n\t\t\t return c0 + c1 * t + c2 * t2 + c3 * t3;\r\n \r\n\t\t }\r\n \r\n\t };\r\n \r\n }\r\n \r\n //\r\n \r\n const tmp = new Vector3();\r\n const px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\r\n \r\n class CatmullRomCurve3 extends Curve {\r\n \r\n\t constructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'CatmullRomCurve3';\r\n \r\n\t\t this.points = points;\r\n\t\t this.closed = closed;\r\n\t\t this.curveType = curveType;\r\n\t\t this.tension = tension;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget = new Vector3() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t const points = this.points;\r\n\t\t const l = points.length;\r\n \r\n\t\t const p = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\t let intPoint = Math.floor( p );\r\n\t\t let weight = p - intPoint;\r\n \r\n\t\t if ( this.closed ) {\r\n \r\n\t\t\t intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\r\n \r\n\t\t } else if ( weight === 0 && intPoint === l - 1 ) {\r\n \r\n\t\t\t intPoint = l - 2;\r\n\t\t\t weight = 1;\r\n \r\n\t\t }\r\n \r\n\t\t let p0, p3; // 4 points (p1 & p2 defined below)\r\n \r\n\t\t if ( this.closed || intPoint > 0 ) {\r\n \r\n\t\t\t p0 = points[ ( intPoint - 1 ) % l ];\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // extrapolate first point\r\n\t\t\t tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t p0 = tmp;\r\n \r\n\t\t }\r\n \r\n\t\t const p1 = points[ intPoint % l ];\r\n\t\t const p2 = points[ ( intPoint + 1 ) % l ];\r\n \r\n\t\t if ( this.closed || intPoint + 2 < l ) {\r\n \r\n\t\t\t p3 = points[ ( intPoint + 2 ) % l ];\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // extrapolate last point\r\n\t\t\t tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\t p3 = tmp;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\r\n \r\n\t\t\t // init Centripetal / Chordal Catmull-Rom\r\n\t\t\t const pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t let dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t let dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t let dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n \r\n\t\t\t // safety check for repeated points\r\n\t\t\t if ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t if ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t if ( dt2 < 1e-4 ) dt2 = dt1;\r\n \r\n\t\t\t px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n \r\n\t\t } else if ( this.curveType === 'catmullrom' ) {\r\n \r\n\t\t\t px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\r\n\t\t\t py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\r\n\t\t\t pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\r\n \r\n\t\t }\r\n \r\n\t\t point.set(\r\n\t\t\t px.calc( weight ),\r\n\t\t\t py.calc( weight ),\r\n\t\t\t pz.calc( weight )\r\n\t\t );\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.points = [];\r\n \r\n\t\t for ( let i = 0, l = source.points.length; i < l; i ++ ) {\r\n \r\n\t\t\t const point = source.points[ i ];\r\n \r\n\t\t\t this.points.push( point.clone() );\r\n \r\n\t\t }\r\n \r\n\t\t this.closed = source.closed;\r\n\t\t this.curveType = source.curveType;\r\n\t\t this.tension = source.tension;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.points = [];\r\n \r\n\t\t for ( let i = 0, l = this.points.length; i < l; i ++ ) {\r\n \r\n\t\t\t const point = this.points[ i ];\r\n\t\t\t data.points.push( point.toArray() );\r\n \r\n\t\t }\r\n \r\n\t\t data.closed = this.closed;\r\n\t\t data.curveType = this.curveType;\r\n\t\t data.tension = this.tension;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.points = [];\r\n \r\n\t\t for ( let i = 0, l = json.points.length; i < l; i ++ ) {\r\n \r\n\t\t\t const point = json.points[ i ];\r\n\t\t\t this.points.push( new Vector3().fromArray( point ) );\r\n \r\n\t\t }\r\n \r\n\t\t this.closed = json.closed;\r\n\t\t this.curveType = json.curveType;\r\n\t\t this.tension = json.tension;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\r\n \r\n /**\r\n  * Bezier Curves formulas obtained from\r\n  * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n  */\r\n \r\n function CatmullRom( t, p0, p1, p2, p3 ) {\r\n \r\n\t const v0 = ( p2 - p0 ) * 0.5;\r\n\t const v1 = ( p3 - p1 ) * 0.5;\r\n\t const t2 = t * t;\r\n\t const t3 = t * t2;\r\n\t return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n \r\n }\r\n \r\n //\r\n \r\n function QuadraticBezierP0( t, p ) {\r\n \r\n\t const k = 1 - t;\r\n\t return k * k * p;\r\n \r\n }\r\n \r\n function QuadraticBezierP1( t, p ) {\r\n \r\n\t return 2 * ( 1 - t ) * t * p;\r\n \r\n }\r\n \r\n function QuadraticBezierP2( t, p ) {\r\n \r\n\t return t * t * p;\r\n \r\n }\r\n \r\n function QuadraticBezier( t, p0, p1, p2 ) {\r\n \r\n\t return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\r\n\t\t QuadraticBezierP2( t, p2 );\r\n \r\n }\r\n \r\n //\r\n \r\n function CubicBezierP0( t, p ) {\r\n \r\n\t const k = 1 - t;\r\n\t return k * k * k * p;\r\n \r\n }\r\n \r\n function CubicBezierP1( t, p ) {\r\n \r\n\t const k = 1 - t;\r\n\t return 3 * k * k * t * p;\r\n \r\n }\r\n \r\n function CubicBezierP2( t, p ) {\r\n \r\n\t return 3 * ( 1 - t ) * t * t * p;\r\n \r\n }\r\n \r\n function CubicBezierP3( t, p ) {\r\n \r\n\t return t * t * t * p;\r\n \r\n }\r\n \r\n function CubicBezier( t, p0, p1, p2, p3 ) {\r\n \r\n\t return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\r\n\t\t CubicBezierP3( t, p3 );\r\n \r\n }\r\n \r\n class CubicBezierCurve extends Curve {\r\n \r\n\t constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'CubicBezierCurve';\r\n \r\n\t\t this.v0 = v0;\r\n\t\t this.v1 = v1;\r\n\t\t this.v2 = v2;\r\n\t\t this.v3 = v3;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget = new Vector2() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n \r\n\t\t point.set(\r\n\t\t\t CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\t CubicBezier( t, v0.y, v1.y, v2.y, v3.y )\r\n\t\t );\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.v0.copy( source.v0 );\r\n\t\t this.v1.copy( source.v1 );\r\n\t\t this.v2.copy( source.v2 );\r\n\t\t this.v3.copy( source.v3 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.v0 = this.v0.toArray();\r\n\t\t data.v1 = this.v1.toArray();\r\n\t\t data.v2 = this.v2.toArray();\r\n\t\t data.v3 = this.v3.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.v0.fromArray( json.v0 );\r\n\t\t this.v1.fromArray( json.v1 );\r\n\t\t this.v2.fromArray( json.v2 );\r\n\t\t this.v3.fromArray( json.v3 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n CubicBezierCurve.prototype.isCubicBezierCurve = true;\r\n \r\n class CubicBezierCurve3 extends Curve {\r\n \r\n\t constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'CubicBezierCurve3';\r\n \r\n\t\t this.v0 = v0;\r\n\t\t this.v1 = v1;\r\n\t\t this.v2 = v2;\r\n\t\t this.v3 = v3;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget = new Vector3() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n \r\n\t\t point.set(\r\n\t\t\t CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\t CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\r\n\t\t\t CubicBezier( t, v0.z, v1.z, v2.z, v3.z )\r\n\t\t );\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.v0.copy( source.v0 );\r\n\t\t this.v1.copy( source.v1 );\r\n\t\t this.v2.copy( source.v2 );\r\n\t\t this.v3.copy( source.v3 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.v0 = this.v0.toArray();\r\n\t\t data.v1 = this.v1.toArray();\r\n\t\t data.v2 = this.v2.toArray();\r\n\t\t data.v3 = this.v3.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.v0.fromArray( json.v0 );\r\n\t\t this.v1.fromArray( json.v1 );\r\n\t\t this.v2.fromArray( json.v2 );\r\n\t\t this.v3.fromArray( json.v3 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\r\n \r\n class LineCurve extends Curve {\r\n \r\n\t constructor( v1 = new Vector2(), v2 = new Vector2() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'LineCurve';\r\n \r\n\t\t this.v1 = v1;\r\n\t\t this.v2 = v2;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget = new Vector2() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t if ( t === 1 ) {\r\n \r\n\t\t\t point.copy( this.v2 );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t point.copy( this.v2 ).sub( this.v1 );\r\n\t\t\t point.multiplyScalar( t ).add( this.v1 );\r\n \r\n\t\t }\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n \r\n\t // Line curve is linear, so we can overwrite default getPointAt\r\n\t getPointAt( u, optionalTarget ) {\r\n \r\n\t\t return this.getPoint( u, optionalTarget );\r\n \r\n\t }\r\n \r\n\t getTangent( t, optionalTarget ) {\r\n \r\n\t\t const tangent = optionalTarget || new Vector2();\r\n \r\n\t\t tangent.copy( this.v2 ).sub( this.v1 ).normalize();\r\n \r\n\t\t return tangent;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.v1.copy( source.v1 );\r\n\t\t this.v2.copy( source.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.v1 = this.v1.toArray();\r\n\t\t data.v2 = this.v2.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.v1.fromArray( json.v1 );\r\n\t\t this.v2.fromArray( json.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n LineCurve.prototype.isLineCurve = true;\r\n \r\n class LineCurve3 extends Curve {\r\n \r\n\t constructor( v1 = new Vector3(), v2 = new Vector3() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'LineCurve3';\r\n\t\t this.isLineCurve3 = true;\r\n \r\n\t\t this.v1 = v1;\r\n\t\t this.v2 = v2;\r\n \r\n\t }\r\n\t getPoint( t, optionalTarget = new Vector3() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t if ( t === 1 ) {\r\n \r\n\t\t\t point.copy( this.v2 );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t point.copy( this.v2 ).sub( this.v1 );\r\n\t\t\t point.multiplyScalar( t ).add( this.v1 );\r\n \r\n\t\t }\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n\t // Line curve is linear, so we can overwrite default getPointAt\r\n\t getPointAt( u, optionalTarget ) {\r\n \r\n\t\t return this.getPoint( u, optionalTarget );\r\n \r\n\t }\r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.v1.copy( source.v1 );\r\n\t\t this.v2.copy( source.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.v1 = this.v1.toArray();\r\n\t\t data.v2 = this.v2.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.v1.fromArray( json.v1 );\r\n\t\t this.v2.fromArray( json.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class QuadraticBezierCurve extends Curve {\r\n \r\n\t constructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'QuadraticBezierCurve';\r\n \r\n\t\t this.v0 = v0;\r\n\t\t this.v1 = v1;\r\n\t\t this.v2 = v2;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget = new Vector2() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n \r\n\t\t point.set(\r\n\t\t\t QuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\t QuadraticBezier( t, v0.y, v1.y, v2.y )\r\n\t\t );\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.v0.copy( source.v0 );\r\n\t\t this.v1.copy( source.v1 );\r\n\t\t this.v2.copy( source.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.v0 = this.v0.toArray();\r\n\t\t data.v1 = this.v1.toArray();\r\n\t\t data.v2 = this.v2.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.v0.fromArray( json.v0 );\r\n\t\t this.v1.fromArray( json.v1 );\r\n\t\t this.v2.fromArray( json.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\r\n \r\n class QuadraticBezierCurve3 extends Curve {\r\n \r\n\t constructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'QuadraticBezierCurve3';\r\n \r\n\t\t this.v0 = v0;\r\n\t\t this.v1 = v1;\r\n\t\t this.v2 = v2;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget = new Vector3() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t const v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n \r\n\t\t point.set(\r\n\t\t\t QuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\t QuadraticBezier( t, v0.y, v1.y, v2.y ),\r\n\t\t\t QuadraticBezier( t, v0.z, v1.z, v2.z )\r\n\t\t );\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.v0.copy( source.v0 );\r\n\t\t this.v1.copy( source.v1 );\r\n\t\t this.v2.copy( source.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.v0 = this.v0.toArray();\r\n\t\t data.v1 = this.v1.toArray();\r\n\t\t data.v2 = this.v2.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.v0.fromArray( json.v0 );\r\n\t\t this.v1.fromArray( json.v1 );\r\n\t\t this.v2.fromArray( json.v2 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\r\n \r\n class SplineCurve extends Curve {\r\n \r\n\t constructor( points = [] ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'SplineCurve';\r\n \r\n\t\t this.points = points;\r\n \r\n\t }\r\n \r\n\t getPoint( t, optionalTarget = new Vector2() ) {\r\n \r\n\t\t const point = optionalTarget;\r\n \r\n\t\t const points = this.points;\r\n\t\t const p = ( points.length - 1 ) * t;\r\n \r\n\t\t const intPoint = Math.floor( p );\r\n\t\t const weight = p - intPoint;\r\n \r\n\t\t const p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\t const p1 = points[ intPoint ];\r\n\t\t const p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t const p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n \r\n\t\t point.set(\r\n\t\t\t CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\r\n\t\t\t CatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\r\n\t\t );\r\n \r\n\t\t return point;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.points = [];\r\n \r\n\t\t for ( let i = 0, l = source.points.length; i < l; i ++ ) {\r\n \r\n\t\t\t const point = source.points[ i ];\r\n \r\n\t\t\t this.points.push( point.clone() );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.points = [];\r\n \r\n\t\t for ( let i = 0, l = this.points.length; i < l; i ++ ) {\r\n \r\n\t\t\t const point = this.points[ i ];\r\n\t\t\t data.points.push( point.toArray() );\r\n \r\n\t\t }\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.points = [];\r\n \r\n\t\t for ( let i = 0, l = json.points.length; i < l; i ++ ) {\r\n \r\n\t\t\t const point = json.points[ i ];\r\n\t\t\t this.points.push( new Vector2().fromArray( point ) );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n SplineCurve.prototype.isSplineCurve = true;\r\n \r\n var Curves = /*#__PURE__*/Object.freeze({\r\n\t __proto__: null,\r\n\t ArcCurve: ArcCurve,\r\n\t CatmullRomCurve3: CatmullRomCurve3,\r\n\t CubicBezierCurve: CubicBezierCurve,\r\n\t CubicBezierCurve3: CubicBezierCurve3,\r\n\t EllipseCurve: EllipseCurve,\r\n\t LineCurve: LineCurve,\r\n\t LineCurve3: LineCurve3,\r\n\t QuadraticBezierCurve: QuadraticBezierCurve,\r\n\t QuadraticBezierCurve3: QuadraticBezierCurve3,\r\n\t SplineCurve: SplineCurve\r\n });\r\n \r\n /**************************************************************\r\n  *\tCurved Path - a curve path is simply a array of connected\r\n  *  curves, but retains the api of a curve\r\n  **************************************************************/\r\n \r\n class CurvePath extends Curve {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'CurvePath';\r\n \r\n\t\t this.curves = [];\r\n\t\t this.autoClose = false; // Automatically closes the path\r\n \r\n\t }\r\n \r\n\t add( curve ) {\r\n \r\n\t\t this.curves.push( curve );\r\n \r\n\t }\r\n \r\n\t closePath() {\r\n \r\n\t\t // Add a line curve if start and end of lines are not connected\r\n\t\t const startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\t const endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n \r\n\t\t if ( ! startPoint.equals( endPoint ) ) {\r\n \r\n\t\t\t this.curves.push( new LineCurve( endPoint, startPoint ) );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // To get accurate point with reference to\r\n\t // entire path distance at time t,\r\n\t // following has to be done:\r\n \r\n\t // 1. Length of each sub path have to be known\r\n\t // 2. Locate and identify type of curve\r\n\t // 3. Get t for the curve\r\n\t // 4. Return curve.getPointAt(t')\r\n \r\n\t getPoint( t, optionalTarget ) {\r\n \r\n\t\t const d = t * this.getLength();\r\n\t\t const curveLengths = this.getCurveLengths();\r\n\t\t let i = 0;\r\n \r\n\t\t // To think about boundaries points.\r\n \r\n\t\t while ( i < curveLengths.length ) {\r\n \r\n\t\t\t if ( curveLengths[ i ] >= d ) {\r\n \r\n\t\t\t\t const diff = curveLengths[ i ] - d;\r\n\t\t\t\t const curve = this.curves[ i ];\r\n \r\n\t\t\t\t const segmentLength = curve.getLength();\r\n\t\t\t\t const u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n \r\n\t\t\t\t return curve.getPointAt( u, optionalTarget );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t i ++;\r\n \r\n\t\t }\r\n \r\n\t\t return null;\r\n \r\n\t\t // loop where sum != 0, sum > d , sum+1 <d\r\n \r\n\t }\r\n \r\n\t // We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t // getPoint() depends on getLength\r\n \r\n\t getLength() {\r\n \r\n\t\t const lens = this.getCurveLengths();\r\n\t\t return lens[ lens.length - 1 ];\r\n \r\n\t }\r\n \r\n\t // cacheLengths must be recalculated.\r\n\t updateArcLengths() {\r\n \r\n\t\t this.needsUpdate = true;\r\n\t\t this.cacheLengths = null;\r\n\t\t this.getCurveLengths();\r\n \r\n\t }\r\n \r\n\t // Compute lengths and cache them\r\n\t // We cannot overwrite getLengths() because UtoT mapping uses it.\r\n \r\n\t getCurveLengths() {\r\n \r\n\t\t // We use cache values if curves and cache array are same length\r\n \r\n\t\t if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n \r\n\t\t\t return this.cacheLengths;\r\n \r\n\t\t }\r\n \r\n\t\t // Get length of sub-curve\r\n\t\t // Push sums into cached array\r\n \r\n\t\t const lengths = [];\r\n\t\t let sums = 0;\r\n \r\n\t\t for ( let i = 0, l = this.curves.length; i < l; i ++ ) {\r\n \r\n\t\t\t sums += this.curves[ i ].getLength();\r\n\t\t\t lengths.push( sums );\r\n \r\n\t\t }\r\n \r\n\t\t this.cacheLengths = lengths;\r\n \r\n\t\t return lengths;\r\n \r\n\t }\r\n \r\n\t getSpacedPoints( divisions = 40 ) {\r\n \r\n\t\t const points = [];\r\n \r\n\t\t for ( let i = 0; i <= divisions; i ++ ) {\r\n \r\n\t\t\t points.push( this.getPoint( i / divisions ) );\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.autoClose ) {\r\n \r\n\t\t\t points.push( points[ 0 ] );\r\n \r\n\t\t }\r\n \r\n\t\t return points;\r\n \r\n\t }\r\n \r\n\t getPoints( divisions = 12 ) {\r\n \r\n\t\t const points = [];\r\n\t\t let last;\r\n \r\n\t\t for ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\r\n \r\n\t\t\t const curve = curves[ i ];\r\n\t\t\t const resolution = curve.isEllipseCurve ? divisions * 2\r\n\t\t\t\t : ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\r\n\t\t\t\t\t : curve.isSplineCurve ? divisions * curve.points.length\r\n\t\t\t\t\t\t : divisions;\r\n \r\n\t\t\t const pts = curve.getPoints( resolution );\r\n \r\n\t\t\t for ( let j = 0; j < pts.length; j ++ ) {\r\n \r\n\t\t\t\t const point = pts[ j ];\r\n \r\n\t\t\t\t if ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\r\n \r\n\t\t\t\t points.push( point );\r\n\t\t\t\t last = point;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\r\n \r\n\t\t\t points.push( points[ 0 ] );\r\n \r\n\t\t }\r\n \r\n\t\t return points;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.curves = [];\r\n \r\n\t\t for ( let i = 0, l = source.curves.length; i < l; i ++ ) {\r\n \r\n\t\t\t const curve = source.curves[ i ];\r\n \r\n\t\t\t this.curves.push( curve.clone() );\r\n \r\n\t\t }\r\n \r\n\t\t this.autoClose = source.autoClose;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.autoClose = this.autoClose;\r\n\t\t data.curves = [];\r\n \r\n\t\t for ( let i = 0, l = this.curves.length; i < l; i ++ ) {\r\n \r\n\t\t\t const curve = this.curves[ i ];\r\n\t\t\t data.curves.push( curve.toJSON() );\r\n \r\n\t\t }\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.autoClose = json.autoClose;\r\n\t\t this.curves = [];\r\n \r\n\t\t for ( let i = 0, l = json.curves.length; i < l; i ++ ) {\r\n \r\n\t\t\t const curve = json.curves[ i ];\r\n\t\t\t this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Path extends CurvePath {\r\n \r\n\t constructor( points ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'Path';\r\n \r\n\t\t this.currentPoint = new Vector2();\r\n \r\n\t\t if ( points ) {\r\n \r\n\t\t\t this.setFromPoints( points );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t setFromPoints( points ) {\r\n \r\n\t\t this.moveTo( points[ 0 ].x, points[ 0 ].y );\r\n \r\n\t\t for ( let i = 1, l = points.length; i < l; i ++ ) {\r\n \r\n\t\t\t this.lineTo( points[ i ].x, points[ i ].y );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t moveTo( x, y ) {\r\n \r\n\t\t this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lineTo( x, y ) {\r\n \r\n\t\t const curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\r\n\t\t this.curves.push( curve );\r\n \r\n\t\t this.currentPoint.set( x, y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t quadraticCurveTo( aCPx, aCPy, aX, aY ) {\r\n \r\n\t\t const curve = new QuadraticBezierCurve(\r\n\t\t\t this.currentPoint.clone(),\r\n\t\t\t new Vector2( aCPx, aCPy ),\r\n\t\t\t new Vector2( aX, aY )\r\n\t\t );\r\n \r\n\t\t this.curves.push( curve );\r\n \r\n\t\t this.currentPoint.set( aX, aY );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n \r\n\t\t const curve = new CubicBezierCurve(\r\n\t\t\t this.currentPoint.clone(),\r\n\t\t\t new Vector2( aCP1x, aCP1y ),\r\n\t\t\t new Vector2( aCP2x, aCP2y ),\r\n\t\t\t new Vector2( aX, aY )\r\n\t\t );\r\n \r\n\t\t this.curves.push( curve );\r\n \r\n\t\t this.currentPoint.set( aX, aY );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t splineThru( pts /*Array of Vector*/ ) {\r\n \r\n\t\t const npts = [ this.currentPoint.clone() ].concat( pts );\r\n \r\n\t\t const curve = new SplineCurve( npts );\r\n\t\t this.curves.push( curve );\r\n \r\n\t\t this.currentPoint.copy( pts[ pts.length - 1 ] );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t arc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n \r\n\t\t const x0 = this.currentPoint.x;\r\n\t\t const y0 = this.currentPoint.y;\r\n \r\n\t\t this.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\t aStartAngle, aEndAngle, aClockwise );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t absarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n \r\n\t\t this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t ellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n \r\n\t\t const x0 = this.currentPoint.x;\r\n\t\t const y0 = this.currentPoint.y;\r\n \r\n\t\t this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t absellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n \r\n\t\t const curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n \r\n\t\t if ( this.curves.length > 0 ) {\r\n \r\n\t\t\t // if a previous curve is present, attempt to join\r\n\t\t\t const firstPoint = curve.getPoint( 0 );\r\n \r\n\t\t\t if ( ! firstPoint.equals( this.currentPoint ) ) {\r\n \r\n\t\t\t\t this.lineTo( firstPoint.x, firstPoint.y );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t this.curves.push( curve );\r\n \r\n\t\t const lastPoint = curve.getPoint( 1 );\r\n\t\t this.currentPoint.copy( lastPoint );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.currentPoint.copy( source.currentPoint );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.currentPoint = this.currentPoint.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.currentPoint.fromArray( json.currentPoint );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Shape extends Path {\r\n \r\n\t constructor( points ) {\r\n \r\n\t\t super( points );\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t this.type = 'Shape';\r\n \r\n\t\t this.holes = [];\r\n \r\n\t }\r\n \r\n\t getPointsHoles( divisions ) {\r\n \r\n\t\t const holesPts = [];\r\n \r\n\t\t for ( let i = 0, l = this.holes.length; i < l; i ++ ) {\r\n \r\n\t\t\t holesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n \r\n\t\t }\r\n \r\n\t\t return holesPts;\r\n \r\n\t }\r\n \r\n\t // get points of shape and holes (keypoints based on segments parameter)\r\n \r\n\t extractPoints( divisions ) {\r\n \r\n\t\t return {\r\n \r\n\t\t\t shape: this.getPoints( divisions ),\r\n\t\t\t holes: this.getPointsHoles( divisions )\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.holes = [];\r\n \r\n\t\t for ( let i = 0, l = source.holes.length; i < l; i ++ ) {\r\n \r\n\t\t\t const hole = source.holes[ i ];\r\n \r\n\t\t\t this.holes.push( hole.clone() );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.uuid = this.uuid;\r\n\t\t data.holes = [];\r\n \r\n\t\t for ( let i = 0, l = this.holes.length; i < l; i ++ ) {\r\n \r\n\t\t\t const hole = this.holes[ i ];\r\n\t\t\t data.holes.push( hole.toJSON() );\r\n \r\n\t\t }\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t super.fromJSON( json );\r\n \r\n\t\t this.uuid = json.uuid;\r\n\t\t this.holes = [];\r\n \r\n\t\t for ( let i = 0, l = json.holes.length; i < l; i ++ ) {\r\n \r\n\t\t\t const hole = json.holes[ i ];\r\n\t\t\t this.holes.push( new Path().fromJSON( hole ) );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Port from https://github.com/mapbox/earcut (v2.2.2)\r\n  */\r\n \r\n const Earcut = {\r\n \r\n\t triangulate: function ( data, holeIndices, dim = 2 ) {\r\n \r\n\t\t const hasHoles = holeIndices && holeIndices.length;\r\n\t\t const outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\r\n\t\t let outerNode = linkedList( data, 0, outerLen, dim, true );\r\n\t\t const triangles = [];\r\n \r\n\t\t if ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\r\n \r\n\t\t let minX, minY, maxX, maxY, x, y, invSize;\r\n \r\n\t\t if ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\r\n \r\n\t\t // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\t\t if ( data.length > 80 * dim ) {\r\n \r\n\t\t\t minX = maxX = data[ 0 ];\r\n\t\t\t minY = maxY = data[ 1 ];\r\n \r\n\t\t\t for ( let i = dim; i < outerLen; i += dim ) {\r\n \r\n\t\t\t\t x = data[ i ];\r\n\t\t\t\t y = data[ i + 1 ];\r\n\t\t\t\t if ( x < minX ) minX = x;\r\n\t\t\t\t if ( y < minY ) minY = y;\r\n\t\t\t\t if ( x > maxX ) maxX = x;\r\n\t\t\t\t if ( y > maxY ) maxY = y;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\t\t\t invSize = Math.max( maxX - minX, maxY - minY );\r\n\t\t\t invSize = invSize !== 0 ? 1 / invSize : 0;\r\n \r\n\t\t }\r\n \r\n\t\t earcutLinked( outerNode, triangles, dim, minX, minY, invSize );\r\n \r\n\t\t return triangles;\r\n \r\n\t }\r\n \r\n };\r\n \r\n // create a circular doubly linked list from polygon points in the specified winding order\r\n function linkedList( data, start, end, dim, clockwise ) {\r\n \r\n\t let i, last;\r\n \r\n\t if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n \r\n\t\t for ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n \r\n\t } else {\r\n \r\n\t\t for ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n \r\n\t }\r\n \r\n\t if ( last && equals( last, last.next ) ) {\r\n \r\n\t\t removeNode( last );\r\n\t\t last = last.next;\r\n \r\n\t }\r\n \r\n\t return last;\r\n \r\n }\r\n \r\n // eliminate colinear or duplicate points\r\n function filterPoints( start, end ) {\r\n \r\n\t if ( ! start ) return start;\r\n\t if ( ! end ) end = start;\r\n \r\n\t let p = start,\r\n\t\t again;\r\n\t do {\r\n \r\n\t\t again = false;\r\n \r\n\t\t if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n \r\n\t\t\t removeNode( p );\r\n\t\t\t p = end = p.prev;\r\n\t\t\t if ( p === p.next ) break;\r\n\t\t\t again = true;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t p = p.next;\r\n \r\n\t\t }\r\n \r\n\t } while ( again || p !== end );\r\n \r\n\t return end;\r\n \r\n }\r\n \r\n // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\r\n \r\n\t if ( ! ear ) return;\r\n \r\n\t // interlink polygon nodes in z-order\r\n\t if ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\r\n \r\n\t let stop = ear,\r\n\t\t prev, next;\r\n \r\n\t // iterate through ears, slicing them one by one\r\n\t while ( ear.prev !== ear.next ) {\r\n \r\n\t\t prev = ear.prev;\r\n\t\t next = ear.next;\r\n \r\n\t\t if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n \r\n\t\t\t // cut off the triangle\r\n\t\t\t triangles.push( prev.i / dim );\r\n\t\t\t triangles.push( ear.i / dim );\r\n\t\t\t triangles.push( next.i / dim );\r\n \r\n\t\t\t removeNode( ear );\r\n \r\n\t\t\t // skipping the next vertex leads to less sliver triangles\r\n\t\t\t ear = next.next;\r\n\t\t\t stop = next.next;\r\n \r\n\t\t\t continue;\r\n \r\n\t\t }\r\n \r\n\t\t ear = next;\r\n \r\n\t\t // if we looped through the whole remaining polygon and can't find any more ears\r\n\t\t if ( ear === stop ) {\r\n \r\n\t\t\t // try filtering points and slicing again\r\n\t\t\t if ( ! pass ) {\r\n \r\n\t\t\t\t earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n \r\n\t\t\t\t // if this didn't work, try curing all small self-intersections locally\r\n \r\n\t\t\t } else if ( pass === 1 ) {\r\n \r\n\t\t\t\t ear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\r\n\t\t\t\t earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n \r\n\t\t\t\t // as a last resort, try splitting the remaining polygon into two\r\n \r\n\t\t\t } else if ( pass === 2 ) {\r\n \r\n\t\t\t\t splitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t break;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n // check whether a polygon node forms a valid ear with adjacent nodes\r\n function isEar( ear ) {\r\n \r\n\t const a = ear.prev,\r\n\t\t b = ear,\r\n\t\t c = ear.next;\r\n \r\n\t if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n \r\n\t // now make sure we don't have other points inside the potential ear\r\n\t let p = ear.next.next;\r\n \r\n\t while ( p !== ear.prev ) {\r\n \r\n\t\t if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t area( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\t p = p.next;\r\n \r\n\t }\r\n \r\n\t return true;\r\n \r\n }\r\n \r\n function isEarHashed( ear, minX, minY, invSize ) {\r\n \r\n\t const a = ear.prev,\r\n\t\t b = ear,\r\n\t\t c = ear.next;\r\n \r\n\t if ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n \r\n\t // triangle bbox; min & max are calculated like this for speed\r\n\t const minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\r\n\t\t minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\r\n\t\t maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\r\n\t\t maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\r\n \r\n\t // z-order range for the current triangle bbox;\r\n\t const minZ = zOrder( minTX, minTY, minX, minY, invSize ),\r\n\t\t maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\r\n \r\n\t let p = ear.prevZ,\r\n\t\t n = ear.nextZ;\r\n \r\n\t // look for points inside the triangle in both directions\r\n\t while ( p && p.z >= minZ && n && n.z <= maxZ ) {\r\n \r\n\t\t if ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t area( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\t p = p.prevZ;\r\n \r\n\t\t if ( n !== ear.prev && n !== ear.next &&\r\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\r\n\t\t\t area( n.prev, n, n.next ) >= 0 ) return false;\r\n\t\t n = n.nextZ;\r\n \r\n\t }\r\n \r\n\t // look for remaining points in decreasing z-order\r\n\t while ( p && p.z >= minZ ) {\r\n \r\n\t\t if ( p !== ear.prev && p !== ear.next &&\r\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\r\n\t\t\t area( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\t p = p.prevZ;\r\n \r\n\t }\r\n \r\n\t // look for remaining points in increasing z-order\r\n\t while ( n && n.z <= maxZ ) {\r\n \r\n\t\t if ( n !== ear.prev && n !== ear.next &&\r\n\t\t\t pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\r\n\t\t\t area( n.prev, n, n.next ) >= 0 ) return false;\r\n\t\t n = n.nextZ;\r\n \r\n\t }\r\n \r\n\t return true;\r\n \r\n }\r\n \r\n // go through all polygon nodes and cure small local self-intersections\r\n function cureLocalIntersections( start, triangles, dim ) {\r\n \r\n\t let p = start;\r\n\t do {\r\n \r\n\t\t const a = p.prev,\r\n\t\t\t b = p.next.next;\r\n \r\n\t\t if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n \r\n\t\t\t triangles.push( a.i / dim );\r\n\t\t\t triangles.push( p.i / dim );\r\n\t\t\t triangles.push( b.i / dim );\r\n \r\n\t\t\t // remove two nodes involved\r\n\t\t\t removeNode( p );\r\n\t\t\t removeNode( p.next );\r\n \r\n\t\t\t p = start = b;\r\n \r\n\t\t }\r\n \r\n\t\t p = p.next;\r\n \r\n\t } while ( p !== start );\r\n \r\n\t return filterPoints( p );\r\n \r\n }\r\n \r\n // try splitting polygon into two and triangulate them independently\r\n function splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n \r\n\t // look for a valid diagonal that divides the polygon into two\r\n\t let a = start;\r\n\t do {\r\n \r\n\t\t let b = a.next.next;\r\n\t\t while ( b !== a.prev ) {\r\n \r\n\t\t\t if ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n \r\n\t\t\t\t // split the polygon in two by the diagonal\r\n\t\t\t\t let c = splitPolygon( a, b );\r\n \r\n\t\t\t\t // filter colinear points around the cuts\r\n\t\t\t\t a = filterPoints( a, a.next );\r\n\t\t\t\t c = filterPoints( c, c.next );\r\n \r\n\t\t\t\t // run earcut on each half\r\n\t\t\t\t earcutLinked( a, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t earcutLinked( c, triangles, dim, minX, minY, invSize );\r\n\t\t\t\t return;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t b = b.next;\r\n \r\n\t\t }\r\n \r\n\t\t a = a.next;\r\n \r\n\t } while ( a !== start );\r\n \r\n }\r\n \r\n // link every hole into the outer loop, producing a single-ring polygon without holes\r\n function eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n \r\n\t const queue = [];\r\n\t let i, len, start, end, list;\r\n \r\n\t for ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n \r\n\t\t start = holeIndices[ i ] * dim;\r\n\t\t end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n\t\t list = linkedList( data, start, end, dim, false );\r\n\t\t if ( list === list.next ) list.steiner = true;\r\n\t\t queue.push( getLeftmost( list ) );\r\n \r\n\t }\r\n \r\n\t queue.sort( compareX );\r\n \r\n\t // process holes from left to right\r\n\t for ( i = 0; i < queue.length; i ++ ) {\r\n \r\n\t\t eliminateHole( queue[ i ], outerNode );\r\n\t\t outerNode = filterPoints( outerNode, outerNode.next );\r\n \r\n\t }\r\n \r\n\t return outerNode;\r\n \r\n }\r\n \r\n function compareX( a, b ) {\r\n \r\n\t return a.x - b.x;\r\n \r\n }\r\n \r\n // find a bridge between vertices that connects hole with an outer ring and and link it\r\n function eliminateHole( hole, outerNode ) {\r\n \r\n\t outerNode = findHoleBridge( hole, outerNode );\r\n\t if ( outerNode ) {\r\n \r\n\t\t const b = splitPolygon( outerNode, hole );\r\n \r\n\t\t // filter collinear points around the cuts\r\n\t\t filterPoints( outerNode, outerNode.next );\r\n\t\t filterPoints( b, b.next );\r\n \r\n\t }\r\n \r\n }\r\n \r\n // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n function findHoleBridge( hole, outerNode ) {\r\n \r\n\t let p = outerNode;\r\n\t const hx = hole.x;\r\n\t const hy = hole.y;\r\n\t let qx = - Infinity, m;\r\n \r\n\t // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t // segment's endpoint with lesser x will be potential connection point\r\n\t do {\r\n \r\n\t\t if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n \r\n\t\t\t const x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\t\t\t if ( x <= hx && x > qx ) {\r\n \r\n\t\t\t\t qx = x;\r\n\t\t\t\t if ( x === hx ) {\r\n \r\n\t\t\t\t\t if ( hy === p.y ) return p;\r\n\t\t\t\t\t if ( hy === p.next.y ) return p.next;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t m = p.x < p.next.x ? p : p.next;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t p = p.next;\r\n \r\n\t } while ( p !== outerNode );\r\n \r\n\t if ( ! m ) return null;\r\n \r\n\t if ( hx === qx ) return m; // hole touches outer segment; pick leftmost endpoint\r\n \r\n\t // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t // if there are no points found, we have a valid connection;\r\n\t // otherwise choose the point of the minimum angle with the ray as connection point\r\n \r\n\t const stop = m,\r\n\t\t mx = m.x,\r\n\t\t my = m.y;\r\n\t let tanMin = Infinity, tan;\r\n \r\n\t p = m;\r\n \r\n\t do {\r\n \r\n\t\t if ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n\t\t\t\t pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n \r\n\t\t\t tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n \r\n\t\t\t if ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\r\n \r\n\t\t\t\t m = p;\r\n\t\t\t\t tanMin = tan;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t p = p.next;\r\n \r\n\t } while ( p !== stop );\r\n \r\n\t return m;\r\n \r\n }\r\n \r\n // whether sector in vertex m contains sector in vertex p in the same coordinates\r\n function sectorContainsSector( m, p ) {\r\n \r\n\t return area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\r\n \r\n }\r\n \r\n // interlink polygon nodes in z-order\r\n function indexCurve( start, minX, minY, invSize ) {\r\n \r\n\t let p = start;\r\n\t do {\r\n \r\n\t\t if ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\r\n\t\t p.prevZ = p.prev;\r\n\t\t p.nextZ = p.next;\r\n\t\t p = p.next;\r\n \r\n\t } while ( p !== start );\r\n \r\n\t p.prevZ.nextZ = null;\r\n\t p.prevZ = null;\r\n \r\n\t sortLinked( p );\r\n \r\n }\r\n \r\n // Simon Tatham's linked list merge sort algorithm\r\n // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n function sortLinked( list ) {\r\n \r\n\t let i, p, q, e, tail, numMerges, pSize, qSize,\r\n\t\t inSize = 1;\r\n \r\n\t do {\r\n \r\n\t\t p = list;\r\n\t\t list = null;\r\n\t\t tail = null;\r\n\t\t numMerges = 0;\r\n \r\n\t\t while ( p ) {\r\n \r\n\t\t\t numMerges ++;\r\n\t\t\t q = p;\r\n\t\t\t pSize = 0;\r\n\t\t\t for ( i = 0; i < inSize; i ++ ) {\r\n \r\n\t\t\t\t pSize ++;\r\n\t\t\t\t q = q.nextZ;\r\n\t\t\t\t if ( ! q ) break;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t qSize = inSize;\r\n \r\n\t\t\t while ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n \r\n\t\t\t\t if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n \r\n\t\t\t\t\t e = p;\r\n\t\t\t\t\t p = p.nextZ;\r\n\t\t\t\t\t pSize --;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t e = q;\r\n\t\t\t\t\t q = q.nextZ;\r\n\t\t\t\t\t qSize --;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( tail ) tail.nextZ = e;\r\n\t\t\t\t else list = e;\r\n \r\n\t\t\t\t e.prevZ = tail;\r\n\t\t\t\t tail = e;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t p = q;\r\n \r\n\t\t }\r\n \r\n\t\t tail.nextZ = null;\r\n\t\t inSize *= 2;\r\n \r\n\t } while ( numMerges > 1 );\r\n \r\n\t return list;\r\n \r\n }\r\n \r\n // z-order of a point given coords and inverse of the longer side of data bbox\r\n function zOrder( x, y, minX, minY, invSize ) {\r\n \r\n\t // coords are transformed into non-negative 15-bit integer range\r\n\t x = 32767 * ( x - minX ) * invSize;\r\n\t y = 32767 * ( y - minY ) * invSize;\r\n \r\n\t x = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n\t x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n\t x = ( x | ( x << 2 ) ) & 0x33333333;\r\n\t x = ( x | ( x << 1 ) ) & 0x55555555;\r\n \r\n\t y = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n\t y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n\t y = ( y | ( y << 2 ) ) & 0x33333333;\r\n\t y = ( y | ( y << 1 ) ) & 0x55555555;\r\n \r\n\t return x | ( y << 1 );\r\n \r\n }\r\n \r\n // find the leftmost node of a polygon ring\r\n function getLeftmost( start ) {\r\n \r\n\t let p = start,\r\n\t\t leftmost = start;\r\n\t do {\r\n \r\n\t\t if ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\r\n\t\t p = p.next;\r\n \r\n\t } while ( p !== start );\r\n \r\n\t return leftmost;\r\n \r\n }\r\n \r\n // check if a point lies within a convex triangle\r\n function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n \r\n\t return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\r\n\t\t\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\r\n\t\t\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\r\n \r\n }\r\n \r\n // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n function isValidDiagonal( a, b ) {\r\n \r\n\t return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\r\n\t\t ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\r\n\t\t ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\r\n\t\t equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\r\n \r\n }\r\n \r\n // signed area of a triangle\r\n function area( p, q, r ) {\r\n \r\n\t return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n \r\n }\r\n \r\n // check if two points are equal\r\n function equals( p1, p2 ) {\r\n \r\n\t return p1.x === p2.x && p1.y === p2.y;\r\n \r\n }\r\n \r\n // check if two segments intersect\r\n function intersects( p1, q1, p2, q2 ) {\r\n \r\n\t const o1 = sign( area( p1, q1, p2 ) );\r\n\t const o2 = sign( area( p1, q1, q2 ) );\r\n\t const o3 = sign( area( p2, q2, p1 ) );\r\n\t const o4 = sign( area( p2, q2, q1 ) );\r\n \r\n\t if ( o1 !== o2 && o3 !== o4 ) return true; // general case\r\n \r\n\t if ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n\t if ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n\t if ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n\t if ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n \r\n\t return false;\r\n \r\n }\r\n \r\n // for collinear points p, q, r, check if point q lies on segment pr\r\n function onSegment( p, q, r ) {\r\n \r\n\t return q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\r\n \r\n }\r\n \r\n function sign( num ) {\r\n \r\n\t return num > 0 ? 1 : num < 0 ? - 1 : 0;\r\n \r\n }\r\n \r\n // check if a polygon diagonal intersects any polygon segments\r\n function intersectsPolygon( a, b ) {\r\n \r\n\t let p = a;\r\n\t do {\r\n \r\n\t\t if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n\t\t\t\t intersects( p, p.next, a, b ) ) return true;\r\n\t\t p = p.next;\r\n \r\n\t } while ( p !== a );\r\n \r\n\t return false;\r\n \r\n }\r\n \r\n // check if a polygon diagonal is locally inside the polygon\r\n function locallyInside( a, b ) {\r\n \r\n\t return area( a.prev, a, a.next ) < 0 ?\r\n\t\t area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n\t\t area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n \r\n }\r\n \r\n // check if the middle point of a polygon diagonal is inside the polygon\r\n function middleInside( a, b ) {\r\n \r\n\t let p = a,\r\n\t\t inside = false;\r\n\t const px = ( a.x + b.x ) / 2,\r\n\t\t py = ( a.y + b.y ) / 2;\r\n\t do {\r\n \r\n\t\t if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n\t\t\t\t ( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\r\n\t\t\t inside = ! inside;\r\n\t\t p = p.next;\r\n \r\n\t } while ( p !== a );\r\n \r\n\t return inside;\r\n \r\n }\r\n \r\n // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n // if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n function splitPolygon( a, b ) {\r\n \r\n\t const a2 = new Node( a.i, a.x, a.y ),\r\n\t\t b2 = new Node( b.i, b.x, b.y ),\r\n\t\t an = a.next,\r\n\t\t bp = b.prev;\r\n \r\n\t a.next = b;\r\n\t b.prev = a;\r\n \r\n\t a2.next = an;\r\n\t an.prev = a2;\r\n \r\n\t b2.next = a2;\r\n\t a2.prev = b2;\r\n \r\n\t bp.next = b2;\r\n\t b2.prev = bp;\r\n \r\n\t return b2;\r\n \r\n }\r\n \r\n // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n function insertNode( i, x, y, last ) {\r\n \r\n\t const p = new Node( i, x, y );\r\n \r\n\t if ( ! last ) {\r\n \r\n\t\t p.prev = p;\r\n\t\t p.next = p;\r\n \r\n\t } else {\r\n \r\n\t\t p.next = last.next;\r\n\t\t p.prev = last;\r\n\t\t last.next.prev = p;\r\n\t\t last.next = p;\r\n \r\n\t }\r\n \r\n\t return p;\r\n \r\n }\r\n \r\n function removeNode( p ) {\r\n \r\n\t p.next.prev = p.prev;\r\n\t p.prev.next = p.next;\r\n \r\n\t if ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\r\n\t if ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\r\n \r\n }\r\n \r\n function Node( i, x, y ) {\r\n \r\n\t // vertex index in coordinates array\r\n\t this.i = i;\r\n \r\n\t // vertex coordinates\r\n\t this.x = x;\r\n\t this.y = y;\r\n \r\n\t // previous and next vertex nodes in a polygon ring\r\n\t this.prev = null;\r\n\t this.next = null;\r\n \r\n\t // z-order curve value\r\n\t this.z = null;\r\n \r\n\t // previous and next nodes in z-order\r\n\t this.prevZ = null;\r\n\t this.nextZ = null;\r\n \r\n\t // indicates whether this is a steiner point\r\n\t this.steiner = false;\r\n \r\n }\r\n \r\n function signedArea( data, start, end, dim ) {\r\n \r\n\t let sum = 0;\r\n\t for ( let i = start, j = end - dim; i < end; i += dim ) {\r\n \r\n\t\t sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n\t\t j = i;\r\n \r\n\t }\r\n \r\n\t return sum;\r\n \r\n }\r\n \r\n class ShapeUtils {\r\n \r\n\t // calculate area of the contour polygon\r\n \r\n\t static area( contour ) {\r\n \r\n\t\t const n = contour.length;\r\n\t\t let a = 0.0;\r\n \r\n\t\t for ( let p = n - 1, q = 0; q < n; p = q ++ ) {\r\n \r\n\t\t\t a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n \r\n\t\t }\r\n \r\n\t\t return a * 0.5;\r\n \r\n\t }\r\n \r\n\t static isClockWise( pts ) {\r\n \r\n\t\t return ShapeUtils.area( pts ) < 0;\r\n \r\n\t }\r\n \r\n\t static triangulateShape( contour, holes ) {\r\n \r\n\t\t const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\t\t const holeIndices = []; // array of hole indices\r\n\t\t const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n \r\n\t\t removeDupEndPts( contour );\r\n\t\t addContour( vertices, contour );\r\n \r\n\t\t //\r\n \r\n\t\t let holeIndex = contour.length;\r\n \r\n\t\t holes.forEach( removeDupEndPts );\r\n \r\n\t\t for ( let i = 0; i < holes.length; i ++ ) {\r\n \r\n\t\t\t holeIndices.push( holeIndex );\r\n\t\t\t holeIndex += holes[ i ].length;\r\n\t\t\t addContour( vertices, holes[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t //\r\n \r\n\t\t const triangles = Earcut.triangulate( vertices, holeIndices );\r\n \r\n\t\t //\r\n \r\n\t\t for ( let i = 0; i < triangles.length; i += 3 ) {\r\n \r\n\t\t\t faces.push( triangles.slice( i, i + 3 ) );\r\n \r\n\t\t }\r\n \r\n\t\t return faces;\r\n \r\n\t }\r\n \r\n }\r\n \r\n function removeDupEndPts( points ) {\r\n \r\n\t const l = points.length;\r\n \r\n\t if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\r\n \r\n\t\t points.pop();\r\n \r\n\t }\r\n \r\n }\r\n \r\n function addContour( vertices, contour ) {\r\n \r\n\t for ( let i = 0; i < contour.length; i ++ ) {\r\n \r\n\t\t vertices.push( contour[ i ].x );\r\n\t\t vertices.push( contour[ i ].y );\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Creates extruded geometry from a path shape.\r\n  *\r\n  * parameters = {\r\n  *\r\n  *  curveSegments: <int>, // number of points on the curves\r\n  *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n  *  depth: <float>, // Depth to extrude the shape\r\n  *\r\n  *  bevelEnabled: <bool>, // turn on bevel\r\n  *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n  *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\r\n  *  bevelOffset: <float>, // how far from shape outline does bevel start\r\n  *  bevelSegments: <int>, // number of bevel layers\r\n  *\r\n  *  extrudePath: <THREE.Curve> // curve to extrude shape along\r\n  *\r\n  *  UVGenerator: <Object> // object that provides UV generator functions\r\n  *\r\n  * }\r\n  */\r\n \r\n class ExtrudeGeometry extends BufferGeometry {\r\n \r\n\t constructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'ExtrudeGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t shapes: shapes,\r\n\t\t\t options: options\r\n\t\t };\r\n \r\n\t\t shapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const verticesArray = [];\r\n\t\t const uvArray = [];\r\n \r\n\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n \r\n\t\t\t const shape = shapes[ i ];\r\n\t\t\t addShape( shape );\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\r\n \r\n\t\t this.computeVertexNormals();\r\n \r\n\t\t // functions\r\n \r\n\t\t function addShape( shape ) {\r\n \r\n\t\t\t const placeholder = [];\r\n \r\n\t\t\t // options\r\n \r\n\t\t\t const curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\t const steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\t let depth = options.depth !== undefined ? options.depth : 1;\r\n \r\n\t\t\t let bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\t let bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\r\n\t\t\t let bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\r\n\t\t\t let bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\r\n\t\t\t let bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n \r\n\t\t\t const extrudePath = options.extrudePath;\r\n \r\n\t\t\t const uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\r\n \r\n\t\t\t // deprecated options\r\n \r\n\t\t\t if ( options.amount !== undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\r\n\t\t\t\t depth = options.amount;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t //\r\n \r\n\t\t\t let extrudePts, extrudeByPath = false;\r\n\t\t\t let splineTube, binormal, normal, position2;\r\n \r\n\t\t\t if ( extrudePath ) {\r\n \r\n\t\t\t\t extrudePts = extrudePath.getSpacedPoints( steps );\r\n \r\n\t\t\t\t extrudeByPath = true;\r\n\t\t\t\t bevelEnabled = false; // bevels not supported for path extrusion\r\n \r\n\t\t\t\t // SETUP TNB variables\r\n \r\n\t\t\t\t // TODO1 - have a .isClosed in spline?\r\n \r\n\t\t\t\t splineTube = extrudePath.computeFrenetFrames( steps, false );\r\n \r\n\t\t\t\t // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n \r\n\t\t\t\t binormal = new Vector3();\r\n\t\t\t\t normal = new Vector3();\r\n\t\t\t\t position2 = new Vector3();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Safeguards if bevels are not enabled\r\n \r\n\t\t\t if ( ! bevelEnabled ) {\r\n \r\n\t\t\t\t bevelSegments = 0;\r\n\t\t\t\t bevelThickness = 0;\r\n\t\t\t\t bevelSize = 0;\r\n\t\t\t\t bevelOffset = 0;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Variables initialization\r\n \r\n\t\t\t const shapePoints = shape.extractPoints( curveSegments );\r\n \r\n\t\t\t let vertices = shapePoints.shape;\r\n\t\t\t const holes = shapePoints.holes;\r\n \r\n\t\t\t const reverse = ! ShapeUtils.isClockWise( vertices );\r\n \r\n\t\t\t if ( reverse ) {\r\n \r\n\t\t\t\t vertices = vertices.reverse();\r\n \r\n\t\t\t\t // Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n \r\n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n \r\n\t\t\t\t\t const ahole = holes[ h ];\r\n \r\n\t\t\t\t\t if ( ShapeUtils.isClockWise( ahole ) ) {\r\n \r\n\t\t\t\t\t\t holes[ h ] = ahole.reverse();\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t const faces = ShapeUtils.triangulateShape( vertices, holes );\r\n \r\n\t\t\t /* Vertices */\r\n \r\n\t\t\t const contour = vertices; // vertices has all points but contour has only points of circumference\r\n \r\n\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n \r\n\t\t\t\t const ahole = holes[ h ];\r\n \r\n\t\t\t\t vertices = vertices.concat( ahole );\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t function scalePt2( pt, vec, size ) {\r\n \r\n\t\t\t\t if ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\r\n \r\n\t\t\t\t return vec.clone().multiplyScalar( size ).add( pt );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const vlen = vertices.length, flen = faces.length;\r\n \r\n \r\n\t\t\t // Find directions for point movement\r\n \r\n \r\n\t\t\t function getBevelVec( inPt, inPrev, inNext ) {\r\n \r\n\t\t\t\t // computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t //   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t // if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t //\r\n\t\t\t\t // inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t //  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n \r\n\t\t\t\t let v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n \r\n\t\t\t\t // good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t // http://geomalgorithms.com/a05-_intersect-1.html\r\n \r\n\t\t\t\t const v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\t v_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\t const v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\t v_next_y = inNext.y - inPt.y;\r\n \r\n\t\t\t\t const v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n \r\n\t\t\t\t // check for collinear edges\r\n\t\t\t\t const collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n \r\n\t\t\t\t if ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n \r\n\t\t\t\t\t // not collinear\r\n \r\n\t\t\t\t\t // length of vectors for normalizing\r\n \r\n\t\t\t\t\t const v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\t\t const v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n \r\n\t\t\t\t\t // shift adjacent points by unit vectors to the left\r\n \r\n\t\t\t\t\t const ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\t\t const ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n \r\n\t\t\t\t\t const ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\t\t const ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n \r\n\t\t\t\t\t // scaling factor for v_prev to intersection point\r\n \r\n\t\t\t\t\t const sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t ( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\r\n\t\t\t\t\t\t ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n \r\n\t\t\t\t\t // vector from inPt to intersection point\r\n \r\n\t\t\t\t\t v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\t\t v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n \r\n\t\t\t\t\t // Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t //  but prevent crazy spikes\r\n\t\t\t\t\t const v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\t\t if ( v_trans_lensq <= 2 ) {\r\n \r\n\t\t\t\t\t\t return new Vector2( v_trans_x, v_trans_y );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t shrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // handle special case of collinear edges\r\n \r\n\t\t\t\t\t let direction_eq = false; // assumes: opposite\r\n \r\n\t\t\t\t\t if ( v_prev_x > Number.EPSILON ) {\r\n \r\n\t\t\t\t\t\t if ( v_next_x > Number.EPSILON ) {\r\n \r\n\t\t\t\t\t\t\t direction_eq = true;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t if ( v_prev_x < - Number.EPSILON ) {\r\n \r\n\t\t\t\t\t\t\t if ( v_next_x < - Number.EPSILON ) {\r\n \r\n\t\t\t\t\t\t\t\t direction_eq = true;\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n \r\n\t\t\t\t\t\t\t\t direction_eq = true;\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( direction_eq ) {\r\n \r\n\t\t\t\t\t\t // console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\t v_trans_x = - v_prev_y;\r\n\t\t\t\t\t\t v_trans_y = v_prev_x;\r\n\t\t\t\t\t\t shrink_by = Math.sqrt( v_prev_lensq );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t // console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\t v_trans_x = v_prev_x;\r\n\t\t\t\t\t\t v_trans_y = v_prev_y;\r\n\t\t\t\t\t\t shrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t const contourMovements = [];\r\n \r\n\t\t\t for ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n \r\n\t\t\t\t if ( j === il ) j = 0;\r\n\t\t\t\t if ( k === il ) k = 0;\r\n \r\n\t\t\t\t //  (j)---(i)---(k)\r\n\t\t\t\t // console.log('i,j,k', i, j , k)\r\n \r\n\t\t\t\t contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const holesMovements = [];\r\n\t\t\t let oneHoleMovements, verticesMovements = contourMovements.concat();\r\n \r\n\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n \r\n\t\t\t\t const ahole = holes[ h ];\r\n \r\n\t\t\t\t oneHoleMovements = [];\r\n \r\n\t\t\t\t for ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n \r\n\t\t\t\t\t if ( j === il ) j = 0;\r\n\t\t\t\t\t if ( k === il ) k = 0;\r\n \r\n\t\t\t\t\t //  (j)---(i)---(k)\r\n\t\t\t\t\t oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t holesMovements.push( oneHoleMovements );\r\n\t\t\t\t verticesMovements = verticesMovements.concat( oneHoleMovements );\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t // Loop bevelSegments, 1 for the front, 1 for the back\r\n \r\n\t\t\t for ( let b = 0; b < bevelSegments; b ++ ) {\r\n \r\n\t\t\t\t //for ( b = bevelSegments; b > 0; b -- ) {\r\n \r\n\t\t\t\t const t = b / bevelSegments;\r\n\t\t\t\t const z = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\t const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\r\n \r\n\t\t\t\t // contract shape\r\n \r\n\t\t\t\t for ( let i = 0, il = contour.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n \r\n\t\t\t\t\t v( vert.x, vert.y, - z );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // expand holes\r\n \r\n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n \r\n\t\t\t\t\t const ahole = holes[ h ];\r\n\t\t\t\t\t oneHoleMovements = holesMovements[ h ];\r\n \r\n\t\t\t\t\t for ( let i = 0, il = ahole.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n \r\n\t\t\t\t\t\t v( vert.x, vert.y, - z );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const bs = bevelSize + bevelOffset;\r\n \r\n\t\t\t // Back facing vertices\r\n \r\n\t\t\t for ( let i = 0; i < vlen; i ++ ) {\r\n \r\n\t\t\t\t const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n \r\n\t\t\t\t if ( ! extrudeByPath ) {\r\n \r\n\t\t\t\t\t v( vert.x, vert.y, 0 );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n \r\n\t\t\t\t\t normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\t binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n \r\n\t\t\t\t\t position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n \r\n\t\t\t\t\t v( position2.x, position2.y, position2.z );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Add stepped vertices...\r\n\t\t\t // Including front facing vertices\r\n \r\n\t\t\t for ( let s = 1; s <= steps; s ++ ) {\r\n \r\n\t\t\t\t for ( let i = 0; i < vlen; i ++ ) {\r\n \r\n\t\t\t\t\t const vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n \r\n\t\t\t\t\t if ( ! extrudeByPath ) {\r\n \r\n\t\t\t\t\t\t v( vert.x, vert.y, depth / steps * s );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n \r\n\t\t\t\t\t\t normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\t\t binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n \r\n\t\t\t\t\t\t position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n \r\n\t\t\t\t\t\t v( position2.x, position2.y, position2.z );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t // Add bevel segments planes\r\n \r\n\t\t\t //for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\t\t for ( let b = bevelSegments - 1; b >= 0; b -- ) {\r\n \r\n\t\t\t\t const t = b / bevelSegments;\r\n\t\t\t\t const z = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\t const bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\r\n \r\n\t\t\t\t // contract shape\r\n \r\n\t\t\t\t for ( let i = 0, il = contour.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\t\t v( vert.x, vert.y, depth + z );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // expand holes\r\n \r\n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n \r\n\t\t\t\t\t const ahole = holes[ h ];\r\n\t\t\t\t\t oneHoleMovements = holesMovements[ h ];\r\n \r\n\t\t\t\t\t for ( let i = 0, il = ahole.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t const vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n \r\n\t\t\t\t\t\t if ( ! extrudeByPath ) {\r\n \r\n\t\t\t\t\t\t\t v( vert.x, vert.y, depth + z );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t /* Faces */\r\n \r\n\t\t\t // Top and bottom faces\r\n \r\n\t\t\t buildLidFaces();\r\n \r\n\t\t\t // Sides faces\r\n \r\n\t\t\t buildSideFaces();\r\n \r\n \r\n\t\t\t /////  Internal functions\r\n \r\n\t\t\t function buildLidFaces() {\r\n \r\n\t\t\t\t const start = verticesArray.length / 3;\r\n \r\n\t\t\t\t if ( bevelEnabled ) {\r\n \r\n\t\t\t\t\t let layer = 0; // steps + 1\r\n\t\t\t\t\t let offset = vlen * layer;\r\n \r\n\t\t\t\t\t // Bottom faces\r\n \r\n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\r\n \r\n\t\t\t\t\t\t const face = faces[ i ];\r\n\t\t\t\t\t\t f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t layer = steps + bevelSegments * 2;\r\n\t\t\t\t\t offset = vlen * layer;\r\n \r\n\t\t\t\t\t // Top faces\r\n \r\n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\r\n \r\n\t\t\t\t\t\t const face = faces[ i ];\r\n\t\t\t\t\t\t f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // Bottom faces\r\n \r\n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\r\n \r\n\t\t\t\t\t\t const face = faces[ i ];\r\n\t\t\t\t\t\t f3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t // Top faces\r\n \r\n\t\t\t\t\t for ( let i = 0; i < flen; i ++ ) {\r\n \r\n\t\t\t\t\t\t const face = faces[ i ];\r\n\t\t\t\t\t\t f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t scope.addGroup( start, verticesArray.length / 3 - start, 0 );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Create faces for the z-sides of the shape\r\n \r\n\t\t\t function buildSideFaces() {\r\n \r\n\t\t\t\t const start = verticesArray.length / 3;\r\n\t\t\t\t let layeroffset = 0;\r\n\t\t\t\t sidewalls( contour, layeroffset );\r\n\t\t\t\t layeroffset += contour.length;\r\n \r\n\t\t\t\t for ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n \r\n\t\t\t\t\t const ahole = holes[ h ];\r\n\t\t\t\t\t sidewalls( ahole, layeroffset );\r\n \r\n\t\t\t\t\t //, true\r\n\t\t\t\t\t layeroffset += ahole.length;\r\n \r\n\t\t\t\t }\r\n \r\n \r\n\t\t\t\t scope.addGroup( start, verticesArray.length / 3 - start, 1 );\r\n \r\n \r\n\t\t\t }\r\n \r\n\t\t\t function sidewalls( contour, layeroffset ) {\r\n \r\n\t\t\t\t let i = contour.length;\r\n \r\n\t\t\t\t while ( -- i >= 0 ) {\r\n \r\n\t\t\t\t\t const j = i;\r\n\t\t\t\t\t let k = i - 1;\r\n\t\t\t\t\t if ( k < 0 ) k = contour.length - 1;\r\n \r\n\t\t\t\t\t //console.log('b', i,j, i-1, k,vertices.length);\r\n \r\n\t\t\t\t\t for ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\r\n \r\n\t\t\t\t\t\t const slen1 = vlen * s;\r\n\t\t\t\t\t\t const slen2 = vlen * ( s + 1 );\r\n \r\n\t\t\t\t\t\t const a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\t b = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\t c = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\t d = layeroffset + j + slen2;\r\n \r\n\t\t\t\t\t\t f4( a, b, c, d );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t function v( x, y, z ) {\r\n \r\n\t\t\t\t placeholder.push( x );\r\n\t\t\t\t placeholder.push( y );\r\n\t\t\t\t placeholder.push( z );\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t function f3( a, b, c ) {\r\n \r\n\t\t\t\t addVertex( a );\r\n\t\t\t\t addVertex( b );\r\n\t\t\t\t addVertex( c );\r\n \r\n\t\t\t\t const nextIndex = verticesArray.length / 3;\r\n\t\t\t\t const uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n \r\n\t\t\t\t addUV( uvs[ 0 ] );\r\n\t\t\t\t addUV( uvs[ 1 ] );\r\n\t\t\t\t addUV( uvs[ 2 ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t function f4( a, b, c, d ) {\r\n \r\n\t\t\t\t addVertex( a );\r\n\t\t\t\t addVertex( b );\r\n\t\t\t\t addVertex( d );\r\n \r\n\t\t\t\t addVertex( b );\r\n\t\t\t\t addVertex( c );\r\n\t\t\t\t addVertex( d );\r\n \r\n \r\n\t\t\t\t const nextIndex = verticesArray.length / 3;\r\n\t\t\t\t const uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n \r\n\t\t\t\t addUV( uvs[ 0 ] );\r\n\t\t\t\t addUV( uvs[ 1 ] );\r\n\t\t\t\t addUV( uvs[ 3 ] );\r\n \r\n\t\t\t\t addUV( uvs[ 1 ] );\r\n\t\t\t\t addUV( uvs[ 2 ] );\r\n\t\t\t\t addUV( uvs[ 3 ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t function addVertex( index ) {\r\n \r\n\t\t\t\t verticesArray.push( placeholder[ index * 3 + 0 ] );\r\n\t\t\t\t verticesArray.push( placeholder[ index * 3 + 1 ] );\r\n\t\t\t\t verticesArray.push( placeholder[ index * 3 + 2 ] );\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t function addUV( vector2 ) {\r\n \r\n\t\t\t\t uvArray.push( vector2.x );\r\n\t\t\t\t uvArray.push( vector2.y );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t const shapes = this.parameters.shapes;\r\n\t\t const options = this.parameters.options;\r\n \r\n\t\t return toJSON$1( shapes, options, data );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data, shapes ) {\r\n \r\n\t\t const geometryShapes = [];\r\n \r\n\t\t for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n \r\n\t\t\t const shape = shapes[ data.shapes[ j ] ];\r\n \r\n\t\t\t geometryShapes.push( shape );\r\n \r\n\t\t }\r\n \r\n\t\t const extrudePath = data.options.extrudePath;\r\n \r\n\t\t if ( extrudePath !== undefined ) {\r\n \r\n\t\t\t data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\r\n \r\n\t\t }\r\n \r\n\t\t return new ExtrudeGeometry( geometryShapes, data.options );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const WorldUVGenerator = {\r\n \r\n\t generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\r\n \r\n\t\t const a_x = vertices[ indexA * 3 ];\r\n\t\t const a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t const b_x = vertices[ indexB * 3 ];\r\n\t\t const b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t const c_x = vertices[ indexC * 3 ];\r\n\t\t const c_y = vertices[ indexC * 3 + 1 ];\r\n \r\n\t\t return [\r\n\t\t\t new Vector2( a_x, a_y ),\r\n\t\t\t new Vector2( b_x, b_y ),\r\n\t\t\t new Vector2( c_x, c_y )\r\n\t\t ];\r\n \r\n\t },\r\n \r\n\t generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\r\n \r\n\t\t const a_x = vertices[ indexA * 3 ];\r\n\t\t const a_y = vertices[ indexA * 3 + 1 ];\r\n\t\t const a_z = vertices[ indexA * 3 + 2 ];\r\n\t\t const b_x = vertices[ indexB * 3 ];\r\n\t\t const b_y = vertices[ indexB * 3 + 1 ];\r\n\t\t const b_z = vertices[ indexB * 3 + 2 ];\r\n\t\t const c_x = vertices[ indexC * 3 ];\r\n\t\t const c_y = vertices[ indexC * 3 + 1 ];\r\n\t\t const c_z = vertices[ indexC * 3 + 2 ];\r\n\t\t const d_x = vertices[ indexD * 3 ];\r\n\t\t const d_y = vertices[ indexD * 3 + 1 ];\r\n\t\t const d_z = vertices[ indexD * 3 + 2 ];\r\n \r\n\t\t if ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\r\n \r\n\t\t\t return [\r\n\t\t\t\t new Vector2( a_x, 1 - a_z ),\r\n\t\t\t\t new Vector2( b_x, 1 - b_z ),\r\n\t\t\t\t new Vector2( c_x, 1 - c_z ),\r\n\t\t\t\t new Vector2( d_x, 1 - d_z )\r\n\t\t\t ];\r\n \r\n\t\t } else {\r\n \r\n\t\t\t return [\r\n\t\t\t\t new Vector2( a_y, 1 - a_z ),\r\n\t\t\t\t new Vector2( b_y, 1 - b_z ),\r\n\t\t\t\t new Vector2( c_y, 1 - c_z ),\r\n\t\t\t\t new Vector2( d_y, 1 - d_z )\r\n\t\t\t ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n };\r\n \r\n function toJSON$1( shapes, options, data ) {\r\n \r\n\t data.shapes = [];\r\n \r\n\t if ( Array.isArray( shapes ) ) {\r\n \r\n\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n \r\n\t\t\t const shape = shapes[ i ];\r\n \r\n\t\t\t data.shapes.push( shape.uuid );\r\n \r\n\t\t }\r\n \r\n\t } else {\r\n \r\n\t\t data.shapes.push( shapes.uuid );\r\n \r\n\t }\r\n \r\n\t if ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\r\n \r\n\t return data;\r\n \r\n }\r\n \r\n class IcosahedronGeometry extends PolyhedronGeometry {\r\n \r\n\t constructor( radius = 1, detail = 0 ) {\r\n \r\n\t\t const t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n \r\n\t\t const vertices = [\r\n\t\t\t - 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\r\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\r\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\r\n\t\t ];\r\n \r\n\t\t const indices = [\r\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\r\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\r\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\r\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\r\n\t\t ];\r\n \r\n\t\t super( vertices, indices, radius, detail );\r\n \r\n\t\t this.type = 'IcosahedronGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t detail: detail\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new IcosahedronGeometry( data.radius, data.detail );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class LatheGeometry extends BufferGeometry {\r\n \r\n\t constructor( points = [ new Vector2( 0, 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, - 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'LatheGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t points: points,\r\n\t\t\t segments: segments,\r\n\t\t\t phiStart: phiStart,\r\n\t\t\t phiLength: phiLength\r\n\t\t };\r\n \r\n\t\t segments = Math.floor( segments );\r\n \r\n\t\t // clamp phiLength so it's in range of [ 0, 2PI ]\r\n \r\n\t\t phiLength = clamp( phiLength, 0, Math.PI * 2 );\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const uvs = [];\r\n\t\t const initNormals = [];\r\n\t\t const normals = [];\r\n \r\n\t\t // helper variables\r\n \r\n\t\t const inverseSegments = 1.0 / segments;\r\n\t\t const vertex = new Vector3();\r\n\t\t const uv = new Vector2();\r\n\t\t const normal = new Vector3();\r\n\t\t const curNormal = new Vector3();\r\n\t\t const prevNormal = new Vector3();\r\n\t\t let dx = 0;\r\n\t\t let dy = 0;\r\n \r\n\t\t // pre-compute normals for initial \"meridian\"\r\n \r\n\t\t for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n \r\n\t\t\t switch ( j ) {\r\n \r\n\t\t\t\t case 0:\t\t\t\t// special handling for 1st vertex on path\r\n \r\n\t\t\t\t\t dx = points[ j + 1 ].x - points[ j ].x;\r\n\t\t\t\t\t dy = points[ j + 1 ].y - points[ j ].y;\r\n \r\n\t\t\t\t\t normal.x = dy * 1.0;\r\n\t\t\t\t\t normal.y = - dx;\r\n\t\t\t\t\t normal.z = dy * 0.0;\r\n \r\n\t\t\t\t\t prevNormal.copy( normal );\r\n \r\n\t\t\t\t\t normal.normalize();\r\n \r\n\t\t\t\t\t initNormals.push( normal.x, normal.y, normal.z );\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case ( points.length - 1 ):\t// special handling for last Vertex on path\r\n \r\n\t\t\t\t\t initNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t default:\t\t\t// default handling for all vertices in between\r\n \r\n\t\t\t\t\t dx = points[ j + 1 ].x - points[ j ].x;\r\n\t\t\t\t\t dy = points[ j + 1 ].y - points[ j ].y;\r\n \r\n\t\t\t\t\t normal.x = dy * 1.0;\r\n\t\t\t\t\t normal.y = - dx;\r\n\t\t\t\t\t normal.z = dy * 0.0;\r\n \r\n\t\t\t\t\t curNormal.copy( normal );\r\n \r\n\t\t\t\t\t normal.x += prevNormal.x;\r\n\t\t\t\t\t normal.y += prevNormal.y;\r\n\t\t\t\t\t normal.z += prevNormal.z;\r\n \r\n\t\t\t\t\t normal.normalize();\r\n \r\n\t\t\t\t\t initNormals.push( normal.x, normal.y, normal.z );\r\n \r\n\t\t\t\t\t prevNormal.copy( curNormal );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // generate vertices, uvs and normals\r\n \r\n\t\t for ( let i = 0; i <= segments; i ++ ) {\r\n \r\n\t\t\t const phi = phiStart + i * inverseSegments * phiLength;\r\n \r\n\t\t\t const sin = Math.sin( phi );\r\n\t\t\t const cos = Math.cos( phi );\r\n \r\n\t\t\t for ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n \r\n\t\t\t\t // vertex\r\n \r\n\t\t\t\t vertex.x = points[ j ].x * sin;\r\n\t\t\t\t vertex.y = points[ j ].y;\r\n\t\t\t\t vertex.z = points[ j ].x * cos;\r\n \r\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t\t // uv\r\n \r\n\t\t\t\t uv.x = i / segments;\r\n\t\t\t\t uv.y = j / ( points.length - 1 );\r\n \r\n\t\t\t\t uvs.push( uv.x, uv.y );\r\n \r\n\t\t\t\t // normal\r\n \r\n\t\t\t\t const x = initNormals[ 3 * j + 0 ] * sin;\r\n\t\t\t\t const y = initNormals[ 3 * j + 1 ];\r\n\t\t\t\t const z = initNormals[ 3 * j + 0 ] * cos;\r\n \r\n\t\t\t\t normals.push( x, y, z );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // indices\r\n \r\n\t\t for ( let i = 0; i < segments; i ++ ) {\r\n \r\n\t\t\t for ( let j = 0; j < ( points.length - 1 ); j ++ ) {\r\n \r\n\t\t\t\t const base = j + i * points.length;\r\n \r\n\t\t\t\t const a = base;\r\n\t\t\t\t const b = base + points.length;\r\n\t\t\t\t const c = base + points.length + 1;\r\n\t\t\t\t const d = base + 1;\r\n \r\n\t\t\t\t // faces\r\n \r\n\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t indices.push( c, d, b );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class OctahedronGeometry extends PolyhedronGeometry {\r\n \r\n\t constructor( radius = 1, detail = 0 ) {\r\n \r\n\t\t const vertices = [\r\n\t\t\t 1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\r\n\t\t\t 0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\r\n\t\t ];\r\n \r\n\t\t const indices = [\r\n\t\t\t 0, 2, 4,\t0, 4, 3,\t0, 3, 5,\r\n\t\t\t 0, 5, 2,\t1, 2, 5,\t1, 5, 3,\r\n\t\t\t 1, 3, 4,\t1, 4, 2\r\n\t\t ];\r\n \r\n\t\t super( vertices, indices, radius, detail );\r\n \r\n\t\t this.type = 'OctahedronGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t detail: detail\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new OctahedronGeometry( data.radius, data.detail );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class RingGeometry extends BufferGeometry {\r\n \r\n\t constructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'RingGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t innerRadius: innerRadius,\r\n\t\t\t outerRadius: outerRadius,\r\n\t\t\t thetaSegments: thetaSegments,\r\n\t\t\t phiSegments: phiSegments,\r\n\t\t\t thetaStart: thetaStart,\r\n\t\t\t thetaLength: thetaLength\r\n\t\t };\r\n \r\n\t\t thetaSegments = Math.max( 3, thetaSegments );\r\n\t\t phiSegments = Math.max( 1, phiSegments );\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // some helper variables\r\n \r\n\t\t let radius = innerRadius;\r\n\t\t const radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\t const vertex = new Vector3();\r\n\t\t const uv = new Vector2();\r\n \r\n\t\t // generate vertices, normals and uvs\r\n \r\n\t\t for ( let j = 0; j <= phiSegments; j ++ ) {\r\n \r\n\t\t\t for ( let i = 0; i <= thetaSegments; i ++ ) {\r\n \r\n\t\t\t\t // values are generate from the inside of the ring to the outside\r\n \r\n\t\t\t\t const segment = thetaStart + i / thetaSegments * thetaLength;\r\n \r\n\t\t\t\t // vertex\r\n \r\n\t\t\t\t vertex.x = radius * Math.cos( segment );\r\n\t\t\t\t vertex.y = radius * Math.sin( segment );\r\n \r\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t\t // normal\r\n \r\n\t\t\t\t normals.push( 0, 0, 1 );\r\n \r\n\t\t\t\t // uv\r\n \r\n\t\t\t\t uv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\t\t uv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n \r\n\t\t\t\t uvs.push( uv.x, uv.y );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // increase the radius for next row of vertices\r\n \r\n\t\t\t radius += radiusStep;\r\n \r\n\t\t }\r\n \r\n\t\t // indices\r\n \r\n\t\t for ( let j = 0; j < phiSegments; j ++ ) {\r\n \r\n\t\t\t const thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n \r\n\t\t\t for ( let i = 0; i < thetaSegments; i ++ ) {\r\n \r\n\t\t\t\t const segment = i + thetaSegmentLevel;\r\n \r\n\t\t\t\t const a = segment;\r\n\t\t\t\t const b = segment + thetaSegments + 1;\r\n\t\t\t\t const c = segment + thetaSegments + 2;\r\n\t\t\t\t const d = segment + 1;\r\n \r\n\t\t\t\t // faces\r\n \r\n\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t indices.push( b, c, d );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class ShapeGeometry extends BufferGeometry {\r\n \r\n\t constructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'ShapeGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t shapes: shapes,\r\n\t\t\t curveSegments: curveSegments\r\n\t\t };\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // helper variables\r\n \r\n\t\t let groupStart = 0;\r\n\t\t let groupCount = 0;\r\n \r\n\t\t // allow single and array values for \"shapes\" parameter\r\n \r\n\t\t if ( Array.isArray( shapes ) === false ) {\r\n \r\n\t\t\t addShape( shapes );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t for ( let i = 0; i < shapes.length; i ++ ) {\r\n \r\n\t\t\t\t addShape( shapes[ i ] );\r\n \r\n\t\t\t\t this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\r\n \r\n\t\t\t\t groupStart += groupCount;\r\n\t\t\t\t groupCount = 0;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n \r\n\t\t // helper functions\r\n \r\n\t\t function addShape( shape ) {\r\n \r\n\t\t\t const indexOffset = vertices.length / 3;\r\n\t\t\t const points = shape.extractPoints( curveSegments );\r\n \r\n\t\t\t let shapeVertices = points.shape;\r\n\t\t\t const shapeHoles = points.holes;\r\n \r\n\t\t\t // check direction of vertices\r\n \r\n\t\t\t if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\r\n \r\n\t\t\t\t shapeVertices = shapeVertices.reverse();\r\n \r\n\t\t\t }\r\n \r\n\t\t\t for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const shapeHole = shapeHoles[ i ];\r\n \r\n\t\t\t\t if ( ShapeUtils.isClockWise( shapeHole ) === true ) {\r\n \r\n\t\t\t\t\t shapeHoles[ i ] = shapeHole.reverse();\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\r\n \r\n\t\t\t // join vertices of inner and outer paths to a single array\r\n \r\n\t\t\t for ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const shapeHole = shapeHoles[ i ];\r\n\t\t\t\t shapeVertices = shapeVertices.concat( shapeHole );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // vertices, normals, uvs\r\n \r\n\t\t\t for ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const vertex = shapeVertices[ i ];\r\n \r\n\t\t\t\t vertices.push( vertex.x, vertex.y, 0 );\r\n\t\t\t\t normals.push( 0, 0, 1 );\r\n\t\t\t\t uvs.push( vertex.x, vertex.y ); // world uvs\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // incides\r\n \r\n\t\t\t for ( let i = 0, l = faces.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const face = faces[ i ];\r\n \r\n\t\t\t\t const a = face[ 0 ] + indexOffset;\r\n\t\t\t\t const b = face[ 1 ] + indexOffset;\r\n\t\t\t\t const c = face[ 2 ] + indexOffset;\r\n \r\n\t\t\t\t indices.push( a, b, c );\r\n\t\t\t\t groupCount += 3;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t const shapes = this.parameters.shapes;\r\n \r\n\t\t return toJSON( shapes, data );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data, shapes ) {\r\n \r\n\t\t const geometryShapes = [];\r\n \r\n\t\t for ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n \r\n\t\t\t const shape = shapes[ data.shapes[ j ] ];\r\n \r\n\t\t\t geometryShapes.push( shape );\r\n \r\n\t\t }\r\n \r\n\t\t return new ShapeGeometry( geometryShapes, data.curveSegments );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function toJSON( shapes, data ) {\r\n \r\n\t data.shapes = [];\r\n \r\n\t if ( Array.isArray( shapes ) ) {\r\n \r\n\t\t for ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n \r\n\t\t\t const shape = shapes[ i ];\r\n \r\n\t\t\t data.shapes.push( shape.uuid );\r\n \r\n\t\t }\r\n \r\n\t } else {\r\n \r\n\t\t data.shapes.push( shapes.uuid );\r\n \r\n\t }\r\n \r\n\t return data;\r\n \r\n }\r\n \r\n class SphereGeometry extends BufferGeometry {\r\n \r\n\t constructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'SphereGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t widthSegments: widthSegments,\r\n\t\t\t heightSegments: heightSegments,\r\n\t\t\t phiStart: phiStart,\r\n\t\t\t phiLength: phiLength,\r\n\t\t\t thetaStart: thetaStart,\r\n\t\t\t thetaLength: thetaLength\r\n\t\t };\r\n \r\n\t\t widthSegments = Math.max( 3, Math.floor( widthSegments ) );\r\n\t\t heightSegments = Math.max( 2, Math.floor( heightSegments ) );\r\n \r\n\t\t const thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\r\n \r\n\t\t let index = 0;\r\n\t\t const grid = [];\r\n \r\n\t\t const vertex = new Vector3();\r\n\t\t const normal = new Vector3();\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // generate vertices, normals and uvs\r\n \r\n\t\t for ( let iy = 0; iy <= heightSegments; iy ++ ) {\r\n \r\n\t\t\t const verticesRow = [];\r\n \r\n\t\t\t const v = iy / heightSegments;\r\n \r\n\t\t\t // special case for the poles\r\n \r\n\t\t\t let uOffset = 0;\r\n \r\n\t\t\t if ( iy == 0 && thetaStart == 0 ) {\r\n \r\n\t\t\t\t uOffset = 0.5 / widthSegments;\r\n \r\n\t\t\t } else if ( iy == heightSegments && thetaEnd == Math.PI ) {\r\n \r\n\t\t\t\t uOffset = - 0.5 / widthSegments;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t for ( let ix = 0; ix <= widthSegments; ix ++ ) {\r\n \r\n\t\t\t\t const u = ix / widthSegments;\r\n \r\n\t\t\t\t // vertex\r\n \r\n\t\t\t\t vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\t vertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\t vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n \r\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t\t // normal\r\n \r\n\t\t\t\t normal.copy( vertex ).normalize();\r\n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\r\n \r\n\t\t\t\t // uv\r\n \r\n\t\t\t\t uvs.push( u + uOffset, 1 - v );\r\n \r\n\t\t\t\t verticesRow.push( index ++ );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t grid.push( verticesRow );\r\n \r\n\t\t }\r\n \r\n\t\t // indices\r\n \r\n\t\t for ( let iy = 0; iy < heightSegments; iy ++ ) {\r\n \r\n\t\t\t for ( let ix = 0; ix < widthSegments; ix ++ ) {\r\n \r\n\t\t\t\t const a = grid[ iy ][ ix + 1 ];\r\n\t\t\t\t const b = grid[ iy ][ ix ];\r\n\t\t\t\t const c = grid[ iy + 1 ][ ix ];\r\n\t\t\t\t const d = grid[ iy + 1 ][ ix + 1 ];\r\n \r\n\t\t\t\t if ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\r\n\t\t\t\t if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class TetrahedronGeometry extends PolyhedronGeometry {\r\n \r\n\t constructor( radius = 1, detail = 0 ) {\r\n \r\n\t\t const vertices = [\r\n\t\t\t 1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\r\n\t\t ];\r\n \r\n\t\t const indices = [\r\n\t\t\t 2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\r\n\t\t ];\r\n \r\n\t\t super( vertices, indices, radius, detail );\r\n \r\n\t\t this.type = 'TetrahedronGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t detail: detail\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new TetrahedronGeometry( data.radius, data.detail );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class TorusGeometry extends BufferGeometry {\r\n \r\n\t constructor( radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2 ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'TorusGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t tube: tube,\r\n\t\t\t radialSegments: radialSegments,\r\n\t\t\t tubularSegments: tubularSegments,\r\n\t\t\t arc: arc\r\n\t\t };\r\n \r\n\t\t radialSegments = Math.floor( radialSegments );\r\n\t\t tubularSegments = Math.floor( tubularSegments );\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // helper variables\r\n \r\n\t\t const center = new Vector3();\r\n\t\t const vertex = new Vector3();\r\n\t\t const normal = new Vector3();\r\n \r\n\t\t // generate vertices, normals and uvs\r\n \r\n\t\t for ( let j = 0; j <= radialSegments; j ++ ) {\r\n \r\n\t\t\t for ( let i = 0; i <= tubularSegments; i ++ ) {\r\n \r\n\t\t\t\t const u = i / tubularSegments * arc;\r\n\t\t\t\t const v = j / radialSegments * Math.PI * 2;\r\n \r\n\t\t\t\t // vertex\r\n \r\n\t\t\t\t vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\t vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\t vertex.z = tube * Math.sin( v );\r\n \r\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t\t // normal\r\n \r\n\t\t\t\t center.x = radius * Math.cos( u );\r\n\t\t\t\t center.y = radius * Math.sin( u );\r\n\t\t\t\t normal.subVectors( vertex, center ).normalize();\r\n \r\n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\r\n \r\n\t\t\t\t // uv\r\n \r\n\t\t\t\t uvs.push( i / tubularSegments );\r\n\t\t\t\t uvs.push( j / radialSegments );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // generate indices\r\n \r\n\t\t for ( let j = 1; j <= radialSegments; j ++ ) {\r\n \r\n\t\t\t for ( let i = 1; i <= tubularSegments; i ++ ) {\r\n \r\n\t\t\t\t // indices\r\n \r\n\t\t\t\t const a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\t const b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\t const c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\t const d = ( tubularSegments + 1 ) * j + i;\r\n \r\n\t\t\t\t // faces\r\n \r\n\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t indices.push( b, c, d );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class TorusKnotGeometry extends BufferGeometry {\r\n \r\n\t constructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'TorusKnotGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t radius: radius,\r\n\t\t\t tube: tube,\r\n\t\t\t tubularSegments: tubularSegments,\r\n\t\t\t radialSegments: radialSegments,\r\n\t\t\t p: p,\r\n\t\t\t q: q\r\n\t\t };\r\n \r\n\t\t tubularSegments = Math.floor( tubularSegments );\r\n\t\t radialSegments = Math.floor( radialSegments );\r\n \r\n\t\t // buffers\r\n \r\n\t\t const indices = [];\r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n \r\n\t\t // helper variables\r\n \r\n\t\t const vertex = new Vector3();\r\n\t\t const normal = new Vector3();\r\n \r\n\t\t const P1 = new Vector3();\r\n\t\t const P2 = new Vector3();\r\n \r\n\t\t const B = new Vector3();\r\n\t\t const T = new Vector3();\r\n\t\t const N = new Vector3();\r\n \r\n\t\t // generate vertices, normals and uvs\r\n \r\n\t\t for ( let i = 0; i <= tubularSegments; ++ i ) {\r\n \r\n\t\t\t // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n \r\n\t\t\t const u = i / tubularSegments * p * Math.PI * 2;\r\n \r\n\t\t\t // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n \r\n\t\t\t calculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\t\t calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n \r\n\t\t\t // calculate orthonormal basis\r\n \r\n\t\t\t T.subVectors( P2, P1 );\r\n\t\t\t N.addVectors( P2, P1 );\r\n\t\t\t B.crossVectors( T, N );\r\n\t\t\t N.crossVectors( B, T );\r\n \r\n\t\t\t // normalize B, N. T can be ignored, we don't use it\r\n \r\n\t\t\t B.normalize();\r\n\t\t\t N.normalize();\r\n \r\n\t\t\t for ( let j = 0; j <= radialSegments; ++ j ) {\r\n \r\n\t\t\t\t // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n \r\n\t\t\t\t const v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\t const cx = - tube * Math.cos( v );\r\n\t\t\t\t const cy = tube * Math.sin( v );\r\n \r\n\t\t\t\t // now calculate the final vertex position.\r\n\t\t\t\t // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n \r\n\t\t\t\t vertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\t\t vertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\t\t vertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n \r\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t\t // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n \r\n\t\t\t\t normal.subVectors( vertex, P1 ).normalize();\r\n \r\n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\r\n \r\n\t\t\t\t // uv\r\n \r\n\t\t\t\t uvs.push( i / tubularSegments );\r\n\t\t\t\t uvs.push( j / radialSegments );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // generate indices\r\n \r\n\t\t for ( let j = 1; j <= tubularSegments; j ++ ) {\r\n \r\n\t\t\t for ( let i = 1; i <= radialSegments; i ++ ) {\r\n \r\n\t\t\t\t // indices\r\n \r\n\t\t\t\t const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\t const b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\t const c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\t const d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n \r\n\t\t\t\t // faces\r\n \r\n\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t indices.push( b, c, d );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t\t // this function calculates the current position on the torus curve\r\n \r\n\t\t function calculatePositionOnCurve( u, p, q, radius, position ) {\r\n \r\n\t\t\t const cu = Math.cos( u );\r\n\t\t\t const su = Math.sin( u );\r\n\t\t\t const quOverP = q / p * u;\r\n\t\t\t const cs = Math.cos( quOverP );\r\n \r\n\t\t\t position.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\t position.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\t position.z = radius * Math.sin( quOverP ) * 0.5;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t return new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class TubeGeometry extends BufferGeometry {\r\n \r\n\t constructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'TubeGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t path: path,\r\n\t\t\t tubularSegments: tubularSegments,\r\n\t\t\t radius: radius,\r\n\t\t\t radialSegments: radialSegments,\r\n\t\t\t closed: closed\r\n\t\t };\r\n \r\n\t\t const frames = path.computeFrenetFrames( tubularSegments, closed );\r\n \r\n\t\t // expose internals\r\n \r\n\t\t this.tangents = frames.tangents;\r\n\t\t this.normals = frames.normals;\r\n\t\t this.binormals = frames.binormals;\r\n \r\n\t\t // helper variables\r\n \r\n\t\t const vertex = new Vector3();\r\n\t\t const normal = new Vector3();\r\n\t\t const uv = new Vector2();\r\n\t\t let P = new Vector3();\r\n \r\n\t\t // buffer\r\n \r\n\t\t const vertices = [];\r\n\t\t const normals = [];\r\n\t\t const uvs = [];\r\n\t\t const indices = [];\r\n \r\n\t\t // create buffer data\r\n \r\n\t\t generateBufferData();\r\n \r\n\t\t // build geometry\r\n \r\n\t\t this.setIndex( indices );\r\n\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\t this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n \r\n\t\t // functions\r\n \r\n\t\t function generateBufferData() {\r\n \r\n\t\t\t for ( let i = 0; i < tubularSegments; i ++ ) {\r\n \r\n\t\t\t\t generateSegment( i );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t // at the regular position on the given path\r\n\t\t\t //\r\n\t\t\t // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n \r\n\t\t\t generateSegment( ( closed === false ) ? tubularSegments : 0 );\r\n \r\n\t\t\t // uvs are generated in a separate function.\r\n\t\t\t // this makes it easy compute correct values for closed geometries\r\n \r\n\t\t\t generateUVs();\r\n \r\n\t\t\t // finally create faces\r\n \r\n\t\t\t generateIndices();\r\n \r\n\t\t }\r\n \r\n\t\t function generateSegment( i ) {\r\n \r\n\t\t\t // we use getPointAt to sample evenly distributed points from the given path\r\n \r\n\t\t\t P = path.getPointAt( i / tubularSegments, P );\r\n \r\n\t\t\t // retrieve corresponding normal and binormal\r\n \r\n\t\t\t const N = frames.normals[ i ];\r\n\t\t\t const B = frames.binormals[ i ];\r\n \r\n\t\t\t // generate normals and vertices for the current segment\r\n \r\n\t\t\t for ( let j = 0; j <= radialSegments; j ++ ) {\r\n \r\n\t\t\t\t const v = j / radialSegments * Math.PI * 2;\r\n \r\n\t\t\t\t const sin = Math.sin( v );\r\n\t\t\t\t const cos = - Math.cos( v );\r\n \r\n\t\t\t\t // normal\r\n \r\n\t\t\t\t normal.x = ( cos * N.x + sin * B.x );\r\n\t\t\t\t normal.y = ( cos * N.y + sin * B.y );\r\n\t\t\t\t normal.z = ( cos * N.z + sin * B.z );\r\n\t\t\t\t normal.normalize();\r\n \r\n\t\t\t\t normals.push( normal.x, normal.y, normal.z );\r\n \r\n\t\t\t\t // vertex\r\n \r\n\t\t\t\t vertex.x = P.x + radius * normal.x;\r\n\t\t\t\t vertex.y = P.y + radius * normal.y;\r\n\t\t\t\t vertex.z = P.z + radius * normal.z;\r\n \r\n\t\t\t\t vertices.push( vertex.x, vertex.y, vertex.z );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function generateIndices() {\r\n \r\n\t\t\t for ( let j = 1; j <= tubularSegments; j ++ ) {\r\n \r\n\t\t\t\t for ( let i = 1; i <= radialSegments; i ++ ) {\r\n \r\n\t\t\t\t\t const a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\t\t const b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\t\t const c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\t\t const d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n \r\n\t\t\t\t\t // faces\r\n \r\n\t\t\t\t\t indices.push( a, b, d );\r\n\t\t\t\t\t indices.push( b, c, d );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t function generateUVs() {\r\n \r\n\t\t\t for ( let i = 0; i <= tubularSegments; i ++ ) {\r\n \r\n\t\t\t\t for ( let j = 0; j <= radialSegments; j ++ ) {\r\n \r\n\t\t\t\t\t uv.x = i / tubularSegments;\r\n\t\t\t\t\t uv.y = j / radialSegments;\r\n \r\n\t\t\t\t\t uvs.push( uv.x, uv.y );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON();\r\n \r\n\t\t data.path = this.parameters.path.toJSON();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n\t static fromJSON( data ) {\r\n \r\n\t\t // This only works for built-in curves (e.g. CatmullRomCurve3).\r\n\t\t // User defined curves or instances of CurvePath will not be deserialized.\r\n\t\t return new TubeGeometry(\r\n\t\t\t new Curves[ data.path.type ]().fromJSON( data.path ),\r\n\t\t\t data.tubularSegments,\r\n\t\t\t data.radius,\r\n\t\t\t data.radialSegments,\r\n\t\t\t data.closed\r\n\t\t );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class WireframeGeometry extends BufferGeometry {\r\n \r\n\t constructor( geometry = null ) {\r\n \r\n\t\t super();\r\n\t\t this.type = 'WireframeGeometry';\r\n \r\n\t\t this.parameters = {\r\n\t\t\t geometry: geometry\r\n\t\t };\r\n \r\n\t\t if ( geometry !== null ) {\r\n \r\n\t\t\t // buffer\r\n \r\n\t\t\t const vertices = [];\r\n\t\t\t const edges = new Set();\r\n \r\n\t\t\t // helper variables\r\n \r\n\t\t\t const start = new Vector3();\r\n\t\t\t const end = new Vector3();\r\n \r\n\t\t\t if ( geometry.index !== null ) {\r\n \r\n\t\t\t\t // indexed BufferGeometry\r\n \r\n\t\t\t\t const position = geometry.attributes.position;\r\n\t\t\t\t const indices = geometry.index;\r\n\t\t\t\t let groups = geometry.groups;\r\n \r\n\t\t\t\t if ( groups.length === 0 ) {\r\n \r\n\t\t\t\t\t groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // create a data structure that contains all eges without duplicates\r\n \r\n\t\t\t\t for ( let o = 0, ol = groups.length; o < ol; ++ o ) {\r\n \r\n\t\t\t\t\t const group = groups[ o ];\r\n \r\n\t\t\t\t\t const groupStart = group.start;\r\n\t\t\t\t\t const groupCount = group.count;\r\n \r\n\t\t\t\t\t for ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\r\n \r\n\t\t\t\t\t\t for ( let j = 0; j < 3; j ++ ) {\r\n \r\n\t\t\t\t\t\t\t const index1 = indices.getX( i + j );\r\n\t\t\t\t\t\t\t const index2 = indices.getX( i + ( j + 1 ) % 3 );\r\n \r\n\t\t\t\t\t\t\t start.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\t\t end.fromBufferAttribute( position, index2 );\r\n \r\n\t\t\t\t\t\t\t if ( isUniqueEdge( start, end, edges ) === true ) {\r\n \r\n\t\t\t\t\t\t\t\t vertices.push( start.x, start.y, start.z );\r\n\t\t\t\t\t\t\t\t vertices.push( end.x, end.y, end.z );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // non-indexed BufferGeometry\r\n \r\n\t\t\t\t const position = geometry.attributes.position;\r\n \r\n\t\t\t\t for ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\r\n \r\n\t\t\t\t\t for ( let j = 0; j < 3; j ++ ) {\r\n \r\n\t\t\t\t\t\t // three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n \r\n\t\t\t\t\t\t const index1 = 3 * i + j;\r\n\t\t\t\t\t\t const index2 = 3 * i + ( ( j + 1 ) % 3 );\r\n \r\n\t\t\t\t\t\t start.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\t end.fromBufferAttribute( position, index2 );\r\n \r\n\t\t\t\t\t\t if ( isUniqueEdge( start, end, edges ) === true ) {\r\n \r\n\t\t\t\t\t\t\t vertices.push( start.x, start.y, start.z );\r\n\t\t\t\t\t\t\t vertices.push( end.x, end.y, end.z );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // build geometry\r\n \r\n\t\t\t this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n function isUniqueEdge( start, end, edges ) {\r\n \r\n\t const hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\r\n\t const hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\r\n \r\n\t if ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\r\n \r\n\t\t return false;\r\n \r\n\t } else {\r\n \r\n\t\t edges.add( hash1 );\r\n\t\t edges.add( hash2 );\r\n\t\t return true;\r\n \r\n\t }\r\n \r\n }\r\n \r\n var Geometries = /*#__PURE__*/Object.freeze({\r\n\t __proto__: null,\r\n\t BoxGeometry: BoxGeometry,\r\n\t BoxBufferGeometry: BoxGeometry,\r\n\t CircleGeometry: CircleGeometry,\r\n\t CircleBufferGeometry: CircleGeometry,\r\n\t ConeGeometry: ConeGeometry,\r\n\t ConeBufferGeometry: ConeGeometry,\r\n\t CylinderGeometry: CylinderGeometry,\r\n\t CylinderBufferGeometry: CylinderGeometry,\r\n\t DodecahedronGeometry: DodecahedronGeometry,\r\n\t DodecahedronBufferGeometry: DodecahedronGeometry,\r\n\t EdgesGeometry: EdgesGeometry,\r\n\t ExtrudeGeometry: ExtrudeGeometry,\r\n\t ExtrudeBufferGeometry: ExtrudeGeometry,\r\n\t IcosahedronGeometry: IcosahedronGeometry,\r\n\t IcosahedronBufferGeometry: IcosahedronGeometry,\r\n\t LatheGeometry: LatheGeometry,\r\n\t LatheBufferGeometry: LatheGeometry,\r\n\t OctahedronGeometry: OctahedronGeometry,\r\n\t OctahedronBufferGeometry: OctahedronGeometry,\r\n\t PlaneGeometry: PlaneGeometry,\r\n\t PlaneBufferGeometry: PlaneGeometry,\r\n\t PolyhedronGeometry: PolyhedronGeometry,\r\n\t PolyhedronBufferGeometry: PolyhedronGeometry,\r\n\t RingGeometry: RingGeometry,\r\n\t RingBufferGeometry: RingGeometry,\r\n\t ShapeGeometry: ShapeGeometry,\r\n\t ShapeBufferGeometry: ShapeGeometry,\r\n\t SphereGeometry: SphereGeometry,\r\n\t SphereBufferGeometry: SphereGeometry,\r\n\t TetrahedronGeometry: TetrahedronGeometry,\r\n\t TetrahedronBufferGeometry: TetrahedronGeometry,\r\n\t TorusGeometry: TorusGeometry,\r\n\t TorusBufferGeometry: TorusGeometry,\r\n\t TorusKnotGeometry: TorusKnotGeometry,\r\n\t TorusKnotBufferGeometry: TorusKnotGeometry,\r\n\t TubeGeometry: TubeGeometry,\r\n\t TubeBufferGeometry: TubeGeometry,\r\n\t WireframeGeometry: WireframeGeometry\r\n });\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <THREE.Color>\r\n  * }\r\n  */\r\n \r\n class ShadowMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'ShadowMaterial';\r\n \r\n\t\t this.color = new Color( 0x000000 );\r\n\t\t this.transparent = true;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n ShadowMaterial.prototype.isShadowMaterial = true;\r\n \r\n class RawShaderMaterial extends ShaderMaterial {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super( parameters );\r\n \r\n\t\t this.type = 'RawShaderMaterial';\r\n \r\n\t }\r\n \r\n }\r\n \r\n RawShaderMaterial.prototype.isRawShaderMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  roughness: <float>,\r\n  *  metalness: <float>,\r\n  *  opacity: <float>,\r\n  *\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *\r\n  *  lightMap: new THREE.Texture( <Image> ),\r\n  *  lightMapIntensity: <float>\r\n  *\r\n  *  aoMap: new THREE.Texture( <Image> ),\r\n  *  aoMapIntensity: <float>\r\n  *\r\n  *  emissive: <hex>,\r\n  *  emissiveIntensity: <float>\r\n  *  emissiveMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  bumpMap: new THREE.Texture( <Image> ),\r\n  *  bumpScale: <float>,\r\n  *\r\n  *  normalMap: new THREE.Texture( <Image> ),\r\n  *  normalMapType: THREE.TangentSpaceNormalMap,\r\n  *  normalScale: <Vector2>,\r\n  *\r\n  *  displacementMap: new THREE.Texture( <Image> ),\r\n  *  displacementScale: <float>,\r\n  *  displacementBias: <float>,\r\n  *\r\n  *  roughnessMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  metalnessMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n  *  envMapIntensity: <float>\r\n  *\r\n  *  refractionRatio: <float>,\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>,\r\n  *\r\n  *  flatShading: <bool>\r\n  * }\r\n  */\r\n \r\n class MeshStandardMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.defines = { 'STANDARD': '' };\r\n \r\n\t\t this.type = 'MeshStandardMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff ); // diffuse\r\n\t\t this.roughness = 1.0;\r\n\t\t this.metalness = 0.0;\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.lightMap = null;\r\n\t\t this.lightMapIntensity = 1.0;\r\n \r\n\t\t this.aoMap = null;\r\n\t\t this.aoMapIntensity = 1.0;\r\n \r\n\t\t this.emissive = new Color( 0x000000 );\r\n\t\t this.emissiveIntensity = 1.0;\r\n\t\t this.emissiveMap = null;\r\n \r\n\t\t this.bumpMap = null;\r\n\t\t this.bumpScale = 1;\r\n \r\n\t\t this.normalMap = null;\r\n\t\t this.normalMapType = TangentSpaceNormalMap;\r\n\t\t this.normalScale = new Vector2( 1, 1 );\r\n \r\n\t\t this.displacementMap = null;\r\n\t\t this.displacementScale = 1;\r\n\t\t this.displacementBias = 0;\r\n \r\n\t\t this.roughnessMap = null;\r\n \r\n\t\t this.metalnessMap = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.envMap = null;\r\n\t\t this.envMapIntensity = 1.0;\r\n \r\n\t\t this.refractionRatio = 0.98;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n\t\t this.wireframeLinecap = 'round';\r\n\t\t this.wireframeLinejoin = 'round';\r\n \r\n\t\t this.flatShading = false;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.defines = { 'STANDARD': '' };\r\n \r\n\t\t this.color.copy( source.color );\r\n\t\t this.roughness = source.roughness;\r\n\t\t this.metalness = source.metalness;\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.lightMap = source.lightMap;\r\n\t\t this.lightMapIntensity = source.lightMapIntensity;\r\n \r\n\t\t this.aoMap = source.aoMap;\r\n\t\t this.aoMapIntensity = source.aoMapIntensity;\r\n \r\n\t\t this.emissive.copy( source.emissive );\r\n\t\t this.emissiveMap = source.emissiveMap;\r\n\t\t this.emissiveIntensity = source.emissiveIntensity;\r\n \r\n\t\t this.bumpMap = source.bumpMap;\r\n\t\t this.bumpScale = source.bumpScale;\r\n \r\n\t\t this.normalMap = source.normalMap;\r\n\t\t this.normalMapType = source.normalMapType;\r\n\t\t this.normalScale.copy( source.normalScale );\r\n \r\n\t\t this.displacementMap = source.displacementMap;\r\n\t\t this.displacementScale = source.displacementScale;\r\n\t\t this.displacementBias = source.displacementBias;\r\n \r\n\t\t this.roughnessMap = source.roughnessMap;\r\n \r\n\t\t this.metalnessMap = source.metalnessMap;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.envMap = source.envMap;\r\n\t\t this.envMapIntensity = source.envMapIntensity;\r\n \r\n\t\t this.refractionRatio = source.refractionRatio;\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t this.wireframeLinecap = source.wireframeLinecap;\r\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\r\n \r\n\t\t this.flatShading = source.flatShading;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  clearcoat: <float>,\r\n  *  clearcoatMap: new THREE.Texture( <Image> ),\r\n  *  clearcoatRoughness: <float>,\r\n  *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\r\n  *  clearcoatNormalScale: <Vector2>,\r\n  *  clearcoatNormalMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  ior: <float>,\r\n  *  reflectivity: <float>,\r\n  *\r\n  *  sheen: <float>,\r\n  *  sheenColor: <Color>,\r\n  *  sheenColorMap: new THREE.Texture( <Image> ),\r\n  *  sheenRoughness: <float>,\r\n  *  sheenRoughnessMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  transmission: <float>,\r\n  *  transmissionMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  thickness: <float>,\r\n  *  thicknessMap: new THREE.Texture( <Image> ),\r\n  *  attenuationDistance: <float>,\r\n  *  attenuationColor: <Color>,\r\n  *\r\n  *  specularIntensity: <float>,\r\n  *  specularIntensityMap: new THREE.Texture( <Image> ),\r\n  *  specularColor: <Color>,\r\n  *  specularColorMap: new THREE.Texture( <Image> )\r\n  * }\r\n  */\r\n \r\n class MeshPhysicalMaterial extends MeshStandardMaterial {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.defines = {\r\n \r\n\t\t\t 'STANDARD': '',\r\n\t\t\t 'PHYSICAL': ''\r\n \r\n\t\t };\r\n \r\n\t\t this.type = 'MeshPhysicalMaterial';\r\n \r\n\t\t this.clearcoatMap = null;\r\n\t\t this.clearcoatRoughness = 0.0;\r\n\t\t this.clearcoatRoughnessMap = null;\r\n\t\t this.clearcoatNormalScale = new Vector2( 1, 1 );\r\n\t\t this.clearcoatNormalMap = null;\r\n \r\n\t\t this.ior = 1.5;\r\n \r\n\t\t Object.defineProperty( this, 'reflectivity', {\r\n\t\t\t get: function () {\r\n \r\n\t\t\t\t return ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\r\n \r\n\t\t\t },\r\n\t\t\t set: function ( reflectivity ) {\r\n \r\n\t\t\t\t this.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\r\n \r\n\t\t\t }\r\n\t\t } );\r\n \r\n\t\t this.sheenColor = new Color( 0x000000 );\r\n\t\t this.sheenColorMap = null;\r\n\t\t this.sheenRoughness = 1.0;\r\n\t\t this.sheenRoughnessMap = null;\r\n \r\n\t\t this.transmissionMap = null;\r\n \r\n\t\t this.thickness = 0;\r\n\t\t this.thicknessMap = null;\r\n\t\t this.attenuationDistance = 0.0;\r\n\t\t this.attenuationColor = new Color( 1, 1, 1 );\r\n \r\n\t\t this.specularIntensity = 1.0;\r\n\t\t this.specularIntensityMap = null;\r\n\t\t this.specularColor = new Color( 1, 1, 1 );\r\n\t\t this.specularColorMap = null;\r\n \r\n\t\t this._sheen = 0.0;\r\n\t\t this._clearcoat = 0;\r\n\t\t this._transmission = 0;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t get sheen() {\r\n \r\n\t\t return this._sheen;\r\n \r\n\t }\r\n \r\n\t set sheen( value ) {\r\n \r\n\t\t if ( this._sheen > 0 !== value > 0 ) {\r\n \r\n\t\t\t this.version ++;\r\n \r\n\t\t }\r\n \r\n\t\t this._sheen = value;\r\n \r\n\t }\r\n \r\n\t get clearcoat() {\r\n \r\n\t\t return this._clearcoat;\r\n \r\n\t }\r\n \r\n\t set clearcoat( value ) {\r\n \r\n\t\t if ( this._clearcoat > 0 !== value > 0 ) {\r\n \r\n\t\t\t this.version ++;\r\n \r\n\t\t }\r\n \r\n\t\t this._clearcoat = value;\r\n \r\n\t }\r\n \r\n\t get transmission() {\r\n \r\n\t\t return this._transmission;\r\n \r\n\t }\r\n \r\n\t set transmission( value ) {\r\n \r\n\t\t if ( this._transmission > 0 !== value > 0 ) {\r\n \r\n\t\t\t this.version ++;\r\n \r\n\t\t }\r\n \r\n\t\t this._transmission = value;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.defines = {\r\n \r\n\t\t\t 'STANDARD': '',\r\n\t\t\t 'PHYSICAL': ''\r\n \r\n\t\t };\r\n \r\n\t\t this.clearcoat = source.clearcoat;\r\n\t\t this.clearcoatMap = source.clearcoatMap;\r\n\t\t this.clearcoatRoughness = source.clearcoatRoughness;\r\n\t\t this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\r\n\t\t this.clearcoatNormalMap = source.clearcoatNormalMap;\r\n\t\t this.clearcoatNormalScale.copy( source.clearcoatNormalScale );\r\n \r\n\t\t this.ior = source.ior;\r\n \r\n\t\t this.sheen = source.sheen;\r\n\t\t this.sheenColor.copy( source.sheenColor );\r\n\t\t this.sheenColorMap = source.sheenColorMap;\r\n\t\t this.sheenRoughness = source.sheenRoughness;\r\n\t\t this.sheenRoughnessMap = source.sheenRoughnessMap;\r\n \r\n\t\t this.transmission = source.transmission;\r\n\t\t this.transmissionMap = source.transmissionMap;\r\n \r\n\t\t this.thickness = source.thickness;\r\n\t\t this.thicknessMap = source.thicknessMap;\r\n\t\t this.attenuationDistance = source.attenuationDistance;\r\n\t\t this.attenuationColor.copy( source.attenuationColor );\r\n \r\n\t\t this.specularIntensity = source.specularIntensity;\r\n\t\t this.specularIntensityMap = source.specularIntensityMap;\r\n\t\t this.specularColor.copy( source.specularColor );\r\n\t\t this.specularColorMap = source.specularColorMap;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  specular: <hex>,\r\n  *  shininess: <float>,\r\n  *  opacity: <float>,\r\n  *\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *\r\n  *  lightMap: new THREE.Texture( <Image> ),\r\n  *  lightMapIntensity: <float>\r\n  *\r\n  *  aoMap: new THREE.Texture( <Image> ),\r\n  *  aoMapIntensity: <float>\r\n  *\r\n  *  emissive: <hex>,\r\n  *  emissiveIntensity: <float>\r\n  *  emissiveMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  bumpMap: new THREE.Texture( <Image> ),\r\n  *  bumpScale: <float>,\r\n  *\r\n  *  normalMap: new THREE.Texture( <Image> ),\r\n  *  normalMapType: THREE.TangentSpaceNormalMap,\r\n  *  normalScale: <Vector2>,\r\n  *\r\n  *  displacementMap: new THREE.Texture( <Image> ),\r\n  *  displacementScale: <float>,\r\n  *  displacementBias: <float>,\r\n  *\r\n  *  specularMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n  *  combine: THREE.MultiplyOperation,\r\n  *  reflectivity: <float>,\r\n  *  refractionRatio: <float>,\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>,\r\n  *\r\n  *  flatShading: <bool>\r\n  * }\r\n  */\r\n \r\n class MeshPhongMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'MeshPhongMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff ); // diffuse\r\n\t\t this.specular = new Color( 0x111111 );\r\n\t\t this.shininess = 30;\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.lightMap = null;\r\n\t\t this.lightMapIntensity = 1.0;\r\n \r\n\t\t this.aoMap = null;\r\n\t\t this.aoMapIntensity = 1.0;\r\n \r\n\t\t this.emissive = new Color( 0x000000 );\r\n\t\t this.emissiveIntensity = 1.0;\r\n\t\t this.emissiveMap = null;\r\n \r\n\t\t this.bumpMap = null;\r\n\t\t this.bumpScale = 1;\r\n \r\n\t\t this.normalMap = null;\r\n\t\t this.normalMapType = TangentSpaceNormalMap;\r\n\t\t this.normalScale = new Vector2( 1, 1 );\r\n \r\n\t\t this.displacementMap = null;\r\n\t\t this.displacementScale = 1;\r\n\t\t this.displacementBias = 0;\r\n \r\n\t\t this.specularMap = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.envMap = null;\r\n\t\t this.combine = MultiplyOperation;\r\n\t\t this.reflectivity = 1;\r\n\t\t this.refractionRatio = 0.98;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n\t\t this.wireframeLinecap = 'round';\r\n\t\t this.wireframeLinejoin = 'round';\r\n \r\n\t\t this.flatShading = false;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n\t\t this.specular.copy( source.specular );\r\n\t\t this.shininess = source.shininess;\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.lightMap = source.lightMap;\r\n\t\t this.lightMapIntensity = source.lightMapIntensity;\r\n \r\n\t\t this.aoMap = source.aoMap;\r\n\t\t this.aoMapIntensity = source.aoMapIntensity;\r\n \r\n\t\t this.emissive.copy( source.emissive );\r\n\t\t this.emissiveMap = source.emissiveMap;\r\n\t\t this.emissiveIntensity = source.emissiveIntensity;\r\n \r\n\t\t this.bumpMap = source.bumpMap;\r\n\t\t this.bumpScale = source.bumpScale;\r\n \r\n\t\t this.normalMap = source.normalMap;\r\n\t\t this.normalMapType = source.normalMapType;\r\n\t\t this.normalScale.copy( source.normalScale );\r\n \r\n\t\t this.displacementMap = source.displacementMap;\r\n\t\t this.displacementScale = source.displacementScale;\r\n\t\t this.displacementBias = source.displacementBias;\r\n \r\n\t\t this.specularMap = source.specularMap;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.envMap = source.envMap;\r\n\t\t this.combine = source.combine;\r\n\t\t this.reflectivity = source.reflectivity;\r\n\t\t this.refractionRatio = source.refractionRatio;\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t this.wireframeLinecap = source.wireframeLinecap;\r\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\r\n \r\n\t\t this.flatShading = source.flatShading;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *  gradientMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  lightMap: new THREE.Texture( <Image> ),\r\n  *  lightMapIntensity: <float>\r\n  *\r\n  *  aoMap: new THREE.Texture( <Image> ),\r\n  *  aoMapIntensity: <float>\r\n  *\r\n  *  emissive: <hex>,\r\n  *  emissiveIntensity: <float>\r\n  *  emissiveMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  bumpMap: new THREE.Texture( <Image> ),\r\n  *  bumpScale: <float>,\r\n  *\r\n  *  normalMap: new THREE.Texture( <Image> ),\r\n  *  normalMapType: THREE.TangentSpaceNormalMap,\r\n  *  normalScale: <Vector2>,\r\n  *\r\n  *  displacementMap: new THREE.Texture( <Image> ),\r\n  *  displacementScale: <float>,\r\n  *  displacementBias: <float>,\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>,\r\n  *\r\n  * }\r\n  */\r\n \r\n class MeshToonMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.defines = { 'TOON': '' };\r\n \r\n\t\t this.type = 'MeshToonMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff );\r\n \r\n\t\t this.map = null;\r\n\t\t this.gradientMap = null;\r\n \r\n\t\t this.lightMap = null;\r\n\t\t this.lightMapIntensity = 1.0;\r\n \r\n\t\t this.aoMap = null;\r\n\t\t this.aoMapIntensity = 1.0;\r\n \r\n\t\t this.emissive = new Color( 0x000000 );\r\n\t\t this.emissiveIntensity = 1.0;\r\n\t\t this.emissiveMap = null;\r\n \r\n\t\t this.bumpMap = null;\r\n\t\t this.bumpScale = 1;\r\n \r\n\t\t this.normalMap = null;\r\n\t\t this.normalMapType = TangentSpaceNormalMap;\r\n\t\t this.normalScale = new Vector2( 1, 1 );\r\n \r\n\t\t this.displacementMap = null;\r\n\t\t this.displacementScale = 1;\r\n\t\t this.displacementBias = 0;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n\t\t this.wireframeLinecap = 'round';\r\n\t\t this.wireframeLinejoin = 'round';\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t this.map = source.map;\r\n\t\t this.gradientMap = source.gradientMap;\r\n \r\n\t\t this.lightMap = source.lightMap;\r\n\t\t this.lightMapIntensity = source.lightMapIntensity;\r\n \r\n\t\t this.aoMap = source.aoMap;\r\n\t\t this.aoMapIntensity = source.aoMapIntensity;\r\n \r\n\t\t this.emissive.copy( source.emissive );\r\n\t\t this.emissiveMap = source.emissiveMap;\r\n\t\t this.emissiveIntensity = source.emissiveIntensity;\r\n \r\n\t\t this.bumpMap = source.bumpMap;\r\n\t\t this.bumpScale = source.bumpScale;\r\n \r\n\t\t this.normalMap = source.normalMap;\r\n\t\t this.normalMapType = source.normalMapType;\r\n\t\t this.normalScale.copy( source.normalScale );\r\n \r\n\t\t this.displacementMap = source.displacementMap;\r\n\t\t this.displacementScale = source.displacementScale;\r\n\t\t this.displacementBias = source.displacementBias;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t this.wireframeLinecap = source.wireframeLinecap;\r\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshToonMaterial.prototype.isMeshToonMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  opacity: <float>,\r\n  *\r\n  *  bumpMap: new THREE.Texture( <Image> ),\r\n  *  bumpScale: <float>,\r\n  *\r\n  *  normalMap: new THREE.Texture( <Image> ),\r\n  *  normalMapType: THREE.TangentSpaceNormalMap,\r\n  *  normalScale: <Vector2>,\r\n  *\r\n  *  displacementMap: new THREE.Texture( <Image> ),\r\n  *  displacementScale: <float>,\r\n  *  displacementBias: <float>,\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>\r\n  *\r\n  *  flatShading: <bool>\r\n  * }\r\n  */\r\n \r\n class MeshNormalMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'MeshNormalMaterial';\r\n \r\n\t\t this.bumpMap = null;\r\n\t\t this.bumpScale = 1;\r\n \r\n\t\t this.normalMap = null;\r\n\t\t this.normalMapType = TangentSpaceNormalMap;\r\n\t\t this.normalScale = new Vector2( 1, 1 );\r\n \r\n\t\t this.displacementMap = null;\r\n\t\t this.displacementScale = 1;\r\n\t\t this.displacementBias = 0;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n \r\n\t\t this.fog = false;\r\n \r\n\t\t this.flatShading = false;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.bumpMap = source.bumpMap;\r\n\t\t this.bumpScale = source.bumpScale;\r\n \r\n\t\t this.normalMap = source.normalMap;\r\n\t\t this.normalMapType = source.normalMapType;\r\n\t\t this.normalScale.copy( source.normalScale );\r\n \r\n\t\t this.displacementMap = source.displacementMap;\r\n\t\t this.displacementScale = source.displacementScale;\r\n\t\t this.displacementBias = source.displacementBias;\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n \r\n\t\t this.flatShading = source.flatShading;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  opacity: <float>,\r\n  *\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *\r\n  *  lightMap: new THREE.Texture( <Image> ),\r\n  *  lightMapIntensity: <float>\r\n  *\r\n  *  aoMap: new THREE.Texture( <Image> ),\r\n  *  aoMapIntensity: <float>\r\n  *\r\n  *  emissive: <hex>,\r\n  *  emissiveIntensity: <float>\r\n  *  emissiveMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  specularMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n  *  combine: THREE.Multiply,\r\n  *  reflectivity: <float>,\r\n  *  refractionRatio: <float>,\r\n  *\r\n  *  wireframe: <boolean>,\r\n  *  wireframeLinewidth: <float>,\r\n  *\r\n  * }\r\n  */\r\n \r\n class MeshLambertMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'MeshLambertMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff ); // diffuse\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.lightMap = null;\r\n\t\t this.lightMapIntensity = 1.0;\r\n \r\n\t\t this.aoMap = null;\r\n\t\t this.aoMapIntensity = 1.0;\r\n \r\n\t\t this.emissive = new Color( 0x000000 );\r\n\t\t this.emissiveIntensity = 1.0;\r\n\t\t this.emissiveMap = null;\r\n \r\n\t\t this.specularMap = null;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.envMap = null;\r\n\t\t this.combine = MultiplyOperation;\r\n\t\t this.reflectivity = 1;\r\n\t\t this.refractionRatio = 0.98;\r\n \r\n\t\t this.wireframe = false;\r\n\t\t this.wireframeLinewidth = 1;\r\n\t\t this.wireframeLinecap = 'round';\r\n\t\t this.wireframeLinejoin = 'round';\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.lightMap = source.lightMap;\r\n\t\t this.lightMapIntensity = source.lightMapIntensity;\r\n \r\n\t\t this.aoMap = source.aoMap;\r\n\t\t this.aoMapIntensity = source.aoMapIntensity;\r\n \r\n\t\t this.emissive.copy( source.emissive );\r\n\t\t this.emissiveMap = source.emissiveMap;\r\n\t\t this.emissiveIntensity = source.emissiveIntensity;\r\n \r\n\t\t this.specularMap = source.specularMap;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.envMap = source.envMap;\r\n\t\t this.combine = source.combine;\r\n\t\t this.reflectivity = source.reflectivity;\r\n\t\t this.refractionRatio = source.refractionRatio;\r\n \r\n\t\t this.wireframe = source.wireframe;\r\n\t\t this.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\t this.wireframeLinecap = source.wireframeLinecap;\r\n\t\t this.wireframeLinejoin = source.wireframeLinejoin;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  opacity: <float>,\r\n  *\r\n  *  matcap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  map: new THREE.Texture( <Image> ),\r\n  *\r\n  *  bumpMap: new THREE.Texture( <Image> ),\r\n  *  bumpScale: <float>,\r\n  *\r\n  *  normalMap: new THREE.Texture( <Image> ),\r\n  *  normalMapType: THREE.TangentSpaceNormalMap,\r\n  *  normalScale: <Vector2>,\r\n  *\r\n  *  displacementMap: new THREE.Texture( <Image> ),\r\n  *  displacementScale: <float>,\r\n  *  displacementBias: <float>,\r\n  *\r\n  *  alphaMap: new THREE.Texture( <Image> ),\r\n  *\r\n  *  flatShading: <bool>\r\n  * }\r\n  */\r\n \r\n class MeshMatcapMaterial extends Material {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.defines = { 'MATCAP': '' };\r\n \r\n\t\t this.type = 'MeshMatcapMaterial';\r\n \r\n\t\t this.color = new Color( 0xffffff ); // diffuse\r\n \r\n\t\t this.matcap = null;\r\n \r\n\t\t this.map = null;\r\n \r\n\t\t this.bumpMap = null;\r\n\t\t this.bumpScale = 1;\r\n \r\n\t\t this.normalMap = null;\r\n\t\t this.normalMapType = TangentSpaceNormalMap;\r\n\t\t this.normalScale = new Vector2( 1, 1 );\r\n \r\n\t\t this.displacementMap = null;\r\n\t\t this.displacementScale = 1;\r\n\t\t this.displacementBias = 0;\r\n \r\n\t\t this.alphaMap = null;\r\n \r\n\t\t this.flatShading = false;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.defines = { 'MATCAP': '' };\r\n \r\n\t\t this.color.copy( source.color );\r\n \r\n\t\t this.matcap = source.matcap;\r\n \r\n\t\t this.map = source.map;\r\n \r\n\t\t this.bumpMap = source.bumpMap;\r\n\t\t this.bumpScale = source.bumpScale;\r\n \r\n\t\t this.normalMap = source.normalMap;\r\n\t\t this.normalMapType = source.normalMapType;\r\n\t\t this.normalScale.copy( source.normalScale );\r\n \r\n\t\t this.displacementMap = source.displacementMap;\r\n\t\t this.displacementScale = source.displacementScale;\r\n\t\t this.displacementBias = source.displacementBias;\r\n \r\n\t\t this.alphaMap = source.alphaMap;\r\n \r\n\t\t this.flatShading = source.flatShading;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\r\n \r\n /**\r\n  * parameters = {\r\n  *  color: <hex>,\r\n  *  opacity: <float>,\r\n  *\r\n  *  linewidth: <float>,\r\n  *\r\n  *  scale: <float>,\r\n  *  dashSize: <float>,\r\n  *  gapSize: <float>\r\n  * }\r\n  */\r\n \r\n class LineDashedMaterial extends LineBasicMaterial {\r\n \r\n\t constructor( parameters ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'LineDashedMaterial';\r\n \r\n\t\t this.scale = 1;\r\n\t\t this.dashSize = 3;\r\n\t\t this.gapSize = 1;\r\n \r\n\t\t this.setValues( parameters );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.scale = source.scale;\r\n\t\t this.dashSize = source.dashSize;\r\n\t\t this.gapSize = source.gapSize;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n LineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n \r\n const materialLib = {\r\n\t ShadowMaterial,\r\n\t SpriteMaterial,\r\n\t RawShaderMaterial,\r\n\t ShaderMaterial,\r\n\t PointsMaterial,\r\n\t MeshPhysicalMaterial,\r\n\t MeshStandardMaterial,\r\n\t MeshPhongMaterial,\r\n\t MeshToonMaterial,\r\n\t MeshNormalMaterial,\r\n\t MeshLambertMaterial,\r\n\t MeshDepthMaterial,\r\n\t MeshDistanceMaterial,\r\n\t MeshBasicMaterial,\r\n\t MeshMatcapMaterial,\r\n\t LineDashedMaterial,\r\n\t LineBasicMaterial,\r\n\t Material\r\n };\r\n \r\n Material.fromType = function ( type ) {\r\n \r\n\t return new materialLib[ type ]();\r\n \r\n };\r\n \r\n const AnimationUtils = {\r\n \r\n\t // same as Array.prototype.slice, but also works on typed arrays\r\n\t arraySlice: function ( array, from, to ) {\r\n \r\n\t\t if ( AnimationUtils.isTypedArray( array ) ) {\r\n \r\n\t\t\t // in ios9 array.subarray(from, undefined) will return empty array\r\n\t\t\t // but array.subarray(from) or array.subarray(from, len) is correct\r\n\t\t\t return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\r\n \r\n\t\t }\r\n \r\n\t\t return array.slice( from, to );\r\n \r\n\t },\r\n \r\n\t // converts an array to a specific type\r\n\t convertArray: function ( array, type, forceClone ) {\r\n \r\n\t\t if ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t ! forceClone && array.constructor === type ) return array;\r\n \r\n\t\t if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n \r\n\t\t\t return new type( array ); // create typed array\r\n \r\n\t\t }\r\n \r\n\t\t return Array.prototype.slice.call( array ); // create Array\r\n \r\n\t },\r\n \r\n\t isTypedArray: function ( object ) {\r\n \r\n\t\t return ArrayBuffer.isView( object ) &&\r\n\t\t\t ! ( object instanceof DataView );\r\n \r\n\t },\r\n \r\n\t // returns an array by which times and values can be sorted\r\n\t getKeyframeOrder: function ( times ) {\r\n \r\n\t\t function compareTime( i, j ) {\r\n \r\n\t\t\t return times[ i ] - times[ j ];\r\n \r\n\t\t }\r\n \r\n\t\t const n = times.length;\r\n\t\t const result = new Array( n );\r\n\t\t for ( let i = 0; i !== n; ++ i ) result[ i ] = i;\r\n \r\n\t\t result.sort( compareTime );\r\n \r\n\t\t return result;\r\n \r\n\t },\r\n \r\n\t // uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\t sortedArray: function ( values, stride, order ) {\r\n \r\n\t\t const nValues = values.length;\r\n\t\t const result = new values.constructor( nValues );\r\n \r\n\t\t for ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n \r\n\t\t\t const srcOffset = order[ i ] * stride;\r\n \r\n\t\t\t for ( let j = 0; j !== stride; ++ j ) {\r\n \r\n\t\t\t\t result[ dstOffset ++ ] = values[ srcOffset + j ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return result;\r\n \r\n\t },\r\n \r\n\t // function for parsing AOS keyframe formats\r\n\t flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\r\n \r\n\t\t let i = 1, key = jsonKeys[ 0 ];\r\n \r\n\t\t while ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n \r\n\t\t\t key = jsonKeys[ i ++ ];\r\n \r\n\t\t }\r\n \r\n\t\t if ( key === undefined ) return; // no data\r\n \r\n\t\t let value = key[ valuePropertyName ];\r\n\t\t if ( value === undefined ) return; // no data\r\n \r\n\t\t if ( Array.isArray( value ) ) {\r\n \r\n\t\t\t do {\r\n \r\n\t\t\t\t value = key[ valuePropertyName ];\r\n \r\n\t\t\t\t if ( value !== undefined ) {\r\n \r\n\t\t\t\t\t times.push( key.time );\r\n\t\t\t\t\t values.push.apply( values, value ); // push all elements\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t key = jsonKeys[ i ++ ];\r\n \r\n\t\t\t } while ( key !== undefined );\r\n \r\n\t\t } else if ( value.toArray !== undefined ) {\r\n \r\n\t\t\t // ...assume THREE.Math-ish\r\n \r\n\t\t\t do {\r\n \r\n\t\t\t\t value = key[ valuePropertyName ];\r\n \r\n\t\t\t\t if ( value !== undefined ) {\r\n \r\n\t\t\t\t\t times.push( key.time );\r\n\t\t\t\t\t value.toArray( values, values.length );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t key = jsonKeys[ i ++ ];\r\n \r\n\t\t\t } while ( key !== undefined );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // otherwise push as-is\r\n \r\n\t\t\t do {\r\n \r\n\t\t\t\t value = key[ valuePropertyName ];\r\n \r\n\t\t\t\t if ( value !== undefined ) {\r\n \r\n\t\t\t\t\t times.push( key.time );\r\n\t\t\t\t\t values.push( value );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t key = jsonKeys[ i ++ ];\r\n \r\n\t\t\t } while ( key !== undefined );\r\n \r\n\t\t }\r\n \r\n\t },\r\n \r\n\t subclip: function ( sourceClip, name, startFrame, endFrame, fps = 30 ) {\r\n \r\n\t\t const clip = sourceClip.clone();\r\n \r\n\t\t clip.name = name;\r\n \r\n\t\t const tracks = [];\r\n \r\n\t\t for ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n \r\n\t\t\t const track = clip.tracks[ i ];\r\n\t\t\t const valueSize = track.getValueSize();\r\n \r\n\t\t\t const times = [];\r\n\t\t\t const values = [];\r\n \r\n\t\t\t for ( let j = 0; j < track.times.length; ++ j ) {\r\n \r\n\t\t\t\t const frame = track.times[ j ] * fps;\r\n \r\n\t\t\t\t if ( frame < startFrame || frame >= endFrame ) continue;\r\n \r\n\t\t\t\t times.push( track.times[ j ] );\r\n \r\n\t\t\t\t for ( let k = 0; k < valueSize; ++ k ) {\r\n \r\n\t\t\t\t\t values.push( track.values[ j * valueSize + k ] );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( times.length === 0 ) continue;\r\n \r\n\t\t\t track.times = AnimationUtils.convertArray( times, track.times.constructor );\r\n\t\t\t track.values = AnimationUtils.convertArray( values, track.values.constructor );\r\n \r\n\t\t\t tracks.push( track );\r\n \r\n\t\t }\r\n \r\n\t\t clip.tracks = tracks;\r\n \r\n\t\t // find minimum .times value across all tracks in the trimmed clip\r\n \r\n\t\t let minStartTime = Infinity;\r\n \r\n\t\t for ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n \r\n\t\t\t if ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\r\n \r\n\t\t\t\t minStartTime = clip.tracks[ i ].times[ 0 ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // shift all tracks such that clip begins at t=0\r\n \r\n\t\t for ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n \r\n\t\t\t clip.tracks[ i ].shift( - 1 * minStartTime );\r\n \r\n\t\t }\r\n \r\n\t\t clip.resetDuration();\r\n \r\n\t\t return clip;\r\n \r\n\t },\r\n \r\n\t makeClipAdditive: function ( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\r\n \r\n\t\t if ( fps <= 0 ) fps = 30;\r\n \r\n\t\t const numTracks = referenceClip.tracks.length;\r\n\t\t const referenceTime = referenceFrame / fps;\r\n \r\n\t\t // Make each track's values relative to the values at the reference frame\r\n\t\t for ( let i = 0; i < numTracks; ++ i ) {\r\n \r\n\t\t\t const referenceTrack = referenceClip.tracks[ i ];\r\n\t\t\t const referenceTrackType = referenceTrack.ValueTypeName;\r\n \r\n\t\t\t // Skip this track if it's non-numeric\r\n\t\t\t if ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\r\n \r\n\t\t\t // Find the track in the target clip whose name and type matches the reference track\r\n\t\t\t const targetTrack = targetClip.tracks.find( function ( track ) {\r\n \r\n\t\t\t\t return track.name === referenceTrack.name\r\n\t\t\t\t\t && track.ValueTypeName === referenceTrackType;\r\n \r\n\t\t\t } );\r\n \r\n\t\t\t if ( targetTrack === undefined ) continue;\r\n \r\n\t\t\t let referenceOffset = 0;\r\n\t\t\t const referenceValueSize = referenceTrack.getValueSize();\r\n \r\n\t\t\t if ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\r\n \r\n\t\t\t\t referenceOffset = referenceValueSize / 3;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t let targetOffset = 0;\r\n\t\t\t const targetValueSize = targetTrack.getValueSize();\r\n \r\n\t\t\t if ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\r\n \r\n\t\t\t\t targetOffset = targetValueSize / 3;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const lastIndex = referenceTrack.times.length - 1;\r\n\t\t\t let referenceValue;\r\n \r\n\t\t\t // Find the value to subtract out of the track\r\n\t\t\t if ( referenceTime <= referenceTrack.times[ 0 ] ) {\r\n \r\n\t\t\t\t // Reference frame is earlier than the first keyframe, so just use the first keyframe\r\n\t\t\t\t const startIndex = referenceOffset;\r\n\t\t\t\t const endIndex = referenceValueSize - referenceOffset;\r\n\t\t\t\t referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\r\n \r\n\t\t\t } else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\r\n \r\n\t\t\t\t // Reference frame is after the last keyframe, so just use the last keyframe\r\n\t\t\t\t const startIndex = lastIndex * referenceValueSize + referenceOffset;\r\n\t\t\t\t const endIndex = startIndex + referenceValueSize - referenceOffset;\r\n\t\t\t\t referenceValue = AnimationUtils.arraySlice( referenceTrack.values, startIndex, endIndex );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // Interpolate to the reference value\r\n\t\t\t\t const interpolant = referenceTrack.createInterpolant();\r\n\t\t\t\t const startIndex = referenceOffset;\r\n\t\t\t\t const endIndex = referenceValueSize - referenceOffset;\r\n\t\t\t\t interpolant.evaluate( referenceTime );\r\n\t\t\t\t referenceValue = AnimationUtils.arraySlice( interpolant.resultBuffer, startIndex, endIndex );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Conjugate the quaternion\r\n\t\t\t if ( referenceTrackType === 'quaternion' ) {\r\n \r\n\t\t\t\t const referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\r\n\t\t\t\t referenceQuat.toArray( referenceValue );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // Subtract the reference value from all of the track values\r\n \r\n\t\t\t const numTimes = targetTrack.times.length;\r\n\t\t\t for ( let j = 0; j < numTimes; ++ j ) {\r\n \r\n\t\t\t\t const valueStart = j * targetValueSize + targetOffset;\r\n \r\n\t\t\t\t if ( referenceTrackType === 'quaternion' ) {\r\n \r\n\t\t\t\t\t // Multiply the conjugate for quaternion track types\r\n\t\t\t\t\t Quaternion.multiplyQuaternionsFlat(\r\n\t\t\t\t\t\t targetTrack.values,\r\n\t\t\t\t\t\t valueStart,\r\n\t\t\t\t\t\t referenceValue,\r\n\t\t\t\t\t\t 0,\r\n\t\t\t\t\t\t targetTrack.values,\r\n\t\t\t\t\t\t valueStart\r\n\t\t\t\t\t );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t const valueEnd = targetValueSize - targetOffset * 2;\r\n \r\n\t\t\t\t\t // Subtract each value for all other numeric track types\r\n\t\t\t\t\t for ( let k = 0; k < valueEnd; ++ k ) {\r\n \r\n\t\t\t\t\t\t targetTrack.values[ valueStart + k ] -= referenceValue[ k ];\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t targetClip.blendMode = AdditiveAnimationBlendMode;\r\n \r\n\t\t return targetClip;\r\n \r\n\t }\r\n \r\n };\r\n \r\n /**\r\n  * Abstract base class of interpolants over parametric samples.\r\n  *\r\n  * The parameter domain is one dimensional, typically the time or a path\r\n  * along a curve defined by the data.\r\n  *\r\n  * The sample values can have any dimensionality and derived classes may\r\n  * apply special interpretations to the data.\r\n  *\r\n  * This class provides the interval seek in a Template Method, deferring\r\n  * the actual interpolation to derived classes.\r\n  *\r\n  * Time complexity is O(1) for linear access crossing at most two points\r\n  * and O(log N) for random access, where N is the number of positions.\r\n  *\r\n  * References:\r\n  *\r\n  * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n  *\r\n  */\r\n \r\n class Interpolant {\r\n \r\n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n \r\n\t\t this.parameterPositions = parameterPositions;\r\n\t\t this._cachedIndex = 0;\r\n \r\n\t\t this.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\t resultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\t this.sampleValues = sampleValues;\r\n\t\t this.valueSize = sampleSize;\r\n \r\n\t\t this.settings = null;\r\n\t\t this.DefaultSettings_ = {};\r\n \r\n\t }\r\n \r\n\t evaluate( t ) {\r\n \r\n\t\t const pp = this.parameterPositions;\r\n\t\t let i1 = this._cachedIndex,\r\n\t\t\t t1 = pp[ i1 ],\r\n\t\t\t t0 = pp[ i1 - 1 ];\r\n \r\n\t\t validate_interval: {\r\n \r\n\t\t\t seek: {\r\n \r\n\t\t\t\t let right;\r\n \r\n\t\t\t\t linear_scan: {\r\n \r\n\t\t\t\t\t //- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t //- slower code:\r\n\t\t\t\t\t //-\r\n\t\t\t\t\t //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\t forward_scan: if ( ! ( t < t1 ) ) {\r\n \r\n\t\t\t\t\t\t for ( let giveUpAt = i1 + 2; ; ) {\r\n \r\n\t\t\t\t\t\t\t if ( t1 === undefined ) {\r\n \r\n\t\t\t\t\t\t\t\t if ( t < t0 ) break forward_scan;\r\n \r\n\t\t\t\t\t\t\t\t // after end\r\n \r\n\t\t\t\t\t\t\t\t i1 = pp.length;\r\n\t\t\t\t\t\t\t\t this._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\t return this.afterEnd_( i1 - 1, t, t0 );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t\t if ( i1 === giveUpAt ) break; // this loop\r\n \r\n\t\t\t\t\t\t\t t0 = t1;\r\n\t\t\t\t\t\t\t t1 = pp[ ++ i1 ];\r\n \r\n\t\t\t\t\t\t\t if ( t < t1 ) {\r\n \r\n\t\t\t\t\t\t\t\t // we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t break seek;\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t // prepare binary search on the right side of the index\r\n\t\t\t\t\t\t right = pp.length;\r\n\t\t\t\t\t\t break linear_scan;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t //- slower code:\r\n\t\t\t\t\t //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\t if ( ! ( t >= t0 ) ) {\r\n \r\n\t\t\t\t\t\t // looping?\r\n \r\n\t\t\t\t\t\t const t1global = pp[ 1 ];\r\n \r\n\t\t\t\t\t\t if ( t < t1global ) {\r\n \r\n\t\t\t\t\t\t\t i1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\t t0 = t1global;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t // linear reverse scan\r\n \r\n\t\t\t\t\t\t for ( let giveUpAt = i1 - 2; ; ) {\r\n \r\n\t\t\t\t\t\t\t if ( t0 === undefined ) {\r\n \r\n\t\t\t\t\t\t\t\t // before start\r\n \r\n\t\t\t\t\t\t\t\t this._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\t return this.beforeStart_( 0, t, t1 );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t\t if ( i1 === giveUpAt ) break; // this loop\r\n \r\n\t\t\t\t\t\t\t t1 = t0;\r\n\t\t\t\t\t\t\t t0 = pp[ -- i1 - 1 ];\r\n \r\n\t\t\t\t\t\t\t if ( t >= t0 ) {\r\n \r\n\t\t\t\t\t\t\t\t // we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\t break seek;\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t // prepare binary search on the left side of the index\r\n\t\t\t\t\t\t right = i1;\r\n\t\t\t\t\t\t i1 = 0;\r\n\t\t\t\t\t\t break linear_scan;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t // the interval is valid\r\n \r\n\t\t\t\t\t break validate_interval;\r\n \r\n\t\t\t\t } // linear scan\r\n \r\n\t\t\t\t // binary search\r\n \r\n\t\t\t\t while ( i1 < right ) {\r\n \r\n\t\t\t\t\t const mid = ( i1 + right ) >>> 1;\r\n \r\n\t\t\t\t\t if ( t < pp[ mid ] ) {\r\n \r\n\t\t\t\t\t\t right = mid;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t i1 = mid + 1;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t t1 = pp[ i1 ];\r\n\t\t\t\t t0 = pp[ i1 - 1 ];\r\n \r\n\t\t\t\t // check boundary cases, again\r\n \r\n\t\t\t\t if ( t0 === undefined ) {\r\n \r\n\t\t\t\t\t this._cachedIndex = 0;\r\n\t\t\t\t\t return this.beforeStart_( 0, t, t1 );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( t1 === undefined ) {\r\n \r\n\t\t\t\t\t i1 = pp.length;\r\n\t\t\t\t\t this._cachedIndex = i1;\r\n\t\t\t\t\t return this.afterEnd_( i1 - 1, t0, t );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } // seek\r\n \r\n\t\t\t this._cachedIndex = i1;\r\n \r\n\t\t\t this.intervalChanged_( i1, t0, t1 );\r\n \r\n\t\t } // validate_interval\r\n \r\n\t\t return this.interpolate_( i1, t0, t, t1 );\r\n \r\n\t }\r\n \r\n\t getSettings_() {\r\n \r\n\t\t return this.settings || this.DefaultSettings_;\r\n \r\n\t }\r\n \r\n\t copySampleValue_( index ) {\r\n \r\n\t\t // copies a sample value to the result buffer\r\n \r\n\t\t const result = this.resultBuffer,\r\n\t\t\t values = this.sampleValues,\r\n\t\t\t stride = this.valueSize,\r\n\t\t\t offset = index * stride;\r\n \r\n\t\t for ( let i = 0; i !== stride; ++ i ) {\r\n \r\n\t\t\t result[ i ] = values[ offset + i ];\r\n \r\n\t\t }\r\n \r\n\t\t return result;\r\n \r\n\t }\r\n \r\n\t // Template methods for derived classes:\r\n \r\n\t interpolate_( /* i1, t0, t, t1 */ ) {\r\n \r\n\t\t throw new Error( 'call to abstract method' );\r\n\t\t // implementations shall return this.resultBuffer\r\n \r\n\t }\r\n \r\n\t intervalChanged_( /* i1, t0, t1 */ ) {\r\n \r\n\t\t // empty\r\n \r\n\t }\r\n \r\n }\r\n \r\n // ALIAS DEFINITIONS\r\n \r\n Interpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\r\n Interpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\r\n \r\n /**\r\n  * Fast and simple cubic spline interpolant.\r\n  *\r\n  * It was derived from a Hermitian construction setting the first derivative\r\n  * at each sample position to the linear slope between neighboring positions\r\n  * over their parameter interval.\r\n  */\r\n \r\n class CubicInterpolant extends Interpolant {\r\n \r\n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n \r\n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n \r\n\t\t this._weightPrev = - 0;\r\n\t\t this._offsetPrev = - 0;\r\n\t\t this._weightNext = - 0;\r\n\t\t this._offsetNext = - 0;\r\n \r\n\t\t this.DefaultSettings_ = {\r\n \r\n\t\t\t endingStart: ZeroCurvatureEnding,\r\n\t\t\t endingEnd: ZeroCurvatureEnding\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t intervalChanged_( i1, t0, t1 ) {\r\n \r\n\t\t const pp = this.parameterPositions;\r\n\t\t let iPrev = i1 - 2,\r\n\t\t\t iNext = i1 + 1,\r\n \r\n\t\t\t tPrev = pp[ iPrev ],\r\n\t\t\t tNext = pp[ iNext ];\r\n \r\n\t\t if ( tPrev === undefined ) {\r\n \r\n\t\t\t switch ( this.getSettings_().endingStart ) {\r\n \r\n\t\t\t\t case ZeroSlopeEnding:\r\n \r\n\t\t\t\t\t // f'(t0) = 0\r\n\t\t\t\t\t iPrev = i1;\r\n\t\t\t\t\t tPrev = 2 * t0 - t1;\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case WrapAroundEnding:\r\n \r\n\t\t\t\t\t // use the other end of the curve\r\n\t\t\t\t\t iPrev = pp.length - 2;\r\n\t\t\t\t\t tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t default: // ZeroCurvatureEnding\r\n \r\n\t\t\t\t\t // f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\t iPrev = i1;\r\n\t\t\t\t\t tPrev = t1;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( tNext === undefined ) {\r\n \r\n\t\t\t switch ( this.getSettings_().endingEnd ) {\r\n \r\n\t\t\t\t case ZeroSlopeEnding:\r\n \r\n\t\t\t\t\t // f'(tN) = 0\r\n\t\t\t\t\t iNext = i1;\r\n\t\t\t\t\t tNext = 2 * t1 - t0;\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case WrapAroundEnding:\r\n \r\n\t\t\t\t\t // use the other end of the curve\r\n\t\t\t\t\t iNext = 1;\r\n\t\t\t\t\t tNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t default: // ZeroCurvatureEnding\r\n \r\n\t\t\t\t\t // f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\t iNext = i1 - 1;\r\n\t\t\t\t\t tNext = t0;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\t stride = this.valueSize;\r\n \r\n\t\t this._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\t this._weightNext = halfDt / ( tNext - t1 );\r\n\t\t this._offsetPrev = iPrev * stride;\r\n\t\t this._offsetNext = iNext * stride;\r\n \r\n\t }\r\n \r\n\t interpolate_( i1, t0, t, t1 ) {\r\n \r\n\t\t const result = this.resultBuffer,\r\n\t\t\t values = this.sampleValues,\r\n\t\t\t stride = this.valueSize,\r\n \r\n\t\t\t o1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\t oP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\t wP = this._weightPrev,\twN = this._weightNext,\r\n \r\n\t\t\t p = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t pp = p * p,\r\n\t\t\t ppp = pp * p;\r\n \r\n\t\t // evaluate polynomials\r\n \r\n\t\t const sP = - wP * ppp + 2 * wP * pp - wP * p;\r\n\t\t const s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\r\n\t\t const s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\r\n\t\t const sN = wN * ppp - wN * pp;\r\n \r\n\t\t // combine data linearly\r\n \r\n\t\t for ( let i = 0; i !== stride; ++ i ) {\r\n \r\n\t\t\t result[ i ] =\r\n\t\t\t\t\t sP * values[ oP + i ] +\r\n\t\t\t\t\t s0 * values[ o0 + i ] +\r\n\t\t\t\t\t s1 * values[ o1 + i ] +\r\n\t\t\t\t\t sN * values[ oN + i ];\r\n \r\n\t\t }\r\n \r\n\t\t return result;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class LinearInterpolant extends Interpolant {\r\n \r\n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n \r\n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n \r\n\t }\r\n \r\n\t interpolate_( i1, t0, t, t1 ) {\r\n \r\n\t\t const result = this.resultBuffer,\r\n\t\t\t values = this.sampleValues,\r\n\t\t\t stride = this.valueSize,\r\n \r\n\t\t\t offset1 = i1 * stride,\r\n\t\t\t offset0 = offset1 - stride,\r\n \r\n\t\t\t weight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\t weight0 = 1 - weight1;\r\n \r\n\t\t for ( let i = 0; i !== stride; ++ i ) {\r\n \r\n\t\t\t result[ i ] =\r\n\t\t\t\t\t values[ offset0 + i ] * weight0 +\r\n\t\t\t\t\t values[ offset1 + i ] * weight1;\r\n \r\n\t\t }\r\n \r\n\t\t return result;\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  *\r\n  * Interpolant that evaluates to the sample value at the position preceeding\r\n  * the parameter.\r\n  */\r\n \r\n class DiscreteInterpolant extends Interpolant {\r\n \r\n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n \r\n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n \r\n\t }\r\n \r\n\t interpolate_( i1 /*, t0, t, t1 */ ) {\r\n \r\n\t\t return this.copySampleValue_( i1 - 1 );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class KeyframeTrack {\r\n \r\n\t constructor( name, times, values, interpolation ) {\r\n \r\n\t\t if ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\r\n\t\t if ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\r\n \r\n\t\t this.name = name;\r\n \r\n\t\t this.times = AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\t\t this.values = AnimationUtils.convertArray( values, this.ValueBufferType );\r\n \r\n\t\t this.setInterpolation( interpolation || this.DefaultInterpolation );\r\n \r\n\t }\r\n \r\n\t // Serialization (in static context, because of constructor invocation\r\n\t // and automatic invocation of .toJSON):\r\n \r\n\t static toJSON( track ) {\r\n \r\n\t\t const trackType = track.constructor;\r\n \r\n\t\t let json;\r\n \r\n\t\t // derived classes can define a static toJSON method\r\n\t\t if ( trackType.toJSON !== this.toJSON ) {\r\n \r\n\t\t\t json = trackType.toJSON( track );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // by default, we assume the data can be serialized as-is\r\n\t\t\t json = {\r\n \r\n\t\t\t\t 'name': track.name,\r\n\t\t\t\t 'times': AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t 'values': AnimationUtils.convertArray( track.values, Array )\r\n \r\n\t\t\t };\r\n \r\n\t\t\t const interpolation = track.getInterpolation();\r\n \r\n\t\t\t if ( interpolation !== track.DefaultInterpolation ) {\r\n \r\n\t\t\t\t json.interpolation = interpolation;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t json.type = track.ValueTypeName; // mandatory\r\n \r\n\t\t return json;\r\n \r\n\t }\r\n \r\n\t InterpolantFactoryMethodDiscrete( result ) {\r\n \r\n\t\t return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\r\n \r\n\t }\r\n \r\n\t InterpolantFactoryMethodLinear( result ) {\r\n \r\n\t\t return new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n \r\n\t }\r\n \r\n\t InterpolantFactoryMethodSmooth( result ) {\r\n \r\n\t\t return new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\r\n \r\n\t }\r\n \r\n\t setInterpolation( interpolation ) {\r\n \r\n\t\t let factoryMethod;\r\n \r\n\t\t switch ( interpolation ) {\r\n \r\n\t\t\t case InterpolateDiscrete:\r\n \r\n\t\t\t\t factoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case InterpolateLinear:\r\n \r\n\t\t\t\t factoryMethod = this.InterpolantFactoryMethodLinear;\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case InterpolateSmooth:\r\n \r\n\t\t\t\t factoryMethod = this.InterpolantFactoryMethodSmooth;\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t }\r\n \r\n\t\t if ( factoryMethod === undefined ) {\r\n \r\n\t\t\t const message = 'unsupported interpolation for ' +\r\n\t\t\t\t this.ValueTypeName + ' keyframe track named ' + this.name;\r\n \r\n\t\t\t if ( this.createInterpolant === undefined ) {\r\n \r\n\t\t\t\t // fall back to default, unless the default itself is messed up\r\n\t\t\t\t if ( interpolation !== this.DefaultInterpolation ) {\r\n \r\n\t\t\t\t\t this.setInterpolation( this.DefaultInterpolation );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t throw new Error( message ); // fatal, in this case\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t console.warn( 'THREE.KeyframeTrack:', message );\r\n\t\t\t return this;\r\n \r\n\t\t }\r\n \r\n\t\t this.createInterpolant = factoryMethod;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getInterpolation() {\r\n \r\n\t\t switch ( this.createInterpolant ) {\r\n \r\n\t\t\t case this.InterpolantFactoryMethodDiscrete:\r\n \r\n\t\t\t\t return InterpolateDiscrete;\r\n \r\n\t\t\t case this.InterpolantFactoryMethodLinear:\r\n \r\n\t\t\t\t return InterpolateLinear;\r\n \r\n\t\t\t case this.InterpolantFactoryMethodSmooth:\r\n \r\n\t\t\t\t return InterpolateSmooth;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t getValueSize() {\r\n \r\n\t\t return this.values.length / this.times.length;\r\n \r\n\t }\r\n \r\n\t // move all keyframes either forwards or backwards in time\r\n\t shift( timeOffset ) {\r\n \r\n\t\t if ( timeOffset !== 0.0 ) {\r\n \r\n\t\t\t const times = this.times;\r\n \r\n\t\t\t for ( let i = 0, n = times.length; i !== n; ++ i ) {\r\n \r\n\t\t\t\t times[ i ] += timeOffset;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\t scale( timeScale ) {\r\n \r\n\t\t if ( timeScale !== 1.0 ) {\r\n \r\n\t\t\t const times = this.times;\r\n \r\n\t\t\t for ( let i = 0, n = times.length; i !== n; ++ i ) {\r\n \r\n\t\t\t\t times[ i ] *= timeScale;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\t trim( startTime, endTime ) {\r\n \r\n\t\t const times = this.times,\r\n\t\t\t nKeys = times.length;\r\n \r\n\t\t let from = 0,\r\n\t\t\t to = nKeys - 1;\r\n \r\n\t\t while ( from !== nKeys && times[ from ] < startTime ) {\r\n \r\n\t\t\t ++ from;\r\n \r\n\t\t }\r\n \r\n\t\t while ( to !== - 1 && times[ to ] > endTime ) {\r\n \r\n\t\t\t -- to;\r\n \r\n\t\t }\r\n \r\n\t\t ++ to; // inclusive -> exclusive bound\r\n \r\n\t\t if ( from !== 0 || to !== nKeys ) {\r\n \r\n\t\t\t // empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\t if ( from >= to ) {\r\n \r\n\t\t\t\t to = Math.max( to, 1 );\r\n\t\t\t\t from = to - 1;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const stride = this.getValueSize();\r\n\t\t\t this.times = AnimationUtils.arraySlice( times, from, to );\r\n\t\t\t this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\t validate() {\r\n \r\n\t\t let valid = true;\r\n \r\n\t\t const valueSize = this.getValueSize();\r\n\t\t if ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n \r\n\t\t\t console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\r\n\t\t\t valid = false;\r\n \r\n\t\t }\r\n \r\n\t\t const times = this.times,\r\n\t\t\t values = this.values,\r\n \r\n\t\t\t nKeys = times.length;\r\n \r\n\t\t if ( nKeys === 0 ) {\r\n \r\n\t\t\t console.error( 'THREE.KeyframeTrack: Track is empty.', this );\r\n\t\t\t valid = false;\r\n \r\n\t\t }\r\n \r\n\t\t let prevTime = null;\r\n \r\n\t\t for ( let i = 0; i !== nKeys; i ++ ) {\r\n \r\n\t\t\t const currTime = times[ i ];\r\n \r\n\t\t\t if ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n \r\n\t\t\t\t console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\r\n\t\t\t\t valid = false;\r\n\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( prevTime !== null && prevTime > currTime ) {\r\n \r\n\t\t\t\t console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\r\n\t\t\t\t valid = false;\r\n\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t prevTime = currTime;\r\n \r\n\t\t }\r\n \r\n\t\t if ( values !== undefined ) {\r\n \r\n\t\t\t if ( AnimationUtils.isTypedArray( values ) ) {\r\n \r\n\t\t\t\t for ( let i = 0, n = values.length; i !== n; ++ i ) {\r\n \r\n\t\t\t\t\t const value = values[ i ];\r\n \r\n\t\t\t\t\t if ( isNaN( value ) ) {\r\n \r\n\t\t\t\t\t\t console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\r\n\t\t\t\t\t\t valid = false;\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return valid;\r\n \r\n\t }\r\n \r\n\t // removes equivalent sequential keys as common in morph target sequences\r\n\t // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\t optimize() {\r\n \r\n\t\t // times or values may be shared with other tracks, so overwriting is unsafe\r\n\t\t const times = AnimationUtils.arraySlice( this.times ),\r\n\t\t\t values = AnimationUtils.arraySlice( this.values ),\r\n\t\t\t stride = this.getValueSize(),\r\n \r\n\t\t\t smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n \r\n\t\t\t lastIndex = times.length - 1;\r\n \r\n\t\t let writeIndex = 1;\r\n \r\n\t\t for ( let i = 1; i < lastIndex; ++ i ) {\r\n \r\n\t\t\t let keep = false;\r\n \r\n\t\t\t const time = times[ i ];\r\n\t\t\t const timeNext = times[ i + 1 ];\r\n \r\n\t\t\t // remove adjacent keyframes scheduled at the same time\r\n \r\n\t\t\t if ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\r\n \r\n\t\t\t\t if ( ! smoothInterpolation ) {\r\n \r\n\t\t\t\t\t // remove unnecessary keyframes same as their neighbors\r\n \r\n\t\t\t\t\t const offset = i * stride,\r\n\t\t\t\t\t\t offsetP = offset - stride,\r\n\t\t\t\t\t\t offsetN = offset + stride;\r\n \r\n\t\t\t\t\t for ( let j = 0; j !== stride; ++ j ) {\r\n \r\n\t\t\t\t\t\t const value = values[ offset + j ];\r\n \r\n\t\t\t\t\t\t if ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\t value !== values[ offsetN + j ] ) {\r\n \r\n\t\t\t\t\t\t\t keep = true;\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t keep = true;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // in-place compaction\r\n \r\n\t\t\t if ( keep ) {\r\n \r\n\t\t\t\t if ( i !== writeIndex ) {\r\n \r\n\t\t\t\t\t times[ writeIndex ] = times[ i ];\r\n \r\n\t\t\t\t\t const readOffset = i * stride,\r\n\t\t\t\t\t\t writeOffset = writeIndex * stride;\r\n \r\n\t\t\t\t\t for ( let j = 0; j !== stride; ++ j ) {\r\n \r\n\t\t\t\t\t\t values[ writeOffset + j ] = values[ readOffset + j ];\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t ++ writeIndex;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // flush last keyframe (compaction looks ahead)\r\n \r\n\t\t if ( lastIndex > 0 ) {\r\n \r\n\t\t\t times[ writeIndex ] = times[ lastIndex ];\r\n \r\n\t\t\t for ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\r\n \r\n\t\t\t\t values[ writeOffset + j ] = values[ readOffset + j ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t ++ writeIndex;\r\n \r\n\t\t }\r\n \r\n\t\t if ( writeIndex !== times.length ) {\r\n \r\n\t\t\t this.times = AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\t this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.times = times;\r\n\t\t\t this.values = values;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t const times = AnimationUtils.arraySlice( this.times, 0 );\r\n\t\t const values = AnimationUtils.arraySlice( this.values, 0 );\r\n \r\n\t\t const TypedKeyframeTrack = this.constructor;\r\n\t\t const track = new TypedKeyframeTrack( this.name, times, values );\r\n \r\n\t\t // Interpolant argument to constructor is not saved, so copy the factory method directly.\r\n\t\t track.createInterpolant = this.createInterpolant;\r\n \r\n\t\t return track;\r\n \r\n\t }\r\n \r\n }\r\n \r\n KeyframeTrack.prototype.TimeBufferType = Float32Array;\r\n KeyframeTrack.prototype.ValueBufferType = Float32Array;\r\n KeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n \r\n /**\r\n  * A Track of Boolean keyframe values.\r\n  */\r\n class BooleanKeyframeTrack extends KeyframeTrack {}\r\n \r\n BooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\r\n BooleanKeyframeTrack.prototype.ValueBufferType = Array;\r\n BooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n \r\n /**\r\n  * A Track of keyframe values that represent color.\r\n  */\r\n class ColorKeyframeTrack extends KeyframeTrack {}\r\n \r\n ColorKeyframeTrack.prototype.ValueTypeName = 'color';\r\n \r\n /**\r\n  * A Track of numeric keyframe values.\r\n  */\r\n class NumberKeyframeTrack extends KeyframeTrack {}\r\n \r\n NumberKeyframeTrack.prototype.ValueTypeName = 'number';\r\n \r\n /**\r\n  * Spherical linear unit quaternion interpolant.\r\n  */\r\n \r\n class QuaternionLinearInterpolant extends Interpolant {\r\n \r\n\t constructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n \r\n\t\t super( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n \r\n\t }\r\n \r\n\t interpolate_( i1, t0, t, t1 ) {\r\n \r\n\t\t const result = this.resultBuffer,\r\n\t\t\t values = this.sampleValues,\r\n\t\t\t stride = this.valueSize,\r\n \r\n\t\t\t alpha = ( t - t0 ) / ( t1 - t0 );\r\n \r\n\t\t let offset = i1 * stride;\r\n \r\n\t\t for ( let end = offset + stride; offset !== end; offset += 4 ) {\r\n \r\n\t\t\t Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\r\n \r\n\t\t }\r\n \r\n\t\t return result;\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * A Track of quaternion keyframe values.\r\n  */\r\n class QuaternionKeyframeTrack extends KeyframeTrack {\r\n \r\n\t InterpolantFactoryMethodLinear( result ) {\r\n \r\n\t\t return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n \r\n\t }\r\n \r\n }\r\n \r\n QuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\r\n // ValueBufferType is inherited\r\n QuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n \r\n /**\r\n  * A Track that interpolates Strings\r\n  */\r\n class StringKeyframeTrack extends KeyframeTrack {}\r\n \r\n StringKeyframeTrack.prototype.ValueTypeName = 'string';\r\n StringKeyframeTrack.prototype.ValueBufferType = Array;\r\n StringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\n StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\n StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n \r\n /**\r\n  * A Track of vectored keyframe values.\r\n  */\r\n class VectorKeyframeTrack extends KeyframeTrack {}\r\n \r\n VectorKeyframeTrack.prototype.ValueTypeName = 'vector';\r\n \r\n class AnimationClip {\r\n \r\n\t constructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\r\n \r\n\t\t this.name = name;\r\n\t\t this.tracks = tracks;\r\n\t\t this.duration = duration;\r\n\t\t this.blendMode = blendMode;\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t // this means it should figure out its duration by scanning the tracks\r\n\t\t if ( this.duration < 0 ) {\r\n \r\n\t\t\t this.resetDuration();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n \r\n\t static parse( json ) {\r\n \r\n\t\t const tracks = [],\r\n\t\t\t jsonTracks = json.tracks,\r\n\t\t\t frameTime = 1.0 / ( json.fps || 1.0 );\r\n \r\n\t\t for ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n \r\n\t\t\t tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\r\n \r\n\t\t }\r\n \r\n\t\t const clip = new this( json.name, json.duration, tracks, json.blendMode );\r\n\t\t clip.uuid = json.uuid;\r\n \r\n\t\t return clip;\r\n \r\n\t }\r\n \r\n\t static toJSON( clip ) {\r\n \r\n\t\t const tracks = [],\r\n\t\t\t clipTracks = clip.tracks;\r\n \r\n\t\t const json = {\r\n \r\n\t\t\t 'name': clip.name,\r\n\t\t\t 'duration': clip.duration,\r\n\t\t\t 'tracks': tracks,\r\n\t\t\t 'uuid': clip.uuid,\r\n\t\t\t 'blendMode': clip.blendMode\r\n \r\n\t\t };\r\n \r\n\t\t for ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n \r\n\t\t\t tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n \r\n\t\t }\r\n \r\n\t\t return json;\r\n \r\n\t }\r\n \r\n\t static CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\r\n \r\n\t\t const numMorphTargets = morphTargetSequence.length;\r\n\t\t const tracks = [];\r\n \r\n\t\t for ( let i = 0; i < numMorphTargets; i ++ ) {\r\n \r\n\t\t\t let times = [];\r\n\t\t\t let values = [];\r\n \r\n\t\t\t times.push(\r\n\t\t\t\t ( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t i,\r\n\t\t\t\t ( i + 1 ) % numMorphTargets );\r\n \r\n\t\t\t values.push( 0, 1, 0 );\r\n \r\n\t\t\t const order = AnimationUtils.getKeyframeOrder( times );\r\n\t\t\t times = AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\t values = AnimationUtils.sortedArray( values, 1, order );\r\n \r\n\t\t\t // if there is a key at the first frame, duplicate it as the\r\n\t\t\t // last frame as well for perfect loop.\r\n\t\t\t if ( ! noLoop && times[ 0 ] === 0 ) {\r\n \r\n\t\t\t\t times.push( numMorphTargets );\r\n\t\t\t\t values.push( values[ 0 ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t tracks.push(\r\n\t\t\t\t new NumberKeyframeTrack(\r\n\t\t\t\t\t '.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t times, values\r\n\t\t\t\t ).scale( 1.0 / fps ) );\r\n \r\n\t\t }\r\n \r\n\t\t return new this( name, - 1, tracks );\r\n \r\n\t }\r\n \r\n\t static findByName( objectOrClipArray, name ) {\r\n \r\n\t\t let clipArray = objectOrClipArray;\r\n \r\n\t\t if ( ! Array.isArray( objectOrClipArray ) ) {\r\n \r\n\t\t\t const o = objectOrClipArray;\r\n\t\t\t clipArray = o.geometry && o.geometry.animations || o.animations;\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = 0; i < clipArray.length; i ++ ) {\r\n \r\n\t\t\t if ( clipArray[ i ].name === name ) {\r\n \r\n\t\t\t\t return clipArray[ i ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return null;\r\n \r\n\t }\r\n \r\n\t static CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\r\n \r\n\t\t const animationToMorphTargets = {};\r\n \r\n\t\t // tested with https://regex101.com/ on trick sequences\r\n\t\t // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\t const pattern = /^([\\w-]*?)([\\d]+)$/;\r\n \r\n\t\t // sort morph target names into animation groups based\r\n\t\t // patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\t for ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n \r\n\t\t\t const morphTarget = morphTargets[ i ];\r\n\t\t\t const parts = morphTarget.name.match( pattern );\r\n \r\n\t\t\t if ( parts && parts.length > 1 ) {\r\n \r\n\t\t\t\t const name = parts[ 1 ];\r\n \r\n\t\t\t\t let animationMorphTargets = animationToMorphTargets[ name ];\r\n \r\n\t\t\t\t if ( ! animationMorphTargets ) {\r\n \r\n\t\t\t\t\t animationToMorphTargets[ name ] = animationMorphTargets = [];\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t animationMorphTargets.push( morphTarget );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const clips = [];\r\n \r\n\t\t for ( const name in animationToMorphTargets ) {\r\n \r\n\t\t\t clips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n \r\n\t\t }\r\n \r\n\t\t return clips;\r\n \r\n\t }\r\n \r\n\t // parse the animation.hierarchy format\r\n\t static parseAnimation( animation, bones ) {\r\n \r\n\t\t if ( ! animation ) {\r\n \r\n\t\t\t console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t const addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\r\n \r\n\t\t\t // only return track if there are actually keys.\r\n\t\t\t if ( animationKeys.length !== 0 ) {\r\n \r\n\t\t\t\t const times = [];\r\n\t\t\t\t const values = [];\r\n \r\n\t\t\t\t AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\r\n \r\n\t\t\t\t // empty keys are filtered out, so check again\r\n\t\t\t\t if ( times.length !== 0 ) {\r\n \r\n\t\t\t\t\t destTracks.push( new trackType( trackName, times, values ) );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t const tracks = [];\r\n \r\n\t\t const clipName = animation.name || 'default';\r\n\t\t const fps = animation.fps || 30;\r\n\t\t const blendMode = animation.blendMode;\r\n \r\n\t\t // automatic length determination in AnimationClip.\r\n\t\t let duration = animation.length || - 1;\r\n \r\n\t\t const hierarchyTracks = animation.hierarchy || [];\r\n \r\n\t\t for ( let h = 0; h < hierarchyTracks.length; h ++ ) {\r\n \r\n\t\t\t const animationKeys = hierarchyTracks[ h ].keys;\r\n \r\n\t\t\t // skip empty tracks\r\n\t\t\t if ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n \r\n\t\t\t // process morph targets\r\n\t\t\t if ( animationKeys[ 0 ].morphTargets ) {\r\n \r\n\t\t\t\t // figure out all morph targets used in this track\r\n\t\t\t\t const morphTargetNames = {};\r\n \r\n\t\t\t\t let k;\r\n \r\n\t\t\t\t for ( k = 0; k < animationKeys.length; k ++ ) {\r\n \r\n\t\t\t\t\t if ( animationKeys[ k ].morphTargets ) {\r\n \r\n\t\t\t\t\t\t for ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\r\n \r\n\t\t\t\t\t\t\t morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t // create a track for each morph target with all zero\r\n\t\t\t\t // morphTargetInfluences except for the keys in which\r\n\t\t\t\t // the morphTarget is named.\r\n\t\t\t\t for ( const morphTargetName in morphTargetNames ) {\r\n \r\n\t\t\t\t\t const times = [];\r\n\t\t\t\t\t const values = [];\r\n \r\n\t\t\t\t\t for ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\r\n \r\n\t\t\t\t\t\t const animationKey = animationKeys[ k ];\r\n \r\n\t\t\t\t\t\t times.push( animationKey.time );\r\n\t\t\t\t\t\t values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t duration = morphTargetNames.length * fps;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t // ...assume skeletal animation\r\n \r\n\t\t\t\t const boneName = '.bones[' + bones[ h ].name + ']';\r\n \r\n\t\t\t\t addNonemptyTrack(\r\n\t\t\t\t\t VectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t animationKeys, 'pos', tracks );\r\n \r\n\t\t\t\t addNonemptyTrack(\r\n\t\t\t\t\t QuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t animationKeys, 'rot', tracks );\r\n \r\n\t\t\t\t addNonemptyTrack(\r\n\t\t\t\t\t VectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t animationKeys, 'scl', tracks );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( tracks.length === 0 ) {\r\n \r\n\t\t\t return null;\r\n \r\n\t\t }\r\n \r\n\t\t const clip = new this( clipName, duration, tracks, blendMode );\r\n \r\n\t\t return clip;\r\n \r\n\t }\r\n \r\n\t resetDuration() {\r\n \r\n\t\t const tracks = this.tracks;\r\n\t\t let duration = 0;\r\n \r\n\t\t for ( let i = 0, n = tracks.length; i !== n; ++ i ) {\r\n \r\n\t\t\t const track = this.tracks[ i ];\r\n \r\n\t\t\t duration = Math.max( duration, track.times[ track.times.length - 1 ] );\r\n \r\n\t\t }\r\n \r\n\t\t this.duration = duration;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t trim() {\r\n \r\n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\r\n \r\n\t\t\t this.tracks[ i ].trim( 0, this.duration );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t validate() {\r\n \r\n\t\t let valid = true;\r\n \r\n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\r\n \r\n\t\t\t valid = valid && this.tracks[ i ].validate();\r\n \r\n\t\t }\r\n \r\n\t\t return valid;\r\n \r\n\t }\r\n \r\n\t optimize() {\r\n \r\n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\r\n \r\n\t\t\t this.tracks[ i ].optimize();\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t const tracks = [];\r\n \r\n\t\t for ( let i = 0; i < this.tracks.length; i ++ ) {\r\n \r\n\t\t\t tracks.push( this.tracks[ i ].clone() );\r\n \r\n\t\t }\r\n \r\n\t\t return new this.constructor( this.name, this.duration, tracks, this.blendMode );\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t return this.constructor.toJSON( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n function getTrackTypeForValueTypeName( typeName ) {\r\n \r\n\t switch ( typeName.toLowerCase() ) {\r\n \r\n\t\t case 'scalar':\r\n\t\t case 'double':\r\n\t\t case 'float':\r\n\t\t case 'number':\r\n\t\t case 'integer':\r\n \r\n\t\t\t return NumberKeyframeTrack;\r\n \r\n\t\t case 'vector':\r\n\t\t case 'vector2':\r\n\t\t case 'vector3':\r\n\t\t case 'vector4':\r\n \r\n\t\t\t return VectorKeyframeTrack;\r\n \r\n\t\t case 'color':\r\n \r\n\t\t\t return ColorKeyframeTrack;\r\n \r\n\t\t case 'quaternion':\r\n \r\n\t\t\t return QuaternionKeyframeTrack;\r\n \r\n\t\t case 'bool':\r\n\t\t case 'boolean':\r\n \r\n\t\t\t return BooleanKeyframeTrack;\r\n \r\n\t\t case 'string':\r\n \r\n\t\t\t return StringKeyframeTrack;\r\n \r\n\t }\r\n \r\n\t throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\r\n \r\n }\r\n \r\n function parseKeyframeTrack( json ) {\r\n \r\n\t if ( json.type === undefined ) {\r\n \r\n\t\t throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\r\n \r\n\t }\r\n \r\n\t const trackType = getTrackTypeForValueTypeName( json.type );\r\n \r\n\t if ( json.times === undefined ) {\r\n \r\n\t\t const times = [], values = [];\r\n \r\n\t\t AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n \r\n\t\t json.times = times;\r\n\t\t json.values = values;\r\n \r\n\t }\r\n \r\n\t // derived classes can define a static parse method\r\n\t if ( trackType.parse !== undefined ) {\r\n \r\n\t\t return trackType.parse( json );\r\n \r\n\t } else {\r\n \r\n\t\t // by default, we assume a constructor compatible with the base\r\n\t\t return new trackType( json.name, json.times, json.values, json.interpolation );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const Cache = {\r\n \r\n\t enabled: false,\r\n \r\n\t files: {},\r\n \r\n\t add: function ( key, file ) {\r\n \r\n\t\t if ( this.enabled === false ) return;\r\n \r\n\t\t // console.log( 'THREE.Cache', 'Adding key:', key );\r\n \r\n\t\t this.files[ key ] = file;\r\n \r\n\t },\r\n \r\n\t get: function ( key ) {\r\n \r\n\t\t if ( this.enabled === false ) return;\r\n \r\n\t\t // console.log( 'THREE.Cache', 'Checking key:', key );\r\n \r\n\t\t return this.files[ key ];\r\n \r\n\t },\r\n \r\n\t remove: function ( key ) {\r\n \r\n\t\t delete this.files[ key ];\r\n \r\n\t },\r\n \r\n\t clear: function () {\r\n \r\n\t\t this.files = {};\r\n \r\n\t }\r\n \r\n };\r\n \r\n class LoadingManager {\r\n \r\n\t constructor( onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t let isLoading = false;\r\n\t\t let itemsLoaded = 0;\r\n\t\t let itemsTotal = 0;\r\n\t\t let urlModifier = undefined;\r\n\t\t const handlers = [];\r\n \r\n\t\t // Refer to #5689 for the reason why we don't set .onStart\r\n\t\t // in the constructor\r\n \r\n\t\t this.onStart = undefined;\r\n\t\t this.onLoad = onLoad;\r\n\t\t this.onProgress = onProgress;\r\n\t\t this.onError = onError;\r\n \r\n\t\t this.itemStart = function ( url ) {\r\n \r\n\t\t\t itemsTotal ++;\r\n \r\n\t\t\t if ( isLoading === false ) {\r\n \r\n\t\t\t\t if ( scope.onStart !== undefined ) {\r\n \r\n\t\t\t\t\t scope.onStart( url, itemsLoaded, itemsTotal );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t isLoading = true;\r\n \r\n\t\t };\r\n \r\n\t\t this.itemEnd = function ( url ) {\r\n \r\n\t\t\t itemsLoaded ++;\r\n \r\n\t\t\t if ( scope.onProgress !== undefined ) {\r\n \r\n\t\t\t\t scope.onProgress( url, itemsLoaded, itemsTotal );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( itemsLoaded === itemsTotal ) {\r\n \r\n\t\t\t\t isLoading = false;\r\n \r\n\t\t\t\t if ( scope.onLoad !== undefined ) {\r\n \r\n\t\t\t\t\t scope.onLoad();\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t this.itemError = function ( url ) {\r\n \r\n\t\t\t if ( scope.onError !== undefined ) {\r\n \r\n\t\t\t\t scope.onError( url );\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t\t this.resolveURL = function ( url ) {\r\n \r\n\t\t\t if ( urlModifier ) {\r\n \r\n\t\t\t\t return urlModifier( url );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return url;\r\n \r\n\t\t };\r\n \r\n\t\t this.setURLModifier = function ( transform ) {\r\n \r\n\t\t\t urlModifier = transform;\r\n \r\n\t\t\t return this;\r\n \r\n\t\t };\r\n \r\n\t\t this.addHandler = function ( regex, loader ) {\r\n \r\n\t\t\t handlers.push( regex, loader );\r\n \r\n\t\t\t return this;\r\n \r\n\t\t };\r\n \r\n\t\t this.removeHandler = function ( regex ) {\r\n \r\n\t\t\t const index = handlers.indexOf( regex );\r\n \r\n\t\t\t if ( index !== - 1 ) {\r\n \r\n\t\t\t\t handlers.splice( index, 2 );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return this;\r\n \r\n\t\t };\r\n \r\n\t\t this.getHandler = function ( file ) {\r\n \r\n\t\t\t for ( let i = 0, l = handlers.length; i < l; i += 2 ) {\r\n \r\n\t\t\t\t const regex = handlers[ i ];\r\n\t\t\t\t const loader = handlers[ i + 1 ];\r\n \r\n\t\t\t\t if ( regex.global ) regex.lastIndex = 0; // see #17920\r\n \r\n\t\t\t\t if ( regex.test( file ) ) {\r\n \r\n\t\t\t\t\t return loader;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return null;\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n }\r\n \r\n const DefaultLoadingManager = new LoadingManager();\r\n \r\n class Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n \r\n\t\t this.crossOrigin = 'anonymous';\r\n\t\t this.withCredentials = false;\r\n\t\t this.path = '';\r\n\t\t this.resourcePath = '';\r\n\t\t this.requestHeader = {};\r\n \r\n\t }\r\n \r\n\t load( /* url, onLoad, onProgress, onError */ ) {}\r\n \r\n\t loadAsync( url, onProgress ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t return new Promise( function ( resolve, reject ) {\r\n \r\n\t\t\t scope.load( url, resolve, onProgress, reject );\r\n \r\n\t\t } );\r\n \r\n\t }\r\n \r\n\t parse( /* data */ ) {}\r\n \r\n\t setCrossOrigin( crossOrigin ) {\r\n \r\n\t\t this.crossOrigin = crossOrigin;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setWithCredentials( value ) {\r\n \r\n\t\t this.withCredentials = value;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setPath( path ) {\r\n \r\n\t\t this.path = path;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setResourcePath( resourcePath ) {\r\n \r\n\t\t this.resourcePath = resourcePath;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setRequestHeader( requestHeader ) {\r\n \r\n\t\t this.requestHeader = requestHeader;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n const loading = {};\r\n \r\n class FileLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t if ( url === undefined ) url = '';\r\n \r\n\t\t if ( this.path !== undefined ) url = this.path + url;\r\n \r\n\t\t url = this.manager.resolveURL( url );\r\n \r\n\t\t const cached = Cache.get( url );\r\n \r\n\t\t if ( cached !== undefined ) {\r\n \r\n\t\t\t this.manager.itemStart( url );\r\n \r\n\t\t\t setTimeout( () => {\r\n \r\n\t\t\t\t if ( onLoad ) onLoad( cached );\r\n \r\n\t\t\t\t this.manager.itemEnd( url );\r\n \r\n\t\t\t }, 0 );\r\n \r\n\t\t\t return cached;\r\n \r\n\t\t }\r\n \r\n\t\t // Check if request is duplicate\r\n \r\n\t\t if ( loading[ url ] !== undefined ) {\r\n \r\n\t\t\t loading[ url ].push( {\r\n \r\n\t\t\t\t onLoad: onLoad,\r\n\t\t\t\t onProgress: onProgress,\r\n\t\t\t\t onError: onError\r\n \r\n\t\t\t } );\r\n \r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t // Initialise array for duplicate requests\r\n\t\t loading[ url ] = [];\r\n \r\n\t\t loading[ url ].push( {\r\n\t\t\t onLoad: onLoad,\r\n\t\t\t onProgress: onProgress,\r\n\t\t\t onError: onError,\r\n\t\t } );\r\n \r\n\t\t // create request\r\n\t\t const req = new Request( url, {\r\n\t\t\t headers: new Headers( this.requestHeader ),\r\n\t\t\t credentials: this.withCredentials ? 'include' : 'same-origin',\r\n\t\t\t // An abort controller could be added within a future PR\r\n\t\t } );\r\n \r\n\t\t // record states ( avoid data race )\r\n\t\t const mimeType = this.mimeType;\r\n\t\t const responseType = this.responseType;\r\n \r\n\t\t // start the fetch\r\n\t\t fetch( req )\r\n\t\t\t .then( response => {\r\n \r\n\t\t\t\t if ( response.status === 200 || response.status === 0 ) {\r\n \r\n\t\t\t\t\t // Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t // e.g. 'file://' or 'data://'. Handle as success.\r\n \r\n\t\t\t\t\t if ( response.status === 0 ) {\r\n \r\n\t\t\t\t\t\t console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t // Workaround: Checking if response.body === undefined for Alipay browser #23548\r\n \r\n\t\t\t\t\t if ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\r\n \r\n\t\t\t\t\t\t return response;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t const callbacks = loading[ url ];\r\n\t\t\t\t\t const reader = response.body.getReader();\r\n\t\t\t\t\t const contentLength = response.headers.get( 'Content-Length' );\r\n\t\t\t\t\t const total = contentLength ? parseInt( contentLength ) : 0;\r\n\t\t\t\t\t const lengthComputable = total !== 0;\r\n\t\t\t\t\t let loaded = 0;\r\n \r\n\t\t\t\t\t // periodically read data into the new stream tracking while download progress\r\n\t\t\t\t\t const stream = new ReadableStream( {\r\n\t\t\t\t\t\t start( controller ) {\r\n \r\n\t\t\t\t\t\t\t readData();\r\n \r\n\t\t\t\t\t\t\t function readData() {\r\n \r\n\t\t\t\t\t\t\t\t reader.read().then( ( { done, value } ) => {\r\n \r\n\t\t\t\t\t\t\t\t\t if ( done ) {\r\n \r\n\t\t\t\t\t\t\t\t\t\t controller.close();\r\n \r\n\t\t\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t\t\t loaded += value.byteLength;\r\n \r\n\t\t\t\t\t\t\t\t\t\t const event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\r\n\t\t\t\t\t\t\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t\t\t\t\t const callback = callbacks[ i ];\r\n\t\t\t\t\t\t\t\t\t\t\t if ( callback.onProgress ) callback.onProgress( event );\r\n \r\n\t\t\t\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t\t\t\t\t controller.enqueue( value );\r\n\t\t\t\t\t\t\t\t\t\t readData();\r\n \r\n\t\t\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t\t\t } );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t } );\r\n \r\n\t\t\t\t\t return new Response( stream );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t throw Error( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}` );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } )\r\n\t\t\t .then( response => {\r\n \r\n\t\t\t\t switch ( responseType ) {\r\n \r\n\t\t\t\t\t case 'arraybuffer':\r\n \r\n\t\t\t\t\t\t return response.arrayBuffer();\r\n \r\n\t\t\t\t\t case 'blob':\r\n \r\n\t\t\t\t\t\t return response.blob();\r\n \r\n\t\t\t\t\t case 'document':\r\n \r\n\t\t\t\t\t\t return response.text()\r\n\t\t\t\t\t\t\t .then( text => {\r\n \r\n\t\t\t\t\t\t\t\t const parser = new DOMParser();\r\n\t\t\t\t\t\t\t\t return parser.parseFromString( text, mimeType );\r\n \r\n\t\t\t\t\t\t\t } );\r\n \r\n\t\t\t\t\t case 'json':\r\n \r\n\t\t\t\t\t\t return response.json();\r\n \r\n\t\t\t\t\t default:\r\n \r\n\t\t\t\t\t\t if ( mimeType === undefined ) {\r\n \r\n\t\t\t\t\t\t\t return response.text();\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t // sniff encoding\r\n\t\t\t\t\t\t\t const re = /charset=\"?([^;\"\\s]*)\"?/i;\r\n\t\t\t\t\t\t\t const exec = re.exec( mimeType );\r\n\t\t\t\t\t\t\t const label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\r\n\t\t\t\t\t\t\t const decoder = new TextDecoder( label );\r\n\t\t\t\t\t\t\t return response.arrayBuffer().then( ab => decoder.decode( ab ) );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } )\r\n\t\t\t .then( data => {\r\n \r\n\t\t\t\t // Add to cache only on HTTP success, so that we do not cache\r\n\t\t\t\t // error response bodies as proper responses to requests.\r\n\t\t\t\t Cache.add( url, data );\r\n \r\n\t\t\t\t const callbacks = loading[ url ];\r\n\t\t\t\t delete loading[ url ];\r\n \r\n\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const callback = callbacks[ i ];\r\n\t\t\t\t\t if ( callback.onLoad ) callback.onLoad( data );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } )\r\n\t\t\t .catch( err => {\r\n \r\n\t\t\t\t // Abort errors and other errors are handled the same\r\n \r\n\t\t\t\t const callbacks = loading[ url ];\r\n \r\n\t\t\t\t if ( callbacks === undefined ) {\r\n \r\n\t\t\t\t\t // When onLoad was called and url was deleted in `loading`\r\n\t\t\t\t\t this.manager.itemError( url );\r\n\t\t\t\t\t throw err;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t delete loading[ url ];\r\n \r\n\t\t\t\t for ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const callback = callbacks[ i ];\r\n\t\t\t\t\t if ( callback.onError ) callback.onError( err );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t this.manager.itemError( url );\r\n \r\n\t\t\t } )\r\n\t\t\t .finally( () => {\r\n \r\n\t\t\t\t this.manager.itemEnd( url );\r\n \r\n\t\t\t } );\r\n \r\n\t\t this.manager.itemStart( url );\r\n \r\n\t }\r\n \r\n\t setResponseType( value ) {\r\n \r\n\t\t this.responseType = value;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setMimeType( value ) {\r\n \r\n\t\t this.mimeType = value;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class AnimationLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const loader = new FileLoader( this.manager );\r\n\t\t loader.setPath( this.path );\r\n\t\t loader.setRequestHeader( this.requestHeader );\r\n\t\t loader.setWithCredentials( this.withCredentials );\r\n\t\t loader.load( url, function ( text ) {\r\n \r\n\t\t\t try {\r\n \r\n\t\t\t\t onLoad( scope.parse( JSON.parse( text ) ) );\r\n \r\n\t\t\t } catch ( e ) {\r\n \r\n\t\t\t\t if ( onError ) {\r\n \r\n\t\t\t\t\t onError( e );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( e );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t scope.manager.itemError( url );\r\n \r\n\t\t\t }\r\n \r\n\t\t }, onProgress, onError );\r\n \r\n\t }\r\n \r\n\t parse( json ) {\r\n \r\n\t\t const animations = [];\r\n \r\n\t\t for ( let i = 0; i < json.length; i ++ ) {\r\n \r\n\t\t\t const clip = AnimationClip.parse( json[ i ] );\r\n \r\n\t\t\t animations.push( clip );\r\n \r\n\t\t }\r\n \r\n\t\t return animations;\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n  *\r\n  * Sub classes have to implement the parse() method which will be used in load().\r\n  */\r\n \r\n class CompressedTextureLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const images = [];\r\n \r\n\t\t const texture = new CompressedTexture();\r\n \r\n\t\t const loader = new FileLoader( this.manager );\r\n\t\t loader.setPath( this.path );\r\n\t\t loader.setResponseType( 'arraybuffer' );\r\n\t\t loader.setRequestHeader( this.requestHeader );\r\n\t\t loader.setWithCredentials( scope.withCredentials );\r\n \r\n\t\t let loaded = 0;\r\n \r\n\t\t function loadTexture( i ) {\r\n \r\n\t\t\t loader.load( url[ i ], function ( buffer ) {\r\n \r\n\t\t\t\t const texDatas = scope.parse( buffer, true );\r\n \r\n\t\t\t\t images[ i ] = {\r\n\t\t\t\t\t width: texDatas.width,\r\n\t\t\t\t\t height: texDatas.height,\r\n\t\t\t\t\t format: texDatas.format,\r\n\t\t\t\t\t mipmaps: texDatas.mipmaps\r\n\t\t\t\t };\r\n \r\n\t\t\t\t loaded += 1;\r\n \r\n\t\t\t\t if ( loaded === 6 ) {\r\n \r\n\t\t\t\t\t if ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\r\n \r\n\t\t\t\t\t texture.image = images;\r\n\t\t\t\t\t texture.format = texDatas.format;\r\n\t\t\t\t\t texture.needsUpdate = true;\r\n \r\n\t\t\t\t\t if ( onLoad ) onLoad( texture );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }, onProgress, onError );\r\n \r\n\t\t }\r\n \r\n\t\t if ( Array.isArray( url ) ) {\r\n \r\n\t\t\t for ( let i = 0, il = url.length; i < il; ++ i ) {\r\n \r\n\t\t\t\t loadTexture( i );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // compressed cubemap texture stored in a single DDS file\r\n \r\n\t\t\t loader.load( url, function ( buffer ) {\r\n \r\n\t\t\t\t const texDatas = scope.parse( buffer, true );\r\n \r\n\t\t\t\t if ( texDatas.isCubemap ) {\r\n \r\n\t\t\t\t\t const faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n \r\n\t\t\t\t\t for ( let f = 0; f < faces; f ++ ) {\r\n \r\n\t\t\t\t\t\t images[ f ] = { mipmaps: [] };\r\n \r\n\t\t\t\t\t\t for ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n \r\n\t\t\t\t\t\t\t images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t images[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t images[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t images[ f ].height = texDatas.height;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t texture.image = images;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t texture.image.width = texDatas.width;\r\n\t\t\t\t\t texture.image.height = texDatas.height;\r\n\t\t\t\t\t texture.mipmaps = texDatas.mipmaps;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( texDatas.mipmapCount === 1 ) {\r\n \r\n\t\t\t\t\t texture.minFilter = LinearFilter;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t texture.format = texDatas.format;\r\n\t\t\t\t texture.needsUpdate = true;\r\n \r\n\t\t\t\t if ( onLoad ) onLoad( texture );\r\n \r\n\t\t\t }, onProgress, onError );\r\n \r\n\t\t }\r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class ImageLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t if ( this.path !== undefined ) url = this.path + url;\r\n \r\n\t\t url = this.manager.resolveURL( url );\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const cached = Cache.get( url );\r\n \r\n\t\t if ( cached !== undefined ) {\r\n \r\n\t\t\t scope.manager.itemStart( url );\r\n \r\n\t\t\t setTimeout( function () {\r\n \r\n\t\t\t\t if ( onLoad ) onLoad( cached );\r\n \r\n\t\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t\t }, 0 );\r\n \r\n\t\t\t return cached;\r\n \r\n\t\t }\r\n \r\n\t\t const image = createElementNS( 'img' );\r\n \r\n\t\t function onImageLoad() {\r\n \r\n\t\t\t removeEventListeners();\r\n \r\n\t\t\t Cache.add( url, this );\r\n \r\n\t\t\t if ( onLoad ) onLoad( this );\r\n \r\n\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t }\r\n \r\n\t\t function onImageError( event ) {\r\n \r\n\t\t\t removeEventListeners();\r\n \r\n\t\t\t if ( onError ) onError( event );\r\n \r\n\t\t\t scope.manager.itemError( url );\r\n\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t }\r\n \r\n\t\t function removeEventListeners() {\r\n \r\n\t\t\t image.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\t image.removeEventListener( 'error', onImageError, false );\r\n \r\n\t\t }\r\n \r\n\t\t image.addEventListener( 'load', onImageLoad, false );\r\n\t\t image.addEventListener( 'error', onImageError, false );\r\n \r\n\t\t if ( url.slice( 0, 5 ) !== 'data:' ) {\r\n \r\n\t\t\t if ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n \r\n\t\t }\r\n \r\n\t\t scope.manager.itemStart( url );\r\n \r\n\t\t image.src = url;\r\n \r\n\t\t return image;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class CubeTextureLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( urls, onLoad, onProgress, onError ) {\r\n \r\n\t\t const texture = new CubeTexture();\r\n \r\n\t\t const loader = new ImageLoader( this.manager );\r\n\t\t loader.setCrossOrigin( this.crossOrigin );\r\n\t\t loader.setPath( this.path );\r\n \r\n\t\t let loaded = 0;\r\n \r\n\t\t function loadTexture( i ) {\r\n \r\n\t\t\t loader.load( urls[ i ], function ( image ) {\r\n \r\n\t\t\t\t texture.images[ i ] = image;\r\n \r\n\t\t\t\t loaded ++;\r\n \r\n\t\t\t\t if ( loaded === 6 ) {\r\n \r\n\t\t\t\t\t texture.needsUpdate = true;\r\n \r\n\t\t\t\t\t if ( onLoad ) onLoad( texture );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }, undefined, onError );\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = 0; i < urls.length; ++ i ) {\r\n \r\n\t\t\t loadTexture( i );\r\n \r\n\t\t }\r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n  *\r\n  * Sub classes have to implement the parse() method which will be used in load().\r\n  */\r\n \r\n class DataTextureLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const texture = new DataTexture();\r\n \r\n\t\t const loader = new FileLoader( this.manager );\r\n\t\t loader.setResponseType( 'arraybuffer' );\r\n\t\t loader.setRequestHeader( this.requestHeader );\r\n\t\t loader.setPath( this.path );\r\n\t\t loader.setWithCredentials( scope.withCredentials );\r\n\t\t loader.load( url, function ( buffer ) {\r\n \r\n\t\t\t const texData = scope.parse( buffer );\r\n \r\n\t\t\t if ( ! texData ) return;\r\n \r\n\t\t\t if ( texData.image !== undefined ) {\r\n \r\n\t\t\t\t texture.image = texData.image;\r\n \r\n\t\t\t } else if ( texData.data !== undefined ) {\r\n \r\n\t\t\t\t texture.image.width = texData.width;\r\n\t\t\t\t texture.image.height = texData.height;\r\n\t\t\t\t texture.image.data = texData.data;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\t texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\r\n \r\n\t\t\t texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\r\n\t\t\t texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\r\n \r\n\t\t\t texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\r\n \r\n\t\t\t if ( texData.encoding !== undefined ) {\r\n \r\n\t\t\t\t texture.encoding = texData.encoding;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( texData.flipY !== undefined ) {\r\n \r\n\t\t\t\t texture.flipY = texData.flipY;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( texData.format !== undefined ) {\r\n \r\n\t\t\t\t texture.format = texData.format;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( texData.type !== undefined ) {\r\n \r\n\t\t\t\t texture.type = texData.type;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( texData.mipmaps !== undefined ) {\r\n \r\n\t\t\t\t texture.mipmaps = texData.mipmaps;\r\n\t\t\t\t texture.minFilter = LinearMipmapLinearFilter; // presumably...\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( texData.mipmapCount === 1 ) {\r\n \r\n\t\t\t\t texture.minFilter = LinearFilter;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( texData.generateMipmaps !== undefined ) {\r\n \r\n\t\t\t\t texture.generateMipmaps = texData.generateMipmaps;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t texture.needsUpdate = true;\r\n \r\n\t\t\t if ( onLoad ) onLoad( texture, texData );\r\n \r\n\t\t }, onProgress, onError );\r\n \r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class TextureLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const texture = new Texture();\r\n \r\n\t\t const loader = new ImageLoader( this.manager );\r\n\t\t loader.setCrossOrigin( this.crossOrigin );\r\n\t\t loader.setPath( this.path );\r\n \r\n\t\t loader.load( url, function ( image ) {\r\n \r\n\t\t\t texture.image = image;\r\n\t\t\t texture.needsUpdate = true;\r\n \r\n\t\t\t if ( onLoad !== undefined ) {\r\n \r\n\t\t\t\t onLoad( texture );\r\n \r\n\t\t\t }\r\n \r\n\t\t }, onProgress, onError );\r\n \r\n\t\t return texture;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Light extends Object3D {\r\n \r\n\t constructor( color, intensity = 1 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Light';\r\n \r\n\t\t this.color = new Color( color );\r\n\t\t this.intensity = intensity;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t // Empty here in base class; some subclasses override.\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.color.copy( source.color );\r\n\t\t this.intensity = source.intensity;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t data.object.color = this.color.getHex();\r\n\t\t data.object.intensity = this.intensity;\r\n \r\n\t\t if ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n \r\n\t\t if ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\t if ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\t if ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\t if ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n \r\n\t\t if ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n Light.prototype.isLight = true;\r\n \r\n class HemisphereLight extends Light {\r\n \r\n\t constructor( skyColor, groundColor, intensity ) {\r\n \r\n\t\t super( skyColor, intensity );\r\n \r\n\t\t this.type = 'HemisphereLight';\r\n \r\n\t\t this.position.copy( Object3D.DefaultUp );\r\n\t\t this.updateMatrix();\r\n \r\n\t\t this.groundColor = new Color( groundColor );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t Light.prototype.copy.call( this, source );\r\n \r\n\t\t this.groundColor.copy( source.groundColor );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n HemisphereLight.prototype.isHemisphereLight = true;\r\n \r\n const _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\r\n const _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\r\n const _lookTarget$1 = /*@__PURE__*/ new Vector3();\r\n \r\n class LightShadow {\r\n \r\n\t constructor( camera ) {\r\n \r\n\t\t this.camera = camera;\r\n \r\n\t\t this.bias = 0;\r\n\t\t this.normalBias = 0;\r\n\t\t this.radius = 1;\r\n\t\t this.blurSamples = 8;\r\n \r\n\t\t this.mapSize = new Vector2( 512, 512 );\r\n \r\n\t\t this.map = null;\r\n\t\t this.mapPass = null;\r\n\t\t this.matrix = new Matrix4();\r\n \r\n\t\t this.autoUpdate = true;\r\n\t\t this.needsUpdate = false;\r\n \r\n\t\t this._frustum = new Frustum();\r\n\t\t this._frameExtents = new Vector2( 1, 1 );\r\n \r\n\t\t this._viewportCount = 1;\r\n \r\n\t\t this._viewports = [\r\n \r\n\t\t\t new Vector4( 0, 0, 1, 1 )\r\n \r\n\t\t ];\r\n \r\n\t }\r\n \r\n\t getViewportCount() {\r\n \r\n\t\t return this._viewportCount;\r\n \r\n\t }\r\n \r\n\t getFrustum() {\r\n \r\n\t\t return this._frustum;\r\n \r\n\t }\r\n \r\n\t updateMatrices( light ) {\r\n \r\n\t\t const shadowCamera = this.camera;\r\n\t\t const shadowMatrix = this.matrix;\r\n \r\n\t\t _lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\r\n\t\t shadowCamera.position.copy( _lightPositionWorld$1 );\r\n \r\n\t\t _lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t shadowCamera.lookAt( _lookTarget$1 );\r\n\t\t shadowCamera.updateMatrixWorld();\r\n \r\n\t\t _projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t this._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\r\n \r\n\t\t shadowMatrix.set(\r\n\t\t\t 0.5, 0.0, 0.0, 0.5,\r\n\t\t\t 0.0, 0.5, 0.0, 0.5,\r\n\t\t\t 0.0, 0.0, 0.5, 0.5,\r\n\t\t\t 0.0, 0.0, 0.0, 1.0\r\n\t\t );\r\n \r\n\t\t shadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t shadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n \r\n\t }\r\n \r\n\t getViewport( viewportIndex ) {\r\n \r\n\t\t return this._viewports[ viewportIndex ];\r\n \r\n\t }\r\n \r\n\t getFrameExtents() {\r\n \r\n\t\t return this._frameExtents;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t if ( this.map ) {\r\n \r\n\t\t\t this.map.dispose();\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.mapPass ) {\r\n \r\n\t\t\t this.mapPass.dispose();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t this.camera = source.camera.clone();\r\n \r\n\t\t this.bias = source.bias;\r\n\t\t this.radius = source.radius;\r\n \r\n\t\t this.mapSize.copy( source.mapSize );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const object = {};\r\n \r\n\t\t if ( this.bias !== 0 ) object.bias = this.bias;\r\n\t\t if ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\r\n\t\t if ( this.radius !== 1 ) object.radius = this.radius;\r\n\t\t if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n \r\n\t\t object.camera = this.camera.toJSON( false ).object;\r\n\t\t delete object.camera.matrix;\r\n \r\n\t\t return object;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class SpotLightShadow extends LightShadow {\r\n \r\n\t constructor() {\r\n \r\n\t\t super( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n \r\n\t\t this.focus = 1;\r\n \r\n\t }\r\n \r\n\t updateMatrices( light ) {\r\n \r\n\t\t const camera = this.camera;\r\n \r\n\t\t const fov = RAD2DEG * 2 * light.angle * this.focus;\r\n\t\t const aspect = this.mapSize.width / this.mapSize.height;\r\n\t\t const far = light.distance || camera.far;\r\n \r\n\t\t if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n \r\n\t\t\t camera.fov = fov;\r\n\t\t\t camera.aspect = aspect;\r\n\t\t\t camera.far = far;\r\n\t\t\t camera.updateProjectionMatrix();\r\n \r\n\t\t }\r\n \r\n\t\t super.updateMatrices( light );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.focus = source.focus;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n SpotLightShadow.prototype.isSpotLightShadow = true;\r\n \r\n class SpotLight extends Light {\r\n \r\n\t constructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1 ) {\r\n \r\n\t\t super( color, intensity );\r\n \r\n\t\t this.type = 'SpotLight';\r\n \r\n\t\t this.position.copy( Object3D.DefaultUp );\r\n\t\t this.updateMatrix();\r\n \r\n\t\t this.target = new Object3D();\r\n \r\n\t\t this.distance = distance;\r\n\t\t this.angle = angle;\r\n\t\t this.penumbra = penumbra;\r\n\t\t this.decay = decay; // for physically correct lights, should be 2.\r\n \r\n\t\t this.shadow = new SpotLightShadow();\r\n \r\n\t }\r\n \r\n\t get power() {\r\n \r\n\t\t // compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t // by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\r\n\t\t return this.intensity * Math.PI;\r\n \r\n\t }\r\n \r\n\t set power( power ) {\r\n \r\n\t\t // set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\t this.intensity = power / Math.PI;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.shadow.dispose();\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.distance = source.distance;\r\n\t\t this.angle = source.angle;\r\n\t\t this.penumbra = source.penumbra;\r\n\t\t this.decay = source.decay;\r\n \r\n\t\t this.target = source.target.clone();\r\n \r\n\t\t this.shadow = source.shadow.clone();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n SpotLight.prototype.isSpotLight = true;\r\n \r\n const _projScreenMatrix = /*@__PURE__*/ new Matrix4();\r\n const _lightPositionWorld = /*@__PURE__*/ new Vector3();\r\n const _lookTarget = /*@__PURE__*/ new Vector3();\r\n \r\n class PointLightShadow extends LightShadow {\r\n \r\n\t constructor() {\r\n \r\n\t\t super( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n \r\n\t\t this._frameExtents = new Vector2( 4, 2 );\r\n \r\n\t\t this._viewportCount = 6;\r\n \r\n\t\t this._viewports = [\r\n\t\t\t // These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t // following orientation:\r\n\t\t\t //\r\n\t\t\t //  xzXZ\r\n\t\t\t //   y Y\r\n\t\t\t //\r\n\t\t\t // X - Positive x direction\r\n\t\t\t // x - Negative x direction\r\n\t\t\t // Y - Positive y direction\r\n\t\t\t // y - Negative y direction\r\n\t\t\t // Z - Positive z direction\r\n\t\t\t // z - Negative z direction\r\n \r\n\t\t\t // positive X\r\n\t\t\t new Vector4( 2, 1, 1, 1 ),\r\n\t\t\t // negative X\r\n\t\t\t new Vector4( 0, 1, 1, 1 ),\r\n\t\t\t // positive Z\r\n\t\t\t new Vector4( 3, 1, 1, 1 ),\r\n\t\t\t // negative Z\r\n\t\t\t new Vector4( 1, 1, 1, 1 ),\r\n\t\t\t // positive Y\r\n\t\t\t new Vector4( 3, 0, 1, 1 ),\r\n\t\t\t // negative Y\r\n\t\t\t new Vector4( 1, 0, 1, 1 )\r\n\t\t ];\r\n \r\n\t\t this._cubeDirections = [\r\n\t\t\t new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\r\n\t\t\t new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\r\n\t\t ];\r\n \r\n\t\t this._cubeUps = [\r\n\t\t\t new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\r\n\t\t\t new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\r\n\t\t ];\r\n \r\n\t }\r\n \r\n\t updateMatrices( light, viewportIndex = 0 ) {\r\n \r\n\t\t const camera = this.camera;\r\n\t\t const shadowMatrix = this.matrix;\r\n \r\n\t\t const far = light.distance || camera.far;\r\n \r\n\t\t if ( far !== camera.far ) {\r\n \r\n\t\t\t camera.far = far;\r\n\t\t\t camera.updateProjectionMatrix();\r\n \r\n\t\t }\r\n \r\n\t\t _lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t camera.position.copy( _lightPositionWorld );\r\n \r\n\t\t _lookTarget.copy( camera.position );\r\n\t\t _lookTarget.add( this._cubeDirections[ viewportIndex ] );\r\n\t\t camera.up.copy( this._cubeUps[ viewportIndex ] );\r\n\t\t camera.lookAt( _lookTarget );\r\n\t\t camera.updateMatrixWorld();\r\n \r\n\t\t shadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\r\n \r\n\t\t _projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t this._frustum.setFromProjectionMatrix( _projScreenMatrix );\r\n \r\n\t }\r\n \r\n }\r\n \r\n PointLightShadow.prototype.isPointLightShadow = true;\r\n \r\n class PointLight extends Light {\r\n \r\n\t constructor( color, intensity, distance = 0, decay = 1 ) {\r\n \r\n\t\t super( color, intensity );\r\n \r\n\t\t this.type = 'PointLight';\r\n \r\n\t\t this.distance = distance;\r\n\t\t this.decay = decay; // for physically correct lights, should be 2.\r\n \r\n\t\t this.shadow = new PointLightShadow();\r\n \r\n\t }\r\n \r\n\t get power() {\r\n \r\n\t\t // compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t // for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\r\n\t\t return this.intensity * 4 * Math.PI;\r\n \r\n\t }\r\n \r\n\t set power( power ) {\r\n \r\n\t\t // set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\t this.intensity = power / ( 4 * Math.PI );\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.shadow.dispose();\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.distance = source.distance;\r\n\t\t this.decay = source.decay;\r\n \r\n\t\t this.shadow = source.shadow.clone();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n PointLight.prototype.isPointLight = true;\r\n \r\n class DirectionalLightShadow extends LightShadow {\r\n \r\n\t constructor() {\r\n \r\n\t\t super( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n \r\n\t }\r\n \r\n }\r\n \r\n DirectionalLightShadow.prototype.isDirectionalLightShadow = true;\r\n \r\n class DirectionalLight extends Light {\r\n \r\n\t constructor( color, intensity ) {\r\n \r\n\t\t super( color, intensity );\r\n \r\n\t\t this.type = 'DirectionalLight';\r\n \r\n\t\t this.position.copy( Object3D.DefaultUp );\r\n\t\t this.updateMatrix();\r\n \r\n\t\t this.target = new Object3D();\r\n \r\n\t\t this.shadow = new DirectionalLightShadow();\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.shadow.dispose();\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.target = source.target.clone();\r\n\t\t this.shadow = source.shadow.clone();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n DirectionalLight.prototype.isDirectionalLight = true;\r\n \r\n class AmbientLight extends Light {\r\n \r\n\t constructor( color, intensity ) {\r\n \r\n\t\t super( color, intensity );\r\n \r\n\t\t this.type = 'AmbientLight';\r\n \r\n\t }\r\n \r\n }\r\n \r\n AmbientLight.prototype.isAmbientLight = true;\r\n \r\n class RectAreaLight extends Light {\r\n \r\n\t constructor( color, intensity, width = 10, height = 10 ) {\r\n \r\n\t\t super( color, intensity );\r\n \r\n\t\t this.type = 'RectAreaLight';\r\n \r\n\t\t this.width = width;\r\n\t\t this.height = height;\r\n \r\n\t }\r\n \r\n\t get power() {\r\n \r\n\t\t // compute the light's luminous power (in lumens) from its intensity (in nits)\r\n\t\t return this.intensity * this.width * this.height * Math.PI;\r\n \r\n\t }\r\n \r\n\t set power( power ) {\r\n \r\n\t\t // set the light's intensity (in nits) from the desired luminous power (in lumens)\r\n\t\t this.intensity = power / ( this.width * this.height * Math.PI );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.width = source.width;\r\n\t\t this.height = source.height;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t data.object.width = this.width;\r\n\t\t data.object.height = this.height;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n RectAreaLight.prototype.isRectAreaLight = true;\r\n \r\n /**\r\n  * Primary reference:\r\n  *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n  *\r\n  * Secondary reference:\r\n  *   https://www.ppsloan.org/publications/StupidSH36.pdf\r\n  */\r\n \r\n // 3-band SH defined by 9 coefficients\r\n \r\n class SphericalHarmonics3 {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.coefficients = [];\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.coefficients.push( new Vector3() );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t set( coefficients ) {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.coefficients[ i ].copy( coefficients[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t zero() {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.coefficients[ i ].set( 0, 0, 0 );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // get the radiance in the direction of the normal\r\n\t // target is a Vector3\r\n\t getAt( normal, target ) {\r\n \r\n\t\t // normal is assumed to be unit length\r\n \r\n\t\t const x = normal.x, y = normal.y, z = normal.z;\r\n \r\n\t\t const coeff = this.coefficients;\r\n \r\n\t\t // band 0\r\n\t\t target.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\r\n \r\n\t\t // band 1\r\n\t\t target.addScaledVector( coeff[ 1 ], 0.488603 * y );\r\n\t\t target.addScaledVector( coeff[ 2 ], 0.488603 * z );\r\n\t\t target.addScaledVector( coeff[ 3 ], 0.488603 * x );\r\n \r\n\t\t // band 2\r\n\t\t target.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\r\n\t\t target.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\r\n\t\t target.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\r\n\t\t target.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\r\n\t\t target.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\r\n\t // target is a Vector3\r\n\t // https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\t getIrradianceAt( normal, target ) {\r\n \r\n\t\t // normal is assumed to be unit length\r\n \r\n\t\t const x = normal.x, y = normal.y, z = normal.z;\r\n \r\n\t\t const coeff = this.coefficients;\r\n \r\n\t\t // band 0\r\n\t\t target.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\r\n \r\n\t\t // band 1\r\n\t\t target.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\r\n\t\t target.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\r\n\t\t target.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\r\n \r\n\t\t // band 2\r\n\t\t target.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\r\n\t\t target.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\r\n\t\t target.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\r\n\t\t target.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\r\n\t\t target.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\r\n \r\n\t\t return target;\r\n \r\n\t }\r\n \r\n\t add( sh ) {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.coefficients[ i ].add( sh.coefficients[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t addScaledSH( sh, s ) {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t scale( s ) {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.coefficients[ i ].multiplyScalar( s );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lerp( sh, alpha ) {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t this.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( sh ) {\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t if ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\r\n \r\n\t\t\t\t return false;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return true;\r\n \r\n\t }\r\n \r\n\t copy( sh ) {\r\n \r\n\t\t return this.set( sh.coefficients );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t fromArray( array, offset = 0 ) {\r\n \r\n\t\t const coefficients = this.coefficients;\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t coefficients[ i ].fromArray( array, offset + ( i * 3 ) );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toArray( array = [], offset = 0 ) {\r\n \r\n\t\t const coefficients = this.coefficients;\r\n \r\n\t\t for ( let i = 0; i < 9; i ++ ) {\r\n \r\n\t\t\t coefficients[ i ].toArray( array, offset + ( i * 3 ) );\r\n \r\n\t\t }\r\n \r\n\t\t return array;\r\n \r\n\t }\r\n \r\n\t // evaluate the basis functions\r\n\t // shBasis is an Array[ 9 ]\r\n\t static getBasisAt( normal, shBasis ) {\r\n \r\n\t\t // normal is assumed to be unit length\r\n \r\n\t\t const x = normal.x, y = normal.y, z = normal.z;\r\n \r\n\t\t // band 0\r\n\t\t shBasis[ 0 ] = 0.282095;\r\n \r\n\t\t // band 1\r\n\t\t shBasis[ 1 ] = 0.488603 * y;\r\n\t\t shBasis[ 2 ] = 0.488603 * z;\r\n\t\t shBasis[ 3 ] = 0.488603 * x;\r\n \r\n\t\t // band 2\r\n\t\t shBasis[ 4 ] = 1.092548 * x * y;\r\n\t\t shBasis[ 5 ] = 1.092548 * y * z;\r\n\t\t shBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\r\n\t\t shBasis[ 7 ] = 1.092548 * x * z;\r\n\t\t shBasis[ 8 ] = 0.546274 * ( x * x - y * y );\r\n \r\n\t }\r\n \r\n }\r\n \r\n SphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\r\n \r\n class LightProbe extends Light {\r\n \r\n\t constructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\r\n \r\n\t\t super( undefined, intensity );\r\n \r\n\t\t this.sh = sh;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.sh.copy( source.sh );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t fromJSON( json ) {\r\n \r\n\t\t this.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\r\n\t\t this.sh.fromArray( json.sh );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toJSON( meta ) {\r\n \r\n\t\t const data = super.toJSON( meta );\r\n \r\n\t\t data.object.sh = this.sh.toArray();\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n LightProbe.prototype.isLightProbe = true;\r\n \r\n class MaterialLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n\t\t this.textures = {};\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const loader = new FileLoader( scope.manager );\r\n\t\t loader.setPath( scope.path );\r\n\t\t loader.setRequestHeader( scope.requestHeader );\r\n\t\t loader.setWithCredentials( scope.withCredentials );\r\n\t\t loader.load( url, function ( text ) {\r\n \r\n\t\t\t try {\r\n \r\n\t\t\t\t onLoad( scope.parse( JSON.parse( text ) ) );\r\n \r\n\t\t\t } catch ( e ) {\r\n \r\n\t\t\t\t if ( onError ) {\r\n \r\n\t\t\t\t\t onError( e );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( e );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t scope.manager.itemError( url );\r\n \r\n\t\t\t }\r\n \r\n\t\t }, onProgress, onError );\r\n \r\n\t }\r\n \r\n\t parse( json ) {\r\n \r\n\t\t const textures = this.textures;\r\n \r\n\t\t function getTexture( name ) {\r\n \r\n\t\t\t if ( textures[ name ] === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return textures[ name ];\r\n \r\n\t\t }\r\n \r\n\t\t const material = Material.fromType( json.type );\r\n \r\n\t\t if ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\t if ( json.name !== undefined ) material.name = json.name;\r\n\t\t if ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\r\n\t\t if ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\t if ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\t if ( json.sheen !== undefined ) material.sheen = json.sheen;\r\n\t\t if ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\r\n\t\t if ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\r\n\t\t if ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t if ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t if ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\r\n\t\t if ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\r\n\t\t if ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t if ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\r\n\t\t if ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\r\n\t\t if ( json.transmission !== undefined ) material.transmission = json.transmission;\r\n\t\t if ( json.thickness !== undefined ) material.thickness = json.thickness;\r\n\t\t if ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\r\n\t\t if ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\r\n\t\t if ( json.fog !== undefined ) material.fog = json.fog;\r\n\t\t if ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\r\n\t\t if ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t if ( json.combine !== undefined ) material.combine = json.combine;\r\n\t\t if ( json.side !== undefined ) material.side = json.side;\r\n\t\t if ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\r\n\t\t if ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t if ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t if ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t if ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t if ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t if ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n \r\n\t\t if ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\r\n\t\t if ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\r\n\t\t if ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\r\n\t\t if ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\r\n\t\t if ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\r\n\t\t if ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\r\n\t\t if ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\r\n\t\t if ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\r\n \r\n\t\t if ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t if ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\t if ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\t if ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n \r\n\t\t if ( json.rotation !== undefined ) material.rotation = json.rotation;\r\n \r\n\t\t if ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\r\n\t\t if ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\r\n\t\t if ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\r\n\t\t if ( json.scale !== undefined ) material.scale = json.scale;\r\n \r\n\t\t if ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\r\n\t\t if ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\t if ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n \r\n\t\t if ( json.dithering !== undefined ) material.dithering = json.dithering;\r\n \r\n\t\t if ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\r\n\t\t if ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\r\n \r\n\t\t if ( json.visible !== undefined ) material.visible = json.visible;\r\n \r\n\t\t if ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\r\n \r\n\t\t if ( json.userData !== undefined ) material.userData = json.userData;\r\n \r\n\t\t if ( json.vertexColors !== undefined ) {\r\n \r\n\t\t\t if ( typeof json.vertexColors === 'number' ) {\r\n \r\n\t\t\t\t material.vertexColors = ( json.vertexColors > 0 ) ? true : false;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t material.vertexColors = json.vertexColors;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // Shader Material\r\n \r\n\t\t if ( json.uniforms !== undefined ) {\r\n \r\n\t\t\t for ( const name in json.uniforms ) {\r\n \r\n\t\t\t\t const uniform = json.uniforms[ name ];\r\n \r\n\t\t\t\t material.uniforms[ name ] = {};\r\n \r\n\t\t\t\t switch ( uniform.type ) {\r\n \r\n\t\t\t\t\t case 't':\r\n\t\t\t\t\t\t material.uniforms[ name ].value = getTexture( uniform.value );\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t case 'c':\r\n\t\t\t\t\t\t material.uniforms[ name ].value = new Color().setHex( uniform.value );\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t case 'v2':\r\n\t\t\t\t\t\t material.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t case 'v3':\r\n\t\t\t\t\t\t material.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t case 'v4':\r\n\t\t\t\t\t\t material.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t case 'm3':\r\n\t\t\t\t\t\t material.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t case 'm4':\r\n\t\t\t\t\t\t material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t default:\r\n\t\t\t\t\t\t material.uniforms[ name ].value = uniform.value;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( json.defines !== undefined ) material.defines = json.defines;\r\n\t\t if ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t if ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n \r\n\t\t if ( json.extensions !== undefined ) {\r\n \r\n\t\t\t for ( const key in json.extensions ) {\r\n \r\n\t\t\t\t material.extensions[ key ] = json.extensions[ key ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // Deprecated\r\n \r\n\t\t if ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\r\n \r\n\t\t // for PointsMaterial\r\n \r\n\t\t if ( json.size !== undefined ) material.size = json.size;\r\n\t\t if ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n \r\n\t\t // maps\r\n \r\n\t\t if ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\t\t if ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\r\n \r\n\t\t if ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\r\n \r\n\t\t if ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n\t\t if ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n \r\n\t\t if ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n\t\t if ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\r\n\t\t if ( json.normalScale !== undefined ) {\r\n \r\n\t\t\t let normalScale = json.normalScale;\r\n \r\n\t\t\t if ( Array.isArray( normalScale ) === false ) {\r\n \r\n\t\t\t\t // Blender exporter used to export a scalar. See #7459\r\n \r\n\t\t\t\t normalScale = [ normalScale, normalScale ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t material.normalScale = new Vector2().fromArray( normalScale );\r\n \r\n\t\t }\r\n \r\n\t\t if ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n\t\t if ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t if ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n \r\n\t\t if ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n\t\t if ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n \r\n\t\t if ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n\t\t if ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n \r\n\t\t if ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\t\t if ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\r\n\t\t if ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\r\n \r\n\t\t if ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\t\t if ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\r\n \r\n\t\t if ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\t\t if ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\r\n \r\n\t\t if ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n\t\t if ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n \r\n\t\t if ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n\t\t if ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n \r\n\t\t if ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\r\n \r\n\t\t if ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\r\n\t\t if ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\r\n\t\t if ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\r\n\t\t if ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\r\n \r\n\t\t if ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\r\n\t\t if ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\r\n \r\n\t\t if ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\r\n\t\t if ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\r\n \r\n\t\t return material;\r\n \r\n\t }\r\n \r\n\t setTextures( value ) {\r\n \r\n\t\t this.textures = value;\r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class LoaderUtils {\r\n \r\n\t static decodeText( array ) {\r\n \r\n\t\t if ( typeof TextDecoder !== 'undefined' ) {\r\n \r\n\t\t\t return new TextDecoder().decode( array );\r\n \r\n\t\t }\r\n \r\n\t\t // Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t // throws a \"maximum call stack size exceeded\" error for large arrays.\r\n \r\n\t\t let s = '';\r\n \r\n\t\t for ( let i = 0, il = array.length; i < il; i ++ ) {\r\n \r\n\t\t\t // Implicitly assumes little-endian.\r\n\t\t\t s += String.fromCharCode( array[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t try {\r\n \r\n\t\t\t // merges multi-byte utf-8 characters.\r\n \r\n\t\t\t return decodeURIComponent( escape( s ) );\r\n \r\n\t\t } catch ( e ) { // see #16358\r\n \r\n\t\t\t return s;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t static extractUrlBase( url ) {\r\n \r\n\t\t const index = url.lastIndexOf( '/' );\r\n \r\n\t\t if ( index === - 1 ) return './';\r\n \r\n\t\t return url.slice( 0, index + 1 );\r\n \r\n\t }\r\n \r\n\t static resolveURL( url, path ) {\r\n \r\n\t\t // Invalid URL\r\n\t\t if ( typeof url !== 'string' || url === '' ) return '';\r\n \r\n\t\t // Host Relative URL\r\n\t\t if ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\r\n \r\n\t\t\t path = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\r\n \r\n\t\t }\r\n \r\n\t\t // Absolute URL http://,https://,//\r\n\t\t if ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n \r\n\t\t // Data URI\r\n\t\t if ( /^data:.*,.*$/i.test( url ) ) return url;\r\n \r\n\t\t // Blob URL\r\n\t\t if ( /^blob:.*$/i.test( url ) ) return url;\r\n \r\n\t\t // Relative URL\r\n\t\t return path + url;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class InstancedBufferGeometry extends BufferGeometry {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'InstancedBufferGeometry';\r\n\t\t this.instanceCount = Infinity;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.instanceCount = source.instanceCount;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t toJSON() {\r\n \r\n\t\t const data = super.toJSON( this );\r\n \r\n\t\t data.instanceCount = this.instanceCount;\r\n \r\n\t\t data.isInstancedBufferGeometry = true;\r\n \r\n\t\t return data;\r\n \r\n\t }\r\n \r\n }\r\n \r\n InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\r\n \r\n class BufferGeometryLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const loader = new FileLoader( scope.manager );\r\n\t\t loader.setPath( scope.path );\r\n\t\t loader.setRequestHeader( scope.requestHeader );\r\n\t\t loader.setWithCredentials( scope.withCredentials );\r\n\t\t loader.load( url, function ( text ) {\r\n \r\n\t\t\t try {\r\n \r\n\t\t\t\t onLoad( scope.parse( JSON.parse( text ) ) );\r\n \r\n\t\t\t } catch ( e ) {\r\n \r\n\t\t\t\t if ( onError ) {\r\n \r\n\t\t\t\t\t onError( e );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( e );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t scope.manager.itemError( url );\r\n \r\n\t\t\t }\r\n \r\n\t\t }, onProgress, onError );\r\n \r\n\t }\r\n \r\n\t parse( json ) {\r\n \r\n\t\t const interleavedBufferMap = {};\r\n\t\t const arrayBufferMap = {};\r\n \r\n\t\t function getInterleavedBuffer( json, uuid ) {\r\n \r\n\t\t\t if ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\r\n \r\n\t\t\t const interleavedBuffers = json.interleavedBuffers;\r\n\t\t\t const interleavedBuffer = interleavedBuffers[ uuid ];\r\n \r\n\t\t\t const buffer = getArrayBuffer( json, interleavedBuffer.buffer );\r\n \r\n\t\t\t const array = getTypedArray( interleavedBuffer.type, buffer );\r\n\t\t\t const ib = new InterleavedBuffer( array, interleavedBuffer.stride );\r\n\t\t\t ib.uuid = interleavedBuffer.uuid;\r\n \r\n\t\t\t interleavedBufferMap[ uuid ] = ib;\r\n \r\n\t\t\t return ib;\r\n \r\n\t\t }\r\n \r\n\t\t function getArrayBuffer( json, uuid ) {\r\n \r\n\t\t\t if ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\r\n \r\n\t\t\t const arrayBuffers = json.arrayBuffers;\r\n\t\t\t const arrayBuffer = arrayBuffers[ uuid ];\r\n \r\n\t\t\t const ab = new Uint32Array( arrayBuffer ).buffer;\r\n \r\n\t\t\t arrayBufferMap[ uuid ] = ab;\r\n \r\n\t\t\t return ab;\r\n \r\n\t\t }\r\n \r\n\t\t const geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\r\n \r\n\t\t const index = json.data.index;\r\n \r\n\t\t if ( index !== undefined ) {\r\n \r\n\t\t\t const typedArray = getTypedArray( index.type, index.array );\r\n\t\t\t geometry.setIndex( new BufferAttribute( typedArray, 1 ) );\r\n \r\n\t\t }\r\n \r\n\t\t const attributes = json.data.attributes;\r\n \r\n\t\t for ( const key in attributes ) {\r\n \r\n\t\t\t const attribute = attributes[ key ];\r\n\t\t\t let bufferAttribute;\r\n \r\n\t\t\t if ( attribute.isInterleavedBufferAttribute ) {\r\n \r\n\t\t\t\t const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\r\n\t\t\t\t bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t const typedArray = getTypedArray( attribute.type, attribute.array );\r\n\t\t\t\t const bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\r\n\t\t\t\t bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\t if ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\r\n \r\n\t\t\t if ( attribute.updateRange !== undefined ) {\r\n \r\n\t\t\t\t bufferAttribute.updateRange.offset = attribute.updateRange.offset;\r\n\t\t\t\t bufferAttribute.updateRange.count = attribute.updateRange.count;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t geometry.setAttribute( key, bufferAttribute );\r\n \r\n\t\t }\r\n \r\n\t\t const morphAttributes = json.data.morphAttributes;\r\n \r\n\t\t if ( morphAttributes ) {\r\n \r\n\t\t\t for ( const key in morphAttributes ) {\r\n \r\n\t\t\t\t const attributeArray = morphAttributes[ key ];\r\n \r\n\t\t\t\t const array = [];\r\n \r\n\t\t\t\t for ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t\t const attribute = attributeArray[ i ];\r\n\t\t\t\t\t let bufferAttribute;\r\n \r\n\t\t\t\t\t if ( attribute.isInterleavedBufferAttribute ) {\r\n \r\n\t\t\t\t\t\t const interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\r\n\t\t\t\t\t\t bufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t const typedArray = getTypedArray( attribute.type, attribute.array );\r\n\t\t\t\t\t\t bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\t\t\t array.push( bufferAttribute );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t geometry.morphAttributes[ key ] = array;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const morphTargetsRelative = json.data.morphTargetsRelative;\r\n \r\n\t\t if ( morphTargetsRelative ) {\r\n \r\n\t\t\t geometry.morphTargetsRelative = true;\r\n \r\n\t\t }\r\n \r\n\t\t const groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n \r\n\t\t if ( groups !== undefined ) {\r\n \r\n\t\t\t for ( let i = 0, n = groups.length; i !== n; ++ i ) {\r\n \r\n\t\t\t\t const group = groups[ i ];\r\n \r\n\t\t\t\t geometry.addGroup( group.start, group.count, group.materialIndex );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const boundingSphere = json.data.boundingSphere;\r\n \r\n\t\t if ( boundingSphere !== undefined ) {\r\n \r\n\t\t\t const center = new Vector3();\r\n \r\n\t\t\t if ( boundingSphere.center !== undefined ) {\r\n \r\n\t\t\t\t center.fromArray( boundingSphere.center );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t geometry.boundingSphere = new Sphere( center, boundingSphere.radius );\r\n \r\n\t\t }\r\n \r\n\t\t if ( json.name ) geometry.name = json.name;\r\n\t\t if ( json.userData ) geometry.userData = json.userData;\r\n \r\n\t\t return geometry;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class ObjectLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\t\t this.resourcePath = this.resourcePath || path;\r\n \r\n\t\t const loader = new FileLoader( this.manager );\r\n\t\t loader.setPath( this.path );\r\n\t\t loader.setRequestHeader( this.requestHeader );\r\n\t\t loader.setWithCredentials( this.withCredentials );\r\n\t\t loader.load( url, function ( text ) {\r\n \r\n\t\t\t let json = null;\r\n \r\n\t\t\t try {\r\n \r\n\t\t\t\t json = JSON.parse( text );\r\n \r\n\t\t\t } catch ( error ) {\r\n \r\n\t\t\t\t if ( onError !== undefined ) onError( error );\r\n \r\n\t\t\t\t console.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\r\n \r\n\t\t\t\t return;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const metadata = json.metadata;\r\n \r\n\t\t\t if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n \r\n\t\t\t\t console.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\r\n\t\t\t\t return;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t scope.parse( json, onLoad );\r\n \r\n\t\t }, onProgress, onError );\r\n \r\n\t }\r\n \r\n\t async loadAsync( url, onProgress ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\t\t this.resourcePath = this.resourcePath || path;\r\n \r\n\t\t const loader = new FileLoader( this.manager );\r\n\t\t loader.setPath( this.path );\r\n\t\t loader.setRequestHeader( this.requestHeader );\r\n\t\t loader.setWithCredentials( this.withCredentials );\r\n \r\n\t\t const text = await loader.loadAsync( url, onProgress );\r\n \r\n\t\t const json = JSON.parse( text );\r\n \r\n\t\t const metadata = json.metadata;\r\n \r\n\t\t if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n \r\n\t\t\t throw new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\r\n \r\n\t\t }\r\n \r\n\t\t return await scope.parseAsync( json );\r\n \r\n\t }\r\n \r\n\t parse( json, onLoad ) {\r\n \r\n\t\t const animations = this.parseAnimations( json.animations );\r\n\t\t const shapes = this.parseShapes( json.shapes );\r\n\t\t const geometries = this.parseGeometries( json.geometries, shapes );\r\n \r\n\t\t const images = this.parseImages( json.images, function () {\r\n \r\n\t\t\t if ( onLoad !== undefined ) onLoad( object );\r\n \r\n\t\t } );\r\n \r\n\t\t const textures = this.parseTextures( json.textures, images );\r\n\t\t const materials = this.parseMaterials( json.materials, textures );\r\n \r\n\t\t const object = this.parseObject( json.object, geometries, materials, textures, animations );\r\n\t\t const skeletons = this.parseSkeletons( json.skeletons, object );\r\n \r\n\t\t this.bindSkeletons( object, skeletons );\r\n \r\n\t\t //\r\n \r\n\t\t if ( onLoad !== undefined ) {\r\n \r\n\t\t\t let hasImages = false;\r\n \r\n\t\t\t for ( const uuid in images ) {\r\n \r\n\t\t\t\t if ( images[ uuid ] instanceof HTMLImageElement ) {\r\n \r\n\t\t\t\t\t hasImages = true;\r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( hasImages === false ) onLoad( object );\r\n \r\n\t\t }\r\n \r\n\t\t return object;\r\n \r\n\t }\r\n \r\n\t async parseAsync( json ) {\r\n \r\n\t\t const animations = this.parseAnimations( json.animations );\r\n\t\t const shapes = this.parseShapes( json.shapes );\r\n\t\t const geometries = this.parseGeometries( json.geometries, shapes );\r\n \r\n\t\t const images = await this.parseImagesAsync( json.images );\r\n \r\n\t\t const textures = this.parseTextures( json.textures, images );\r\n\t\t const materials = this.parseMaterials( json.materials, textures );\r\n \r\n\t\t const object = this.parseObject( json.object, geometries, materials, textures, animations );\r\n\t\t const skeletons = this.parseSkeletons( json.skeletons, object );\r\n \r\n\t\t this.bindSkeletons( object, skeletons );\r\n \r\n\t\t return object;\r\n \r\n\t }\r\n \r\n\t parseShapes( json ) {\r\n \r\n\t\t const shapes = {};\r\n \r\n\t\t if ( json !== undefined ) {\r\n \r\n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const shape = new Shape().fromJSON( json[ i ] );\r\n \r\n\t\t\t\t shapes[ shape.uuid ] = shape;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return shapes;\r\n \r\n\t }\r\n \r\n\t parseSkeletons( json, object ) {\r\n \r\n\t\t const skeletons = {};\r\n\t\t const bones = {};\r\n \r\n\t\t // generate bone lookup table\r\n \r\n\t\t object.traverse( function ( child ) {\r\n \r\n\t\t\t if ( child.isBone ) bones[ child.uuid ] = child;\r\n \r\n\t\t } );\r\n \r\n\t\t // create skeletons\r\n \r\n\t\t if ( json !== undefined ) {\r\n \r\n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const skeleton = new Skeleton().fromJSON( json[ i ], bones );\r\n \r\n\t\t\t\t skeletons[ skeleton.uuid ] = skeleton;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return skeletons;\r\n \r\n\t }\r\n \r\n\t parseGeometries( json, shapes ) {\r\n \r\n\t\t const geometries = {};\r\n \r\n\t\t if ( json !== undefined ) {\r\n \r\n\t\t\t const bufferGeometryLoader = new BufferGeometryLoader();\r\n \r\n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t let geometry;\r\n\t\t\t\t const data = json[ i ];\r\n \r\n\t\t\t\t switch ( data.type ) {\r\n \r\n\t\t\t\t\t case 'BufferGeometry':\r\n\t\t\t\t\t case 'InstancedBufferGeometry':\r\n \r\n\t\t\t\t\t\t geometry = bufferGeometryLoader.parse( data );\r\n \r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t case 'Geometry':\r\n \r\n\t\t\t\t\t\t console.error( 'THREE.ObjectLoader: The legacy Geometry type is no longer supported.' );\r\n \r\n\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t default:\r\n \r\n\t\t\t\t\t\t if ( data.type in Geometries ) {\r\n \r\n\t\t\t\t\t\t\t geometry = Geometries[ data.type ].fromJSON( data, shapes );\r\n \r\n\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t console.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t geometry.uuid = data.uuid;\r\n \r\n\t\t\t\t if ( data.name !== undefined ) geometry.name = data.name;\r\n\t\t\t\t if ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\r\n \r\n\t\t\t\t geometries[ data.uuid ] = geometry;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return geometries;\r\n \r\n\t }\r\n \r\n\t parseMaterials( json, textures ) {\r\n \r\n\t\t const cache = {}; // MultiMaterial\r\n\t\t const materials = {};\r\n \r\n\t\t if ( json !== undefined ) {\r\n \r\n\t\t\t const loader = new MaterialLoader();\r\n\t\t\t loader.setTextures( textures );\r\n \r\n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const data = json[ i ];\r\n \r\n\t\t\t\t if ( data.type === 'MultiMaterial' ) {\r\n \r\n\t\t\t\t\t // Deprecated\r\n \r\n\t\t\t\t\t const array = [];\r\n \r\n\t\t\t\t\t for ( let j = 0; j < data.materials.length; j ++ ) {\r\n \r\n\t\t\t\t\t\t const material = data.materials[ j ];\r\n \r\n\t\t\t\t\t\t if ( cache[ material.uuid ] === undefined ) {\r\n \r\n\t\t\t\t\t\t\t cache[ material.uuid ] = loader.parse( material );\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t array.push( cache[ material.uuid ] );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t materials[ data.uuid ] = array;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t if ( cache[ data.uuid ] === undefined ) {\r\n \r\n\t\t\t\t\t\t cache[ data.uuid ] = loader.parse( data );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t materials[ data.uuid ] = cache[ data.uuid ];\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return materials;\r\n \r\n\t }\r\n \r\n\t parseAnimations( json ) {\r\n \r\n\t\t const animations = {};\r\n \r\n\t\t if ( json !== undefined ) {\r\n \r\n\t\t\t for ( let i = 0; i < json.length; i ++ ) {\r\n \r\n\t\t\t\t const data = json[ i ];\r\n \r\n\t\t\t\t const clip = AnimationClip.parse( data );\r\n \r\n\t\t\t\t animations[ clip.uuid ] = clip;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return animations;\r\n \r\n\t }\r\n \r\n\t parseImages( json, onLoad ) {\r\n \r\n\t\t const scope = this;\r\n\t\t const images = {};\r\n \r\n\t\t let loader;\r\n \r\n\t\t function loadImage( url ) {\r\n \r\n\t\t\t scope.manager.itemStart( url );\r\n \r\n\t\t\t return loader.load( url, function () {\r\n \r\n\t\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t\t }, undefined, function () {\r\n \r\n\t\t\t\t scope.manager.itemError( url );\r\n\t\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t\t } );\r\n \r\n\t\t }\r\n \r\n\t\t function deserializeImage( image ) {\r\n \r\n\t\t\t if ( typeof image === 'string' ) {\r\n \r\n\t\t\t\t const url = image;\r\n \r\n\t\t\t\t const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\r\n \r\n\t\t\t\t return loadImage( path );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t if ( image.data ) {\r\n \r\n\t\t\t\t\t return {\r\n\t\t\t\t\t\t data: getTypedArray( image.type, image.data ),\r\n\t\t\t\t\t\t width: image.width,\r\n\t\t\t\t\t\t height: image.height\r\n\t\t\t\t\t };\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t return null;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( json !== undefined && json.length > 0 ) {\r\n \r\n\t\t\t const manager = new LoadingManager( onLoad );\r\n \r\n\t\t\t loader = new ImageLoader( manager );\r\n\t\t\t loader.setCrossOrigin( this.crossOrigin );\r\n \r\n\t\t\t for ( let i = 0, il = json.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t const image = json[ i ];\r\n\t\t\t\t const url = image.url;\r\n \r\n\t\t\t\t if ( Array.isArray( url ) ) {\r\n \r\n\t\t\t\t\t // load array of images e.g CubeTexture\r\n \r\n\t\t\t\t\t const imageArray = [];\r\n \r\n\t\t\t\t\t for ( let j = 0, jl = url.length; j < jl; j ++ ) {\r\n \r\n\t\t\t\t\t\t const currentUrl = url[ j ];\r\n \r\n\t\t\t\t\t\t const deserializedImage = deserializeImage( currentUrl );\r\n \r\n\t\t\t\t\t\t if ( deserializedImage !== null ) {\r\n \r\n\t\t\t\t\t\t\t if ( deserializedImage instanceof HTMLImageElement ) {\r\n \r\n\t\t\t\t\t\t\t\t imageArray.push( deserializedImage );\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t // special case: handle array of data textures for cube textures\r\n \r\n\t\t\t\t\t\t\t\t imageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t images[ image.uuid ] = new Source( imageArray );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // load single image\r\n \r\n\t\t\t\t\t const deserializedImage = deserializeImage( image.url );\r\n\t\t\t\t\t images[ image.uuid ] = new Source( deserializedImage );\r\n \r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return images;\r\n \r\n\t }\r\n \r\n\t async parseImagesAsync( json ) {\r\n \r\n\t\t const scope = this;\r\n\t\t const images = {};\r\n \r\n\t\t let loader;\r\n \r\n\t\t async function deserializeImage( image ) {\r\n \r\n\t\t\t if ( typeof image === 'string' ) {\r\n \r\n\t\t\t\t const url = image;\r\n \r\n\t\t\t\t const path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\r\n \r\n\t\t\t\t return await loader.loadAsync( path );\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t if ( image.data ) {\r\n \r\n\t\t\t\t\t return {\r\n\t\t\t\t\t\t data: getTypedArray( image.type, image.data ),\r\n\t\t\t\t\t\t width: image.width,\r\n\t\t\t\t\t\t height: image.height\r\n\t\t\t\t\t };\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t return null;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( json !== undefined && json.length > 0 ) {\r\n \r\n\t\t\t loader = new ImageLoader( this.manager );\r\n\t\t\t loader.setCrossOrigin( this.crossOrigin );\r\n \r\n\t\t\t for ( let i = 0, il = json.length; i < il; i ++ ) {\r\n \r\n\t\t\t\t const image = json[ i ];\r\n\t\t\t\t const url = image.url;\r\n \r\n\t\t\t\t if ( Array.isArray( url ) ) {\r\n \r\n\t\t\t\t\t // load array of images e.g CubeTexture\r\n \r\n\t\t\t\t\t const imageArray = [];\r\n \r\n\t\t\t\t\t for ( let j = 0, jl = url.length; j < jl; j ++ ) {\r\n \r\n\t\t\t\t\t\t const currentUrl = url[ j ];\r\n \r\n\t\t\t\t\t\t const deserializedImage = await deserializeImage( currentUrl );\r\n \r\n\t\t\t\t\t\t if ( deserializedImage !== null ) {\r\n \r\n\t\t\t\t\t\t\t if ( deserializedImage instanceof HTMLImageElement ) {\r\n \r\n\t\t\t\t\t\t\t\t imageArray.push( deserializedImage );\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t // special case: handle array of data textures for cube textures\r\n \r\n\t\t\t\t\t\t\t\t imageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t images[ image.uuid ] = new Source( imageArray );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // load single image\r\n \r\n\t\t\t\t\t const deserializedImage = await deserializeImage( image.url );\r\n\t\t\t\t\t images[ image.uuid ] = new Source( deserializedImage );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return images;\r\n \r\n\t }\r\n \r\n\t parseTextures( json, images ) {\r\n \r\n\t\t function parseConstant( value, type ) {\r\n \r\n\t\t\t if ( typeof value === 'number' ) return value;\r\n \r\n\t\t\t console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n \r\n\t\t\t return type[ value ];\r\n \r\n\t\t }\r\n \r\n\t\t const textures = {};\r\n \r\n\t\t if ( json !== undefined ) {\r\n \r\n\t\t\t for ( let i = 0, l = json.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const data = json[ i ];\r\n \r\n\t\t\t\t if ( data.image === undefined ) {\r\n \r\n\t\t\t\t\t console.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( images[ data.image ] === undefined ) {\r\n \r\n\t\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t const source = images[ data.image ];\r\n\t\t\t\t const image = source.data;\r\n \r\n\t\t\t\t let texture;\r\n \r\n\t\t\t\t if ( Array.isArray( image ) ) {\r\n \r\n\t\t\t\t\t texture = new CubeTexture();\r\n \r\n\t\t\t\t\t if ( image.length === 6 ) texture.needsUpdate = true;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t if ( image && image.data ) {\r\n \r\n\t\t\t\t\t\t texture = new DataTexture();\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t texture = new Texture();\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( image ) texture.needsUpdate = true; // textures can have undefined image data\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t texture.source = source;\r\n \r\n\t\t\t\t texture.uuid = data.uuid;\r\n \r\n\t\t\t\t if ( data.name !== undefined ) texture.name = data.name;\r\n \r\n\t\t\t\t if ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\r\n \r\n\t\t\t\t if ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\r\n\t\t\t\t if ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\r\n\t\t\t\t if ( data.center !== undefined ) texture.center.fromArray( data.center );\r\n\t\t\t\t if ( data.rotation !== undefined ) texture.rotation = data.rotation;\r\n \r\n\t\t\t\t if ( data.wrap !== undefined ) {\r\n \r\n\t\t\t\t\t texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\r\n\t\t\t\t\t texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( data.format !== undefined ) texture.format = data.format;\r\n\t\t\t\t if ( data.type !== undefined ) texture.type = data.type;\r\n\t\t\t\t if ( data.encoding !== undefined ) texture.encoding = data.encoding;\r\n \r\n\t\t\t\t if ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\r\n\t\t\t\t if ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\r\n\t\t\t\t if ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n \r\n\t\t\t\t if ( data.flipY !== undefined ) texture.flipY = data.flipY;\r\n \r\n\t\t\t\t if ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\r\n\t\t\t\t if ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\r\n \r\n\t\t\t\t if ( data.userData !== undefined ) texture.userData = data.userData;\r\n \r\n\t\t\t\t textures[ data.uuid ] = texture;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return textures;\r\n \r\n\t }\r\n \r\n\t parseObject( data, geometries, materials, textures, animations ) {\r\n \r\n\t\t let object;\r\n \r\n\t\t function getGeometry( name ) {\r\n \r\n\t\t\t if ( geometries[ name ] === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return geometries[ name ];\r\n \r\n\t\t }\r\n \r\n\t\t function getMaterial( name ) {\r\n \r\n\t\t\t if ( name === undefined ) return undefined;\r\n \r\n\t\t\t if ( Array.isArray( name ) ) {\r\n \r\n\t\t\t\t const array = [];\r\n \r\n\t\t\t\t for ( let i = 0, l = name.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t\t const uuid = name[ i ];\r\n \r\n\t\t\t\t\t if ( materials[ uuid ] === undefined ) {\r\n \r\n\t\t\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined material', uuid );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t array.push( materials[ uuid ] );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t return array;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( materials[ name ] === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return materials[ name ];\r\n \r\n\t\t }\r\n \r\n\t\t function getTexture( uuid ) {\r\n \r\n\t\t\t if ( textures[ uuid ] === undefined ) {\r\n \r\n\t\t\t\t console.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return textures[ uuid ];\r\n \r\n\t\t }\r\n \r\n\t\t let geometry, material;\r\n \r\n\t\t switch ( data.type ) {\r\n \r\n\t\t\t case 'Scene':\r\n \r\n\t\t\t\t object = new Scene();\r\n \r\n\t\t\t\t if ( data.background !== undefined ) {\r\n \r\n\t\t\t\t\t if ( Number.isInteger( data.background ) ) {\r\n \r\n\t\t\t\t\t\t object.background = new Color( data.background );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t object.background = getTexture( data.background );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( data.environment !== undefined ) {\r\n \r\n\t\t\t\t\t object.environment = getTexture( data.environment );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( data.fog !== undefined ) {\r\n \r\n\t\t\t\t\t if ( data.fog.type === 'Fog' ) {\r\n \r\n\t\t\t\t\t\t object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\r\n \r\n\t\t\t\t\t } else if ( data.fog.type === 'FogExp2' ) {\r\n \r\n\t\t\t\t\t\t object.fog = new FogExp2( data.fog.color, data.fog.density );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'PerspectiveCamera':\r\n \r\n\t\t\t\t object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n \r\n\t\t\t\t if ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\t if ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t if ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\t if ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\t if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'OrthographicCamera':\r\n \r\n\t\t\t\t object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n \r\n\t\t\t\t if ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t if ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'AmbientLight':\r\n \r\n\t\t\t\t object = new AmbientLight( data.color, data.intensity );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'DirectionalLight':\r\n \r\n\t\t\t\t object = new DirectionalLight( data.color, data.intensity );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'PointLight':\r\n \r\n\t\t\t\t object = new PointLight( data.color, data.intensity, data.distance, data.decay );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'RectAreaLight':\r\n \r\n\t\t\t\t object = new RectAreaLight( data.color, data.intensity, data.width, data.height );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'SpotLight':\r\n \r\n\t\t\t\t object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'HemisphereLight':\r\n \r\n\t\t\t\t object = new HemisphereLight( data.color, data.groundColor, data.intensity );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'LightProbe':\r\n \r\n\t\t\t\t object = new LightProbe().fromJSON( data );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'SkinnedMesh':\r\n \r\n\t\t\t\t geometry = getGeometry( data.geometry );\r\n\t\t\t\t  material = getMaterial( data.material );\r\n \r\n\t\t\t\t object = new SkinnedMesh( geometry, material );\r\n \r\n\t\t\t\t if ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\r\n\t\t\t\t if ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\r\n\t\t\t\t if ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'Mesh':\r\n \r\n\t\t\t\t geometry = getGeometry( data.geometry );\r\n\t\t\t\t material = getMaterial( data.material );\r\n \r\n\t\t\t\t object = new Mesh( geometry, material );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'InstancedMesh':\r\n \r\n\t\t\t\t geometry = getGeometry( data.geometry );\r\n\t\t\t\t material = getMaterial( data.material );\r\n\t\t\t\t const count = data.count;\r\n\t\t\t\t const instanceMatrix = data.instanceMatrix;\r\n\t\t\t\t const instanceColor = data.instanceColor;\r\n \r\n\t\t\t\t object = new InstancedMesh( geometry, material, count );\r\n\t\t\t\t object.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\r\n\t\t\t\t if ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'LOD':\r\n \r\n\t\t\t\t object = new LOD();\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'Line':\r\n \r\n\t\t\t\t object = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'LineLoop':\r\n \r\n\t\t\t\t object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'LineSegments':\r\n \r\n\t\t\t\t object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'PointCloud':\r\n\t\t\t case 'Points':\r\n \r\n\t\t\t\t object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'Sprite':\r\n \r\n\t\t\t\t object = new Sprite( getMaterial( data.material ) );\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'Group':\r\n \r\n\t\t\t\t object = new Group();\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'Bone':\r\n \r\n\t\t\t\t object = new Bone();\r\n \r\n\t\t\t\t break;\r\n \r\n\t\t\t default:\r\n \r\n\t\t\t\t object = new Object3D();\r\n \r\n\t\t }\r\n \r\n\t\t object.uuid = data.uuid;\r\n \r\n\t\t if ( data.name !== undefined ) object.name = data.name;\r\n \r\n\t\t if ( data.matrix !== undefined ) {\r\n \r\n\t\t\t object.matrix.fromArray( data.matrix );\r\n \r\n\t\t\t if ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\t if ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t if ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t if ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t if ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\r\n\t\t\t if ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n \r\n\t\t }\r\n \r\n\t\t if ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t if ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n \r\n\t\t if ( data.shadow ) {\r\n \r\n\t\t\t if ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\r\n\t\t\t if ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\r\n\t\t\t if ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\r\n\t\t\t if ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\r\n\t\t\t if ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\r\n \r\n\t\t }\r\n \r\n\t\t if ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t if ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\r\n\t\t if ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\r\n\t\t if ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\t if ( data.layers !== undefined ) object.layers.mask = data.layers;\r\n \r\n\t\t if ( data.children !== undefined ) {\r\n \r\n\t\t\t const children = data.children;\r\n \r\n\t\t\t for ( let i = 0; i < children.length; i ++ ) {\r\n \r\n\t\t\t\t object.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( data.animations !== undefined ) {\r\n \r\n\t\t\t const objectAnimations = data.animations;\r\n \r\n\t\t\t for ( let i = 0; i < objectAnimations.length; i ++ ) {\r\n \r\n\t\t\t\t const uuid = objectAnimations[ i ];\r\n \r\n\t\t\t\t object.animations.push( animations[ uuid ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( data.type === 'LOD' ) {\r\n \r\n\t\t\t if ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\r\n \r\n\t\t\t const levels = data.levels;\r\n \r\n\t\t\t for ( let l = 0; l < levels.length; l ++ ) {\r\n \r\n\t\t\t\t const level = levels[ l ];\r\n\t\t\t\t const child = object.getObjectByProperty( 'uuid', level.object );\r\n \r\n\t\t\t\t if ( child !== undefined ) {\r\n \r\n\t\t\t\t\t object.addLevel( child, level.distance );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return object;\r\n \r\n\t }\r\n \r\n\t bindSkeletons( object, skeletons ) {\r\n \r\n\t\t if ( Object.keys( skeletons ).length === 0 ) return;\r\n \r\n\t\t object.traverse( function ( child ) {\r\n \r\n\t\t\t if ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\r\n \r\n\t\t\t\t const skeleton = skeletons[ child.skeleton ];\r\n \r\n\t\t\t\t if ( skeleton === undefined ) {\r\n \r\n\t\t\t\t\t console.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t child.bind( skeleton, child.bindMatrix );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } );\r\n \r\n\t }\r\n \r\n\t /* DEPRECATED */\r\n \r\n\t setTexturePath( value ) {\r\n \r\n\t\t console.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\r\n\t\t return this.setResourcePath( value );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const TEXTURE_MAPPING = {\r\n\t UVMapping: UVMapping,\r\n\t CubeReflectionMapping: CubeReflectionMapping,\r\n\t CubeRefractionMapping: CubeRefractionMapping,\r\n\t EquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\t EquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\t CubeUVReflectionMapping: CubeUVReflectionMapping,\r\n\t CubeUVRefractionMapping: CubeUVRefractionMapping\r\n };\r\n \r\n const TEXTURE_WRAPPING = {\r\n\t RepeatWrapping: RepeatWrapping,\r\n\t ClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\t MirroredRepeatWrapping: MirroredRepeatWrapping\r\n };\r\n \r\n const TEXTURE_FILTER = {\r\n\t NearestFilter: NearestFilter,\r\n\t NearestMipmapNearestFilter: NearestMipmapNearestFilter,\r\n\t NearestMipmapLinearFilter: NearestMipmapLinearFilter,\r\n\t LinearFilter: LinearFilter,\r\n\t LinearMipmapNearestFilter: LinearMipmapNearestFilter,\r\n\t LinearMipmapLinearFilter: LinearMipmapLinearFilter\r\n };\r\n \r\n class ImageBitmapLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t\t if ( typeof createImageBitmap === 'undefined' ) {\r\n \r\n\t\t\t console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\r\n \r\n\t\t }\r\n \r\n\t\t if ( typeof fetch === 'undefined' ) {\r\n \r\n\t\t\t console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\r\n \r\n\t\t }\r\n \r\n\t\t this.options = { premultiplyAlpha: 'none' };\r\n \r\n\t }\r\n \r\n\t setOptions( options ) {\r\n \r\n\t\t this.options = options;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t if ( url === undefined ) url = '';\r\n \r\n\t\t if ( this.path !== undefined ) url = this.path + url;\r\n \r\n\t\t url = this.manager.resolveURL( url );\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const cached = Cache.get( url );\r\n \r\n\t\t if ( cached !== undefined ) {\r\n \r\n\t\t\t scope.manager.itemStart( url );\r\n \r\n\t\t\t setTimeout( function () {\r\n \r\n\t\t\t\t if ( onLoad ) onLoad( cached );\r\n \r\n\t\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t\t }, 0 );\r\n \r\n\t\t\t return cached;\r\n \r\n\t\t }\r\n \r\n\t\t const fetchOptions = {};\r\n\t\t fetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\r\n\t\t fetchOptions.headers = this.requestHeader;\r\n \r\n\t\t fetch( url, fetchOptions ).then( function ( res ) {\r\n \r\n\t\t\t return res.blob();\r\n \r\n\t\t } ).then( function ( blob ) {\r\n \r\n\t\t\t return createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\r\n \r\n\t\t } ).then( function ( imageBitmap ) {\r\n \r\n\t\t\t Cache.add( url, imageBitmap );\r\n \r\n\t\t\t if ( onLoad ) onLoad( imageBitmap );\r\n \r\n\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t } ).catch( function ( e ) {\r\n \r\n\t\t\t if ( onError ) onError( e );\r\n \r\n\t\t\t scope.manager.itemError( url );\r\n\t\t\t scope.manager.itemEnd( url );\r\n \r\n\t\t } );\r\n \r\n\t\t scope.manager.itemStart( url );\r\n \r\n\t }\r\n \r\n }\r\n \r\n ImageBitmapLoader.prototype.isImageBitmapLoader = true;\r\n \r\n let _context;\r\n \r\n const AudioContext = {\r\n \r\n\t getContext: function () {\r\n \r\n\t\t if ( _context === undefined ) {\r\n \r\n\t\t\t _context = new ( window.AudioContext || window.webkitAudioContext )();\r\n \r\n\t\t }\r\n \r\n\t\t return _context;\r\n \r\n\t },\r\n \r\n\t setContext: function ( value ) {\r\n \r\n\t\t _context = value;\r\n \r\n\t }\r\n \r\n };\r\n \r\n class AudioLoader extends Loader {\r\n \r\n\t constructor( manager ) {\r\n \r\n\t\t super( manager );\r\n \r\n\t }\r\n \r\n\t load( url, onLoad, onProgress, onError ) {\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t const loader = new FileLoader( this.manager );\r\n\t\t loader.setResponseType( 'arraybuffer' );\r\n\t\t loader.setPath( this.path );\r\n\t\t loader.setRequestHeader( this.requestHeader );\r\n\t\t loader.setWithCredentials( this.withCredentials );\r\n\t\t loader.load( url, function ( buffer ) {\r\n \r\n\t\t\t try {\r\n \r\n\t\t\t\t // Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t // detaches the buffer when complete, preventing reuse.\r\n\t\t\t\t const bufferCopy = buffer.slice( 0 );\r\n \r\n\t\t\t\t const context = AudioContext.getContext();\r\n\t\t\t\t context.decodeAudioData( bufferCopy, function ( audioBuffer ) {\r\n \r\n\t\t\t\t\t onLoad( audioBuffer );\r\n \r\n\t\t\t\t } );\r\n \r\n\t\t\t } catch ( e ) {\r\n \r\n\t\t\t\t if ( onError ) {\r\n \r\n\t\t\t\t\t onError( e );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( e );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t scope.manager.itemError( url );\r\n \r\n\t\t\t }\r\n \r\n\t\t }, onProgress, onError );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class HemisphereLightProbe extends LightProbe {\r\n \r\n\t constructor( skyColor, groundColor, intensity = 1 ) {\r\n \r\n\t\t super( undefined, intensity );\r\n \r\n\t\t const color1 = new Color().set( skyColor );\r\n\t\t const color2 = new Color().set( groundColor );\r\n \r\n\t\t const sky = new Vector3( color1.r, color1.g, color1.b );\r\n\t\t const ground = new Vector3( color2.r, color2.g, color2.b );\r\n \r\n\t\t // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\r\n\t\t const c0 = Math.sqrt( Math.PI );\r\n\t\t const c1 = c0 * Math.sqrt( 0.75 );\r\n \r\n\t\t this.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\r\n\t\t this.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\r\n \r\n\t }\r\n \r\n }\r\n \r\n HemisphereLightProbe.prototype.isHemisphereLightProbe = true;\r\n \r\n class AmbientLightProbe extends LightProbe {\r\n \r\n\t constructor( color, intensity = 1 ) {\r\n \r\n\t\t super( undefined, intensity );\r\n \r\n\t\t const color1 = new Color().set( color );\r\n \r\n\t\t // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\r\n\t\t this.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\r\n \r\n\t }\r\n \r\n }\r\n \r\n AmbientLightProbe.prototype.isAmbientLightProbe = true;\r\n \r\n const _eyeRight = /*@__PURE__*/ new Matrix4();\r\n const _eyeLeft = /*@__PURE__*/ new Matrix4();\r\n const _projectionMatrix = /*@__PURE__*/ new Matrix4();\r\n \r\n class StereoCamera {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.type = 'StereoCamera';\r\n \r\n\t\t this.aspect = 1;\r\n \r\n\t\t this.eyeSep = 0.064;\r\n \r\n\t\t this.cameraL = new PerspectiveCamera();\r\n\t\t this.cameraL.layers.enable( 1 );\r\n\t\t this.cameraL.matrixAutoUpdate = false;\r\n \r\n\t\t this.cameraR = new PerspectiveCamera();\r\n\t\t this.cameraR.layers.enable( 2 );\r\n\t\t this.cameraR.matrixAutoUpdate = false;\r\n \r\n\t\t this._cache = {\r\n\t\t\t focus: null,\r\n\t\t\t fov: null,\r\n\t\t\t aspect: null,\r\n\t\t\t near: null,\r\n\t\t\t far: null,\r\n\t\t\t zoom: null,\r\n\t\t\t eyeSep: null\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t update( camera ) {\r\n \r\n\t\t const cache = this._cache;\r\n \r\n\t\t const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\r\n\t\t\t cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\r\n\t\t\t cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\r\n \r\n\t\t if ( needsUpdate ) {\r\n \r\n\t\t\t cache.focus = camera.focus;\r\n\t\t\t cache.fov = camera.fov;\r\n\t\t\t cache.aspect = camera.aspect * this.aspect;\r\n\t\t\t cache.near = camera.near;\r\n\t\t\t cache.far = camera.far;\r\n\t\t\t cache.zoom = camera.zoom;\r\n\t\t\t cache.eyeSep = this.eyeSep;\r\n \r\n\t\t\t // Off-axis stereoscopic effect based on\r\n\t\t\t // http://paulbourke.net/stereographics/stereorender/\r\n \r\n\t\t\t _projectionMatrix.copy( camera.projectionMatrix );\r\n\t\t\t const eyeSepHalf = cache.eyeSep / 2;\r\n\t\t\t const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\r\n\t\t\t const ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\r\n\t\t\t let xmin, xmax;\r\n \r\n\t\t\t // translate xOffset\r\n \r\n\t\t\t _eyeLeft.elements[ 12 ] = - eyeSepHalf;\r\n\t\t\t _eyeRight.elements[ 12 ] = eyeSepHalf;\r\n \r\n\t\t\t // for left eye\r\n \r\n\t\t\t xmin = - ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\t xmax = ymax * cache.aspect + eyeSepOnProjection;\r\n \r\n\t\t\t _projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t _projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n \r\n\t\t\t this.cameraL.projectionMatrix.copy( _projectionMatrix );\r\n \r\n\t\t\t // for right eye\r\n \r\n\t\t\t xmin = - ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\t xmax = ymax * cache.aspect - eyeSepOnProjection;\r\n \r\n\t\t\t _projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t _projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n \r\n\t\t\t this.cameraR.projectionMatrix.copy( _projectionMatrix );\r\n \r\n\t\t }\r\n \r\n\t\t this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\r\n\t\t this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Clock {\r\n \r\n\t constructor( autoStart = true ) {\r\n \r\n\t\t this.autoStart = autoStart;\r\n \r\n\t\t this.startTime = 0;\r\n\t\t this.oldTime = 0;\r\n\t\t this.elapsedTime = 0;\r\n \r\n\t\t this.running = false;\r\n \r\n\t }\r\n \r\n\t start() {\r\n \r\n\t\t this.startTime = now();\r\n \r\n\t\t this.oldTime = this.startTime;\r\n\t\t this.elapsedTime = 0;\r\n\t\t this.running = true;\r\n \r\n\t }\r\n \r\n\t stop() {\r\n \r\n\t\t this.getElapsedTime();\r\n\t\t this.running = false;\r\n\t\t this.autoStart = false;\r\n \r\n\t }\r\n \r\n\t getElapsedTime() {\r\n \r\n\t\t this.getDelta();\r\n\t\t return this.elapsedTime;\r\n \r\n\t }\r\n \r\n\t getDelta() {\r\n \r\n\t\t let diff = 0;\r\n \r\n\t\t if ( this.autoStart && ! this.running ) {\r\n \r\n\t\t\t this.start();\r\n\t\t\t return 0;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.running ) {\r\n \r\n\t\t\t const newTime = now();\r\n \r\n\t\t\t diff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\t this.oldTime = newTime;\r\n \r\n\t\t\t this.elapsedTime += diff;\r\n \r\n\t\t }\r\n \r\n\t\t return diff;\r\n \r\n\t }\r\n \r\n }\r\n \r\n function now() {\r\n \r\n\t return ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\r\n \r\n }\r\n \r\n const _position$1 = /*@__PURE__*/ new Vector3();\r\n const _quaternion$1 = /*@__PURE__*/ new Quaternion();\r\n const _scale$1 = /*@__PURE__*/ new Vector3();\r\n const _orientation$1 = /*@__PURE__*/ new Vector3();\r\n \r\n class AudioListener extends Object3D {\r\n \r\n\t constructor() {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'AudioListener';\r\n \r\n\t\t this.context = AudioContext.getContext();\r\n \r\n\t\t this.gain = this.context.createGain();\r\n\t\t this.gain.connect( this.context.destination );\r\n \r\n\t\t this.filter = null;\r\n \r\n\t\t this.timeDelta = 0;\r\n \r\n\t\t // private\r\n \r\n\t\t this._clock = new Clock();\r\n \r\n\t }\r\n \r\n\t getInput() {\r\n \r\n\t\t return this.gain;\r\n \r\n\t }\r\n \r\n\t removeFilter() {\r\n \r\n\t\t if ( this.filter !== null ) {\r\n \r\n\t\t\t this.gain.disconnect( this.filter );\r\n\t\t\t this.filter.disconnect( this.context.destination );\r\n\t\t\t this.gain.connect( this.context.destination );\r\n\t\t\t this.filter = null;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getFilter() {\r\n \r\n\t\t return this.filter;\r\n \r\n\t }\r\n \r\n\t setFilter( value ) {\r\n \r\n\t\t if ( this.filter !== null ) {\r\n \r\n\t\t\t this.gain.disconnect( this.filter );\r\n\t\t\t this.filter.disconnect( this.context.destination );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.gain.disconnect( this.context.destination );\r\n \r\n\t\t }\r\n \r\n\t\t this.filter = value;\r\n\t\t this.gain.connect( this.filter );\r\n\t\t this.filter.connect( this.context.destination );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getMasterVolume() {\r\n \r\n\t\t return this.gain.gain.value;\r\n \r\n\t }\r\n \r\n\t setMasterVolume( value ) {\r\n \r\n\t\t this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t super.updateMatrixWorld( force );\r\n \r\n\t\t const listener = this.context.listener;\r\n\t\t const up = this.up;\r\n \r\n\t\t this.timeDelta = this._clock.getDelta();\r\n \r\n\t\t this.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\r\n \r\n\t\t _orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\r\n \r\n\t\t if ( listener.positionX ) {\r\n \r\n\t\t\t // code path for Chrome (see #14393)\r\n \r\n\t\t\t const endTime = this.context.currentTime + this.timeDelta;\r\n \r\n\t\t\t listener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\r\n\t\t\t listener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\r\n\t\t\t listener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\r\n\t\t\t listener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\r\n\t\t\t listener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\r\n\t\t\t listener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\r\n\t\t\t listener.upX.linearRampToValueAtTime( up.x, endTime );\r\n\t\t\t listener.upY.linearRampToValueAtTime( up.y, endTime );\r\n\t\t\t listener.upZ.linearRampToValueAtTime( up.z, endTime );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t listener.setPosition( _position$1.x, _position$1.y, _position$1.z );\r\n\t\t\t listener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Audio extends Object3D {\r\n \r\n\t constructor( listener ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'Audio';\r\n \r\n\t\t this.listener = listener;\r\n\t\t this.context = listener.context;\r\n \r\n\t\t this.gain = this.context.createGain();\r\n\t\t this.gain.connect( listener.getInput() );\r\n \r\n\t\t this.autoplay = false;\r\n \r\n\t\t this.buffer = null;\r\n\t\t this.detune = 0;\r\n\t\t this.loop = false;\r\n\t\t this.loopStart = 0;\r\n\t\t this.loopEnd = 0;\r\n\t\t this.offset = 0;\r\n\t\t this.duration = undefined;\r\n\t\t this.playbackRate = 1;\r\n\t\t this.isPlaying = false;\r\n\t\t this.hasPlaybackControl = true;\r\n\t\t this.source = null;\r\n\t\t this.sourceType = 'empty';\r\n \r\n\t\t this._startedAt = 0;\r\n\t\t this._progress = 0;\r\n\t\t this._connected = false;\r\n \r\n\t\t this.filters = [];\r\n \r\n\t }\r\n \r\n\t getOutput() {\r\n \r\n\t\t return this.gain;\r\n \r\n\t }\r\n \r\n\t setNodeSource( audioNode ) {\r\n \r\n\t\t this.hasPlaybackControl = false;\r\n\t\t this.sourceType = 'audioNode';\r\n\t\t this.source = audioNode;\r\n\t\t this.connect();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setMediaElementSource( mediaElement ) {\r\n \r\n\t\t this.hasPlaybackControl = false;\r\n\t\t this.sourceType = 'mediaNode';\r\n\t\t this.source = this.context.createMediaElementSource( mediaElement );\r\n\t\t this.connect();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setMediaStreamSource( mediaStream ) {\r\n \r\n\t\t this.hasPlaybackControl = false;\r\n\t\t this.sourceType = 'mediaStreamNode';\r\n\t\t this.source = this.context.createMediaStreamSource( mediaStream );\r\n\t\t this.connect();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setBuffer( audioBuffer ) {\r\n \r\n\t\t this.buffer = audioBuffer;\r\n\t\t this.sourceType = 'buffer';\r\n \r\n\t\t if ( this.autoplay ) this.play();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t play( delay = 0 ) {\r\n \r\n\t\t if ( this.isPlaying === true ) {\r\n \r\n\t\t\t console.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.hasPlaybackControl === false ) {\r\n \r\n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t this._startedAt = this.context.currentTime + delay;\r\n \r\n\t\t const source = this.context.createBufferSource();\r\n\t\t source.buffer = this.buffer;\r\n\t\t source.loop = this.loop;\r\n\t\t source.loopStart = this.loopStart;\r\n\t\t source.loopEnd = this.loopEnd;\r\n\t\t source.onended = this.onEnded.bind( this );\r\n\t\t source.start( this._startedAt, this._progress + this.offset, this.duration );\r\n \r\n\t\t this.isPlaying = true;\r\n \r\n\t\t this.source = source;\r\n \r\n\t\t this.setDetune( this.detune );\r\n\t\t this.setPlaybackRate( this.playbackRate );\r\n \r\n\t\t return this.connect();\r\n \r\n\t }\r\n \r\n\t pause() {\r\n \r\n\t\t if ( this.hasPlaybackControl === false ) {\r\n \r\n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.isPlaying === true ) {\r\n \r\n\t\t\t // update current progress\r\n \r\n\t\t\t this._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\r\n \r\n\t\t\t if ( this.loop === true ) {\r\n \r\n\t\t\t\t // ensure _progress does not exceed duration with looped audios\r\n \r\n\t\t\t\t this._progress = this._progress % ( this.duration || this.buffer.duration );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.source.stop();\r\n\t\t\t this.source.onended = null;\r\n \r\n\t\t\t this.isPlaying = false;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t stop() {\r\n \r\n\t\t if ( this.hasPlaybackControl === false ) {\r\n \r\n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t this._progress = 0;\r\n \r\n\t\t this.source.stop();\r\n\t\t this.source.onended = null;\r\n\t\t this.isPlaying = false;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t connect() {\r\n \r\n\t\t if ( this.filters.length > 0 ) {\r\n \r\n\t\t\t this.source.connect( this.filters[ 0 ] );\r\n \r\n\t\t\t for ( let i = 1, l = this.filters.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t this.filters[ i - 1 ].connect( this.filters[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.source.connect( this.getOutput() );\r\n \r\n\t\t }\r\n \r\n\t\t this._connected = true;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t disconnect() {\r\n \r\n\t\t if ( this.filters.length > 0 ) {\r\n \r\n\t\t\t this.source.disconnect( this.filters[ 0 ] );\r\n \r\n\t\t\t for ( let i = 1, l = this.filters.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t this.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.source.disconnect( this.getOutput() );\r\n \r\n\t\t }\r\n \r\n\t\t this._connected = false;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getFilters() {\r\n \r\n\t\t return this.filters;\r\n \r\n\t }\r\n \r\n\t setFilters( value ) {\r\n \r\n\t\t if ( ! value ) value = [];\r\n \r\n\t\t if ( this._connected === true ) {\r\n \r\n\t\t\t this.disconnect();\r\n\t\t\t this.filters = value.slice();\r\n\t\t\t this.connect();\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.filters = value.slice();\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setDetune( value ) {\r\n \r\n\t\t this.detune = value;\r\n \r\n\t\t if ( this.source.detune === undefined ) return; // only set detune when available\r\n \r\n\t\t if ( this.isPlaying === true ) {\r\n \r\n\t\t\t this.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getDetune() {\r\n \r\n\t\t return this.detune;\r\n \r\n\t }\r\n \r\n\t getFilter() {\r\n \r\n\t\t return this.getFilters()[ 0 ];\r\n \r\n\t }\r\n \r\n\t setFilter( filter ) {\r\n \r\n\t\t return this.setFilters( filter ? [ filter ] : [] );\r\n \r\n\t }\r\n \r\n\t setPlaybackRate( value ) {\r\n \r\n\t\t if ( this.hasPlaybackControl === false ) {\r\n \r\n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t this.playbackRate = value;\r\n \r\n\t\t if ( this.isPlaying === true ) {\r\n \r\n\t\t\t this.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getPlaybackRate() {\r\n \r\n\t\t return this.playbackRate;\r\n \r\n\t }\r\n \r\n\t onEnded() {\r\n \r\n\t\t this.isPlaying = false;\r\n \r\n\t }\r\n \r\n\t getLoop() {\r\n \r\n\t\t if ( this.hasPlaybackControl === false ) {\r\n \r\n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t return false;\r\n \r\n\t\t }\r\n \r\n\t\t return this.loop;\r\n \r\n\t }\r\n \r\n\t setLoop( value ) {\r\n \r\n\t\t if ( this.hasPlaybackControl === false ) {\r\n \r\n\t\t\t console.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t this.loop = value;\r\n \r\n\t\t if ( this.isPlaying === true ) {\r\n \r\n\t\t\t this.source.loop = this.loop;\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setLoopStart( value ) {\r\n \r\n\t\t this.loopStart = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setLoopEnd( value ) {\r\n \r\n\t\t this.loopEnd = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getVolume() {\r\n \r\n\t\t return this.gain.gain.value;\r\n \r\n\t }\r\n \r\n\t setVolume( value ) {\r\n \r\n\t\t this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _position = /*@__PURE__*/ new Vector3();\r\n const _quaternion = /*@__PURE__*/ new Quaternion();\r\n const _scale = /*@__PURE__*/ new Vector3();\r\n const _orientation = /*@__PURE__*/ new Vector3();\r\n \r\n class PositionalAudio extends Audio {\r\n \r\n\t constructor( listener ) {\r\n \r\n\t\t super( listener );\r\n \r\n\t\t this.panner = this.context.createPanner();\r\n\t\t this.panner.panningModel = 'HRTF';\r\n\t\t this.panner.connect( this.gain );\r\n \r\n\t }\r\n \r\n\t getOutput() {\r\n \r\n\t\t return this.panner;\r\n \r\n\t }\r\n \r\n\t getRefDistance() {\r\n \r\n\t\t return this.panner.refDistance;\r\n \r\n\t }\r\n \r\n\t setRefDistance( value ) {\r\n \r\n\t\t this.panner.refDistance = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getRolloffFactor() {\r\n \r\n\t\t return this.panner.rolloffFactor;\r\n \r\n\t }\r\n \r\n\t setRolloffFactor( value ) {\r\n \r\n\t\t this.panner.rolloffFactor = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getDistanceModel() {\r\n \r\n\t\t return this.panner.distanceModel;\r\n \r\n\t }\r\n \r\n\t setDistanceModel( value ) {\r\n \r\n\t\t this.panner.distanceModel = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getMaxDistance() {\r\n \r\n\t\t return this.panner.maxDistance;\r\n \r\n\t }\r\n \r\n\t setMaxDistance( value ) {\r\n \r\n\t\t this.panner.maxDistance = value;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\r\n \r\n\t\t this.panner.coneInnerAngle = coneInnerAngle;\r\n\t\t this.panner.coneOuterAngle = coneOuterAngle;\r\n\t\t this.panner.coneOuterGain = coneOuterGain;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t super.updateMatrixWorld( force );\r\n \r\n\t\t if ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\r\n \r\n\t\t this.matrixWorld.decompose( _position, _quaternion, _scale );\r\n \r\n\t\t _orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\r\n \r\n\t\t const panner = this.panner;\r\n \r\n\t\t if ( panner.positionX ) {\r\n \r\n\t\t\t // code path for Chrome and Firefox (see #14393)\r\n \r\n\t\t\t const endTime = this.context.currentTime + this.listener.timeDelta;\r\n \r\n\t\t\t panner.positionX.linearRampToValueAtTime( _position.x, endTime );\r\n\t\t\t panner.positionY.linearRampToValueAtTime( _position.y, endTime );\r\n\t\t\t panner.positionZ.linearRampToValueAtTime( _position.z, endTime );\r\n\t\t\t panner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\r\n\t\t\t panner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\r\n\t\t\t panner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t panner.setPosition( _position.x, _position.y, _position.z );\r\n\t\t\t panner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n class AudioAnalyser {\r\n \r\n\t constructor( audio, fftSize = 2048 ) {\r\n \r\n\t\t this.analyser = audio.context.createAnalyser();\r\n\t\t this.analyser.fftSize = fftSize;\r\n \r\n\t\t this.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n \r\n\t\t audio.getOutput().connect( this.analyser );\r\n \r\n\t }\r\n \r\n \r\n\t getFrequencyData() {\r\n \r\n\t\t this.analyser.getByteFrequencyData( this.data );\r\n \r\n\t\t return this.data;\r\n \r\n\t }\r\n \r\n\t getAverageFrequency() {\r\n \r\n\t\t let value = 0;\r\n\t\t const data = this.getFrequencyData();\r\n \r\n\t\t for ( let i = 0; i < data.length; i ++ ) {\r\n \r\n\t\t\t value += data[ i ];\r\n \r\n\t\t }\r\n \r\n\t\t return value / data.length;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class PropertyMixer {\r\n \r\n\t constructor( binding, typeName, valueSize ) {\r\n \r\n\t\t this.binding = binding;\r\n\t\t this.valueSize = valueSize;\r\n \r\n\t\t let mixFunction,\r\n\t\t\t mixFunctionAdditive,\r\n\t\t\t setIdentity;\r\n \r\n\t\t // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\r\n\t\t //\r\n\t\t // interpolators can use .buffer as their .result\r\n\t\t // the data then goes to 'incoming'\r\n\t\t //\r\n\t\t // 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t // the cumulative result and are compared to detect\r\n\t\t // changes\r\n\t\t //\r\n\t\t // 'orig' stores the original state of the property\r\n\t\t //\r\n\t\t // 'add' is used for additive cumulative results\r\n\t\t //\r\n\t\t // 'work' is optional and is only present for quaternion types. It is used\r\n\t\t // to store intermediate quaternion multiplication results\r\n \r\n\t\t switch ( typeName ) {\r\n \r\n\t\t\t case 'quaternion':\r\n\t\t\t\t mixFunction = this._slerp;\r\n\t\t\t\t mixFunctionAdditive = this._slerpAdditive;\r\n\t\t\t\t setIdentity = this._setAdditiveIdentityQuaternion;\r\n \r\n\t\t\t\t this.buffer = new Float64Array( valueSize * 6 );\r\n\t\t\t\t this._workIndex = 5;\r\n\t\t\t\t break;\r\n \r\n\t\t\t case 'string':\r\n\t\t\t case 'bool':\r\n\t\t\t\t mixFunction = this._select;\r\n \r\n\t\t\t\t // Use the regular mix function and for additive on these types,\r\n\t\t\t\t // additive is not relevant for non-numeric types\r\n\t\t\t\t mixFunctionAdditive = this._select;\r\n \r\n\t\t\t\t setIdentity = this._setAdditiveIdentityOther;\r\n \r\n\t\t\t\t this.buffer = new Array( valueSize * 5 );\r\n\t\t\t\t break;\r\n \r\n\t\t\t default:\r\n\t\t\t\t mixFunction = this._lerp;\r\n\t\t\t\t mixFunctionAdditive = this._lerpAdditive;\r\n\t\t\t\t setIdentity = this._setAdditiveIdentityNumeric;\r\n \r\n\t\t\t\t this.buffer = new Float64Array( valueSize * 5 );\r\n \r\n\t\t }\r\n \r\n\t\t this._mixBufferRegion = mixFunction;\r\n\t\t this._mixBufferRegionAdditive = mixFunctionAdditive;\r\n\t\t this._setIdentity = setIdentity;\r\n\t\t this._origIndex = 3;\r\n\t\t this._addIndex = 4;\r\n \r\n\t\t this.cumulativeWeight = 0;\r\n\t\t this.cumulativeWeightAdditive = 0;\r\n \r\n\t\t this.useCount = 0;\r\n\t\t this.referenceCount = 0;\r\n \r\n\t }\r\n \r\n\t // accumulate data in the 'incoming' region into 'accu<i>'\r\n\t accumulate( accuIndex, weight ) {\r\n \r\n\t\t // note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t // the weight and shouldn't have made the call in the first place\r\n \r\n\t\t const buffer = this.buffer,\r\n\t\t\t stride = this.valueSize,\r\n\t\t\t offset = accuIndex * stride + stride;\r\n \r\n\t\t let currentWeight = this.cumulativeWeight;\r\n \r\n\t\t if ( currentWeight === 0 ) {\r\n \r\n\t\t\t // accuN := incoming * weight\r\n \r\n\t\t\t for ( let i = 0; i !== stride; ++ i ) {\r\n \r\n\t\t\t\t buffer[ offset + i ] = buffer[ i ];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t currentWeight = weight;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // accuN := accuN + incoming * weight\r\n \r\n\t\t\t currentWeight += weight;\r\n\t\t\t const mix = weight / currentWeight;\r\n\t\t\t this._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n \r\n\t\t }\r\n \r\n\t\t this.cumulativeWeight = currentWeight;\r\n \r\n\t }\r\n \r\n\t // accumulate data in the 'incoming' region into 'add'\r\n\t accumulateAdditive( weight ) {\r\n \r\n\t\t const buffer = this.buffer,\r\n\t\t\t stride = this.valueSize,\r\n\t\t\t offset = stride * this._addIndex;\r\n \r\n\t\t if ( this.cumulativeWeightAdditive === 0 ) {\r\n \r\n\t\t\t // add = identity\r\n \r\n\t\t\t this._setIdentity();\r\n \r\n\t\t }\r\n \r\n\t\t // add := add + incoming * weight\r\n \r\n\t\t this._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\r\n\t\t this.cumulativeWeightAdditive += weight;\r\n \r\n\t }\r\n \r\n\t // apply the state of 'accu<i>' to the binding when accus differ\r\n\t apply( accuIndex ) {\r\n \r\n\t\t const stride = this.valueSize,\r\n\t\t\t buffer = this.buffer,\r\n\t\t\t offset = accuIndex * stride + stride,\r\n \r\n\t\t\t weight = this.cumulativeWeight,\r\n\t\t\t weightAdditive = this.cumulativeWeightAdditive,\r\n \r\n\t\t\t binding = this.binding;\r\n \r\n\t\t this.cumulativeWeight = 0;\r\n\t\t this.cumulativeWeightAdditive = 0;\r\n \r\n\t\t if ( weight < 1 ) {\r\n \r\n\t\t\t // accuN := accuN + original * ( 1 - cumulativeWeight )\r\n \r\n\t\t\t const originalValueOffset = stride * this._origIndex;\r\n \r\n\t\t\t this._mixBufferRegion(\r\n\t\t\t\t buffer, offset, originalValueOffset, 1 - weight, stride );\r\n \r\n\t\t }\r\n \r\n\t\t if ( weightAdditive > 0 ) {\r\n \r\n\t\t\t // accuN := accuN + additive accuN\r\n \r\n\t\t\t this._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = stride, e = stride + stride; i !== e; ++ i ) {\r\n \r\n\t\t\t if ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n \r\n\t\t\t\t // value has changed -> update scene graph\r\n \r\n\t\t\t\t binding.setValue( buffer, offset );\r\n\t\t\t\t break;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // remember the state of the bound property and copy it to both accus\r\n\t saveOriginalState() {\r\n \r\n\t\t const binding = this.binding;\r\n \r\n\t\t const buffer = this.buffer,\r\n\t\t\t stride = this.valueSize,\r\n \r\n\t\t\t originalValueOffset = stride * this._origIndex;\r\n \r\n\t\t binding.getValue( buffer, originalValueOffset );\r\n \r\n\t\t // accu[0..1] := orig -- initially detect changes against the original\r\n\t\t for ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n \r\n\t\t\t buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n \r\n\t\t }\r\n \r\n\t\t // Add to identity for additive\r\n\t\t this._setIdentity();\r\n \r\n\t\t this.cumulativeWeight = 0;\r\n\t\t this.cumulativeWeightAdditive = 0;\r\n \r\n\t }\r\n \r\n\t // apply the state previously taken via 'saveOriginalState' to the binding\r\n\t restoreOriginalState() {\r\n \r\n\t\t const originalValueOffset = this.valueSize * 3;\r\n\t\t this.binding.setValue( this.buffer, originalValueOffset );\r\n \r\n\t }\r\n \r\n\t _setAdditiveIdentityNumeric() {\r\n \r\n\t\t const startIndex = this._addIndex * this.valueSize;\r\n\t\t const endIndex = startIndex + this.valueSize;\r\n \r\n\t\t for ( let i = startIndex; i < endIndex; i ++ ) {\r\n \r\n\t\t\t this.buffer[ i ] = 0;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _setAdditiveIdentityQuaternion() {\r\n \r\n\t\t this._setAdditiveIdentityNumeric();\r\n\t\t this.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\r\n \r\n\t }\r\n \r\n\t _setAdditiveIdentityOther() {\r\n \r\n\t\t const startIndex = this._origIndex * this.valueSize;\r\n\t\t const targetIndex = this._addIndex * this.valueSize;\r\n \r\n\t\t for ( let i = 0; i < this.valueSize; i ++ ) {\r\n \r\n\t\t\t this.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n \r\n\t // mix functions\r\n \r\n\t _select( buffer, dstOffset, srcOffset, t, stride ) {\r\n \r\n\t\t if ( t >= 0.5 ) {\r\n \r\n\t\t\t for ( let i = 0; i !== stride; ++ i ) {\r\n \r\n\t\t\t\t buffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _slerp( buffer, dstOffset, srcOffset, t ) {\r\n \r\n\t\t Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\r\n \r\n\t }\r\n \r\n\t _slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\r\n \r\n\t\t const workOffset = this._workIndex * stride;\r\n \r\n\t\t // Store result in intermediate buffer offset\r\n\t\t Quaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\r\n \r\n\t\t // Slerp to the intermediate result\r\n\t\t Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\r\n \r\n\t }\r\n \r\n\t _lerp( buffer, dstOffset, srcOffset, t, stride ) {\r\n \r\n\t\t const s = 1 - t;\r\n \r\n\t\t for ( let i = 0; i !== stride; ++ i ) {\r\n \r\n\t\t\t const j = dstOffset + i;\r\n \r\n\t\t\t buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\r\n \r\n\t\t for ( let i = 0; i !== stride; ++ i ) {\r\n \r\n\t\t\t const j = dstOffset + i;\r\n \r\n\t\t\t buffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n // Characters [].:/ are reserved for track binding syntax.\r\n const _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\n const _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\r\n \r\n // Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n // only latin characters, and the unicode \\p{L} is not yet supported. So\r\n // instead, we exclude reserved characters and match everything else.\r\n const _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\r\n const _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\r\n \r\n // Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n // be matched to parse the rest of the track name.\r\n const _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\r\n \r\n // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\n const _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\r\n \r\n // Object on target node, and accessor. May not contain reserved\r\n // characters. Accessor may contain any character except closing bracket.\r\n const _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\r\n \r\n // Property and accessor. May not contain reserved characters. Accessor may\r\n // contain any non-bracket characters.\r\n const _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\r\n \r\n const _trackRe = new RegExp( ''\r\n\t + '^'\r\n\t + _directoryRe\r\n\t + _nodeRe\r\n\t + _objectRe\r\n\t + _propertyRe\r\n\t + '$'\r\n );\r\n \r\n const _supportedObjectNames = [ 'material', 'materials', 'bones' ];\r\n \r\n class Composite {\r\n \r\n\t constructor( targetGroup, path, optionalParsedPath ) {\r\n \r\n\t\t const parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\r\n \r\n\t\t this._targetGroup = targetGroup;\r\n\t\t this._bindings = targetGroup.subscribe_( path, parsedPath );\r\n \r\n\t }\r\n \r\n\t getValue( array, offset ) {\r\n \r\n\t\t this.bind(); // bind all binding\r\n \r\n\t\t const firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\t binding = this._bindings[ firstValidIndex ];\r\n \r\n\t\t // and only call .getValue on the first\r\n\t\t if ( binding !== undefined ) binding.getValue( array, offset );\r\n \r\n\t }\r\n \r\n\t setValue( array, offset ) {\r\n \r\n\t\t const bindings = this._bindings;\r\n \r\n\t\t for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n \r\n\t\t\t bindings[ i ].setValue( array, offset );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t bind() {\r\n \r\n\t\t const bindings = this._bindings;\r\n \r\n\t\t for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n \r\n\t\t\t bindings[ i ].bind();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t unbind() {\r\n \r\n\t\t const bindings = this._bindings;\r\n \r\n\t\t for ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n \r\n\t\t\t bindings[ i ].unbind();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n // Note: This class uses a State pattern on a per-method basis:\r\n // 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n // prototype version of these methods with one that represents\r\n // the bound state. When the property is not found, the methods\r\n // become no-ops.\r\n class PropertyBinding {\r\n \r\n\t constructor( rootNode, path, parsedPath ) {\r\n \r\n\t\t this.path = path;\r\n\t\t this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\r\n \r\n\t\t this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\r\n \r\n\t\t this.rootNode = rootNode;\r\n \r\n\t\t // initial state of these methods that calls 'bind'\r\n\t\t this.getValue = this._getValue_unbound;\r\n\t\t this.setValue = this._setValue_unbound;\r\n \r\n\t }\r\n \r\n \r\n\t static create( root, path, parsedPath ) {\r\n \r\n\t\t if ( ! ( root && root.isAnimationObjectGroup ) ) {\r\n \r\n\t\t\t return new PropertyBinding( root, path, parsedPath );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t return new PropertyBinding.Composite( root, path, parsedPath );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t /**\r\n\t  * Replaces spaces with underscores and removes unsupported characters from\r\n\t  * node names, to ensure compatibility with parseTrackName().\r\n\t  *\r\n\t  * @param {string} name Node name to be sanitized.\r\n\t  * @return {string}\r\n\t  */\r\n\t static sanitizeNodeName( name ) {\r\n \r\n\t\t return name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\r\n \r\n\t }\r\n \r\n\t static parseTrackName( trackName ) {\r\n \r\n\t\t const matches = _trackRe.exec( trackName );\r\n \r\n\t\t if ( matches === null ) {\r\n \r\n\t\t\t throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\r\n \r\n\t\t }\r\n \r\n\t\t const results = {\r\n\t\t\t // directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\t nodeName: matches[ 2 ],\r\n\t\t\t objectName: matches[ 3 ],\r\n\t\t\t objectIndex: matches[ 4 ],\r\n\t\t\t propertyName: matches[ 5 ], // required\r\n\t\t\t propertyIndex: matches[ 6 ]\r\n\t\t };\r\n \r\n\t\t const lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\r\n \r\n\t\t if ( lastDot !== undefined && lastDot !== - 1 ) {\r\n \r\n\t\t\t const objectName = results.nodeName.substring( lastDot + 1 );\r\n \r\n\t\t\t // Object names must be checked against an allowlist. Otherwise, there\r\n\t\t\t // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t // 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t // include '.' characters).\r\n\t\t\t if ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\r\n \r\n\t\t\t\t results.nodeName = results.nodeName.substring( 0, lastDot );\r\n\t\t\t\t results.objectName = objectName;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n \r\n\t\t\t throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\r\n \r\n\t\t }\r\n \r\n\t\t return results;\r\n \r\n\t }\r\n \r\n\t static findNode( root, nodeName ) {\r\n \r\n\t\t if ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\r\n \r\n\t\t\t return root;\r\n \r\n\t\t }\r\n \r\n\t\t // search into skeleton bones.\r\n\t\t if ( root.skeleton ) {\r\n \r\n\t\t\t const bone = root.skeleton.getBoneByName( nodeName );\r\n \r\n\t\t\t if ( bone !== undefined ) {\r\n \r\n\t\t\t\t return bone;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // search into node subtree.\r\n\t\t if ( root.children ) {\r\n \r\n\t\t\t const searchNodeSubtree = function ( children ) {\r\n \r\n\t\t\t\t for ( let i = 0; i < children.length; i ++ ) {\r\n \r\n\t\t\t\t\t const childNode = children[ i ];\r\n \r\n\t\t\t\t\t if ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n \r\n\t\t\t\t\t\t return childNode;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t const result = searchNodeSubtree( childNode.children );\r\n \r\n\t\t\t\t\t if ( result ) return result;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t return null;\r\n \r\n\t\t\t };\r\n \r\n\t\t\t const subTreeNode = searchNodeSubtree( root.children );\r\n \r\n\t\t\t if ( subTreeNode ) {\r\n \r\n\t\t\t\t return subTreeNode;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return null;\r\n \r\n\t }\r\n \r\n\t // these are used to \"bind\" a nonexistent property\r\n\t _getValue_unavailable() {}\r\n\t _setValue_unavailable() {}\r\n \r\n\t // Getters\r\n \r\n\t _getValue_direct( buffer, offset ) {\r\n \r\n\t\t buffer[ offset ] = this.targetObject[ this.propertyName ];\r\n \r\n\t }\r\n \r\n\t _getValue_array( buffer, offset ) {\r\n \r\n\t\t const source = this.resolvedProperty;\r\n \r\n\t\t for ( let i = 0, n = source.length; i !== n; ++ i ) {\r\n \r\n\t\t\t buffer[ offset ++ ] = source[ i ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _getValue_arrayElement( buffer, offset ) {\r\n \r\n\t\t buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n \r\n\t }\r\n \r\n\t _getValue_toArray( buffer, offset ) {\r\n \r\n\t\t this.resolvedProperty.toArray( buffer, offset );\r\n \r\n\t }\r\n \r\n\t // Direct\r\n \r\n\t _setValue_direct( buffer, offset ) {\r\n \r\n\t\t this.targetObject[ this.propertyName ] = buffer[ offset ];\r\n \r\n\t }\r\n \r\n\t _setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t this.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t this.targetObject.needsUpdate = true;\r\n \r\n\t }\r\n \r\n\t _setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t this.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\r\n \r\n\t }\r\n \r\n\t // EntireArray\r\n \r\n\t _setValue_array( buffer, offset ) {\r\n \r\n\t\t const dest = this.resolvedProperty;\r\n \r\n\t\t for ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n \r\n\t\t\t dest[ i ] = buffer[ offset ++ ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _setValue_array_setNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t const dest = this.resolvedProperty;\r\n \r\n\t\t for ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n \r\n\t\t\t dest[ i ] = buffer[ offset ++ ];\r\n \r\n\t\t }\r\n \r\n\t\t this.targetObject.needsUpdate = true;\r\n \r\n\t }\r\n \r\n\t _setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t const dest = this.resolvedProperty;\r\n \r\n\t\t for ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n \r\n\t\t\t dest[ i ] = buffer[ offset ++ ];\r\n \r\n\t\t }\r\n \r\n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\r\n \r\n\t }\r\n \r\n\t // ArrayElement\r\n \r\n\t _setValue_arrayElement( buffer, offset ) {\r\n \r\n\t\t this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n \r\n\t }\r\n \r\n\t _setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t this.targetObject.needsUpdate = true;\r\n \r\n\t }\r\n \r\n\t _setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\r\n \r\n\t }\r\n \r\n\t // HasToFromArray\r\n \r\n\t _setValue_fromArray( buffer, offset ) {\r\n \r\n\t\t this.resolvedProperty.fromArray( buffer, offset );\r\n \r\n\t }\r\n \r\n\t _setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t this.resolvedProperty.fromArray( buffer, offset );\r\n\t\t this.targetObject.needsUpdate = true;\r\n \r\n\t }\r\n \r\n\t _setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n \r\n\t\t this.resolvedProperty.fromArray( buffer, offset );\r\n\t\t this.targetObject.matrixWorldNeedsUpdate = true;\r\n \r\n\t }\r\n \r\n\t _getValue_unbound( targetArray, offset ) {\r\n \r\n\t\t this.bind();\r\n\t\t this.getValue( targetArray, offset );\r\n \r\n\t }\r\n \r\n\t _setValue_unbound( sourceArray, offset ) {\r\n \r\n\t\t this.bind();\r\n\t\t this.setValue( sourceArray, offset );\r\n \r\n\t }\r\n \r\n\t // create getter / setter pair for a property in the scene graph\r\n\t bind() {\r\n \r\n\t\t let targetObject = this.node;\r\n\t\t const parsedPath = this.parsedPath;\r\n \r\n\t\t const objectName = parsedPath.objectName;\r\n\t\t const propertyName = parsedPath.propertyName;\r\n\t\t let propertyIndex = parsedPath.propertyIndex;\r\n \r\n\t\t if ( ! targetObject ) {\r\n \r\n\t\t\t targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n \r\n\t\t\t this.node = targetObject;\r\n \r\n\t\t }\r\n \r\n\t\t // set fail state so we can just 'return' on error\r\n\t\t this.getValue = this._getValue_unavailable;\r\n\t\t this.setValue = this._setValue_unavailable;\r\n \r\n\t\t // ensure there is a value node\r\n\t\t if ( ! targetObject ) {\r\n \r\n\t\t\t console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t if ( objectName ) {\r\n \r\n\t\t\t let objectIndex = parsedPath.objectIndex;\r\n \r\n\t\t\t // special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\t switch ( objectName ) {\r\n \r\n\t\t\t\t case 'materials':\r\n \r\n\t\t\t\t\t if ( ! targetObject.material ) {\r\n \r\n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\t return;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( ! targetObject.material.materials ) {\r\n \r\n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\r\n\t\t\t\t\t\t return;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t targetObject = targetObject.material.materials;\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case 'bones':\r\n \r\n\t\t\t\t\t if ( ! targetObject.skeleton ) {\r\n \r\n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\r\n\t\t\t\t\t\t return;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t // potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t // and convert the integer string to a true integer.\r\n \r\n\t\t\t\t\t targetObject = targetObject.skeleton.bones;\r\n \r\n\t\t\t\t\t // support resolving morphTarget names into indices.\r\n\t\t\t\t\t for ( let i = 0; i < targetObject.length; i ++ ) {\r\n \r\n\t\t\t\t\t\t if ( targetObject[ i ].name === objectIndex ) {\r\n \r\n\t\t\t\t\t\t\t objectIndex = i;\r\n\t\t\t\t\t\t\t break;\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t default:\r\n \r\n\t\t\t\t\t if ( targetObject[ objectName ] === undefined ) {\r\n \r\n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\r\n\t\t\t\t\t\t return;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t targetObject = targetObject[ objectName ];\r\n \r\n\t\t\t }\r\n \r\n \r\n\t\t\t if ( objectIndex !== undefined ) {\r\n \r\n\t\t\t\t if ( targetObject[ objectIndex ] === undefined ) {\r\n \r\n\t\t\t\t\t console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\r\n\t\t\t\t\t return;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t targetObject = targetObject[ objectIndex ];\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // resolve property\r\n\t\t const nodeProperty = targetObject[ propertyName ];\r\n \r\n\t\t if ( nodeProperty === undefined ) {\r\n \r\n\t\t\t const nodeName = parsedPath.nodeName;\r\n \r\n\t\t\t console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\r\n\t\t\t\t '.' + propertyName + ' but it wasn\\'t found.', targetObject );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t // determine versioning scheme\r\n\t\t let versioning = this.Versioning.None;\r\n \r\n\t\t this.targetObject = targetObject;\r\n \r\n\t\t if ( targetObject.needsUpdate !== undefined ) { // material\r\n \r\n\t\t\t versioning = this.Versioning.NeedsUpdate;\r\n \r\n\t\t } else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n \r\n\t\t\t versioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n \r\n\t\t }\r\n \r\n\t\t // determine how the property gets bound\r\n\t\t let bindingType = this.BindingType.Direct;\r\n \r\n\t\t if ( propertyIndex !== undefined ) {\r\n \r\n\t\t\t // access a sub element of the property array (only primitives are supported right now)\r\n \r\n\t\t\t if ( propertyName === 'morphTargetInfluences' ) {\r\n \r\n\t\t\t\t // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n \r\n\t\t\t\t // support resolving morphTarget names into indices.\r\n\t\t\t\t if ( ! targetObject.geometry ) {\r\n \r\n\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\r\n\t\t\t\t\t return;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( targetObject.geometry.isBufferGeometry ) {\r\n \r\n\t\t\t\t\t if ( ! targetObject.geometry.morphAttributes ) {\r\n \r\n\t\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\r\n\t\t\t\t\t\t return;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\r\n \r\n\t\t\t\t\t\t propertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\r\n \r\n\t\t\t\t\t }\r\n \r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this );\r\n\t\t\t\t\t return;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t bindingType = this.BindingType.ArrayElement;\r\n \r\n\t\t\t this.resolvedProperty = nodeProperty;\r\n\t\t\t this.propertyIndex = propertyIndex;\r\n \r\n\t\t } else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n \r\n\t\t\t // must use copy for Object3D.Euler/Quaternion\r\n \r\n\t\t\t bindingType = this.BindingType.HasFromToArray;\r\n \r\n\t\t\t this.resolvedProperty = nodeProperty;\r\n \r\n\t\t } else if ( Array.isArray( nodeProperty ) ) {\r\n \r\n\t\t\t bindingType = this.BindingType.EntireArray;\r\n \r\n\t\t\t this.resolvedProperty = nodeProperty;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.propertyName = propertyName;\r\n \r\n\t\t }\r\n \r\n\t\t // select getter / setter\r\n\t\t this.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\t this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n \r\n\t }\r\n \r\n\t unbind() {\r\n \r\n\t\t this.node = null;\r\n \r\n\t\t // back to the prototype version of getValue / setValue\r\n\t\t // note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\t this.getValue = this._getValue_unbound;\r\n\t\t this.setValue = this._setValue_unbound;\r\n \r\n\t }\r\n \r\n }\r\n \r\n PropertyBinding.Composite = Composite;\r\n \r\n PropertyBinding.prototype.BindingType = {\r\n\t Direct: 0,\r\n\t EntireArray: 1,\r\n\t ArrayElement: 2,\r\n\t HasFromToArray: 3\r\n };\r\n \r\n PropertyBinding.prototype.Versioning = {\r\n\t None: 0,\r\n\t NeedsUpdate: 1,\r\n\t MatrixWorldNeedsUpdate: 2\r\n };\r\n \r\n PropertyBinding.prototype.GetterByBindingType = [\r\n \r\n\t PropertyBinding.prototype._getValue_direct,\r\n\t PropertyBinding.prototype._getValue_array,\r\n\t PropertyBinding.prototype._getValue_arrayElement,\r\n\t PropertyBinding.prototype._getValue_toArray,\r\n \r\n ];\r\n \r\n PropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\r\n \r\n\t [\r\n\t\t // Direct\r\n\t\t PropertyBinding.prototype._setValue_direct,\r\n\t\t PropertyBinding.prototype._setValue_direct_setNeedsUpdate,\r\n\t\t PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\r\n \r\n\t ], [\r\n \r\n\t\t // EntireArray\r\n \r\n\t\t PropertyBinding.prototype._setValue_array,\r\n\t\t PropertyBinding.prototype._setValue_array_setNeedsUpdate,\r\n\t\t PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\r\n \r\n\t ], [\r\n \r\n\t\t // ArrayElement\r\n\t\t PropertyBinding.prototype._setValue_arrayElement,\r\n\t\t PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\r\n\t\t PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\r\n \r\n\t ], [\r\n \r\n\t\t // HasToFromArray\r\n\t\t PropertyBinding.prototype._setValue_fromArray,\r\n\t\t PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\r\n\t\t PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\r\n \r\n\t ]\r\n \r\n ];\r\n \r\n /**\r\n  *\r\n  * A group of objects that receives a shared animation state.\r\n  *\r\n  * Usage:\r\n  *\r\n  *  - Add objects you would otherwise pass as 'root' to the\r\n  *    constructor or the .clipAction method of AnimationMixer.\r\n  *\r\n  *  - Instead pass this object as 'root'.\r\n  *\r\n  *  - You can also add and remove objects later when the mixer\r\n  *    is running.\r\n  *\r\n  * Note:\r\n  *\r\n  *    Objects of this class appear as one object to the mixer,\r\n  *    so cache control of the individual objects must be done\r\n  *    on the group.\r\n  *\r\n  * Limitation:\r\n  *\r\n  *  - The animated properties must be compatible among the\r\n  *    all objects in the group.\r\n  *\r\n  *  - A single property can either be controlled through a\r\n  *    target group or directly, but not both.\r\n  */\r\n \r\n class AnimationObjectGroup {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.uuid = generateUUID();\r\n \r\n\t\t // cached objects followed by the active ones\r\n\t\t this._objects = Array.prototype.slice.call( arguments );\r\n \r\n\t\t this.nCachedObjects_ = 0; // threshold\r\n\t\t // note: read by PropertyBinding.Composite\r\n \r\n\t\t const indices = {};\r\n\t\t this._indicesByUUID = indices; // for bookkeeping\r\n \r\n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n \r\n\t\t\t indices[ arguments[ i ].uuid ] = i;\r\n \r\n\t\t }\r\n \r\n\t\t this._paths = []; // inside: string\r\n\t\t this._parsedPaths = []; // inside: { we don't care, here }\r\n\t\t this._bindings = []; // inside: Array< PropertyBinding >\r\n\t\t this._bindingsIndicesByPath = {}; // inside: indices in these arrays\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t this.stats = {\r\n \r\n\t\t\t objects: {\r\n\t\t\t\t get total() {\r\n \r\n\t\t\t\t\t return scope._objects.length;\r\n \r\n\t\t\t\t },\r\n\t\t\t\t get inUse() {\r\n \r\n\t\t\t\t\t return this.total - scope.nCachedObjects_;\r\n \r\n\t\t\t\t }\r\n\t\t\t },\r\n\t\t\t get bindingsPerObject() {\r\n \r\n\t\t\t\t return scope._bindings.length;\r\n \r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t add() {\r\n \r\n\t\t const objects = this._objects,\r\n\t\t\t indicesByUUID = this._indicesByUUID,\r\n\t\t\t paths = this._paths,\r\n\t\t\t parsedPaths = this._parsedPaths,\r\n\t\t\t bindings = this._bindings,\r\n\t\t\t nBindings = bindings.length;\r\n \r\n\t\t let knownObject = undefined,\r\n\t\t\t nObjects = objects.length,\r\n\t\t\t nCachedObjects = this.nCachedObjects_;\r\n \r\n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n \r\n\t\t\t const object = arguments[ i ],\r\n\t\t\t\t uuid = object.uuid;\r\n\t\t\t let index = indicesByUUID[ uuid ];\r\n \r\n\t\t\t if ( index === undefined ) {\r\n \r\n\t\t\t\t // unknown object -> add it to the ACTIVE region\r\n \r\n\t\t\t\t index = nObjects ++;\r\n\t\t\t\t indicesByUUID[ uuid ] = index;\r\n\t\t\t\t objects.push( object );\r\n \r\n\t\t\t\t // accounting is done, now do the same for all bindings\r\n \r\n\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n \r\n\t\t\t\t\t bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( index < nCachedObjects ) {\r\n \r\n\t\t\t\t knownObject = objects[ index ];\r\n \r\n\t\t\t\t // move existing object to the ACTIVE region\r\n \r\n\t\t\t\t const firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t lastCachedObject = objects[ firstActiveIndex ];\r\n \r\n\t\t\t\t indicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t objects[ index ] = lastCachedObject;\r\n \r\n\t\t\t\t indicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\t objects[ firstActiveIndex ] = object;\r\n \r\n\t\t\t\t // accounting is done, now do the same for all bindings\r\n \r\n\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n \r\n\t\t\t\t\t const bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t lastCached = bindingsForPath[ firstActiveIndex ];\r\n \r\n\t\t\t\t\t let binding = bindingsForPath[ index ];\r\n \r\n\t\t\t\t\t bindingsForPath[ index ] = lastCached;\r\n \r\n\t\t\t\t\t if ( binding === undefined ) {\r\n \r\n\t\t\t\t\t\t // since we do not bother to create new bindings\r\n\t\t\t\t\t\t // for objects that are cached, the binding may\r\n\t\t\t\t\t\t // or may not exist\r\n \r\n\t\t\t\t\t\t binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t bindingsForPath[ firstActiveIndex ] = binding;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else if ( objects[ index ] !== knownObject ) {\r\n \r\n\t\t\t\t console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\r\n\t\t\t\t\t 'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\r\n \r\n\t\t\t } // else the object is already where we want it to be\r\n \r\n\t\t } // for arguments\r\n \r\n\t\t this.nCachedObjects_ = nCachedObjects;\r\n \r\n\t }\r\n \r\n\t remove() {\r\n \r\n\t\t const objects = this._objects,\r\n\t\t\t indicesByUUID = this._indicesByUUID,\r\n\t\t\t bindings = this._bindings,\r\n\t\t\t nBindings = bindings.length;\r\n \r\n\t\t let nCachedObjects = this.nCachedObjects_;\r\n \r\n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n \r\n\t\t\t const object = arguments[ i ],\r\n\t\t\t\t uuid = object.uuid,\r\n\t\t\t\t index = indicesByUUID[ uuid ];\r\n \r\n\t\t\t if ( index !== undefined && index >= nCachedObjects ) {\r\n \r\n\t\t\t\t // move existing object into the CACHED region\r\n \r\n\t\t\t\t const lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\t firstActiveObject = objects[ lastCachedIndex ];\r\n \r\n\t\t\t\t indicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\t objects[ index ] = firstActiveObject;\r\n \r\n\t\t\t\t indicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\t objects[ lastCachedIndex ] = object;\r\n \r\n\t\t\t\t // accounting is done, now do the same for all bindings\r\n \r\n\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n \r\n\t\t\t\t\t const bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t firstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\t binding = bindingsForPath[ index ];\r\n \r\n\t\t\t\t\t bindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\t bindingsForPath[ lastCachedIndex ] = binding;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t } // for arguments\r\n \r\n\t\t this.nCachedObjects_ = nCachedObjects;\r\n \r\n\t }\r\n \r\n\t // remove & forget\r\n\t uncache() {\r\n \r\n\t\t const objects = this._objects,\r\n\t\t\t indicesByUUID = this._indicesByUUID,\r\n\t\t\t bindings = this._bindings,\r\n\t\t\t nBindings = bindings.length;\r\n \r\n\t\t let nCachedObjects = this.nCachedObjects_,\r\n\t\t\t nObjects = objects.length;\r\n \r\n\t\t for ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n \r\n\t\t\t const object = arguments[ i ],\r\n\t\t\t\t uuid = object.uuid,\r\n\t\t\t\t index = indicesByUUID[ uuid ];\r\n \r\n\t\t\t if ( index !== undefined ) {\r\n \r\n\t\t\t\t delete indicesByUUID[ uuid ];\r\n \r\n\t\t\t\t if ( index < nCachedObjects ) {\r\n \r\n\t\t\t\t\t // object is cached, shrink the CACHED region\r\n \r\n\t\t\t\t\t const firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\t lastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\t lastIndex = -- nObjects,\r\n\t\t\t\t\t\t lastObject = objects[ lastIndex ];\r\n \r\n\t\t\t\t\t // last cached object takes this object's place\r\n\t\t\t\t\t indicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\t objects[ index ] = lastCachedObject;\r\n \r\n\t\t\t\t\t // last object goes to the activated slot and pop\r\n\t\t\t\t\t indicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\t objects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\t objects.pop();\r\n \r\n\t\t\t\t\t // accounting is done, now do the same for all bindings\r\n \r\n\t\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n \r\n\t\t\t\t\t\t const bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\t lastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\t last = bindingsForPath[ lastIndex ];\r\n \r\n\t\t\t\t\t\t bindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\t bindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\t bindingsForPath.pop();\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // object is active, just swap with the last and pop\r\n \r\n\t\t\t\t\t const lastIndex = -- nObjects,\r\n\t\t\t\t\t\t lastObject = objects[ lastIndex ];\r\n \r\n\t\t\t\t\t if ( lastIndex > 0 ) {\r\n \r\n\t\t\t\t\t\t indicesByUUID[ lastObject.uuid ] = index;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t objects[ index ] = lastObject;\r\n\t\t\t\t\t objects.pop();\r\n \r\n\t\t\t\t\t // accounting is done, now do the same for all bindings\r\n \r\n\t\t\t\t\t for ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n \r\n\t\t\t\t\t\t const bindingsForPath = bindings[ j ];\r\n \r\n\t\t\t\t\t\t bindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\t bindingsForPath.pop();\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } // cached or active\r\n \r\n\t\t\t } // if object is known\r\n \r\n\t\t } // for arguments\r\n \r\n\t\t this.nCachedObjects_ = nCachedObjects;\r\n \r\n\t }\r\n \r\n\t // Internal interface used by befriended PropertyBinding.Composite:\r\n \r\n\t subscribe_( path, parsedPath ) {\r\n \r\n\t\t // returns an array of bindings for the given path that is changed\r\n\t\t // according to the contained objects in the group\r\n \r\n\t\t const indicesByPath = this._bindingsIndicesByPath;\r\n\t\t let index = indicesByPath[ path ];\r\n\t\t const bindings = this._bindings;\r\n \r\n\t\t if ( index !== undefined ) return bindings[ index ];\r\n \r\n\t\t const paths = this._paths,\r\n\t\t\t parsedPaths = this._parsedPaths,\r\n\t\t\t objects = this._objects,\r\n\t\t\t nObjects = objects.length,\r\n\t\t\t nCachedObjects = this.nCachedObjects_,\r\n\t\t\t bindingsForPath = new Array( nObjects );\r\n \r\n\t\t index = bindings.length;\r\n \r\n\t\t indicesByPath[ path ] = index;\r\n \r\n\t\t paths.push( path );\r\n\t\t parsedPaths.push( parsedPath );\r\n\t\t bindings.push( bindingsForPath );\r\n \r\n\t\t for ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\r\n \r\n\t\t\t const object = objects[ i ];\r\n\t\t\t bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\r\n \r\n\t\t }\r\n \r\n\t\t return bindingsForPath;\r\n \r\n\t }\r\n \r\n\t unsubscribe_( path ) {\r\n \r\n\t\t // tells the group to forget about a property path and no longer\r\n\t\t // update the array previously obtained with 'subscribe_'\r\n \r\n\t\t const indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\t index = indicesByPath[ path ];\r\n \r\n\t\t if ( index !== undefined ) {\r\n \r\n\t\t\t const paths = this._paths,\r\n\t\t\t\t parsedPaths = this._parsedPaths,\r\n\t\t\t\t bindings = this._bindings,\r\n\t\t\t\t lastBindingsIndex = bindings.length - 1,\r\n\t\t\t\t lastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\t lastBindingsPath = path[ lastBindingsIndex ];\r\n \r\n\t\t\t indicesByPath[ lastBindingsPath ] = index;\r\n \r\n\t\t\t bindings[ index ] = lastBindings;\r\n\t\t\t bindings.pop();\r\n \r\n\t\t\t parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\t parsedPaths.pop();\r\n \r\n\t\t\t paths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\t paths.pop();\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n AnimationObjectGroup.prototype.isAnimationObjectGroup = true;\r\n \r\n class AnimationAction {\r\n \r\n\t constructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\r\n \r\n\t\t this._mixer = mixer;\r\n\t\t this._clip = clip;\r\n\t\t this._localRoot = localRoot;\r\n\t\t this.blendMode = blendMode;\r\n \r\n\t\t const tracks = clip.tracks,\r\n\t\t\t nTracks = tracks.length,\r\n\t\t\t interpolants = new Array( nTracks );\r\n \r\n\t\t const interpolantSettings = {\r\n\t\t\t endingStart: ZeroCurvatureEnding,\r\n\t\t\t endingEnd: ZeroCurvatureEnding\r\n\t\t };\r\n \r\n\t\t for ( let i = 0; i !== nTracks; ++ i ) {\r\n \r\n\t\t\t const interpolant = tracks[ i ].createInterpolant( null );\r\n\t\t\t interpolants[ i ] = interpolant;\r\n\t\t\t interpolant.settings = interpolantSettings;\r\n \r\n\t\t }\r\n \r\n\t\t this._interpolantSettings = interpolantSettings;\r\n \r\n\t\t this._interpolants = interpolants; // bound by the mixer\r\n \r\n\t\t // inside: PropertyMixer (managed by the mixer)\r\n\t\t this._propertyBindings = new Array( nTracks );\r\n \r\n\t\t this._cacheIndex = null; // for the memory manager\r\n\t\t this._byClipCacheIndex = null; // for the memory manager\r\n \r\n\t\t this._timeScaleInterpolant = null;\r\n\t\t this._weightInterpolant = null;\r\n \r\n\t\t this.loop = LoopRepeat;\r\n\t\t this._loopCount = - 1;\r\n \r\n\t\t // global mixer time when the action is to be started\r\n\t\t // it's set back to 'null' upon start of the action\r\n\t\t this._startTime = null;\r\n \r\n\t\t // scaled local time of the action\r\n\t\t // gets clamped or wrapped to 0..clip.duration according to loop\r\n\t\t this.time = 0;\r\n \r\n\t\t this.timeScale = 1;\r\n\t\t this._effectiveTimeScale = 1;\r\n \r\n\t\t this.weight = 1;\r\n\t\t this._effectiveWeight = 1;\r\n \r\n\t\t this.repetitions = Infinity; // no. of repetitions when looping\r\n \r\n\t\t this.paused = false; // true -> zero effective time scale\r\n\t\t this.enabled = true; // false -> zero effective weight\r\n \r\n\t\t this.clampWhenFinished = false;// keep feeding the last frame?\r\n \r\n\t\t this.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\r\n\t\t this.zeroSlopeAtEnd = true;// clips for start, loop and end\r\n \r\n\t }\r\n \r\n\t // State & Scheduling\r\n \r\n\t play() {\r\n \r\n\t\t this._mixer._activateAction( this );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t stop() {\r\n \r\n\t\t this._mixer._deactivateAction( this );\r\n \r\n\t\t return this.reset();\r\n \r\n\t }\r\n \r\n\t reset() {\r\n \r\n\t\t this.paused = false;\r\n\t\t this.enabled = true;\r\n \r\n\t\t this.time = 0; // restart clip\r\n\t\t this._loopCount = - 1;// forget previous loops\r\n\t\t this._startTime = null;// forget scheduling\r\n \r\n\t\t return this.stopFading().stopWarping();\r\n \r\n\t }\r\n \r\n\t isRunning() {\r\n \r\n\t\t return this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t this._startTime === null && this._mixer._isActiveAction( this );\r\n \r\n\t }\r\n \r\n\t // return true when play has been called\r\n\t isScheduled() {\r\n \r\n\t\t return this._mixer._isActiveAction( this );\r\n \r\n\t }\r\n \r\n\t startAt( time ) {\r\n \r\n\t\t this._startTime = time;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setLoop( mode, repetitions ) {\r\n \r\n\t\t this.loop = mode;\r\n\t\t this.repetitions = repetitions;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // Weight\r\n \r\n\t // set the weight stopping any scheduled fading\r\n\t // although .enabled = false yields an effective weight of zero, this\r\n\t // method does *not* change .enabled, because it would be confusing\r\n\t setEffectiveWeight( weight ) {\r\n \r\n\t\t this.weight = weight;\r\n \r\n\t\t // note: same logic as when updated at runtime\r\n\t\t this._effectiveWeight = this.enabled ? weight : 0;\r\n \r\n\t\t return this.stopFading();\r\n \r\n\t }\r\n \r\n\t // return the weight considering fading and .enabled\r\n\t getEffectiveWeight() {\r\n \r\n\t\t return this._effectiveWeight;\r\n \r\n\t }\r\n \r\n\t fadeIn( duration ) {\r\n \r\n\t\t return this._scheduleFading( duration, 0, 1 );\r\n \r\n\t }\r\n \r\n\t fadeOut( duration ) {\r\n \r\n\t\t return this._scheduleFading( duration, 1, 0 );\r\n \r\n\t }\r\n \r\n\t crossFadeFrom( fadeOutAction, duration, warp ) {\r\n \r\n\t\t fadeOutAction.fadeOut( duration );\r\n\t\t this.fadeIn( duration );\r\n \r\n\t\t if ( warp ) {\r\n \r\n\t\t\t const fadeInDuration = this._clip.duration,\r\n\t\t\t\t fadeOutDuration = fadeOutAction._clip.duration,\r\n \r\n\t\t\t\t startEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\t endStartRatio = fadeInDuration / fadeOutDuration;\r\n \r\n\t\t\t fadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\t this.warp( endStartRatio, 1.0, duration );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t crossFadeTo( fadeInAction, duration, warp ) {\r\n \r\n\t\t return fadeInAction.crossFadeFrom( this, duration, warp );\r\n \r\n\t }\r\n \r\n\t stopFading() {\r\n \r\n\t\t const weightInterpolant = this._weightInterpolant;\r\n \r\n\t\t if ( weightInterpolant !== null ) {\r\n \r\n\t\t\t this._weightInterpolant = null;\r\n\t\t\t this._mixer._takeBackControlInterpolant( weightInterpolant );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // Time Scale Control\r\n \r\n\t // set the time scale stopping any scheduled warping\r\n\t // although .paused = true yields an effective time scale of zero, this\r\n\t // method does *not* change .paused, because it would be confusing\r\n\t setEffectiveTimeScale( timeScale ) {\r\n \r\n\t\t this.timeScale = timeScale;\r\n\t\t this._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n \r\n\t\t return this.stopWarping();\r\n \r\n\t }\r\n \r\n\t // return the time scale considering warping and .paused\r\n\t getEffectiveTimeScale() {\r\n \r\n\t\t return this._effectiveTimeScale;\r\n \r\n\t }\r\n \r\n\t setDuration( duration ) {\r\n \r\n\t\t this.timeScale = this._clip.duration / duration;\r\n \r\n\t\t return this.stopWarping();\r\n \r\n\t }\r\n \r\n\t syncWith( action ) {\r\n \r\n\t\t this.time = action.time;\r\n\t\t this.timeScale = action.timeScale;\r\n \r\n\t\t return this.stopWarping();\r\n \r\n\t }\r\n \r\n\t halt( duration ) {\r\n \r\n\t\t return this.warp( this._effectiveTimeScale, 0, duration );\r\n \r\n\t }\r\n \r\n\t warp( startTimeScale, endTimeScale, duration ) {\r\n \r\n\t\t const mixer = this._mixer,\r\n\t\t\t now = mixer.time,\r\n\t\t\t timeScale = this.timeScale;\r\n \r\n\t\t let interpolant = this._timeScaleInterpolant;\r\n \r\n\t\t if ( interpolant === null ) {\r\n \r\n\t\t\t interpolant = mixer._lendControlInterpolant();\r\n\t\t\t this._timeScaleInterpolant = interpolant;\r\n \r\n\t\t }\r\n \r\n\t\t const times = interpolant.parameterPositions,\r\n\t\t\t values = interpolant.sampleValues;\r\n \r\n\t\t times[ 0 ] = now;\r\n\t\t times[ 1 ] = now + duration;\r\n \r\n\t\t values[ 0 ] = startTimeScale / timeScale;\r\n\t\t values[ 1 ] = endTimeScale / timeScale;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t stopWarping() {\r\n \r\n\t\t const timeScaleInterpolant = this._timeScaleInterpolant;\r\n \r\n\t\t if ( timeScaleInterpolant !== null ) {\r\n \r\n\t\t\t this._timeScaleInterpolant = null;\r\n\t\t\t this._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // Object Accessors\r\n \r\n\t getMixer() {\r\n \r\n\t\t return this._mixer;\r\n \r\n\t }\r\n \r\n\t getClip() {\r\n \r\n\t\t return this._clip;\r\n \r\n\t }\r\n \r\n\t getRoot() {\r\n \r\n\t\t return this._localRoot || this._mixer._root;\r\n \r\n\t }\r\n \r\n\t // Interna\r\n \r\n\t _update( time, deltaTime, timeDirection, accuIndex ) {\r\n \r\n\t\t // called by the mixer\r\n \r\n\t\t if ( ! this.enabled ) {\r\n \r\n\t\t\t // call ._updateWeight() to update ._effectiveWeight\r\n \r\n\t\t\t this._updateWeight( time );\r\n\t\t\t return;\r\n \r\n\t\t }\r\n \r\n\t\t const startTime = this._startTime;\r\n \r\n\t\t if ( startTime !== null ) {\r\n \r\n\t\t\t // check for scheduled start of action\r\n \r\n\t\t\t const timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\t if ( timeRunning < 0 || timeDirection === 0 ) {\r\n \r\n\t\t\t\t return; // yet to come / don't decide when delta = 0\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // start\r\n \r\n\t\t\t this._startTime = null; // unschedule\r\n\t\t\t deltaTime = timeDirection * timeRunning;\r\n \r\n\t\t }\r\n \r\n\t\t // apply time scale and advance time\r\n \r\n\t\t deltaTime *= this._updateTimeScale( time );\r\n\t\t const clipTime = this._updateTime( deltaTime );\r\n \r\n\t\t // note: _updateTime may disable the action resulting in\r\n\t\t // an effective weight of 0\r\n \r\n\t\t const weight = this._updateWeight( time );\r\n \r\n\t\t if ( weight > 0 ) {\r\n \r\n\t\t\t const interpolants = this._interpolants;\r\n\t\t\t const propertyMixers = this._propertyBindings;\r\n \r\n\t\t\t switch ( this.blendMode ) {\r\n \r\n\t\t\t\t case AdditiveAnimationBlendMode:\r\n \r\n\t\t\t\t\t for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n \r\n\t\t\t\t\t\t interpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\t\t propertyMixers[ j ].accumulateAdditive( weight );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t break;\r\n \r\n\t\t\t\t case NormalAnimationBlendMode:\r\n\t\t\t\t default:\r\n \r\n\t\t\t\t\t for ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n \r\n\t\t\t\t\t\t interpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\t\t propertyMixers[ j ].accumulate( accuIndex, weight );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _updateWeight( time ) {\r\n \r\n\t\t let weight = 0;\r\n \r\n\t\t if ( this.enabled ) {\r\n \r\n\t\t\t weight = this.weight;\r\n\t\t\t const interpolant = this._weightInterpolant;\r\n \r\n\t\t\t if ( interpolant !== null ) {\r\n \r\n\t\t\t\t const interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n \r\n\t\t\t\t weight *= interpolantValue;\r\n \r\n\t\t\t\t if ( time > interpolant.parameterPositions[ 1 ] ) {\r\n \r\n\t\t\t\t\t this.stopFading();\r\n \r\n\t\t\t\t\t if ( interpolantValue === 0 ) {\r\n \r\n\t\t\t\t\t\t // faded out, disable\r\n\t\t\t\t\t\t this.enabled = false;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t this._effectiveWeight = weight;\r\n\t\t return weight;\r\n \r\n\t }\r\n \r\n\t _updateTimeScale( time ) {\r\n \r\n\t\t let timeScale = 0;\r\n \r\n\t\t if ( ! this.paused ) {\r\n \r\n\t\t\t timeScale = this.timeScale;\r\n \r\n\t\t\t const interpolant = this._timeScaleInterpolant;\r\n \r\n\t\t\t if ( interpolant !== null ) {\r\n \r\n\t\t\t\t const interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n \r\n\t\t\t\t timeScale *= interpolantValue;\r\n \r\n\t\t\t\t if ( time > interpolant.parameterPositions[ 1 ] ) {\r\n \r\n\t\t\t\t\t this.stopWarping();\r\n \r\n\t\t\t\t\t if ( timeScale === 0 ) {\r\n \r\n\t\t\t\t\t\t // motion has halted, pause\r\n\t\t\t\t\t\t this.paused = true;\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t // warp done - apply final time scale\r\n\t\t\t\t\t\t this.timeScale = timeScale;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t this._effectiveTimeScale = timeScale;\r\n\t\t return timeScale;\r\n \r\n\t }\r\n \r\n\t _updateTime( deltaTime ) {\r\n \r\n\t\t const duration = this._clip.duration;\r\n\t\t const loop = this.loop;\r\n \r\n\t\t let time = this.time + deltaTime;\r\n\t\t let loopCount = this._loopCount;\r\n \r\n\t\t const pingPong = ( loop === LoopPingPong );\r\n \r\n\t\t if ( deltaTime === 0 ) {\r\n \r\n\t\t\t if ( loopCount === - 1 ) return time;\r\n \r\n\t\t\t return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\r\n \r\n\t\t }\r\n \r\n\t\t if ( loop === LoopOnce ) {\r\n \r\n\t\t\t if ( loopCount === - 1 ) {\r\n \r\n\t\t\t\t // just started\r\n \r\n\t\t\t\t this._loopCount = 0;\r\n\t\t\t\t this._setEndings( true, true, false );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t handle_stop: {\r\n \r\n\t\t\t\t if ( time >= duration ) {\r\n \r\n\t\t\t\t\t time = duration;\r\n \r\n\t\t\t\t } else if ( time < 0 ) {\r\n \r\n\t\t\t\t\t time = 0;\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t this.time = time;\r\n \r\n\t\t\t\t\t break handle_stop;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t if ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t else this.enabled = false;\r\n \r\n\t\t\t\t this.time = time;\r\n \r\n\t\t\t\t this._mixer.dispatchEvent( {\r\n\t\t\t\t\t type: 'finished', action: this,\r\n\t\t\t\t\t direction: deltaTime < 0 ? - 1 : 1\r\n\t\t\t\t } );\r\n \r\n\t\t\t }\r\n \r\n\t\t } else { // repetitive Repeat or PingPong\r\n \r\n\t\t\t if ( loopCount === - 1 ) {\r\n \r\n\t\t\t\t // just started\r\n \r\n\t\t\t\t if ( deltaTime >= 0 ) {\r\n \r\n\t\t\t\t\t loopCount = 0;\r\n \r\n\t\t\t\t\t this._setEndings( true, this.repetitions === 0, pingPong );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // when looping in reverse direction, the initial\r\n\t\t\t\t\t // transition through zero counts as a repetition,\r\n\t\t\t\t\t // so leave loopCount at -1\r\n \r\n\t\t\t\t\t this._setEndings( this.repetitions === 0, true, pingPong );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( time >= duration || time < 0 ) {\r\n \r\n\t\t\t\t // wrap around\r\n \r\n\t\t\t\t const loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\t time -= duration * loopDelta;\r\n \r\n\t\t\t\t loopCount += Math.abs( loopDelta );\r\n \r\n\t\t\t\t const pending = this.repetitions - loopCount;\r\n \r\n\t\t\t\t if ( pending <= 0 ) {\r\n \r\n\t\t\t\t\t // have to stop (switch state, clamp time, fire event)\r\n \r\n\t\t\t\t\t if ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\t else this.enabled = false;\r\n \r\n\t\t\t\t\t time = deltaTime > 0 ? duration : 0;\r\n \r\n\t\t\t\t\t this.time = time;\r\n \r\n\t\t\t\t\t this._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t type: 'finished', action: this,\r\n\t\t\t\t\t\t direction: deltaTime > 0 ? 1 : - 1\r\n\t\t\t\t\t } );\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // keep running\r\n \r\n\t\t\t\t\t if ( pending === 1 ) {\r\n \r\n\t\t\t\t\t\t // entering the last round\r\n \r\n\t\t\t\t\t\t const atStart = deltaTime < 0;\r\n\t\t\t\t\t\t this._setEndings( atStart, ! atStart, pingPong );\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t this._setEndings( false, false, pingPong );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t this._loopCount = loopCount;\r\n \r\n\t\t\t\t\t this.time = time;\r\n \r\n\t\t\t\t\t this._mixer.dispatchEvent( {\r\n\t\t\t\t\t\t type: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t } );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t this.time = time;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n \r\n\t\t\t\t // invert time for the \"pong round\"\r\n \r\n\t\t\t\t return duration - time;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t return time;\r\n \r\n\t }\r\n \r\n\t _setEndings( atStart, atEnd, pingPong ) {\r\n \r\n\t\t const settings = this._interpolantSettings;\r\n \r\n\t\t if ( pingPong ) {\r\n \r\n\t\t\t settings.endingStart = ZeroSlopeEnding;\r\n\t\t\t settings.endingEnd = ZeroSlopeEnding;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t // assuming for LoopOnce atStart == atEnd == true\r\n \r\n\t\t\t if ( atStart ) {\r\n \r\n\t\t\t\t settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t settings.endingStart = WrapAroundEnding;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( atEnd ) {\r\n \r\n\t\t\t\t settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t settings.endingEnd \t = WrapAroundEnding;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _scheduleFading( duration, weightNow, weightThen ) {\r\n \r\n\t\t const mixer = this._mixer, now = mixer.time;\r\n\t\t let interpolant = this._weightInterpolant;\r\n \r\n\t\t if ( interpolant === null ) {\r\n \r\n\t\t\t interpolant = mixer._lendControlInterpolant();\r\n\t\t\t this._weightInterpolant = interpolant;\r\n \r\n\t\t }\r\n \r\n\t\t const times = interpolant.parameterPositions,\r\n\t\t\t values = interpolant.sampleValues;\r\n \r\n\t\t times[ 0 ] = now;\r\n\t\t values[ 0 ] = weightNow;\r\n\t\t times[ 1 ] = now + duration;\r\n\t\t values[ 1 ] = weightThen;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class AnimationMixer extends EventDispatcher {\r\n \r\n\t constructor( root ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this._root = root;\r\n\t\t this._initMemoryManager();\r\n\t\t this._accuIndex = 0;\r\n\t\t this.time = 0;\r\n\t\t this.timeScale = 1.0;\r\n \r\n\t }\r\n \r\n\t _bindAction( action, prototypeAction ) {\r\n \r\n\t\t const root = action._localRoot || this._root,\r\n\t\t\t tracks = action._clip.tracks,\r\n\t\t\t nTracks = tracks.length,\r\n\t\t\t bindings = action._propertyBindings,\r\n\t\t\t interpolants = action._interpolants,\r\n\t\t\t rootUuid = root.uuid,\r\n\t\t\t bindingsByRoot = this._bindingsByRootAndName;\r\n \r\n\t\t let bindingsByName = bindingsByRoot[ rootUuid ];\r\n \r\n\t\t if ( bindingsByName === undefined ) {\r\n \r\n\t\t\t bindingsByName = {};\r\n\t\t\t bindingsByRoot[ rootUuid ] = bindingsByName;\r\n \r\n\t\t }\r\n \r\n\t\t for ( let i = 0; i !== nTracks; ++ i ) {\r\n \r\n\t\t\t const track = tracks[ i ],\r\n\t\t\t\t trackName = track.name;\r\n \r\n\t\t\t let binding = bindingsByName[ trackName ];\r\n \r\n\t\t\t if ( binding !== undefined ) {\r\n \r\n\t\t\t\t ++ binding.referenceCount;\r\n\t\t\t\t bindings[ i ] = binding;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t binding = bindings[ i ];\r\n \r\n\t\t\t\t if ( binding !== undefined ) {\r\n \r\n\t\t\t\t\t // existing binding, make sure the cache knows\r\n \r\n\t\t\t\t\t if ( binding._cacheIndex === null ) {\r\n \r\n\t\t\t\t\t\t ++ binding.referenceCount;\r\n\t\t\t\t\t\t this._addInactiveBinding( binding, rootUuid, trackName );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t continue;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t\t const path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t _propertyBindings[ i ].binding.parsedPath;\r\n \r\n\t\t\t\t binding = new PropertyMixer(\r\n\t\t\t\t\t PropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t track.ValueTypeName, track.getValueSize() );\r\n \r\n\t\t\t\t ++ binding.referenceCount;\r\n\t\t\t\t this._addInactiveBinding( binding, rootUuid, trackName );\r\n \r\n\t\t\t\t bindings[ i ] = binding;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t interpolants[ i ].resultBuffer = binding.buffer;\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _activateAction( action ) {\r\n \r\n\t\t if ( ! this._isActiveAction( action ) ) {\r\n \r\n\t\t\t if ( action._cacheIndex === null ) {\r\n \r\n\t\t\t\t // this action has been forgotten by the cache, but the user\r\n\t\t\t\t // appears to be still using it -> rebind\r\n \r\n\t\t\t\t const rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\t clipUuid = action._clip.uuid,\r\n\t\t\t\t\t actionsForClip = this._actionsByClip[ clipUuid ];\r\n \r\n\t\t\t\t this._bindAction( action,\r\n\t\t\t\t\t actionsForClip && actionsForClip.knownActions[ 0 ] );\r\n \r\n\t\t\t\t this._addInactiveAction( action, clipUuid, rootUuid );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t const bindings = action._propertyBindings;\r\n \r\n\t\t\t // increment reference counts / sort out state\r\n\t\t\t for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n \r\n\t\t\t\t const binding = bindings[ i ];\r\n \r\n\t\t\t\t if ( binding.useCount ++ === 0 ) {\r\n \r\n\t\t\t\t\t this._lendBinding( binding );\r\n\t\t\t\t\t binding.saveOriginalState();\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this._lendAction( action );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _deactivateAction( action ) {\r\n \r\n\t\t if ( this._isActiveAction( action ) ) {\r\n \r\n\t\t\t const bindings = action._propertyBindings;\r\n \r\n\t\t\t // decrement reference counts / sort out state\r\n\t\t\t for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n \r\n\t\t\t\t const binding = bindings[ i ];\r\n \r\n\t\t\t\t if ( -- binding.useCount === 0 ) {\r\n \r\n\t\t\t\t\t binding.restoreOriginalState();\r\n\t\t\t\t\t this._takeBackBinding( binding );\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t this._takeBackAction( action );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // Memory manager\r\n \r\n\t _initMemoryManager() {\r\n \r\n\t\t this._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\t this._nActiveActions = 0;\r\n \r\n\t\t this._actionsByClip = {};\r\n\t\t // inside:\r\n\t\t // {\r\n\t\t // \tknownActions: Array< AnimationAction > - used as prototypes\r\n\t\t // \tactionByRoot: AnimationAction - lookup\r\n\t\t // }\r\n \r\n \r\n\t\t this._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\t this._nActiveBindings = 0;\r\n \r\n\t\t this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n \r\n \r\n\t\t this._controlInterpolants = []; // same game as above\r\n\t\t this._nActiveControlInterpolants = 0;\r\n \r\n\t\t const scope = this;\r\n \r\n\t\t this.stats = {\r\n \r\n\t\t\t actions: {\r\n\t\t\t\t get total() {\r\n \r\n\t\t\t\t\t return scope._actions.length;\r\n \r\n\t\t\t\t },\r\n\t\t\t\t get inUse() {\r\n \r\n\t\t\t\t\t return scope._nActiveActions;\r\n \r\n\t\t\t\t }\r\n\t\t\t },\r\n\t\t\t bindings: {\r\n\t\t\t\t get total() {\r\n \r\n\t\t\t\t\t return scope._bindings.length;\r\n \r\n\t\t\t\t },\r\n\t\t\t\t get inUse() {\r\n \r\n\t\t\t\t\t return scope._nActiveBindings;\r\n \r\n\t\t\t\t }\r\n\t\t\t },\r\n\t\t\t controlInterpolants: {\r\n\t\t\t\t get total() {\r\n \r\n\t\t\t\t\t return scope._controlInterpolants.length;\r\n \r\n\t\t\t\t },\r\n\t\t\t\t get inUse() {\r\n \r\n\t\t\t\t\t return scope._nActiveControlInterpolants;\r\n \r\n\t\t\t\t }\r\n\t\t\t }\r\n \r\n\t\t };\r\n \r\n\t }\r\n \r\n\t // Memory management for AnimationAction objects\r\n \r\n\t _isActiveAction( action ) {\r\n \r\n\t\t const index = action._cacheIndex;\r\n\t\t return index !== null && index < this._nActiveActions;\r\n \r\n\t }\r\n \r\n\t _addInactiveAction( action, clipUuid, rootUuid ) {\r\n \r\n\t\t const actions = this._actions,\r\n\t\t\t actionsByClip = this._actionsByClip;\r\n \r\n\t\t let actionsForClip = actionsByClip[ clipUuid ];\r\n \r\n\t\t if ( actionsForClip === undefined ) {\r\n \r\n\t\t\t actionsForClip = {\r\n \r\n\t\t\t\t knownActions: [ action ],\r\n\t\t\t\t actionByRoot: {}\r\n \r\n\t\t\t };\r\n \r\n\t\t\t action._byClipCacheIndex = 0;\r\n \r\n\t\t\t actionsByClip[ clipUuid ] = actionsForClip;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const knownActions = actionsForClip.knownActions;\r\n \r\n\t\t\t action._byClipCacheIndex = knownActions.length;\r\n\t\t\t knownActions.push( action );\r\n \r\n\t\t }\r\n \r\n\t\t action._cacheIndex = actions.length;\r\n\t\t actions.push( action );\r\n \r\n\t\t actionsForClip.actionByRoot[ rootUuid ] = action;\r\n \r\n\t }\r\n \r\n\t _removeInactiveAction( action ) {\r\n \r\n\t\t const actions = this._actions,\r\n\t\t\t lastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\t cacheIndex = action._cacheIndex;\r\n \r\n\t\t lastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t actions[ cacheIndex ] = lastInactiveAction;\r\n\t\t actions.pop();\r\n \r\n\t\t action._cacheIndex = null;\r\n \r\n \r\n\t\t const clipUuid = action._clip.uuid,\r\n\t\t\t actionsByClip = this._actionsByClip,\r\n\t\t\t actionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\t knownActionsForClip = actionsForClip.knownActions,\r\n \r\n\t\t\t lastKnownAction =\r\n\t\t\t\t knownActionsForClip[ knownActionsForClip.length - 1 ],\r\n \r\n\t\t\t byClipCacheIndex = action._byClipCacheIndex;\r\n \r\n\t\t lastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\t knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\t knownActionsForClip.pop();\r\n \r\n\t\t action._byClipCacheIndex = null;\r\n \r\n \r\n\t\t const actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\t rootUuid = ( action._localRoot || this._root ).uuid;\r\n \r\n\t\t delete actionByRoot[ rootUuid ];\r\n \r\n\t\t if ( knownActionsForClip.length === 0 ) {\r\n \r\n\t\t\t delete actionsByClip[ clipUuid ];\r\n \r\n\t\t }\r\n \r\n\t\t this._removeInactiveBindingsForAction( action );\r\n \r\n\t }\r\n \r\n\t _removeInactiveBindingsForAction( action ) {\r\n \r\n\t\t const bindings = action._propertyBindings;\r\n \r\n\t\t for ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n \r\n\t\t\t const binding = bindings[ i ];\r\n \r\n\t\t\t if ( -- binding.referenceCount === 0 ) {\r\n \r\n\t\t\t\t this._removeInactiveBinding( binding );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _lendAction( action ) {\r\n \r\n\t\t // [ active actions |  inactive actions  ]\r\n\t\t // [  active actions >| inactive actions ]\r\n\t\t //                 s        a\r\n\t\t //                  <-swap->\r\n\t\t //                 a        s\r\n \r\n\t\t const actions = this._actions,\r\n\t\t\t prevIndex = action._cacheIndex,\r\n \r\n\t\t\t lastActiveIndex = this._nActiveActions ++,\r\n \r\n\t\t\t firstInactiveAction = actions[ lastActiveIndex ];\r\n \r\n\t\t action._cacheIndex = lastActiveIndex;\r\n\t\t actions[ lastActiveIndex ] = action;\r\n \r\n\t\t firstInactiveAction._cacheIndex = prevIndex;\r\n\t\t actions[ prevIndex ] = firstInactiveAction;\r\n \r\n\t }\r\n \r\n\t _takeBackAction( action ) {\r\n \r\n\t\t // [  active actions  | inactive actions ]\r\n\t\t // [ active actions |< inactive actions  ]\r\n\t\t //        a        s\r\n\t\t //         <-swap->\r\n\t\t //        s        a\r\n \r\n\t\t const actions = this._actions,\r\n\t\t\t prevIndex = action._cacheIndex,\r\n \r\n\t\t\t firstInactiveIndex = -- this._nActiveActions,\r\n \r\n\t\t\t lastActiveAction = actions[ firstInactiveIndex ];\r\n \r\n\t\t action._cacheIndex = firstInactiveIndex;\r\n\t\t actions[ firstInactiveIndex ] = action;\r\n \r\n\t\t lastActiveAction._cacheIndex = prevIndex;\r\n\t\t actions[ prevIndex ] = lastActiveAction;\r\n \r\n\t }\r\n \r\n\t // Memory management for PropertyMixer objects\r\n \r\n\t _addInactiveBinding( binding, rootUuid, trackName ) {\r\n \r\n\t\t const bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t bindings = this._bindings;\r\n \r\n\t\t let bindingByName = bindingsByRoot[ rootUuid ];\r\n \r\n\t\t if ( bindingByName === undefined ) {\r\n \r\n\t\t\t bindingByName = {};\r\n\t\t\t bindingsByRoot[ rootUuid ] = bindingByName;\r\n \r\n\t\t }\r\n \r\n\t\t bindingByName[ trackName ] = binding;\r\n \r\n\t\t binding._cacheIndex = bindings.length;\r\n\t\t bindings.push( binding );\r\n \r\n\t }\r\n \r\n\t _removeInactiveBinding( binding ) {\r\n \r\n\t\t const bindings = this._bindings,\r\n\t\t\t propBinding = binding.binding,\r\n\t\t\t rootUuid = propBinding.rootNode.uuid,\r\n\t\t\t trackName = propBinding.path,\r\n\t\t\t bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t bindingByName = bindingsByRoot[ rootUuid ],\r\n \r\n\t\t\t lastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\t cacheIndex = binding._cacheIndex;\r\n \r\n\t\t lastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\t bindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\t bindings.pop();\r\n \r\n\t\t delete bindingByName[ trackName ];\r\n \r\n\t\t if ( Object.keys( bindingByName ).length === 0 ) {\r\n \r\n\t\t\t delete bindingsByRoot[ rootUuid ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t _lendBinding( binding ) {\r\n \r\n\t\t const bindings = this._bindings,\r\n\t\t\t prevIndex = binding._cacheIndex,\r\n \r\n\t\t\t lastActiveIndex = this._nActiveBindings ++,\r\n \r\n\t\t\t firstInactiveBinding = bindings[ lastActiveIndex ];\r\n \r\n\t\t binding._cacheIndex = lastActiveIndex;\r\n\t\t bindings[ lastActiveIndex ] = binding;\r\n \r\n\t\t firstInactiveBinding._cacheIndex = prevIndex;\r\n\t\t bindings[ prevIndex ] = firstInactiveBinding;\r\n \r\n\t }\r\n \r\n\t _takeBackBinding( binding ) {\r\n \r\n\t\t const bindings = this._bindings,\r\n\t\t\t prevIndex = binding._cacheIndex,\r\n \r\n\t\t\t firstInactiveIndex = -- this._nActiveBindings,\r\n \r\n\t\t\t lastActiveBinding = bindings[ firstInactiveIndex ];\r\n \r\n\t\t binding._cacheIndex = firstInactiveIndex;\r\n\t\t bindings[ firstInactiveIndex ] = binding;\r\n \r\n\t\t lastActiveBinding._cacheIndex = prevIndex;\r\n\t\t bindings[ prevIndex ] = lastActiveBinding;\r\n \r\n\t }\r\n \r\n \r\n\t // Memory management of Interpolants for weight and time scale\r\n \r\n\t _lendControlInterpolant() {\r\n \r\n\t\t const interpolants = this._controlInterpolants,\r\n\t\t\t lastActiveIndex = this._nActiveControlInterpolants ++;\r\n \r\n\t\t let interpolant = interpolants[ lastActiveIndex ];\r\n \r\n\t\t if ( interpolant === undefined ) {\r\n \r\n\t\t\t interpolant = new LinearInterpolant(\r\n\t\t\t\t new Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t 1, this._controlInterpolantsResultBuffer );\r\n \r\n\t\t\t interpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\t interpolants[ lastActiveIndex ] = interpolant;\r\n \r\n\t\t }\r\n \r\n\t\t return interpolant;\r\n \r\n\t }\r\n \r\n\t _takeBackControlInterpolant( interpolant ) {\r\n \r\n\t\t const interpolants = this._controlInterpolants,\r\n\t\t\t prevIndex = interpolant.__cacheIndex,\r\n \r\n\t\t\t firstInactiveIndex = -- this._nActiveControlInterpolants,\r\n \r\n\t\t\t lastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n \r\n\t\t interpolant.__cacheIndex = firstInactiveIndex;\r\n\t\t interpolants[ firstInactiveIndex ] = interpolant;\r\n \r\n\t\t lastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\t interpolants[ prevIndex ] = lastActiveInterpolant;\r\n \r\n\t }\r\n \r\n\t // return an action for a clip optionally using a custom root target\r\n\t // object (this method allocates a lot of dynamic memory in case a\r\n\t // previously unknown clip/root combination is specified)\r\n\t clipAction( clip, optionalRoot, blendMode ) {\r\n \r\n\t\t const root = optionalRoot || this._root,\r\n\t\t\t rootUuid = root.uuid;\r\n \r\n\t\t let clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\r\n \r\n\t\t const clipUuid = clipObject !== null ? clipObject.uuid : clip;\r\n \r\n\t\t const actionsForClip = this._actionsByClip[ clipUuid ];\r\n\t\t let prototypeAction = null;\r\n \r\n\t\t if ( blendMode === undefined ) {\r\n \r\n\t\t\t if ( clipObject !== null ) {\r\n \r\n\t\t\t\t blendMode = clipObject.blendMode;\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t blendMode = NormalAnimationBlendMode;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t if ( actionsForClip !== undefined ) {\r\n \r\n\t\t\t const existingAction = actionsForClip.actionByRoot[ rootUuid ];\r\n \r\n\t\t\t if ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\r\n \r\n\t\t\t\t return existingAction;\r\n \r\n\t\t\t }\r\n \r\n\t\t\t // we know the clip, so we don't have to parse all\r\n\t\t\t // the bindings again but can just copy\r\n\t\t\t prototypeAction = actionsForClip.knownActions[ 0 ];\r\n \r\n\t\t\t // also, take the clip from the prototype action\r\n\t\t\t if ( clipObject === null )\r\n\t\t\t\t clipObject = prototypeAction._clip;\r\n \r\n\t\t }\r\n \r\n\t\t // clip must be known when specified via string\r\n\t\t if ( clipObject === null ) return null;\r\n \r\n\t\t // allocate all resources required to run it\r\n\t\t const newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\r\n \r\n\t\t this._bindAction( newAction, prototypeAction );\r\n \r\n\t\t // and make the action known to the memory manager\r\n\t\t this._addInactiveAction( newAction, clipUuid, rootUuid );\r\n \r\n\t\t return newAction;\r\n \r\n\t }\r\n \r\n\t // get an existing action\r\n\t existingAction( clip, optionalRoot ) {\r\n \r\n\t\t const root = optionalRoot || this._root,\r\n\t\t\t rootUuid = root.uuid,\r\n \r\n\t\t\t clipObject = typeof clip === 'string' ?\r\n\t\t\t\t AnimationClip.findByName( root, clip ) : clip,\r\n \r\n\t\t\t clipUuid = clipObject ? clipObject.uuid : clip,\r\n \r\n\t\t\t actionsForClip = this._actionsByClip[ clipUuid ];\r\n \r\n\t\t if ( actionsForClip !== undefined ) {\r\n \r\n\t\t\t return actionsForClip.actionByRoot[ rootUuid ] || null;\r\n \r\n\t\t }\r\n \r\n\t\t return null;\r\n \r\n\t }\r\n \r\n\t // deactivates all previously scheduled actions\r\n\t stopAllAction() {\r\n \r\n\t\t const actions = this._actions,\r\n\t\t\t nActions = this._nActiveActions;\r\n \r\n\t\t for ( let i = nActions - 1; i >= 0; -- i ) {\r\n \r\n\t\t\t actions[ i ].stop();\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // advance the time and update apply the animation\r\n\t update( deltaTime ) {\r\n \r\n\t\t deltaTime *= this.timeScale;\r\n \r\n\t\t const actions = this._actions,\r\n\t\t\t nActions = this._nActiveActions,\r\n \r\n\t\t\t time = this.time += deltaTime,\r\n\t\t\t timeDirection = Math.sign( deltaTime ),\r\n \r\n\t\t\t accuIndex = this._accuIndex ^= 1;\r\n \r\n\t\t // run active actions\r\n \r\n\t\t for ( let i = 0; i !== nActions; ++ i ) {\r\n \r\n\t\t\t const action = actions[ i ];\r\n \r\n\t\t\t action._update( time, deltaTime, timeDirection, accuIndex );\r\n \r\n\t\t }\r\n \r\n\t\t // update scene graph\r\n \r\n\t\t const bindings = this._bindings,\r\n\t\t\t nBindings = this._nActiveBindings;\r\n \r\n\t\t for ( let i = 0; i !== nBindings; ++ i ) {\r\n \r\n\t\t\t bindings[ i ].apply( accuIndex );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // Allows you to seek to a specific time in an animation.\r\n\t setTime( timeInSeconds ) {\r\n \r\n\t\t this.time = 0; // Zero out time attribute for AnimationMixer object;\r\n\t\t for ( let i = 0; i < this._actions.length; i ++ ) {\r\n \r\n\t\t\t this._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\r\n \r\n\t\t }\r\n \r\n\t\t return this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\r\n \r\n\t }\r\n \r\n\t // return this mixer's root target object\r\n\t getRoot() {\r\n \r\n\t\t return this._root;\r\n \r\n\t }\r\n \r\n\t // free all resources specific to a particular clip\r\n\t uncacheClip( clip ) {\r\n \r\n\t\t const actions = this._actions,\r\n\t\t\t clipUuid = clip.uuid,\r\n\t\t\t actionsByClip = this._actionsByClip,\r\n\t\t\t actionsForClip = actionsByClip[ clipUuid ];\r\n \r\n\t\t if ( actionsForClip !== undefined ) {\r\n \r\n\t\t\t // note: just calling _removeInactiveAction would mess up the\r\n\t\t\t // iteration state and also require updating the state we can\r\n\t\t\t // just throw away\r\n \r\n\t\t\t const actionsToRemove = actionsForClip.knownActions;\r\n \r\n\t\t\t for ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n \r\n\t\t\t\t const action = actionsToRemove[ i ];\r\n \r\n\t\t\t\t this._deactivateAction( action );\r\n \r\n\t\t\t\t const cacheIndex = action._cacheIndex,\r\n\t\t\t\t\t lastInactiveAction = actions[ actions.length - 1 ];\r\n \r\n\t\t\t\t action._cacheIndex = null;\r\n\t\t\t\t action._byClipCacheIndex = null;\r\n \r\n\t\t\t\t lastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\t actions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\t actions.pop();\r\n \r\n\t\t\t\t this._removeInactiveBindingsForAction( action );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t delete actionsByClip[ clipUuid ];\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // free all resources specific to a particular root target object\r\n\t uncacheRoot( root ) {\r\n \r\n\t\t const rootUuid = root.uuid,\r\n\t\t\t actionsByClip = this._actionsByClip;\r\n \r\n\t\t for ( const clipUuid in actionsByClip ) {\r\n \r\n\t\t\t const actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\t action = actionByRoot[ rootUuid ];\r\n \r\n\t\t\t if ( action !== undefined ) {\r\n \r\n\t\t\t\t this._deactivateAction( action );\r\n\t\t\t\t this._removeInactiveAction( action );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\t bindingByName = bindingsByRoot[ rootUuid ];\r\n \r\n\t\t if ( bindingByName !== undefined ) {\r\n \r\n\t\t\t for ( const trackName in bindingByName ) {\r\n \r\n\t\t\t\t const binding = bindingByName[ trackName ];\r\n\t\t\t\t binding.restoreOriginalState();\r\n\t\t\t\t this._removeInactiveBinding( binding );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t // remove a targeted clip from the cache\r\n\t uncacheAction( clip, optionalRoot ) {\r\n \r\n\t\t const action = this.existingAction( clip, optionalRoot );\r\n \r\n\t\t if ( action !== null ) {\r\n \r\n\t\t\t this._deactivateAction( action );\r\n\t\t\t this._removeInactiveAction( action );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n AnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array( 1 );\r\n \r\n class Uniform {\r\n \r\n\t constructor( value ) {\r\n \r\n\t\t if ( typeof value === 'string' ) {\r\n \r\n\t\t\t console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\r\n\t\t\t value = arguments[ 1 ];\r\n \r\n\t\t }\r\n \r\n\t\t this.value = value;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class InstancedInterleavedBuffer extends InterleavedBuffer {\r\n \r\n\t constructor( array, stride, meshPerAttribute = 1 ) {\r\n \r\n\t\t super( array, stride );\r\n \r\n\t\t this.meshPerAttribute = meshPerAttribute;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source );\r\n \r\n\t\t this.meshPerAttribute = source.meshPerAttribute;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone( data ) {\r\n \r\n\t\t const ib = super.clone( data );\r\n \r\n\t\t ib.meshPerAttribute = this.meshPerAttribute;\r\n \r\n\t\t return ib;\r\n \r\n\t }\r\n \r\n\t toJSON( data ) {\r\n \r\n\t\t const json = super.toJSON( data );\r\n \r\n\t\t json.isInstancedInterleavedBuffer = true;\r\n\t\t json.meshPerAttribute = this.meshPerAttribute;\r\n \r\n\t\t return json;\r\n \r\n\t }\r\n \r\n }\r\n \r\n InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\r\n \r\n class GLBufferAttribute {\r\n \r\n\t constructor( buffer, type, itemSize, elementSize, count ) {\r\n \r\n\t\t this.buffer = buffer;\r\n\t\t this.type = type;\r\n\t\t this.itemSize = itemSize;\r\n\t\t this.elementSize = elementSize;\r\n\t\t this.count = count;\r\n \r\n\t\t this.version = 0;\r\n \r\n\t }\r\n \r\n\t set needsUpdate( value ) {\r\n \r\n\t\t if ( value === true ) this.version ++;\r\n \r\n\t }\r\n \r\n\t setBuffer( buffer ) {\r\n \r\n\t\t this.buffer = buffer;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setType( type, elementSize ) {\r\n \r\n\t\t this.type = type;\r\n\t\t this.elementSize = elementSize;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setItemSize( itemSize ) {\r\n \r\n\t\t this.itemSize = itemSize;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setCount( count ) {\r\n \r\n\t\t this.count = count;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n GLBufferAttribute.prototype.isGLBufferAttribute = true;\r\n \r\n class Raycaster {\r\n \r\n\t constructor( origin, direction, near = 0, far = Infinity ) {\r\n \r\n\t\t this.ray = new Ray( origin, direction );\r\n\t\t // direction is assumed to be normalized (for accurate distance calculations)\r\n \r\n\t\t this.near = near;\r\n\t\t this.far = far;\r\n\t\t this.camera = null;\r\n\t\t this.layers = new Layers();\r\n \r\n\t\t this.params = {\r\n\t\t\t Mesh: {},\r\n\t\t\t Line: { threshold: 1 },\r\n\t\t\t LOD: {},\r\n\t\t\t Points: { threshold: 1 },\r\n\t\t\t Sprite: {}\r\n\t\t };\r\n \r\n\t }\r\n \r\n\t set( origin, direction ) {\r\n \r\n\t\t // direction is assumed to be normalized (for accurate distance calculations)\r\n \r\n\t\t this.ray.set( origin, direction );\r\n \r\n\t }\r\n \r\n\t setFromCamera( coords, camera ) {\r\n \r\n\t\t if ( camera.isPerspectiveCamera ) {\r\n \r\n\t\t\t this.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\t\t this.camera = camera;\r\n \r\n\t\t } else if ( camera.isOrthographicCamera ) {\r\n \r\n\t\t\t this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n\t\t\t this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\t\t this.camera = camera;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t console.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t intersectObject( object, recursive = true, intersects = [] ) {\r\n \r\n\t\t intersectObject( object, this, intersects, recursive );\r\n \r\n\t\t intersects.sort( ascSort );\r\n \r\n\t\t return intersects;\r\n \r\n\t }\r\n \r\n\t intersectObjects( objects, recursive = true, intersects = [] ) {\r\n \r\n\t\t for ( let i = 0, l = objects.length; i < l; i ++ ) {\r\n \r\n\t\t\t intersectObject( objects[ i ], this, intersects, recursive );\r\n \r\n\t\t }\r\n \r\n\t\t intersects.sort( ascSort );\r\n \r\n\t\t return intersects;\r\n \r\n\t }\r\n \r\n }\r\n \r\n function ascSort( a, b ) {\r\n \r\n\t return a.distance - b.distance;\r\n \r\n }\r\n \r\n function intersectObject( object, raycaster, intersects, recursive ) {\r\n \r\n\t if ( object.layers.test( raycaster.layers ) ) {\r\n \r\n\t\t object.raycast( raycaster, intersects );\r\n \r\n\t }\r\n \r\n\t if ( recursive === true ) {\r\n \r\n\t\t const children = object.children;\r\n \r\n\t\t for ( let i = 0, l = children.length; i < l; i ++ ) {\r\n \r\n\t\t\t intersectObject( children[ i ], raycaster, intersects, true );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n  *\r\n  * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n  * The azimuthal angle (theta) is measured from the positive z-axis.\r\n  */\r\n \r\n class Spherical {\r\n \r\n\t constructor( radius = 1, phi = 0, theta = 0 ) {\r\n \r\n\t\t this.radius = radius;\r\n\t\t this.phi = phi; // polar angle\r\n\t\t this.theta = theta; // azimuthal angle\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t set( radius, phi, theta ) {\r\n \r\n\t\t this.radius = radius;\r\n\t\t this.phi = phi;\r\n\t\t this.theta = theta;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( other ) {\r\n \r\n\t\t this.radius = other.radius;\r\n\t\t this.phi = other.phi;\r\n\t\t this.theta = other.theta;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t // restrict phi to be betwee EPS and PI-EPS\r\n\t makeSafe() {\r\n \r\n\t\t const EPS = 0.000001;\r\n\t\t this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromVector3( v ) {\r\n \r\n\t\t return this.setFromCartesianCoords( v.x, v.y, v.z );\r\n \r\n\t }\r\n \r\n\t setFromCartesianCoords( x, y, z ) {\r\n \r\n\t\t this.radius = Math.sqrt( x * x + y * y + z * z );\r\n \r\n\t\t if ( this.radius === 0 ) {\r\n \r\n\t\t\t this.theta = 0;\r\n\t\t\t this.phi = 0;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.theta = Math.atan2( x, z );\r\n\t\t\t this.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n /**\r\n  * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n  */\r\n \r\n class Cylindrical {\r\n \r\n\t constructor( radius = 1, theta = 0, y = 0 ) {\r\n \r\n\t\t this.radius = radius; // distance from the origin to a point in the x-z plane\r\n\t\t this.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\t\t this.y = y; // height above the x-z plane\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t set( radius, theta, y ) {\r\n \r\n\t\t this.radius = radius;\r\n\t\t this.theta = theta;\r\n\t\t this.y = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( other ) {\r\n \r\n\t\t this.radius = other.radius;\r\n\t\t this.theta = other.theta;\r\n\t\t this.y = other.y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromVector3( v ) {\r\n \r\n\t\t return this.setFromCartesianCoords( v.x, v.y, v.z );\r\n \r\n\t }\r\n \r\n\t setFromCartesianCoords( x, y, z ) {\r\n \r\n\t\t this.radius = Math.sqrt( x * x + z * z );\r\n\t\t this.theta = Math.atan2( x, z );\r\n\t\t this.y = y;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _vector$4 = /*@__PURE__*/ new Vector2();\r\n \r\n class Box2 {\r\n \r\n\t constructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\r\n \r\n\t\t this.min = min;\r\n\t\t this.max = max;\r\n \r\n\t }\r\n \r\n\t set( min, max ) {\r\n \r\n\t\t this.min.copy( min );\r\n\t\t this.max.copy( max );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromPoints( points ) {\r\n \r\n\t\t this.makeEmpty();\r\n \r\n\t\t for ( let i = 0, il = points.length; i < il; i ++ ) {\r\n \r\n\t\t\t this.expandByPoint( points[ i ] );\r\n \r\n\t\t }\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t setFromCenterAndSize( center, size ) {\r\n \r\n\t\t const halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\r\n\t\t this.min.copy( center ).sub( halfSize );\r\n\t\t this.max.copy( center ).add( halfSize );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n\t copy( box ) {\r\n \r\n\t\t this.min.copy( box.min );\r\n\t\t this.max.copy( box.max );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t makeEmpty() {\r\n \r\n\t\t this.min.x = this.min.y = + Infinity;\r\n\t\t this.max.x = this.max.y = - Infinity;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t isEmpty() {\r\n \r\n\t\t // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n \r\n\t\t return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n \r\n\t }\r\n \r\n\t getCenter( target ) {\r\n \r\n\t\t return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n \r\n\t }\r\n \r\n\t getSize( target ) {\r\n \r\n\t\t return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n \r\n\t }\r\n \r\n\t expandByPoint( point ) {\r\n \r\n\t\t this.min.min( point );\r\n\t\t this.max.max( point );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t expandByVector( vector ) {\r\n \r\n\t\t this.min.sub( vector );\r\n\t\t this.max.add( vector );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t expandByScalar( scalar ) {\r\n \r\n\t\t this.min.addScalar( - scalar );\r\n\t\t this.max.addScalar( scalar );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t containsPoint( point ) {\r\n \r\n\t\t return point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t point.y < this.min.y || point.y > this.max.y ? false : true;\r\n \r\n\t }\r\n \r\n\t containsBox( box ) {\r\n \r\n\t\t return this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\t this.min.y <= box.min.y && box.max.y <= this.max.y;\r\n \r\n\t }\r\n \r\n\t getParameter( point, target ) {\r\n \r\n\t\t // This can potentially have a divide by zero if the box\r\n\t\t // has a size dimension of 0.\r\n \r\n\t\t return target.set(\r\n\t\t\t ( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t ( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t );\r\n \r\n\t }\r\n \r\n\t intersectsBox( box ) {\r\n \r\n\t\t // using 4 splitting planes to rule out intersections\r\n \r\n\t\t return box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\r\n \r\n\t }\r\n \r\n\t clampPoint( point, target ) {\r\n \r\n\t\t return target.copy( point ).clamp( this.min, this.max );\r\n \r\n\t }\r\n \r\n\t distanceToPoint( point ) {\r\n \r\n\t\t const clampedPoint = _vector$4.copy( point ).clamp( this.min, this.max );\r\n\t\t return clampedPoint.sub( point ).length();\r\n \r\n\t }\r\n \r\n\t intersect( box ) {\r\n \r\n\t\t this.min.max( box.min );\r\n\t\t this.max.min( box.max );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t union( box ) {\r\n \r\n\t\t this.min.min( box.min );\r\n\t\t this.max.max( box.max );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t translate( offset ) {\r\n \r\n\t\t this.min.add( offset );\r\n\t\t this.max.add( offset );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( box ) {\r\n \r\n\t\t return box.min.equals( this.min ) && box.max.equals( this.max );\r\n \r\n\t }\r\n \r\n }\r\n \r\n Box2.prototype.isBox2 = true;\r\n \r\n const _startP = /*@__PURE__*/ new Vector3();\r\n const _startEnd = /*@__PURE__*/ new Vector3();\r\n \r\n class Line3 {\r\n \r\n\t constructor( start = new Vector3(), end = new Vector3() ) {\r\n \r\n\t\t this.start = start;\r\n\t\t this.end = end;\r\n \r\n\t }\r\n \r\n\t set( start, end ) {\r\n \r\n\t\t this.start.copy( start );\r\n\t\t this.end.copy( end );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( line ) {\r\n \r\n\t\t this.start.copy( line.start );\r\n\t\t this.end.copy( line.end );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t getCenter( target ) {\r\n \r\n\t\t return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n \r\n\t }\r\n \r\n\t delta( target ) {\r\n \r\n\t\t return target.subVectors( this.end, this.start );\r\n \r\n\t }\r\n \r\n\t distanceSq() {\r\n \r\n\t\t return this.start.distanceToSquared( this.end );\r\n \r\n\t }\r\n \r\n\t distance() {\r\n \r\n\t\t return this.start.distanceTo( this.end );\r\n \r\n\t }\r\n \r\n\t at( t, target ) {\r\n \r\n\t\t return this.delta( target ).multiplyScalar( t ).add( this.start );\r\n \r\n\t }\r\n \r\n\t closestPointToPointParameter( point, clampToLine ) {\r\n \r\n\t\t _startP.subVectors( point, this.start );\r\n\t\t _startEnd.subVectors( this.end, this.start );\r\n \r\n\t\t const startEnd2 = _startEnd.dot( _startEnd );\r\n\t\t const startEnd_startP = _startEnd.dot( _startP );\r\n \r\n\t\t let t = startEnd_startP / startEnd2;\r\n \r\n\t\t if ( clampToLine ) {\r\n \r\n\t\t\t t = clamp( t, 0, 1 );\r\n \r\n\t\t }\r\n \r\n\t\t return t;\r\n \r\n\t }\r\n \r\n\t closestPointToPoint( point, clampToLine, target ) {\r\n \r\n\t\t const t = this.closestPointToPointParameter( point, clampToLine );\r\n \r\n\t\t return this.delta( target ).multiplyScalar( t ).add( this.start );\r\n \r\n\t }\r\n \r\n\t applyMatrix4( matrix ) {\r\n \r\n\t\t this.start.applyMatrix4( matrix );\r\n\t\t this.end.applyMatrix4( matrix );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t equals( line ) {\r\n \r\n\t\t return line.start.equals( this.start ) && line.end.equals( this.end );\r\n \r\n\t }\r\n \r\n\t clone() {\r\n \r\n\t\t return new this.constructor().copy( this );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _vector$3 = /*@__PURE__*/ new Vector3();\r\n \r\n class SpotLightHelper extends Object3D {\r\n \r\n\t constructor( light, color ) {\r\n \r\n\t\t super();\r\n\t\t this.light = light;\r\n\t\t this.light.updateMatrixWorld();\r\n \r\n\t\t this.matrix = light.matrixWorld;\r\n\t\t this.matrixAutoUpdate = false;\r\n \r\n\t\t this.color = color;\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n \r\n\t\t const positions = [\r\n\t\t\t 0, 0, 0, \t0, 0, 1,\r\n\t\t\t 0, 0, 0, \t1, 0, 1,\r\n\t\t\t 0, 0, 0,\t- 1, 0, 1,\r\n\t\t\t 0, 0, 0, \t0, 1, 1,\r\n\t\t\t 0, 0, 0, \t0, - 1, 1\r\n\t\t ];\r\n \r\n\t\t for ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n \r\n\t\t\t const p1 = ( i / l ) * Math.PI * 2;\r\n\t\t\t const p2 = ( j / l ) * Math.PI * 2;\r\n \r\n\t\t\t positions.push(\r\n\t\t\t\t Math.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\t\t Math.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t\t );\r\n \r\n\t\t }\r\n \r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n \r\n\t\t const material = new LineBasicMaterial( { fog: false, toneMapped: false } );\r\n \r\n\t\t this.cone = new LineSegments( geometry, material );\r\n\t\t this.add( this.cone );\r\n \r\n\t\t this.update();\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.cone.geometry.dispose();\r\n\t\t this.cone.material.dispose();\r\n \r\n\t }\r\n \r\n\t update() {\r\n \r\n\t\t this.light.updateMatrixWorld();\r\n \r\n\t\t const coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\t const coneWidth = coneLength * Math.tan( this.light.angle );\r\n \r\n\t\t this.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n \r\n\t\t _vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\r\n \r\n\t\t this.cone.lookAt( _vector$3 );\r\n \r\n\t\t if ( this.color !== undefined ) {\r\n \r\n\t\t\t this.cone.material.color.set( this.color );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.cone.material.color.copy( this.light.color );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _vector$2 = /*@__PURE__*/ new Vector3();\r\n const _boneMatrix = /*@__PURE__*/ new Matrix4();\r\n const _matrixWorldInv = /*@__PURE__*/ new Matrix4();\r\n \r\n \r\n class SkeletonHelper extends LineSegments {\r\n \r\n\t constructor( object ) {\r\n \r\n\t\t const bones = getBoneList( object );\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n \r\n\t\t const vertices = [];\r\n\t\t const colors = [];\r\n \r\n\t\t const color1 = new Color( 0, 0, 1 );\r\n\t\t const color2 = new Color( 0, 1, 0 );\r\n \r\n\t\t for ( let i = 0; i < bones.length; i ++ ) {\r\n \r\n\t\t\t const bone = bones[ i ];\r\n \r\n\t\t\t if ( bone.parent && bone.parent.isBone ) {\r\n \r\n\t\t\t\t vertices.push( 0, 0, 0 );\r\n\t\t\t\t vertices.push( 0, 0, 0 );\r\n\t\t\t\t colors.push( color1.r, color1.g, color1.b );\r\n\t\t\t\t colors.push( color2.r, color2.g, color2.b );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n \r\n\t\t const material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'SkeletonHelper';\r\n\t\t this.isSkeletonHelper = true;\r\n \r\n\t\t this.root = object;\r\n\t\t this.bones = bones;\r\n \r\n\t\t this.matrix = object.matrixWorld;\r\n\t\t this.matrixAutoUpdate = false;\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t const bones = this.bones;\r\n \r\n\t\t const geometry = this.geometry;\r\n\t\t const position = geometry.getAttribute( 'position' );\r\n \r\n\t\t _matrixWorldInv.copy( this.root.matrixWorld ).invert();\r\n \r\n\t\t for ( let i = 0, j = 0; i < bones.length; i ++ ) {\r\n \r\n\t\t\t const bone = bones[ i ];\r\n \r\n\t\t\t if ( bone.parent && bone.parent.isBone ) {\r\n \r\n\t\t\t\t _boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\t _vector$2.setFromMatrixPosition( _boneMatrix );\r\n\t\t\t\t position.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\r\n \r\n\t\t\t\t _boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\t _vector$2.setFromMatrixPosition( _boneMatrix );\r\n\t\t\t\t position.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\r\n \r\n\t\t\t\t j += 2;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t geometry.getAttribute( 'position' ).needsUpdate = true;\r\n \r\n\t\t super.updateMatrixWorld( force );\r\n \r\n\t }\r\n \r\n }\r\n \r\n \r\n function getBoneList( object ) {\r\n \r\n\t const boneList = [];\r\n \r\n\t if ( object.isBone === true ) {\r\n \r\n\t\t boneList.push( object );\r\n \r\n\t }\r\n \r\n\t for ( let i = 0; i < object.children.length; i ++ ) {\r\n \r\n\t\t boneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\r\n \r\n\t }\r\n \r\n\t return boneList;\r\n \r\n }\r\n \r\n class PointLightHelper extends Mesh {\r\n \r\n\t constructor( light, sphereSize, color ) {\r\n \r\n\t\t const geometry = new SphereGeometry( sphereSize, 4, 2 );\r\n\t\t const material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.light = light;\r\n\t\t this.light.updateMatrixWorld();\r\n \r\n\t\t this.color = color;\r\n \r\n\t\t this.type = 'PointLightHelper';\r\n \r\n\t\t this.matrix = this.light.matrixWorld;\r\n\t\t this.matrixAutoUpdate = false;\r\n \r\n\t\t this.update();\r\n \r\n \r\n\t\t /*\r\n\t // TODO: delete this comment?\r\n\t const distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t const distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n \r\n\t this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n \r\n\t const d = light.distance;\r\n \r\n\t if ( d === 0.0 ) {\r\n \r\n\t\t this.lightDistance.visible = false;\r\n \r\n\t } else {\r\n \r\n\t\t this.lightDistance.scale.set( d, d, d );\r\n \r\n\t }\r\n \r\n\t this.add( this.lightDistance );\r\n\t */\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.geometry.dispose();\r\n\t\t this.material.dispose();\r\n \r\n\t }\r\n \r\n\t update() {\r\n \r\n\t\t if ( this.color !== undefined ) {\r\n \r\n\t\t\t this.material.color.set( this.color );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.material.color.copy( this.light.color );\r\n \r\n\t\t }\r\n \r\n\t\t /*\r\n\t\t const d = this.light.distance;\r\n \r\n\t\t if ( d === 0.0 ) {\r\n \r\n\t\t\t this.lightDistance.visible = false;\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.lightDistance.visible = true;\r\n\t\t\t this.lightDistance.scale.set( d, d, d );\r\n \r\n\t\t }\r\n\t\t */\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _vector$1 = /*@__PURE__*/ new Vector3();\r\n const _color1 = /*@__PURE__*/ new Color();\r\n const _color2 = /*@__PURE__*/ new Color();\r\n \r\n class HemisphereLightHelper extends Object3D {\r\n \r\n\t constructor( light, size, color ) {\r\n \r\n\t\t super();\r\n\t\t this.light = light;\r\n\t\t this.light.updateMatrixWorld();\r\n \r\n\t\t this.matrix = light.matrixWorld;\r\n\t\t this.matrixAutoUpdate = false;\r\n \r\n\t\t this.color = color;\r\n \r\n\t\t const geometry = new OctahedronGeometry( size );\r\n\t\t geometry.rotateY( Math.PI * 0.5 );\r\n \r\n\t\t this.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\r\n\t\t if ( this.color === undefined ) this.material.vertexColors = true;\r\n \r\n\t\t const position = geometry.getAttribute( 'position' );\r\n\t\t const colors = new Float32Array( position.count * 3 );\r\n \r\n\t\t geometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\r\n \r\n\t\t this.add( new Mesh( geometry, this.material ) );\r\n \r\n\t\t this.update();\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.children[ 0 ].geometry.dispose();\r\n\t\t this.children[ 0 ].material.dispose();\r\n \r\n\t }\r\n \r\n\t update() {\r\n \r\n\t\t const mesh = this.children[ 0 ];\r\n \r\n\t\t if ( this.color !== undefined ) {\r\n \r\n\t\t\t this.material.color.set( this.color );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t const colors = mesh.geometry.getAttribute( 'color' );\r\n \r\n\t\t\t _color1.copy( this.light.color );\r\n\t\t\t _color2.copy( this.light.groundColor );\r\n \r\n\t\t\t for ( let i = 0, l = colors.count; i < l; i ++ ) {\r\n \r\n\t\t\t\t const color = ( i < ( l / 2 ) ) ? _color1 : _color2;\r\n \r\n\t\t\t\t colors.setXYZ( i, color.r, color.g, color.b );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t colors.needsUpdate = true;\r\n \r\n\t\t }\r\n \r\n\t\t mesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class GridHelper extends LineSegments {\r\n \r\n\t constructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\r\n \r\n\t\t color1 = new Color( color1 );\r\n\t\t color2 = new Color( color2 );\r\n \r\n\t\t const center = divisions / 2;\r\n\t\t const step = size / divisions;\r\n\t\t const halfSize = size / 2;\r\n \r\n\t\t const vertices = [], colors = [];\r\n \r\n\t\t for ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\r\n \r\n\t\t\t vertices.push( - halfSize, 0, k, halfSize, 0, k );\r\n\t\t\t vertices.push( k, 0, - halfSize, k, 0, halfSize );\r\n \r\n\t\t\t const color = i === center ? color1 : color2;\r\n \r\n\t\t\t color.toArray( colors, j ); j += 3;\r\n\t\t\t color.toArray( colors, j ); j += 3;\r\n\t\t\t color.toArray( colors, j ); j += 3;\r\n\t\t\t color.toArray( colors, j ); j += 3;\r\n \r\n\t\t }\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n \r\n\t\t const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'GridHelper';\r\n \r\n\t }\r\n \r\n }\r\n \r\n class PolarGridHelper extends LineSegments {\r\n \r\n\t constructor( radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\r\n \r\n\t\t color1 = new Color( color1 );\r\n\t\t color2 = new Color( color2 );\r\n \r\n\t\t const vertices = [];\r\n\t\t const colors = [];\r\n \r\n\t\t // create the radials\r\n \r\n\t\t for ( let i = 0; i <= radials; i ++ ) {\r\n \r\n\t\t\t const v = ( i / radials ) * ( Math.PI * 2 );\r\n \r\n\t\t\t const x = Math.sin( v ) * radius;\r\n\t\t\t const z = Math.cos( v ) * radius;\r\n \r\n\t\t\t vertices.push( 0, 0, 0 );\r\n\t\t\t vertices.push( x, 0, z );\r\n \r\n\t\t\t const color = ( i & 1 ) ? color1 : color2;\r\n \r\n\t\t\t colors.push( color.r, color.g, color.b );\r\n\t\t\t colors.push( color.r, color.g, color.b );\r\n \r\n\t\t }\r\n \r\n\t\t // create the circles\r\n \r\n\t\t for ( let i = 0; i <= circles; i ++ ) {\r\n \r\n\t\t\t const color = ( i & 1 ) ? color1 : color2;\r\n \r\n\t\t\t const r = radius - ( radius / circles * i );\r\n \r\n\t\t\t for ( let j = 0; j < divisions; j ++ ) {\r\n \r\n\t\t\t\t // first vertex\r\n \r\n\t\t\t\t let v = ( j / divisions ) * ( Math.PI * 2 );\r\n \r\n\t\t\t\t let x = Math.sin( v ) * r;\r\n\t\t\t\t let z = Math.cos( v ) * r;\r\n \r\n\t\t\t\t vertices.push( x, 0, z );\r\n\t\t\t\t colors.push( color.r, color.g, color.b );\r\n \r\n\t\t\t\t // second vertex\r\n \r\n\t\t\t\t v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\r\n \r\n\t\t\t\t x = Math.sin( v ) * r;\r\n\t\t\t\t z = Math.cos( v ) * r;\r\n \r\n\t\t\t\t vertices.push( x, 0, z );\r\n\t\t\t\t colors.push( color.r, color.g, color.b );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n \r\n\t\t const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'PolarGridHelper';\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _v1 = /*@__PURE__*/ new Vector3();\r\n const _v2 = /*@__PURE__*/ new Vector3();\r\n const _v3 = /*@__PURE__*/ new Vector3();\r\n \r\n class DirectionalLightHelper extends Object3D {\r\n \r\n\t constructor( light, size, color ) {\r\n \r\n\t\t super();\r\n\t\t this.light = light;\r\n\t\t this.light.updateMatrixWorld();\r\n \r\n\t\t this.matrix = light.matrixWorld;\r\n\t\t this.matrixAutoUpdate = false;\r\n \r\n\t\t this.color = color;\r\n \r\n\t\t if ( size === undefined ) size = 1;\r\n \r\n\t\t let geometry = new BufferGeometry();\r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( [\r\n\t\t\t - size, size, 0,\r\n\t\t\t size, size, 0,\r\n\t\t\t size, - size, 0,\r\n\t\t\t - size, - size, 0,\r\n\t\t\t - size, size, 0\r\n\t\t ], 3 ) );\r\n \r\n\t\t const material = new LineBasicMaterial( { fog: false, toneMapped: false } );\r\n \r\n\t\t this.lightPlane = new Line( geometry, material );\r\n\t\t this.add( this.lightPlane );\r\n \r\n\t\t geometry = new BufferGeometry();\r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n \r\n\t\t this.targetLine = new Line( geometry, material );\r\n\t\t this.add( this.targetLine );\r\n \r\n\t\t this.update();\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.lightPlane.geometry.dispose();\r\n\t\t this.lightPlane.material.dispose();\r\n\t\t this.targetLine.geometry.dispose();\r\n\t\t this.targetLine.material.dispose();\r\n \r\n\t }\r\n \r\n\t update() {\r\n \r\n\t\t _v1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t _v2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t _v3.subVectors( _v2, _v1 );\r\n \r\n\t\t this.lightPlane.lookAt( _v2 );\r\n \r\n\t\t if ( this.color !== undefined ) {\r\n \r\n\t\t\t this.lightPlane.material.color.set( this.color );\r\n\t\t\t this.targetLine.material.color.set( this.color );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t this.lightPlane.material.color.copy( this.light.color );\r\n\t\t\t this.targetLine.material.color.copy( this.light.color );\r\n \r\n\t\t }\r\n \r\n\t\t this.targetLine.lookAt( _v2 );\r\n\t\t this.targetLine.scale.z = _v3.length();\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _vector = /*@__PURE__*/ new Vector3();\r\n const _camera = /*@__PURE__*/ new Camera();\r\n \r\n /**\r\n  *\t- shows frustum, line of sight and up of the camera\r\n  *\t- suitable for fast updates\r\n  * \t- based on frustum visualization in lightgl.js shadowmap example\r\n  *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\r\n  */\r\n \r\n class CameraHelper extends LineSegments {\r\n \r\n\t constructor( camera ) {\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n\t\t const material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\r\n \r\n\t\t const vertices = [];\r\n\t\t const colors = [];\r\n \r\n\t\t const pointMap = {};\r\n \r\n\t\t // colors\r\n \r\n\t\t const colorFrustum = new Color( 0xffaa00 );\r\n\t\t const colorCone = new Color( 0xff0000 );\r\n\t\t const colorUp = new Color( 0x00aaff );\r\n\t\t const colorTarget = new Color( 0xffffff );\r\n\t\t const colorCross = new Color( 0x333333 );\r\n \r\n\t\t // near\r\n \r\n\t\t addLine( 'n1', 'n2', colorFrustum );\r\n\t\t addLine( 'n2', 'n4', colorFrustum );\r\n\t\t addLine( 'n4', 'n3', colorFrustum );\r\n\t\t addLine( 'n3', 'n1', colorFrustum );\r\n \r\n\t\t // far\r\n \r\n\t\t addLine( 'f1', 'f2', colorFrustum );\r\n\t\t addLine( 'f2', 'f4', colorFrustum );\r\n\t\t addLine( 'f4', 'f3', colorFrustum );\r\n\t\t addLine( 'f3', 'f1', colorFrustum );\r\n \r\n\t\t // sides\r\n \r\n\t\t addLine( 'n1', 'f1', colorFrustum );\r\n\t\t addLine( 'n2', 'f2', colorFrustum );\r\n\t\t addLine( 'n3', 'f3', colorFrustum );\r\n\t\t addLine( 'n4', 'f4', colorFrustum );\r\n \r\n\t\t // cone\r\n \r\n\t\t addLine( 'p', 'n1', colorCone );\r\n\t\t addLine( 'p', 'n2', colorCone );\r\n\t\t addLine( 'p', 'n3', colorCone );\r\n\t\t addLine( 'p', 'n4', colorCone );\r\n \r\n\t\t // up\r\n \r\n\t\t addLine( 'u1', 'u2', colorUp );\r\n\t\t addLine( 'u2', 'u3', colorUp );\r\n\t\t addLine( 'u3', 'u1', colorUp );\r\n \r\n\t\t // target\r\n \r\n\t\t addLine( 'c', 't', colorTarget );\r\n\t\t addLine( 'p', 'c', colorCross );\r\n \r\n\t\t // cross\r\n \r\n\t\t addLine( 'cn1', 'cn2', colorCross );\r\n\t\t addLine( 'cn3', 'cn4', colorCross );\r\n \r\n\t\t addLine( 'cf1', 'cf2', colorCross );\r\n\t\t addLine( 'cf3', 'cf4', colorCross );\r\n \r\n\t\t function addLine( a, b, color ) {\r\n \r\n\t\t\t addPoint( a, color );\r\n\t\t\t addPoint( b, color );\r\n \r\n\t\t }\r\n \r\n\t\t function addPoint( id, color ) {\r\n \r\n\t\t\t vertices.push( 0, 0, 0 );\r\n\t\t\t colors.push( color.r, color.g, color.b );\r\n \r\n\t\t\t if ( pointMap[ id ] === undefined ) {\r\n \r\n\t\t\t\t pointMap[ id ] = [];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t pointMap[ id ].push( ( vertices.length / 3 ) - 1 );\r\n \r\n\t\t }\r\n \r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'CameraHelper';\r\n \r\n\t\t this.camera = camera;\r\n\t\t if ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\r\n \r\n\t\t this.matrix = camera.matrixWorld;\r\n\t\t this.matrixAutoUpdate = false;\r\n \r\n\t\t this.pointMap = pointMap;\r\n \r\n\t\t this.update();\r\n \r\n\t }\r\n \r\n\t update() {\r\n \r\n\t\t const geometry = this.geometry;\r\n\t\t const pointMap = this.pointMap;\r\n \r\n\t\t const w = 1, h = 1;\r\n \r\n\t\t // we need just camera projection matrix inverse\r\n\t\t // world matrix must be identity\r\n \r\n\t\t _camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\r\n \r\n\t\t // center / target\r\n \r\n\t\t setPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\r\n\t\t setPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\r\n \r\n\t\t // near\r\n \r\n\t\t setPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\r\n\t\t setPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\r\n\t\t setPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\r\n\t\t setPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\r\n \r\n\t\t // far\r\n \r\n\t\t setPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\r\n\t\t setPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\r\n\t\t setPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\r\n\t\t setPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\r\n \r\n\t\t // up\r\n \r\n\t\t setPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\r\n\t\t setPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\r\n\t\t setPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\r\n \r\n\t\t // cross\r\n \r\n\t\t setPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\r\n\t\t setPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\r\n\t\t setPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\r\n\t\t setPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\r\n \r\n\t\t setPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\r\n\t\t setPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\r\n\t\t setPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\r\n\t\t setPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\r\n \r\n\t\t geometry.getAttribute( 'position' ).needsUpdate = true;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.geometry.dispose();\r\n\t\t this.material.dispose();\r\n \r\n\t }\r\n \r\n }\r\n \r\n \r\n function setPoint( point, pointMap, geometry, camera, x, y, z ) {\r\n \r\n\t _vector.set( x, y, z ).unproject( camera );\r\n \r\n\t const points = pointMap[ point ];\r\n \r\n\t if ( points !== undefined ) {\r\n \r\n\t\t const position = geometry.getAttribute( 'position' );\r\n \r\n\t\t for ( let i = 0, l = points.length; i < l; i ++ ) {\r\n \r\n\t\t\t position.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _box = /*@__PURE__*/ new Box3();\r\n \r\n class BoxHelper extends LineSegments {\r\n \r\n\t constructor( object, color = 0xffff00 ) {\r\n \r\n\t\t const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\t const positions = new Float32Array( 8 * 3 );\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n\t\t geometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\t\t geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n \r\n\t\t super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n \r\n\t\t this.object = object;\r\n\t\t this.type = 'BoxHelper';\r\n \r\n\t\t this.matrixAutoUpdate = false;\r\n \r\n\t\t this.update();\r\n \r\n\t }\r\n \r\n\t update( object ) {\r\n \r\n\t\t if ( object !== undefined ) {\r\n \r\n\t\t\t console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\r\n \r\n\t\t }\r\n \r\n\t\t if ( this.object !== undefined ) {\r\n \r\n\t\t\t _box.setFromObject( this.object );\r\n \r\n\t\t }\r\n \r\n\t\t if ( _box.isEmpty() ) return;\r\n \r\n\t\t const min = _box.min;\r\n\t\t const max = _box.max;\r\n \r\n\t\t /*\r\n\t\t\t 5____4\r\n\t\t 1/___0/|\r\n\t\t | 6__|_7\r\n\t\t 2/___3/\r\n \r\n\t\t 0: max.x, max.y, max.z\r\n\t\t 1: min.x, max.y, max.z\r\n\t\t 2: min.x, min.y, max.z\r\n\t\t 3: max.x, min.y, max.z\r\n\t\t 4: max.x, max.y, min.z\r\n\t\t 5: min.x, max.y, min.z\r\n\t\t 6: min.x, min.y, min.z\r\n\t\t 7: max.x, min.y, min.z\r\n\t\t */\r\n \r\n\t\t const position = this.geometry.attributes.position;\r\n\t\t const array = position.array;\r\n \r\n\t\t array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\r\n\t\t array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\r\n\t\t array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\r\n\t\t array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n \r\n\t\t position.needsUpdate = true;\r\n \r\n\t\t this.geometry.computeBoundingSphere();\r\n \r\n \r\n\t }\r\n \r\n\t setFromObject( object ) {\r\n \r\n\t\t this.object = object;\r\n\t\t this.update();\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t LineSegments.prototype.copy.call( this, source );\r\n \r\n\t\t this.object = source.object;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class Box3Helper extends LineSegments {\r\n \r\n\t constructor( box, color = 0xffff00 ) {\r\n \r\n\t\t const indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n \r\n\t\t const positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n \r\n\t\t geometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n \r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n \r\n\t\t super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n \r\n\t\t this.box = box;\r\n \r\n\t\t this.type = 'Box3Helper';\r\n \r\n\t\t this.geometry.computeBoundingSphere();\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t const box = this.box;\r\n \r\n\t\t if ( box.isEmpty() ) return;\r\n \r\n\t\t box.getCenter( this.position );\r\n \r\n\t\t box.getSize( this.scale );\r\n \r\n\t\t this.scale.multiplyScalar( 0.5 );\r\n \r\n\t\t super.updateMatrixWorld( force );\r\n \r\n\t }\r\n \r\n }\r\n \r\n class PlaneHelper extends Line {\r\n \r\n\t constructor( plane, size = 1, hex = 0xffff00 ) {\r\n \r\n\t\t const color = hex;\r\n \r\n\t\t const positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\t geometry.computeBoundingSphere();\r\n \r\n\t\t super( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n \r\n\t\t this.type = 'PlaneHelper';\r\n \r\n\t\t this.plane = plane;\r\n \r\n\t\t this.size = size;\r\n \r\n\t\t const positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\r\n \r\n\t\t const geometry2 = new BufferGeometry();\r\n\t\t geometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\t geometry2.computeBoundingSphere();\r\n \r\n\t\t this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\r\n \r\n\t }\r\n \r\n\t updateMatrixWorld( force ) {\r\n \r\n\t\t let scale = - this.plane.constant;\r\n \r\n\t\t if ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\r\n \r\n\t\t this.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\r\n \r\n\t\t this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\r\n \r\n\t\t this.lookAt( this.plane.normal );\r\n \r\n\t\t super.updateMatrixWorld( force );\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _axis = /*@__PURE__*/ new Vector3();\r\n let _lineGeometry, _coneGeometry;\r\n \r\n class ArrowHelper extends Object3D {\r\n \r\n\t // dir is assumed to be normalized\r\n \r\n\t constructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\r\n \r\n\t\t super();\r\n \r\n\t\t this.type = 'ArrowHelper';\r\n \r\n\t\t if ( _lineGeometry === undefined ) {\r\n \r\n\t\t\t _lineGeometry = new BufferGeometry();\r\n\t\t\t _lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n \r\n\t\t\t _coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\t\t _coneGeometry.translate( 0, - 0.5, 0 );\r\n \r\n\t\t }\r\n \r\n\t\t this.position.copy( origin );\r\n \r\n\t\t this.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\t\t this.line.matrixAutoUpdate = false;\r\n\t\t this.add( this.line );\r\n \r\n\t\t this.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\r\n\t\t this.cone.matrixAutoUpdate = false;\r\n\t\t this.add( this.cone );\r\n \r\n\t\t this.setDirection( dir );\r\n\t\t this.setLength( length, headLength, headWidth );\r\n \r\n\t }\r\n \r\n\t setDirection( dir ) {\r\n \r\n\t\t // dir is assumed to be normalized\r\n \r\n\t\t if ( dir.y > 0.99999 ) {\r\n \r\n\t\t\t this.quaternion.set( 0, 0, 0, 1 );\r\n \r\n\t\t } else if ( dir.y < - 0.99999 ) {\r\n \r\n\t\t\t this.quaternion.set( 1, 0, 0, 0 );\r\n \r\n\t\t } else {\r\n \r\n\t\t\t _axis.set( dir.z, 0, - dir.x ).normalize();\r\n \r\n\t\t\t const radians = Math.acos( dir.y );\r\n \r\n\t\t\t this.quaternion.setFromAxisAngle( _axis, radians );\r\n \r\n\t\t }\r\n \r\n\t }\r\n \r\n\t setLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\r\n \r\n\t\t this.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\r\n\t\t this.line.updateMatrix();\r\n \r\n\t\t this.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\t this.cone.position.y = length;\r\n\t\t this.cone.updateMatrix();\r\n \r\n\t }\r\n \r\n\t setColor( color ) {\r\n \r\n\t\t this.line.material.color.set( color );\r\n\t\t this.cone.material.color.set( color );\r\n \r\n\t }\r\n \r\n\t copy( source ) {\r\n \r\n\t\t super.copy( source, false );\r\n \r\n\t\t this.line.copy( source.line );\r\n\t\t this.cone.copy( source.cone );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n }\r\n \r\n class AxesHelper extends LineSegments {\r\n \r\n\t constructor( size = 1 ) {\r\n \r\n\t\t const vertices = [\r\n\t\t\t 0, 0, 0,\tsize, 0, 0,\r\n\t\t\t 0, 0, 0,\t0, size, 0,\r\n\t\t\t 0, 0, 0,\t0, 0, size\r\n\t\t ];\r\n \r\n\t\t const colors = [\r\n\t\t\t 1, 0, 0,\t1, 0.6, 0,\r\n\t\t\t 0, 1, 0,\t0.6, 1, 0,\r\n\t\t\t 0, 0, 1,\t0, 0.6, 1\r\n\t\t ];\r\n \r\n\t\t const geometry = new BufferGeometry();\r\n\t\t geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\t geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n \r\n\t\t const material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n \r\n\t\t super( geometry, material );\r\n \r\n\t\t this.type = 'AxesHelper';\r\n \r\n\t }\r\n \r\n\t setColors( xAxisColor, yAxisColor, zAxisColor ) {\r\n \r\n\t\t const color = new Color();\r\n\t\t const array = this.geometry.attributes.color.array;\r\n \r\n\t\t color.set( xAxisColor );\r\n\t\t color.toArray( array, 0 );\r\n\t\t color.toArray( array, 3 );\r\n \r\n\t\t color.set( yAxisColor );\r\n\t\t color.toArray( array, 6 );\r\n\t\t color.toArray( array, 9 );\r\n \r\n\t\t color.set( zAxisColor );\r\n\t\t color.toArray( array, 12 );\r\n\t\t color.toArray( array, 15 );\r\n \r\n\t\t this.geometry.attributes.color.needsUpdate = true;\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t dispose() {\r\n \r\n\t\t this.geometry.dispose();\r\n\t\t this.material.dispose();\r\n \r\n\t }\r\n \r\n }\r\n \r\n class ShapePath {\r\n \r\n\t constructor() {\r\n \r\n\t\t this.type = 'ShapePath';\r\n \r\n\t\t this.color = new Color();\r\n \r\n\t\t this.subPaths = [];\r\n\t\t this.currentPath = null;\r\n \r\n\t }\r\n \r\n\t moveTo( x, y ) {\r\n \r\n\t\t this.currentPath = new Path();\r\n\t\t this.subPaths.push( this.currentPath );\r\n\t\t this.currentPath.moveTo( x, y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t lineTo( x, y ) {\r\n \r\n\t\t this.currentPath.lineTo( x, y );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t quadraticCurveTo( aCPx, aCPy, aX, aY ) {\r\n \r\n\t\t this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n \r\n\t\t this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t splineThru( pts ) {\r\n \r\n\t\t this.currentPath.splineThru( pts );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t toShapes( isCCW, noHoles ) {\r\n \r\n\t\t function toShapesNoHoles( inSubpaths ) {\r\n \r\n\t\t\t const shapes = [];\r\n \r\n\t\t\t for ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n \r\n\t\t\t\t const tmpPath = inSubpaths[ i ];\r\n \r\n\t\t\t\t const tmpShape = new Shape();\r\n\t\t\t\t tmpShape.curves = tmpPath.curves;\r\n \r\n\t\t\t\t shapes.push( tmpShape );\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return shapes;\r\n \r\n\t\t }\r\n \r\n\t\t function isPointInsidePolygon( inPt, inPolygon ) {\r\n \r\n\t\t\t const polyLen = inPolygon.length;\r\n \r\n\t\t\t // inPt on polygon contour => immediate success    or\r\n\t\t\t // toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t //  with the horizontal line through inPt, left of inPt\r\n\t\t\t //  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\t let inside = false;\r\n\t\t\t for ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n \r\n\t\t\t\t let edgeLowPt = inPolygon[ p ];\r\n\t\t\t\t let edgeHighPt = inPolygon[ q ];\r\n \r\n\t\t\t\t let edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\t let edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n \r\n\t\t\t\t if ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n \r\n\t\t\t\t\t // not parallel\r\n\t\t\t\t\t if ( edgeDy < 0 ) {\r\n \r\n\t\t\t\t\t\t edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\t edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n \r\n\t\t\t\t\t if ( inPt.y === edgeLowPt.y ) {\r\n \r\n\t\t\t\t\t\t if ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n \r\n\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t const perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\t if ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t if ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\t inside = ! inside;\t\t// true intersection left of inPt\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t } else {\r\n \r\n\t\t\t\t\t // parallel or collinear\r\n\t\t\t\t\t if ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t // edge lies on the same horizontal line as inPt\r\n\t\t\t\t\t if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t  ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t // continue;\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t return\tinside;\r\n \r\n\t\t }\r\n \r\n\t\t const isClockWise = ShapeUtils.isClockWise;\r\n \r\n\t\t const subPaths = this.subPaths;\r\n\t\t if ( subPaths.length === 0 ) return [];\r\n \r\n\t\t if ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n \r\n \r\n\t\t let solid, tmpPath, tmpShape;\r\n\t\t const shapes = [];\r\n \r\n\t\t if ( subPaths.length === 1 ) {\r\n \r\n\t\t\t tmpPath = subPaths[ 0 ];\r\n\t\t\t tmpShape = new Shape();\r\n\t\t\t tmpShape.curves = tmpPath.curves;\r\n\t\t\t shapes.push( tmpShape );\r\n\t\t\t return shapes;\r\n \r\n\t\t }\r\n \r\n\t\t let holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\t holesFirst = isCCW ? ! holesFirst : holesFirst;\r\n \r\n\t\t // console.log(\"Holes first\", holesFirst);\r\n \r\n\t\t const betterShapeHoles = [];\r\n\t\t const newShapes = [];\r\n\t\t let newShapeHoles = [];\r\n\t\t let mainIdx = 0;\r\n\t\t let tmpPoints;\r\n \r\n\t\t newShapes[ mainIdx ] = undefined;\r\n\t\t newShapeHoles[ mainIdx ] = [];\r\n \r\n\t\t for ( let i = 0, l = subPaths.length; i < l; i ++ ) {\r\n \r\n\t\t\t tmpPath = subPaths[ i ];\r\n\t\t\t tmpPoints = tmpPath.getPoints();\r\n\t\t\t solid = isClockWise( tmpPoints );\r\n\t\t\t solid = isCCW ? ! solid : solid;\r\n \r\n\t\t\t if ( solid ) {\r\n \r\n\t\t\t\t if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n \r\n\t\t\t\t newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\r\n\t\t\t\t newShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n \r\n\t\t\t\t if ( holesFirst )\tmainIdx ++;\r\n\t\t\t\t newShapeHoles[ mainIdx ] = [];\r\n \r\n\t\t\t\t //console.log('cw', i);\r\n \r\n\t\t\t } else {\r\n \r\n\t\t\t\t newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n \r\n\t\t\t\t //console.log('ccw', i);\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t // only Holes? -> probably all Shapes with wrong orientation\r\n\t\t if ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n \r\n \r\n\t\t if ( newShapes.length > 1 ) {\r\n \r\n\t\t\t let ambiguous = false;\r\n\t\t\t let toChange = 0;\r\n \r\n\t\t\t for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n \r\n\t\t\t\t betterShapeHoles[ sIdx ] = [];\r\n \r\n\t\t\t }\r\n \r\n\t\t\t for ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n \r\n\t\t\t\t const sho = newShapeHoles[ sIdx ];\r\n \r\n\t\t\t\t for ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n \r\n\t\t\t\t\t const ho = sho[ hIdx ];\r\n\t\t\t\t\t let hole_unassigned = true;\r\n \r\n\t\t\t\t\t for ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n \r\n\t\t\t\t\t\t if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n \r\n\t\t\t\t\t\t\t if ( sIdx !== s2Idx )\ttoChange ++;\r\n \r\n\t\t\t\t\t\t\t if ( hole_unassigned ) {\r\n \r\n\t\t\t\t\t\t\t\t hole_unassigned = false;\r\n\t\t\t\t\t\t\t\t betterShapeHoles[ s2Idx ].push( ho );\r\n \r\n\t\t\t\t\t\t\t } else {\r\n \r\n\t\t\t\t\t\t\t\t ambiguous = true;\r\n \r\n\t\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t\t }\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t\t if ( hole_unassigned ) {\r\n \r\n\t\t\t\t\t\t betterShapeHoles[ sIdx ].push( ho );\r\n \r\n\t\t\t\t\t }\r\n \r\n\t\t\t\t }\r\n \r\n\t\t\t }\r\n \r\n\t\t\t if ( toChange > 0 && ambiguous === false ) {\r\n \r\n\t\t\t\t newShapeHoles = betterShapeHoles;\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t let tmpHoles;\r\n \r\n\t\t for ( let i = 0, il = newShapes.length; i < il; i ++ ) {\r\n \r\n\t\t\t tmpShape = newShapes[ i ].s;\r\n\t\t\t shapes.push( tmpShape );\r\n\t\t\t tmpHoles = newShapeHoles[ i ];\r\n \r\n\t\t\t for ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n \r\n\t\t\t\t tmpShape.holes.push( tmpHoles[ j ].h );\r\n \r\n\t\t\t }\r\n \r\n\t\t }\r\n \r\n\t\t //console.log(\"shape\", shapes);\r\n \r\n\t\t return shapes;\r\n \r\n\t }\r\n \r\n }\r\n \r\n const _floatView = new Float32Array( 1 );\r\n const _int32View = new Int32Array( _floatView.buffer );\r\n \r\n class DataUtils {\r\n \r\n\t // Converts float32 to float16 (stored as uint16 value).\r\n \r\n\t static toHalfFloat( val ) {\r\n \r\n\t\t if ( val > 65504 ) {\r\n \r\n\t\t\t console.warn( 'THREE.DataUtils.toHalfFloat(): value exceeds 65504.' );\r\n \r\n\t\t\t val = 65504; // maximum representable value in float16\r\n \r\n\t\t }\r\n \r\n\t\t // Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\r\n \r\n\t\t /* This method is faster than the OpenEXR implementation (very often\r\n\t\t * used, eg. in Ogre), with the additional benefit of rounding, inspired\r\n\t\t * by James Tursa?s half-precision code. */\r\n \r\n\t\t _floatView[ 0 ] = val;\r\n\t\t const x = _int32View[ 0 ];\r\n \r\n\t\t let bits = ( x >> 16 ) & 0x8000; /* Get the sign */\r\n\t\t let m = ( x >> 12 ) & 0x07ff; /* Keep one extra bit for rounding */\r\n\t\t const e = ( x >> 23 ) & 0xff; /* Using int is faster here */\r\n \r\n\t\t /* If zero, or denormal, or exponent underflows too much for a denormal\r\n\t\t\t * half, return signed zero. */\r\n\t\t if ( e < 103 ) return bits;\r\n \r\n\t\t /* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\r\n\t\t if ( e > 142 ) {\r\n \r\n\t\t\t bits |= 0x7c00;\r\n\t\t\t /* If exponent was 0xff and one mantissa bit was set, it means NaN,\r\n\t\t\t\t\t\t * not Inf, so make sure we set one mantissa bit too. */\r\n\t\t\t bits |= ( ( e == 255 ) ? 0 : 1 ) && ( x & 0x007fffff );\r\n\t\t\t return bits;\r\n \r\n\t\t }\r\n \r\n\t\t /* If exponent underflows but not too much, return a denormal */\r\n\t\t if ( e < 113 ) {\r\n \r\n\t\t\t m |= 0x0800;\r\n\t\t\t /* Extra rounding may overflow and set mantissa to 0 and exponent\r\n\t\t\t\t * to 1, which is OK. */\r\n\t\t\t bits |= ( m >> ( 114 - e ) ) + ( ( m >> ( 113 - e ) ) & 1 );\r\n\t\t\t return bits;\r\n \r\n\t\t }\r\n \r\n\t\t bits |= ( ( e - 112 ) << 10 ) | ( m >> 1 );\r\n\t\t /* Extra rounding. An overflow will set mantissa to 0 and increment\r\n\t\t\t * the exponent, which is OK. */\r\n\t\t bits += m & 1;\r\n\t\t return bits;\r\n \r\n\t }\r\n \r\n }\r\n \r\n const LineStrip = 0;\r\n const LinePieces = 1;\r\n const NoColors = 0;\r\n const FaceColors = 1;\r\n const VertexColors = 2;\r\n \r\n function MeshFaceMaterial( materials ) {\r\n \r\n\t console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\r\n\t return materials;\r\n \r\n }\r\n \r\n function MultiMaterial( materials = [] ) {\r\n \r\n\t console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\r\n\t materials.isMultiMaterial = true;\r\n\t materials.materials = materials;\r\n\t materials.clone = function () {\r\n \r\n\t\t return materials.slice();\r\n \r\n\t };\r\n \r\n\t return materials;\r\n \r\n }\r\n \r\n function PointCloud( geometry, material ) {\r\n \r\n\t console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t return new Points( geometry, material );\r\n \r\n }\r\n \r\n function Particle( material ) {\r\n \r\n\t console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\r\n\t return new Sprite( material );\r\n \r\n }\r\n \r\n function ParticleSystem( geometry, material ) {\r\n \r\n\t console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t return new Points( geometry, material );\r\n \r\n }\r\n \r\n function PointCloudMaterial( parameters ) {\r\n \r\n\t console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t return new PointsMaterial( parameters );\r\n \r\n }\r\n \r\n function ParticleBasicMaterial( parameters ) {\r\n \r\n\t console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t return new PointsMaterial( parameters );\r\n \r\n }\r\n \r\n function ParticleSystemMaterial( parameters ) {\r\n \r\n\t console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t return new PointsMaterial( parameters );\r\n \r\n }\r\n \r\n function Vertex( x, y, z ) {\r\n \r\n\t console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\t return new Vector3( x, y, z );\r\n \r\n }\r\n \r\n //\r\n \r\n function DynamicBufferAttribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );\r\n\t return new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );\r\n \r\n }\r\n \r\n function Int8Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\r\n\t return new Int8BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Uint8Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\r\n\t return new Uint8BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Uint8ClampedAttribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\r\n\t return new Uint8ClampedBufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Int16Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\r\n\t return new Int16BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Uint16Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\r\n\t return new Uint16BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Int32Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\r\n\t return new Int32BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Uint32Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\r\n\t return new Uint32BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Float32Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\r\n\t return new Float32BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n function Float64Attribute( array, itemSize ) {\r\n \r\n\t console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\r\n\t return new Float64BufferAttribute( array, itemSize );\r\n \r\n }\r\n \r\n //\r\n \r\n Curve.create = function ( construct, getPoint ) {\r\n \r\n\t console.log( 'THREE.Curve.create() has been deprecated' );\r\n \r\n\t construct.prototype = Object.create( Curve.prototype );\r\n\t construct.prototype.constructor = construct;\r\n\t construct.prototype.getPoint = getPoint;\r\n \r\n\t return construct;\r\n \r\n };\r\n \r\n //\r\n \r\n Path.prototype.fromPoints = function ( points ) {\r\n \r\n\t console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\r\n\t return this.setFromPoints( points );\r\n \r\n };\r\n \r\n //\r\n \r\n function AxisHelper( size ) {\r\n \r\n\t console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\r\n\t return new AxesHelper( size );\r\n \r\n }\r\n \r\n function BoundingBoxHelper( object, color ) {\r\n \r\n\t console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\r\n\t return new BoxHelper( object, color );\r\n \r\n }\r\n \r\n function EdgesHelper( object, hex ) {\r\n \r\n\t console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\r\n\t return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n \r\n }\r\n \r\n GridHelper.prototype.setColors = function () {\r\n \r\n\t console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\r\n \r\n };\r\n \r\n SkeletonHelper.prototype.update = function () {\r\n \r\n\t console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\r\n \r\n };\r\n \r\n function WireframeHelper( object, hex ) {\r\n \r\n\t console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\r\n\t return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n \r\n }\r\n \r\n //\r\n \r\n Loader.prototype.extractUrlBase = function ( url ) {\r\n \r\n\t console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\r\n\t return LoaderUtils.extractUrlBase( url );\r\n \r\n };\r\n \r\n Loader.Handlers = {\r\n \r\n\t add: function ( /* regex, loader */ ) {\r\n \r\n\t\t console.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\r\n \r\n\t },\r\n \r\n\t get: function ( /* file */ ) {\r\n \r\n\t\t console.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\r\n \r\n\t }\r\n \r\n };\r\n \r\n function XHRLoader( manager ) {\r\n \r\n\t console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\r\n\t return new FileLoader( manager );\r\n \r\n }\r\n \r\n function BinaryTextureLoader( manager ) {\r\n \r\n\t console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\r\n\t return new DataTextureLoader( manager );\r\n \r\n }\r\n \r\n //\r\n \r\n Box2.prototype.center = function ( optionalTarget ) {\r\n \r\n\t console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\r\n\t return this.getCenter( optionalTarget );\r\n \r\n };\r\n \r\n Box2.prototype.empty = function () {\r\n \r\n\t console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t return this.isEmpty();\r\n \r\n };\r\n \r\n Box2.prototype.isIntersectionBox = function ( box ) {\r\n \r\n\t console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t return this.intersectsBox( box );\r\n \r\n };\r\n \r\n Box2.prototype.size = function ( optionalTarget ) {\r\n \r\n\t console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\r\n\t return this.getSize( optionalTarget );\r\n \r\n };\r\n \r\n //\r\n \r\n Box3.prototype.center = function ( optionalTarget ) {\r\n \r\n\t console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\r\n\t return this.getCenter( optionalTarget );\r\n \r\n };\r\n \r\n Box3.prototype.empty = function () {\r\n \r\n\t console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t return this.isEmpty();\r\n \r\n };\r\n \r\n Box3.prototype.isIntersectionBox = function ( box ) {\r\n \r\n\t console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t return this.intersectsBox( box );\r\n \r\n };\r\n \r\n Box3.prototype.isIntersectionSphere = function ( sphere ) {\r\n \r\n\t console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t return this.intersectsSphere( sphere );\r\n \r\n };\r\n \r\n Box3.prototype.size = function ( optionalTarget ) {\r\n \r\n\t console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\r\n\t return this.getSize( optionalTarget );\r\n \r\n };\r\n \r\n //\r\n \r\n Euler.prototype.toVector3 = function () {\r\n \r\n\t console.error( 'THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead' );\r\n \r\n };\r\n \r\n \r\n //\r\n \r\n Sphere.prototype.empty = function () {\r\n \r\n\t console.warn( 'THREE.Sphere: .empty() has been renamed to .isEmpty().' );\r\n\t return this.isEmpty();\r\n \r\n };\r\n \r\n //\r\n \r\n Frustum.prototype.setFromMatrix = function ( m ) {\r\n \r\n\t console.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );\r\n\t return this.setFromProjectionMatrix( m );\r\n \r\n };\r\n \r\n //\r\n \r\n Line3.prototype.center = function ( optionalTarget ) {\r\n \r\n\t console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\r\n\t return this.getCenter( optionalTarget );\r\n \r\n };\r\n \r\n //\r\n \r\n Matrix3.prototype.flattenToArrayOffset = function ( array, offset ) {\r\n \r\n\t console.warn( 'THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\r\n\t return this.toArray( array, offset );\r\n \r\n };\r\n \r\n Matrix3.prototype.multiplyVector3 = function ( vector ) {\r\n \r\n\t console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t return vector.applyMatrix3( this );\r\n \r\n };\r\n \r\n Matrix3.prototype.multiplyVector3Array = function ( /* a */ ) {\r\n \r\n\t console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\r\n \r\n };\r\n \r\n Matrix3.prototype.applyToBufferAttribute = function ( attribute ) {\r\n \r\n\t console.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );\r\n\t return attribute.applyMatrix3( this );\r\n \r\n };\r\n \r\n Matrix3.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\r\n \r\n\t console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\r\n \r\n };\r\n \r\n Matrix3.prototype.getInverse = function ( matrix ) {\r\n \r\n\t console.warn( 'THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\r\n\t return this.copy( matrix ).invert();\r\n \r\n };\r\n \r\n //\r\n \r\n Matrix4.prototype.extractPosition = function ( m ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t return this.copyPosition( m );\r\n \r\n };\r\n \r\n Matrix4.prototype.flattenToArrayOffset = function ( array, offset ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.' );\r\n\t return this.toArray( array, offset );\r\n \r\n };\r\n \r\n Matrix4.prototype.getPosition = function () {\r\n \r\n\t console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t return new Vector3().setFromMatrixColumn( this, 3 );\r\n \r\n };\r\n \r\n Matrix4.prototype.setRotationFromQuaternion = function ( q ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t return this.makeRotationFromQuaternion( q );\r\n \r\n };\r\n \r\n Matrix4.prototype.multiplyToArray = function () {\r\n \r\n\t console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.multiplyVector3 = function ( vector ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t return vector.applyMatrix4( this );\r\n \r\n };\r\n \r\n Matrix4.prototype.multiplyVector4 = function ( vector ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t return vector.applyMatrix4( this );\r\n \r\n };\r\n \r\n Matrix4.prototype.multiplyVector3Array = function ( /* a */ ) {\r\n \r\n\t console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.rotateAxis = function ( v ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t v.transformDirection( this );\r\n \r\n };\r\n \r\n Matrix4.prototype.crossVector = function ( vector ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t return vector.applyMatrix4( this );\r\n \r\n };\r\n \r\n Matrix4.prototype.translate = function () {\r\n \r\n\t console.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.rotateX = function () {\r\n \r\n\t console.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.rotateY = function () {\r\n \r\n\t console.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.rotateZ = function () {\r\n \r\n\t console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.rotateByAxis = function () {\r\n \r\n\t console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.applyToBufferAttribute = function ( attribute ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );\r\n\t return attribute.applyMatrix4( this );\r\n \r\n };\r\n \r\n Matrix4.prototype.applyToVector3Array = function ( /* array, offset, length */ ) {\r\n \r\n\t console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\r\n \r\n };\r\n \r\n Matrix4.prototype.makeFrustum = function ( left, right, bottom, top, near, far ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\r\n\t return this.makePerspective( left, right, top, bottom, near, far );\r\n \r\n };\r\n \r\n Matrix4.prototype.getInverse = function ( matrix ) {\r\n \r\n\t console.warn( 'THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.' );\r\n\t return this.copy( matrix ).invert();\r\n \r\n };\r\n \r\n //\r\n \r\n Plane.prototype.isIntersectionLine = function ( line ) {\r\n \r\n\t console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t return this.intersectsLine( line );\r\n \r\n };\r\n \r\n //\r\n \r\n Quaternion.prototype.multiplyVector3 = function ( vector ) {\r\n \r\n\t console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t return vector.applyQuaternion( this );\r\n \r\n };\r\n \r\n Quaternion.prototype.inverse = function ( ) {\r\n \r\n\t console.warn( 'THREE.Quaternion: .inverse() has been renamed to invert().' );\r\n\t return this.invert();\r\n \r\n };\r\n \r\n //\r\n \r\n Ray.prototype.isIntersectionBox = function ( box ) {\r\n \r\n\t console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t return this.intersectsBox( box );\r\n \r\n };\r\n \r\n Ray.prototype.isIntersectionPlane = function ( plane ) {\r\n \r\n\t console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t return this.intersectsPlane( plane );\r\n \r\n };\r\n \r\n Ray.prototype.isIntersectionSphere = function ( sphere ) {\r\n \r\n\t console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t return this.intersectsSphere( sphere );\r\n \r\n };\r\n \r\n //\r\n \r\n Triangle.prototype.area = function () {\r\n \r\n\t console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\r\n\t return this.getArea();\r\n \r\n };\r\n \r\n Triangle.prototype.barycoordFromPoint = function ( point, target ) {\r\n \r\n\t console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t return this.getBarycoord( point, target );\r\n \r\n };\r\n \r\n Triangle.prototype.midpoint = function ( target ) {\r\n \r\n\t console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\r\n\t return this.getMidpoint( target );\r\n \r\n };\r\n \r\n Triangle.prototypenormal = function ( target ) {\r\n \r\n\t console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t return this.getNormal( target );\r\n \r\n };\r\n \r\n Triangle.prototype.plane = function ( target ) {\r\n \r\n\t console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\r\n\t return this.getPlane( target );\r\n \r\n };\r\n \r\n Triangle.barycoordFromPoint = function ( point, a, b, c, target ) {\r\n \r\n\t console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\r\n\t return Triangle.getBarycoord( point, a, b, c, target );\r\n \r\n };\r\n \r\n Triangle.normal = function ( a, b, c, target ) {\r\n \r\n\t console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\r\n\t return Triangle.getNormal( a, b, c, target );\r\n \r\n };\r\n \r\n //\r\n \r\n Shape.prototype.extractAllPoints = function ( divisions ) {\r\n \r\n\t console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\r\n\t return this.extractPoints( divisions );\r\n \r\n };\r\n \r\n Shape.prototype.extrude = function ( options ) {\r\n \r\n\t console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\r\n\t return new ExtrudeGeometry( this, options );\r\n \r\n };\r\n \r\n Shape.prototype.makeGeometry = function ( options ) {\r\n \r\n\t console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\r\n\t return new ShapeGeometry( this, options );\r\n \r\n };\r\n \r\n //\r\n \r\n Vector2.prototype.fromAttribute = function ( attribute, index, offset ) {\r\n \r\n\t console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t return this.fromBufferAttribute( attribute, index, offset );\r\n \r\n };\r\n \r\n Vector2.prototype.distanceToManhattan = function ( v ) {\r\n \r\n\t console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t return this.manhattanDistanceTo( v );\r\n \r\n };\r\n \r\n Vector2.prototype.lengthManhattan = function () {\r\n \r\n\t console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t return this.manhattanLength();\r\n \r\n };\r\n \r\n //\r\n \r\n Vector3.prototype.setEulerFromRotationMatrix = function () {\r\n \r\n\t console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n \r\n };\r\n \r\n Vector3.prototype.setEulerFromQuaternion = function () {\r\n \r\n\t console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n \r\n };\r\n \r\n Vector3.prototype.getPositionFromMatrix = function ( m ) {\r\n \r\n\t console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t return this.setFromMatrixPosition( m );\r\n \r\n };\r\n \r\n Vector3.prototype.getScaleFromMatrix = function ( m ) {\r\n \r\n\t console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t return this.setFromMatrixScale( m );\r\n \r\n };\r\n \r\n Vector3.prototype.getColumnFromMatrix = function ( index, matrix ) {\r\n \r\n\t console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t return this.setFromMatrixColumn( matrix, index );\r\n \r\n };\r\n \r\n Vector3.prototype.applyProjection = function ( m ) {\r\n \r\n\t console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\r\n\t return this.applyMatrix4( m );\r\n \r\n };\r\n \r\n Vector3.prototype.fromAttribute = function ( attribute, index, offset ) {\r\n \r\n\t console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t return this.fromBufferAttribute( attribute, index, offset );\r\n \r\n };\r\n \r\n Vector3.prototype.distanceToManhattan = function ( v ) {\r\n \r\n\t console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\r\n\t return this.manhattanDistanceTo( v );\r\n \r\n };\r\n \r\n Vector3.prototype.lengthManhattan = function () {\r\n \r\n\t console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t return this.manhattanLength();\r\n \r\n };\r\n \r\n //\r\n \r\n Vector4.prototype.fromAttribute = function ( attribute, index, offset ) {\r\n \r\n\t console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\r\n\t return this.fromBufferAttribute( attribute, index, offset );\r\n \r\n };\r\n \r\n Vector4.prototype.lengthManhattan = function () {\r\n \r\n\t console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\r\n\t return this.manhattanLength();\r\n \r\n };\r\n \r\n //\r\n \r\n Object3D.prototype.getChildByName = function ( name ) {\r\n \r\n\t console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t return this.getObjectByName( name );\r\n \r\n };\r\n \r\n Object3D.prototype.renderDepth = function () {\r\n \r\n\t console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n \r\n };\r\n \r\n Object3D.prototype.translate = function ( distance, axis ) {\r\n \r\n\t console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t return this.translateOnAxis( axis, distance );\r\n \r\n };\r\n \r\n Object3D.prototype.getWorldRotation = function () {\r\n \r\n\t console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\r\n \r\n };\r\n \r\n Object3D.prototype.applyMatrix = function ( matrix ) {\r\n \r\n\t console.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );\r\n\t return this.applyMatrix4( matrix );\r\n \r\n };\r\n \r\n Object.defineProperties( Object3D.prototype, {\r\n \r\n\t eulerOrder: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t return this.rotation.order;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\t this.rotation.order = value;\r\n \r\n\t\t }\r\n\t },\r\n\t useQuaternion: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n \r\n\t\t }\r\n\t }\r\n \r\n } );\r\n \r\n Mesh.prototype.setDrawMode = function () {\r\n \r\n\t console.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\r\n \r\n };\r\n \r\n Object.defineProperties( Mesh.prototype, {\r\n \r\n\t drawMode: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );\r\n\t\t\t return TrianglesDrawMode;\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );\r\n \r\n\t\t }\r\n\t }\r\n \r\n } );\r\n \r\n SkinnedMesh.prototype.initBones = function () {\r\n \r\n\t console.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\r\n \r\n };\r\n \r\n //\r\n \r\n PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\r\n \r\n\t console.warn( 'THREE.PerspectiveCamera.setLens is deprecated. ' +\r\n\t\t\t 'Use .setFocalLength and .filmGauge for a photographic setup.' );\r\n \r\n\t if ( filmGauge !== undefined ) this.filmGauge = filmGauge;\r\n\t this.setFocalLength( focalLength );\r\n \r\n };\r\n \r\n //\r\n \r\n Object.defineProperties( Light.prototype, {\r\n\t onlyShadow: {\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraFov: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\t this.shadow.camera.fov = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraLeft: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\t this.shadow.camera.left = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraRight: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\t this.shadow.camera.right = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraTop: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\t this.shadow.camera.top = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraBottom: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\t this.shadow.camera.bottom = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraNear: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\t this.shadow.camera.near = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraFar: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\t this.shadow.camera.far = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowCameraVisible: {\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n \r\n\t\t }\r\n\t },\r\n\t shadowBias: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\t this.shadow.bias = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowDarkness: {\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n \r\n\t\t }\r\n\t },\r\n\t shadowMapWidth: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\t this.shadow.mapSize.width = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowMapHeight: {\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\t this.shadow.mapSize.height = value;\r\n \r\n\t\t }\r\n\t }\r\n } );\r\n \r\n //\r\n \r\n Object.defineProperties( BufferAttribute.prototype, {\r\n \r\n\t length: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\r\n\t\t\t return this.array.length;\r\n \r\n\t\t }\r\n\t },\r\n\t dynamic: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\r\n\t\t\t return this.usage === DynamicDrawUsage;\r\n \r\n\t\t },\r\n\t\t set: function ( /* value */ ) {\r\n \r\n\t\t\t console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\r\n\t\t\t this.setUsage( DynamicDrawUsage );\r\n \r\n\t\t }\r\n\t }\r\n \r\n } );\r\n \r\n BufferAttribute.prototype.setDynamic = function ( value ) {\r\n \r\n\t console.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\r\n\t this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\r\n\t return this;\r\n \r\n };\r\n \r\n BufferAttribute.prototype.copyIndicesArray = function ( /* indices */ ) {\r\n \r\n\t console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\r\n \r\n },\r\n \r\n BufferAttribute.prototype.setArray = function ( /* array */ ) {\r\n \r\n\t console.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\r\n \r\n };\r\n \r\n //\r\n \r\n BufferGeometry.prototype.addIndex = function ( index ) {\r\n \r\n\t console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t this.setIndex( index );\r\n \r\n };\r\n \r\n BufferGeometry.prototype.addAttribute = function ( name, attribute ) {\r\n \r\n\t console.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\r\n \r\n\t if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\r\n \r\n\t\t console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n \r\n\t\t return this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n \r\n\t }\r\n \r\n\t if ( name === 'index' ) {\r\n \r\n\t\t console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t this.setIndex( attribute );\r\n \r\n\t\t return this;\r\n \r\n\t }\r\n \r\n\t return this.setAttribute( name, attribute );\r\n \r\n };\r\n \r\n BufferGeometry.prototype.addDrawCall = function ( start, count, indexOffset ) {\r\n \r\n\t if ( indexOffset !== undefined ) {\r\n \r\n\t\t console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n \r\n\t }\r\n \r\n\t console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t this.addGroup( start, count );\r\n \r\n };\r\n \r\n BufferGeometry.prototype.clearDrawCalls = function () {\r\n \r\n\t console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t this.clearGroups();\r\n \r\n };\r\n \r\n BufferGeometry.prototype.computeOffsets = function () {\r\n \r\n\t console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n \r\n };\r\n \r\n BufferGeometry.prototype.removeAttribute = function ( name ) {\r\n \r\n\t console.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\r\n \r\n\t return this.deleteAttribute( name );\r\n \r\n };\r\n \r\n BufferGeometry.prototype.applyMatrix = function ( matrix ) {\r\n \r\n\t console.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );\r\n\t return this.applyMatrix4( matrix );\r\n \r\n };\r\n \r\n Object.defineProperties( BufferGeometry.prototype, {\r\n \r\n\t drawcalls: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\t return this.groups;\r\n \r\n\t\t }\r\n\t },\r\n\t offsets: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\t return this.groups;\r\n \r\n\t\t }\r\n\t }\r\n \r\n } );\r\n \r\n InterleavedBuffer.prototype.setDynamic = function ( value ) {\r\n \r\n\t console.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\r\n\t this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\r\n\t return this;\r\n \r\n };\r\n \r\n InterleavedBuffer.prototype.setArray = function ( /* array */ ) {\r\n \r\n\t console.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\r\n \r\n };\r\n \r\n //\r\n \r\n ExtrudeGeometry.prototype.getArrays = function () {\r\n \r\n\t console.error( 'THREE.ExtrudeGeometry: .getArrays() has been removed.' );\r\n \r\n };\r\n \r\n ExtrudeGeometry.prototype.addShapeList = function () {\r\n \r\n\t console.error( 'THREE.ExtrudeGeometry: .addShapeList() has been removed.' );\r\n \r\n };\r\n \r\n ExtrudeGeometry.prototype.addShape = function () {\r\n \r\n\t console.error( 'THREE.ExtrudeGeometry: .addShape() has been removed.' );\r\n \r\n };\r\n \r\n //\r\n \r\n Scene.prototype.dispose = function () {\r\n \r\n\t console.error( 'THREE.Scene: .dispose() has been removed.' );\r\n \r\n };\r\n \r\n //\r\n \r\n Uniform.prototype.onUpdate = function () {\r\n \r\n\t console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\r\n\t return this;\r\n \r\n };\r\n \r\n //\r\n \r\n Object.defineProperties( Material.prototype, {\r\n \r\n\t wrapAround: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Material: .wrapAround has been removed.' );\r\n \r\n\t\t }\r\n\t },\r\n \r\n\t overdraw: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Material: .overdraw has been removed.' );\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Material: .overdraw has been removed.' );\r\n \r\n\t\t }\r\n\t },\r\n \r\n\t wrapRGB: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.Material: .wrapRGB has been removed.' );\r\n\t\t\t return new Color();\r\n \r\n\t\t }\r\n\t },\r\n \r\n\t shading: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\r\n\t\t\t this.flatShading = ( value === FlatShading );\r\n \r\n\t\t }\r\n\t },\r\n \r\n\t stencilMask: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\r\n\t\t\t return this.stencilFuncMask;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\r\n\t\t\t this.stencilFuncMask = value;\r\n \r\n\t\t }\r\n\t },\r\n \r\n\t vertexTangents: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.' + this.type + ': .vertexTangents has been removed.' );\r\n \r\n\t\t }\r\n\t },\r\n \r\n } );\r\n \r\n Object.defineProperties( ShaderMaterial.prototype, {\r\n \r\n\t derivatives: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t return this.extensions.derivatives;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\t this.extensions.derivatives = value;\r\n \r\n\t\t }\r\n\t }\r\n \r\n } );\r\n \r\n //\r\n \r\n WebGLRenderer.prototype.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\r\n\t this.setRenderTarget( renderTarget );\r\n\t this.clear( color, depth, stencil );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.animate = function ( callback ) {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\r\n\t this.setAnimationLoop( callback );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.getCurrentRenderTarget = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\r\n\t return this.getRenderTarget();\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.getMaxAnisotropy = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\r\n\t return this.capabilities.getMaxAnisotropy();\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.getPrecision = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\r\n\t return this.capabilities.precision;\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.resetGLState = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\r\n\t return this.state.reset();\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsFloatTextures = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t return this.extensions.get( 'OES_texture_float' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsHalfFloatTextures = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t return this.extensions.get( 'OES_texture_half_float' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsStandardDerivatives = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t return this.extensions.get( 'OES_standard_derivatives' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsBlendMinMax = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t return this.extensions.get( 'EXT_blend_minmax' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsVertexTextures = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\r\n\t return this.capabilities.vertexTextures;\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.supportsInstancedArrays = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t return this.extensions.get( 'ANGLE_instanced_arrays' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.enableScissorTest = function ( boolean ) {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t this.setScissorTest( boolean );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.initMaterial = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.addPrePlugin = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.addPostPlugin = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.updateShadowMap = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.setFaceCulling = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.allocTextureUnit = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.setTexture = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.setTexture2D = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.setTextureCube = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\r\n \r\n };\r\n \r\n WebGLRenderer.prototype.getActiveMipMapLevel = function () {\r\n \r\n\t console.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\r\n\t return this.getActiveMipmapLevel();\r\n \r\n };\r\n \r\n Object.defineProperties( WebGLRenderer.prototype, {\r\n \r\n\t shadowMapEnabled: {\r\n\t\t get: function () {\r\n \r\n\t\t\t return this.shadowMap.enabled;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t this.shadowMap.enabled = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowMapType: {\r\n\t\t get: function () {\r\n \r\n\t\t\t return this.shadowMap.type;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t this.shadowMap.type = value;\r\n \r\n\t\t }\r\n\t },\r\n\t shadowMapCullFace: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t return undefined;\r\n \r\n\t\t },\r\n\t\t set: function ( /* value */ ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\r\n \r\n\t\t }\r\n\t },\r\n\t context: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\r\n\t\t\t return this.getContext();\r\n \r\n\t\t }\r\n\t },\r\n\t vr: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );\r\n\t\t\t return this.xr;\r\n \r\n\t\t }\r\n\t },\r\n\t gammaInput: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\r\n\t\t\t return false;\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );\r\n \r\n\t\t }\r\n\t },\r\n\t gammaOutput: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\r\n\t\t\t return false;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );\r\n\t\t\t this.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;\r\n \r\n\t\t }\r\n\t },\r\n\t toneMappingWhitePoint: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\r\n\t\t\t return 1.0;\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.' );\r\n \r\n\t\t }\r\n\t },\r\n\t gammaFactor: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\r\n\t\t\t return 2;\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .gammaFactor has been removed.' );\r\n \r\n\t\t }\r\n\t }\r\n } );\r\n \r\n Object.defineProperties( WebGLShadowMap.prototype, {\r\n \r\n\t cullFace: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t return undefined;\r\n \r\n\t\t },\r\n\t\t set: function ( /* cullFace */ ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\r\n \r\n\t\t }\r\n\t },\r\n\t renderReverseSided: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t return undefined;\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\r\n \r\n\t\t }\r\n\t },\r\n\t renderSingleSided: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n\t\t\t return undefined;\r\n \r\n\t\t },\r\n\t\t set: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\r\n \r\n\t\t }\r\n\t }\r\n \r\n } );\r\n \r\n function WebGLRenderTargetCube( width, height, options ) {\r\n \r\n\t console.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );\r\n\t return new WebGLCubeRenderTarget( width, options );\r\n \r\n }\r\n \r\n //\r\n \r\n Object.defineProperties( WebGLRenderTarget.prototype, {\r\n \r\n\t wrapS: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t return this.texture.wrapS;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\t this.texture.wrapS = value;\r\n \r\n\t\t }\r\n\t },\r\n\t wrapT: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t return this.texture.wrapT;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\t this.texture.wrapT = value;\r\n \r\n\t\t }\r\n\t },\r\n\t magFilter: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t return this.texture.magFilter;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\t this.texture.magFilter = value;\r\n \r\n\t\t }\r\n\t },\r\n\t minFilter: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t return this.texture.minFilter;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\t this.texture.minFilter = value;\r\n \r\n\t\t }\r\n\t },\r\n\t anisotropy: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t return this.texture.anisotropy;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\t this.texture.anisotropy = value;\r\n \r\n\t\t }\r\n\t },\r\n\t offset: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t return this.texture.offset;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\t this.texture.offset = value;\r\n \r\n\t\t }\r\n\t },\r\n\t repeat: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t return this.texture.repeat;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\t this.texture.repeat = value;\r\n \r\n\t\t }\r\n\t },\r\n\t format: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t return this.texture.format;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\t this.texture.format = value;\r\n \r\n\t\t }\r\n\t },\r\n\t type: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t return this.texture.type;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\t this.texture.type = value;\r\n \r\n\t\t }\r\n\t },\r\n\t generateMipmaps: {\r\n\t\t get: function () {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t return this.texture.generateMipmaps;\r\n \r\n\t\t },\r\n\t\t set: function ( value ) {\r\n \r\n\t\t\t console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\t this.texture.generateMipmaps = value;\r\n \r\n\t\t }\r\n\t }\r\n \r\n } );\r\n \r\n //\r\n \r\n Audio.prototype.load = function ( file ) {\r\n \r\n\t console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\r\n\t const scope = this;\r\n\t const audioLoader = new AudioLoader();\r\n\t audioLoader.load( file, function ( buffer ) {\r\n \r\n\t\t scope.setBuffer( buffer );\r\n \r\n\t } );\r\n\t return this;\r\n \r\n };\r\n \r\n \r\n AudioAnalyser.prototype.getData = function () {\r\n \r\n\t console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\r\n\t return this.getFrequencyData();\r\n \r\n };\r\n \r\n //\r\n \r\n CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\r\n \r\n\t console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\r\n\t return this.update( renderer, scene );\r\n \r\n };\r\n \r\n CubeCamera.prototype.clear = function ( renderer, color, depth, stencil ) {\r\n \r\n\t console.warn( 'THREE.CubeCamera: .clear() is now .renderTarget.clear().' );\r\n\t return this.renderTarget.clear( renderer, color, depth, stencil );\r\n \r\n };\r\n \r\n ImageUtils.crossOrigin = undefined;\r\n \r\n ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\r\n \r\n\t console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n \r\n\t const loader = new TextureLoader();\r\n\t loader.setCrossOrigin( this.crossOrigin );\r\n \r\n\t const texture = loader.load( url, onLoad, undefined, onError );\r\n \r\n\t if ( mapping ) texture.mapping = mapping;\r\n \r\n\t return texture;\r\n \r\n };\r\n \r\n ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\r\n \r\n\t console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n \r\n\t const loader = new CubeTextureLoader();\r\n\t loader.setCrossOrigin( this.crossOrigin );\r\n \r\n\t const texture = loader.load( urls, onLoad, undefined, onError );\r\n \r\n\t if ( mapping ) texture.mapping = mapping;\r\n \r\n\t return texture;\r\n \r\n };\r\n \r\n ImageUtils.loadCompressedTexture = function () {\r\n \r\n\t console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n \r\n };\r\n \r\n ImageUtils.loadCompressedTextureCube = function () {\r\n \r\n\t console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n \r\n };\r\n \r\n //\r\n \r\n function CanvasRenderer() {\r\n \r\n\t console.error( 'THREE.CanvasRenderer has been removed' );\r\n \r\n }\r\n \r\n //\r\n \r\n function JSONLoader() {\r\n \r\n\t console.error( 'THREE.JSONLoader has been removed.' );\r\n \r\n }\r\n \r\n //\r\n \r\n const SceneUtils = {\r\n \r\n\t createMultiMaterialObject: function ( /* geometry, materials */ ) {\r\n \r\n\t\t console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\r\n \r\n\t },\r\n \r\n\t detach: function ( /* child, parent, scene */ ) {\r\n \r\n\t\t console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\r\n \r\n\t },\r\n \r\n\t attach: function ( /* child, scene, parent */ ) {\r\n \r\n\t\t console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );\r\n \r\n\t }\r\n \r\n };\r\n \r\n //\r\n \r\n function LensFlare() {\r\n \r\n\t console.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );\r\n \r\n }\r\n \r\n //\r\n \r\n function ParametricGeometry() {\r\n \r\n\t console.error( 'THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js' );\r\n\t return new BufferGeometry();\r\n \r\n }\r\n \r\n function TextGeometry() {\r\n \r\n\t console.error( 'THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js' );\r\n\t return new BufferGeometry();\r\n \r\n }\r\n \r\n function FontLoader() {\r\n \r\n\t console.error( 'THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js' );\r\n \r\n }\r\n \r\n function Font() {\r\n \r\n\t console.error( 'THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js' );\r\n \r\n }\r\n \r\n function ImmediateRenderObject() {\r\n \r\n\t console.error( 'THREE.ImmediateRenderObject has been removed.' );\r\n \r\n }\r\n \r\n function WebGLMultisampleRenderTarget( width, height, options ) {\r\n \r\n\t console.error( 'THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the \"samples\" property to greater 0 to enable multisampling.' );\r\n\t const renderTarget = new WebGLRenderTarget( width, height, options );\r\n\t renderTarget.samples = 4;\r\n\t return renderTarget;\r\n \r\n }\r\n \r\n function DataTexture2DArray( data, width, height, depth ) {\r\n \r\n\t console.warn( 'THREE.DataTexture2DArray has been renamed to DataArrayTexture.' );\r\n\t return new DataArrayTexture( data, width, height, depth );\r\n \r\n }\r\n \r\n function DataTexture3D( data, width, height, depth ) {\r\n \r\n\t console.warn( 'THREE.DataTexture3D has been renamed to Data3DTexture.' );\r\n\t return new Data3DTexture( data, width, height, depth );\r\n \r\n }\r\n \r\n if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n \r\n\t __THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\r\n\t\t revision: REVISION,\r\n\t } } ) );\r\n \r\n }\r\n \r\n if ( typeof window !== 'undefined' ) {\r\n \r\n\t if ( window.__THREE__ ) {\r\n \r\n\t\t console.warn( 'WARNING: Multiple instances of Three.js being imported.' );\r\n \r\n\t } else {\r\n \r\n\t\t window.__THREE__ = REVISION;\r\n \r\n\t }\r\n \r\n }\r\n \r\n export { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxGeometry as BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleGeometry as CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeGeometry as ConeBufferGeometry, ConeGeometry, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry as CylinderBufferGeometry, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry as DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry as ExtrudeBufferGeometry, ExtrudeGeometry, FaceColors, FileLoader, FlatShading, Float16BufferAttribute, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterDepth, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronGeometry as IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, JSONLoader, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry as LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils as Math, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverDepth, NeverStencilFunc, NoBlending, NoColors, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry as OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneGeometry as PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry as PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBFormat, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry as RingBufferGeometry, RingGeometry, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry as ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereGeometry as SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry as TetrahedronBufferGeometry, TetrahedronGeometry, TextGeometry, Texture, TextureLoader, TorusGeometry as TorusBufferGeometry, TorusGeometry, TorusKnotGeometry as TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry as TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, sRGBEncoding };\r\n ","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=3&id=68259c74&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!./goldenlayout-dark-theme.css?vue&type=style&index=1&lang=css\"","import { GlbLoaders } from \"@/loaders/GlbLoaders\";\r\nimport { Box3, Color, InstancedMesh, Matrix4, Vector3 } from \"three\";\r\nimport { MaterialData } from \"./MaterialData\";\r\nimport { MeshData } from \"./MeshData\";\r\n\r\n\r\nexport class InstanceData  implements MeshData\r\n{\r\n\r\n    private _instanceMesh: InstancedMesh;\r\n    private _index: number;\r\n    private _orignMatrix4:Matrix4;\r\n    private _show:boolean=true;\r\n    private _color:Color;\r\n\r\n\r\n    constructor(mesh: InstancedMesh,index: number)\r\n    {\r\n        this._instanceMesh=mesh\r\n        this._index=index;\r\n        this._orignMatrix4=new Matrix4();\r\n        this._instanceMesh.getMatrixAt(index, this._orignMatrix4)\r\n    }\r\n\r\n    public set show(value:boolean)\r\n    {\r\n        if(this._show==value) return;\r\n        this._show=value;\r\n        if(value)\r\n        {\r\n            this._instanceMesh.setMatrixAt(this._index,this._orignMatrix4)\r\n        }\r\n        else\r\n        {\r\n            this._instanceMesh.setMatrixAt(this._index, MaterialData.zeroMatrix4)\r\n        }\r\n        this._instanceMesh.instanceMatrix.needsUpdate = true;\r\n    }\r\n\r\n    public get show():boolean\r\n    {\r\n        return this._show;\r\n    }\r\n\r\n    public set color(value:Color)\r\n    {\r\n\r\n        if(value==null)\r\n        {\r\n            this._instanceMesh.setColorAt(this._index, MaterialData.normalColor);\r\n        }\r\n        else\r\n        {\r\n            this._instanceMesh.setColorAt(this._index, value);\r\n        }\r\n        this._instanceMesh.instanceColor.needsUpdate = true;\r\n    }\r\n    public get color():Color\r\n    {\r\n        return this._color;\r\n    }\r\n\r\n\r\n\r\n    public _boundingBox: Box3\r\n    public set boundingBox(value: Box3) {\r\n        this._boundingBox = value;\r\n    }\r\n    public get boundingBox(): Box3 {\r\n        if (this._boundingBox == null) {\r\n            this._boundingBox =this._instanceMesh.geometry.boundingBox.clone()\r\n            let m = this._orignMatrix4.clone().multiply(this._instanceMesh.matrix);\r\n            let getMatrix4 = (obj) => {\r\n                if (obj.parent) {\r\n                    m = m.premultiply(obj.parent.matrix);\r\n                    getMatrix4(obj.parent)\r\n                }\r\n            }\r\n            getMatrix4(this._instanceMesh);\r\n            this._boundingBox.applyMatrix4(m)    \r\n        }\r\n        return this._boundingBox;\r\n    }\r\n}\r\n","// precision mediump float;\r\n// #pragma glslify: grain = require('glsl-film-grain')\r\n// #pragma glslify: blend = require('glsl-blend-soft-light')\r\n\r\n// uniform vec3 color1;\r\n// uniform vec3 color2;\r\n// uniform float aspect;\r\n// uniform vec2 offset;\r\n// uniform vec2 scale;\r\n// uniform float noiseAlpha;\r\n// uniform bool aspectCorrection;\r\n// uniform float grainScale;\r\n// uniform float grainTime;\r\n// uniform vec2 smooth;\r\n\r\n// varying vec2 vUv;\r\n\r\n// void main() {\r\n//   vec2 q = vec2(vUv - 0.5);\r\n//   if (aspectCorrection) {\r\n//     q.x *= aspect;\r\n//   }\r\n//   q /= scale;\r\n//   q -= offset;\r\n//   float dst = length(q);\r\n//   dst = smoothstep(smooth.x, smooth.y, dst);\r\n//   vec3 color = mix(color1, color2, dst);\r\n\r\n//   if (noiseAlpha > 0.0 && grainScale > 0.0) {\r\n//     float gSize = 1.0 / grainScale;\r\n//     float g = grain(vUv, vec2(gSize * aspect, gSize), grainTime);\r\n//     vec3 noiseColor = blend(color, vec3(g));\r\n//     gl_FragColor.rgb = mix(color, noiseColor, noiseAlpha);\r\n//   } else {\r\n//     gl_FragColor.rgb = color;\r\n//   }\r\n//   gl_FragColor.a = 1.0;\r\n// }\r\n\r\nmodule.exports=\"precision mediump float;\\n#define GLSLIFY 1\\n//\\n// GLSL textureless classic 3D noise \\\"cnoise\\\",\\n// with an RSL-style periodic variant \\\"pnoise\\\".\\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\\n// Version: 2011-10-11\\n//\\n// Many thanks to Ian McEwan of Ashima Arts for the\\n// ideas for permutation and gradient selection.\\n//\\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\\n// Distributed under the MIT license. See LICENSE file.\\n// https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_1(vec3 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_1(vec4 x)\\n{\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_1(vec4 x)\\n{\\n  return mod289_1(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_1(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nvec3 fade(vec3 t) {\\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\\n}\\n\\n// Classic Perlin noise, periodic variant\\nfloat pnoise(vec3 P, vec3 rep)\\n{\\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\\n  Pi0 = mod289_1(Pi0);\\n  Pi1 = mod289_1(Pi1);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute_1(permute_1(ix) + iy);\\n  vec4 ixy0 = permute_1(ixy + iz0);\\n  vec4 ixy1 = permute_1(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt_1(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt_1(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289_0(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289_0(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute_0(vec4 x) {\\n     return mod289_0(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt_0(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g_0 = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g_0;\\n  vec3 i1 = min( g_0.xyz, l.zxy );\\n  vec3 i2 = max( g_0.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289_0(i);\\n  vec4 p = permute_0( permute_0( permute_0(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt_0(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nfloat grain(vec2 texCoord, vec2 resolution, float frame, float multiplier) {\\n    vec2 mult = texCoord * resolution;\\n    float offset = snoise(vec3(mult / multiplier, frame));\\n    float n1 = pnoise(vec3(mult, offset), vec3(1.0/texCoord * resolution, 1.0));\\n    return n1 / 2.0 + 0.5;\\n}\\n\\nfloat grain(vec2 texCoord, vec2 resolution, float frame) {\\n    return grain(texCoord, resolution, frame, 2.5);\\n}\\n\\nfloat grain(vec2 texCoord, vec2 resolution) {\\n    return grain(texCoord, resolution, 0.0);\\n}\\n\\nvec3 blendSoftLight(vec3 base, vec3 blend) {\\n    return mix(\\n        sqrt(base) * (2.0 * blend - 1.0) + 2.0 * base * (1.0 - blend), \\n        2.0 * base * blend + base * base * (1.0 - 2.0 * blend), \\n        step(base, vec3(0.5))\\n    );\\n}\\n\\n// Using conditionals\\n// vec3 blendSoftLight(vec3 base, vec3 blend) {\\n//     return vec3(\\n//         ((blend.r < 0.5) ? (2.0 * base.r * blend.r + base.r * base.r * (1.0 - 2.0 * blend.r)) : (sqrt(base.r) * (2.0 * blend.r - 1.0) + 2.0 * base.r * (1.0 - blend.r))),\\n//         ((blend.g < 0.5) ? (2.0 * base.g * blend.g + base.g * base.g * (1.0 - 2.0 * blend.g)) : (sqrt(base.g) * (2.0 * blend.g - 1.0) + 2.0 * base.g * (1.0 - blend.g))),\\n//         ((blend.b < 0.5) ? (2.0 * base.b * blend.b + base.b * base.b * (1.0 - 2.0 * blend.b)) : (sqrt(base.b) * (2.0 * blend.b - 1.0) + 2.0 * base.b * (1.0 - blend.b)))\\n//     );\\n// }\\n\\nuniform vec3 color1;\\nuniform vec3 color2;\\nuniform float aspect;\\nuniform vec2 offset;\\nuniform vec2 scale;\\nuniform float noiseAlpha;\\nuniform bool aspectCorrection;\\nuniform float grainScale;\\nuniform float grainTime;\\nuniform vec2 smooth;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n  vec2 q = vec2(vUv - 0.5);\\n  if (aspectCorrection) {\\n    q.x *= aspect;\\n  }\\n  q /= scale;\\n  q -= offset;\\n  float dst = length(q);\\n  dst = smoothstep(smooth.x, smooth.y, dst);\\n  vec3 color = mix(color1, color2, dst);\\n\\n  if (noiseAlpha > 0.0 && grainScale > 0.0) {\\n    float gSize = 1.0 / grainScale;\\n    float g = grain(vUv, vec2(gSize * aspect, gSize), grainTime);\\n    vec3 noiseColor = blendSoftLight(color, vec3(g));\\n    gl_FragColor.rgb = mix(color, noiseColor, noiseAlpha);\\n  } else {\\n    gl_FragColor.rgb = color;\\n  }\\n  gl_FragColor.a = 1.0;\\n}\\n\";","import {ref, Ref } from \"vue\";\r\n\r\n\r\nexport interface Tree {\r\n    label: string;\r\n    children?: Tree[];\r\n    id: number|string;\r\n}\r\n\r\nexport class ProjectViewComponent\r\n{\r\n    static ModelData:Ref<Tree[]>=ref<Tree[]>([])\r\n\r\n    static SpaceTreeCheckIDs = ref([]);\r\n\r\n    static SpaceTreeExpandedIDs = ref([]);\r\n\r\n    static modelTree\r\n\r\n    static  treeHeight:Ref<number>\r\n}\r\n\r\n\r\n","import { Ref } from \"vue\";\r\n\r\nexport class OpenTilesComponent\r\n{\r\n    static  OpenTiles: Ref<OpenTilesData>\r\n}\r\n\r\n\r\nexport interface OpenTilesData\r\n{\r\n    dialogVisible:boolean\r\n}\r\n\r\n","import {\r\n    ComponentItemConfig,\r\n    ItemType,\r\n    LayoutConfig,\r\n    StackItemConfig,\r\n} from \"golden-layout\";\r\n\r\nconst miniRowConfig: LayoutConfig = {\r\n    root: {\r\n        type: ItemType.row,\r\n        content: [\r\n            {\r\n                type: ItemType.column,\r\n                width: 8,\r\n                minWidth: 1,\r\n                content: [\r\n                    {\r\n                        type: \"component\",\r\n                        title: \"项目浏览器\",\r\n                        header: { show: \"top\", popout: false },\r\n                        componentType: \"ProjectViewComponent\",\r\n                        componentState: {  },\r\n                        height: 50,\r\n                        isClosable: true\r\n                    },\r\n                    {\r\n                        type: \"component\",\r\n                        title: \"元素属性\",\r\n                        header: { show: \"top\", popout: false },\r\n                        componentType: \"AttributeView\",\r\n                        componentState: {  },\r\n                        isClosable: true\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                type: \"component\",\r\n                title: \"CAD View\",\r\n                header: { show: \"top\", popout: false },\r\n                componentType: \"View3D\",\r\n                componentState: {  },\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport const prefinedLayouts = {\r\n    miniRow: miniRowConfig,\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"full-height\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", {\n  id: \"fileInputGLTF\",\n  for: \"fileGLTF\",\n  title: \"Import ifc from File\"\n}, [\n  /*#__PURE__*/_createTextVNode(\"打开glb \"),\n  /*#__PURE__*/_createElementVNode(\"input\", {\n    id: \"fileGLTF\",\n    name: \"fileGLTF\",\n    type: \"file\",\n    accept: \".glb\",\n    multiple: \"\",\n    style: {\"display\":\"none\"}\n  })\n], -1)\n\nimport Glayout from \"@/components/Glayout.vue\";\r\nimport OpenTiles from '@/components/OpenTiles.vue';\r\nimport { ref, onMounted } from \"vue\";\r\nimport { App } from \"./App\";\r\nimport { OpenTilesComponent, OpenTilesData } from \"./components/OpenTilesComponent\";\r\nimport { prefinedLayouts } from \"./components/predefined-layouts\";\r\nimport { TilesLoaders } from \"./loaders/TilesLoaders\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  setup(__props) {\n\r\nconst GLayoutRoot = ref<null | HTMLElement>(null);\r\nonMounted(() => {\r\n    document.addEventListener('DOMContentLoaded', async () => {\r\n        await (GLayoutRoot.value as any).loadGLLayout(prefinedLayouts.miniRow);\r\n    });\r\n});\r\n\r\nconst openTiles = ref<OpenTilesData>();\r\nOpenTilesComponent.OpenTiles=openTiles;\r\n\r\n\r\nconst openTilesClick=()=>\r\n{\r\n  OpenTilesComponent.OpenTiles.value.dialogVisible=true;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      id: \"topnav\",\n      class: \"topnav\"\n    }, [\n      _hoisted_2,\n      _createElementVNode(\"a\", {\n        href: \"#\",\n        id: \"fileInputTiles\",\n        onClick: openTilesClick\n      }, \"打开3dtiles\")\n    ]),\n    _createVNode(Glayout, {\n      ref: (_value, _refs) => {\n        _refs['GLayoutRoot'] = _value\n        GLayoutRoot.value = _value\n      },\n      \"glc-path\": \"./\",\n      style: {\"width\":\"100%\",\"top\":\"25px\",\"bottom\":\"0px\",\"position\":\"absolute\"}\n    }, null, 512),\n    _createVNode(OpenTiles, {\n      ref: (_value, _refs) => {\n        _refs['openTiles'] = _value\n        openTiles.value = _value\n      }\n    }, null, 512)\n  ]))\n}\n}\n\n})","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./assets/goldenlayout-base.css?vue&type=style&index=0&lang=css\"\nimport \"./assets/goldenlayout-dark-theme.css?vue&type=style&index=1&lang=css\"\nimport \"./assets/style.css?vue&type=style&index=2&lang=css\"\nimport \"./App.vue?vue&type=style&index=3&id=68259c74&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport ElementPlus from 'element-plus'\r\nimport 'element-plus/dist/index.css'\r\nimport App from './App.vue'\r\nconst app = createApp(App)\r\napp.use(ElementPlus)\r\napp.mount('#app')\r\n","import { GLTF, GLTFLoader, GLTFParser } from \"three/examples/jsm/loaders/GLTFLoader\"\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nimport { mergeBufferAttributes, mergeBufferGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\r\nimport * as THREE from \"three\";\r\nimport { ThreeScene } from \"@/sence/ThreeScene\";\r\nimport { Box3, BufferAttribute, BufferGeometry, Color, InstancedMesh, Material, Matrix4, Mesh, MeshBasicMaterial, MeshStandardMaterial, ShaderLib, ShaderMaterial, ShaderMaterialParameters, UniformsUtils } from \"three\";\r\nimport { ref } from \"vue\";\r\nimport { ElementData } from \"@/data/ElementData\";\r\nimport { InstanceData } from \"@/data/InstanceData\";\r\nimport { BatchData } from \"@/data/BatchData\";\r\nimport { MaterialData } from \"@/data/MaterialData\";\r\nimport { ModelData } from \"@/data/ModelData\";\r\nimport { ProjectViewComponent } from \"@/components/ProjectViewComponent\";\r\nimport { View3DComponent } from \"@/components/View3DComponent\";\r\n\r\n\r\nexport class GlbLoaders {\r\n\r\n\r\n\r\n    public static gltfLoader(world: ThreeScene, gltfUrl: string,name:string) {\r\n        if (world.mapModels.has(gltfUrl)) return;\r\n\r\n        world.clearModel();\r\n\r\n        let scope = world;\r\n        let loader = new GLTFLoader();\r\n        let dracoLoader = new DRACOLoader();\r\n        //GLTFParser.prototype[\"oldGetMaterialType\"]=GLTFParser.prototype.getMaterialType;\r\n\r\n        // GLTFParser.prototype.getMaterialType=function()\r\n        // {\r\n        //     return MeshStandardMaterial\r\n        // }\r\n\r\n\r\n        dracoLoader.setDecoderPath('./lib/draco/');\r\n        loader.setDRACOLoader(dracoLoader);\r\n        View3DComponent.showLoading.value=true;\r\n        loader.load(gltfUrl, function (glTF) {\r\n            //scope.obj.add(glTF.scene);\r\n            glTF.scene.translateY(Math.random()*200)\r\n\r\n            let box=new THREE.Box3().setFromObject(glTF.scene)\r\n            scope.setCameraByBox(box);\r\n\r\n            let modelData=new ModelData()\r\n            scope.mapModels.set(gltfUrl,modelData)\r\n            modelData.name=name\r\n            modelData.boundingBox=box;\r\n            modelData.rootObject=new THREE.Object3D();\r\n            scope.obj.add( modelData.rootObject)\r\n            GlbLoaders.batchAndInstance(glTF, modelData)\r\n            //scope.calSenceBox();\r\n            View3DComponent.showLoading.value=false;\r\n            dracoLoader.dispose();\r\n\r\n            modelData.showSpaceTree()\r\n\r\n\r\n            URL.revokeObjectURL(gltfUrl);\r\n        }, undefined, function (e) {\r\n            window.alert(e);\r\n            dracoLoader.dispose();\r\n        });\r\n    \r\n    }\r\n\r\n\r\n    \r\n\r\n    private static batchAndInstance(glTF: GLTF,  modelData: ModelData) {\r\n\r\n       \r\n        //合批\r\n        let model = glTF.scene;\r\n\r\n        let structMap = new Map();\r\n        //创建材质数组和几何体数组\r\n\r\n\r\n        let idMap :Map<number,number>= new Map();\r\n\r\n        model.traverse(function (child) {\r\n            if (child instanceof THREE.Mesh&& child.geometry.getAttribute(\"position\")!=null) {\r\n                \r\n\r\n                let curNode = child;\r\n                let result = false;\r\n                let getRoot = (object) => {\r\n                    if (result) return\r\n                    if (object && object.parent) {\r\n                        if (object.parent.name == \"root\") {\r\n                            curNode = object;\r\n                            result = true;\r\n                            return;\r\n                        }\r\n                        else {\r\n                            getRoot(object.parent)\r\n                        }\r\n                    }\r\n                }\r\n                getRoot(curNode)\r\n                let bufferGeometry = (child.geometry as BufferGeometry);\r\n                let positionCount = child.geometry.getAttribute(\"position\").count;\r\n                let colors = []\r\n                let id=curNode.id\r\n                if (!idMap.has(curNode.id)) {\r\n                    let elementData = new ElementData();\r\n                    const box3 = new Box3();\r\n                    box3.expandByObject(curNode);\r\n                    elementData.boundingBox=box3\r\n                    elementData.name = curNode.userData.name\r\n                    elementData.useData = curNode.userData;\r\n                    modelData.allElementData.set(elementData.id, elementData);\r\n                    idMap.set(curNode.id,elementData.id)\r\n                    id=elementData.id \r\n                }\r\n                else\r\n                {\r\n                    id= idMap.get(curNode.id);\r\n                }\r\n                // if (child.material.map == null&&child.material.opacity==0) {     \r\n                //     for (let index = 0; index < positionCount; index++) {\r\n                //         colors.push( child.material.color.r);\r\n                //         colors.push( child.material.color.g);\r\n                //         colors.push( child.material.color.b);\r\n                //     }\r\n                //     child.material.name=\"batchColorMaterial\"\r\n                // }\r\n                // else {\r\n                //     for (let index = 0; index < positionCount; index++) {\r\n                //         colors.push(1);\r\n                //         colors.push(1);\r\n                //         colors.push(1);\r\n                //     }   \r\n                // }\r\n                for (let index = 0; index < positionCount; index++) {\r\n                    colors.push( 1);\r\n                    colors.push( 1);\r\n                    colors.push( 1);\r\n                }\r\n                bufferGeometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\r\n                bufferGeometry['elementID']= id\r\n                child['elementID'] = id;\r\n                if (structMap.has(child.material.name)) {\r\n                    let sameMesh = structMap.get(child.material.name);\r\n                    sameMesh.push(child);\r\n                    structMap.set(child.material.name, sameMesh);\r\n                }\r\n                else {\r\n                    let sameMesh = [];\r\n                    sameMesh.push(child);\r\n                    structMap.set(child.material.name, sameMesh);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        //遍历structMap里的values属性\r\n        for (let item of structMap.values()) {\r\n\r\n            let instanceMap: Map<string, THREE.Mesh[]> = new Map();\r\n            for (const element of item) {\r\n                if (instanceMap.has(element.geometry.uuid)) {\r\n                    let sameMesh = instanceMap.get(element.geometry.uuid);\r\n                    sameMesh.push(element);\r\n                    instanceMap.set(element.geometry.uuid, sameMesh);\r\n                }\r\n                else {\r\n                    let sameMesh = [];\r\n                    sameMesh.push(element);\r\n                    instanceMap.set(element.geometry.uuid, sameMesh);\r\n                }\r\n            }\r\n\r\n            let geometries :BufferGeometry[]= []; // 将要合并的多个geometry放入到该数组\r\n            let material :Material\r\n            for (const meshs of instanceMap.values()) {\r\n                let meshCount = meshs.length;\r\n                if (meshCount > 1) {\r\n                    let instancedMeshGeometry = meshs[0].geometry;\r\n                    let instancedMesh = new THREE.InstancedMesh(instancedMeshGeometry, meshs[0].material, meshCount);\r\n                    instancedMesh[\"orignMaterial\"]=meshs[0].material;\r\n                    instancedMesh[\"pickMaterial\"]=MaterialData.pickMaterial\r\n                    //let pickColors = new THREE.InstancedBufferAttribute(new Float32Array(meshCount*3 ), 3);\r\n                    let elementIDS = new THREE.InstancedBufferAttribute(new Int32Array(meshCount ), 1);\r\n                    //const pickColor = new THREE.Color();      \r\n                    for (let i = 0; i < meshs.length; i++) {\r\n                        const mesh = meshs[i];\r\n                        let m = mesh.matrix;\r\n                        let getMatrix4 = (obj) => {\r\n                            if (obj.parent) {\r\n                                m = m.premultiply(obj.parent.matrix);\r\n                                getMatrix4(obj.parent)\r\n                            }\r\n                        }\r\n                        let elementID = mesh['elementID']\r\n                        getMatrix4(mesh);              \r\n                        instancedMesh.setMatrixAt(i, m);\r\n                        instancedMesh.setColorAt(i, MaterialData.normalColor);    \r\n                        let instanceData = new InstanceData(instancedMesh,i);\r\n                        modelData.allElementData.get(elementID).addMeshData(instanceData)\r\n                        // pickColor.setHex( elementID);\r\n                        // pickColors.setXYZ( i, pickColor.r, pickColor.g, pickColor.b );\r\n                        elementIDS.setX(i,elementID)\r\n                    }\r\n                    //instancedMeshGeometry.setAttribute('pickColor', pickColors);\r\n                    instancedMeshGeometry.setAttribute('elementID', elementIDS);\r\n                    modelData.rootObject.add(instancedMesh);\r\n                }\r\n                else  {\r\n                    for (let i = 0; i < meshs.length; i++) {\r\n                        let ele: Mesh = meshs[0];\r\n                        let m = (ele as THREE.Mesh).matrix;\r\n                        let getMatrix4 = (obj) => {\r\n                            if (obj.parent) {\r\n                                m = m.premultiply(obj.parent.matrix);\r\n                                getMatrix4(obj.parent)\r\n                            }\r\n                        }\r\n                        getMatrix4(ele);\r\n                        let geom = ele.geometry.applyMatrix4(m);\r\n                        geometries.push(geom);\r\n                        material = ele.material as Material;\r\n                    }              \r\n                }\r\n            }\r\n            // 合并模型\r\n            if (geometries.length > 0) {\r\n                material.vertexColors = true; //以顶点颜色为准\r\n                const mergedGeometry = new BufferGeometry();\r\n                const singleMergeMesh = new THREE.Mesh(mergedGeometry, material);\r\n                singleMergeMesh[\"orignMaterial\"]=material;\r\n                singleMergeMesh[\"pickMaterial\"]=MaterialData.pickMaterial\r\n                modelData.rootObject.add(singleMergeMesh); // 在场景中添加合并后的mesh(模型)         \r\n                const isIndexed = geometries[ 0 ].index !== null;  \r\n                const attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );       \r\n                const attributes = {};\r\n                let indexOffset = 0;\r\n                const mergedIndex = []; \r\n                //let pickColors = []\r\n                let elementIDS = []\r\n                //const pickColor = new THREE.Color();\r\n                for ( let i = 0; i < geometries.length; ++ i ) {\r\n                    const geometry = geometries[ i ];\r\n                    let elementID =  geometry['elementID'];\r\n                    let batchData=new BatchData(singleMergeMesh,elementID);\r\n                    modelData.allElementData.get(elementID).addMeshData(batchData)\r\n                    if ( isIndexed !== ( geometry.index !== null ) ) {\r\n                        continue;\r\n                    }\r\n                    const index = geometries[ i ].index;\r\n                    for ( let j = 0; j < index.count; ++ j ) {\r\n                        let curIndex=index.getX( j ) + indexOffset \r\n                        mergedIndex.push( curIndex);\r\n                        batchData.indexs.push(curIndex)\r\n                    }\r\n                    //pickColor.setHex(elementID);\r\n                    let positionCount = geometry.attributes.position.count\r\n                    for (let index = 0; index < positionCount; index++) {\r\n                        // pickColors.push(pickColor.r)\r\n                        // pickColors.push(pickColor.g)\r\n                        // pickColors.push(pickColor.b)\r\n                        elementIDS.push(elementID)\r\n                    } \r\n                    indexOffset += geometries[ i ].attributes.position.count;\r\n                    for ( const name in geometry.attributes ) {\r\n            \r\n                        if ( ! attributesUsed.has( name ) ) {\r\n                            continue;\r\n                        }\r\n                        if ( attributes[ name ] === undefined ) attributes[ name ] = [];\r\n                        attributes[ name ].push( geometry.attributes[ name ] );      \r\n                    }\r\n                    geometry.dispose();\r\n                }\r\n                if ( isIndexed ) {\r\n                    mergedGeometry.setIndex( mergedIndex );\r\n                }\r\n                for ( const name in attributes ) {\r\n                    const mergedAttribute = mergeBufferAttributes( attributes[ name ] );\r\n                    if ( ! mergedAttribute ) {\r\n                        continue;\r\n                    }\r\n                    mergedGeometry.setAttribute( name, mergedAttribute );\r\n                }\r\n                //mergedGeometry.setAttribute('pickColor', new THREE.Float32BufferAttribute(pickColors, 3));\r\n                mergedGeometry.setAttribute('elementID', new THREE.Int32BufferAttribute(elementIDS, 1));\r\n            } \r\n        }\r\n    }\r\n\r\n\r\n\r\n}","export const OperationType=\r\n{\r\n   Base :\"Base\",\r\n}\r\n","import { App } from \"@/App\";\r\nimport { MaterialData } from \"@/data/MaterialData\";\r\nimport { GlbLoaders } from \"@/loaders/GlbLoaders\";\r\nimport * as THREE from \"three\"\r\nimport { BufferAttribute, Color, InstancedMesh } from \"three\";\r\nimport { OperationType } from \"./OperationType\";\r\n\r\nexport class OperationBase {\r\n\r\n  public ListenerMouseDown = null;\r\n  public ListenerMouseMove = null;\r\n  public ListenerMouseUp = null;\r\n  public ListenerkeyDown = null;\r\n\r\n\r\n  public highlightedObj = null;\r\n  public highlightedIndex: number = 0;\r\n\r\n  protected operationType: string;\r\n\r\n\r\n  protected lastX: number = 0;\r\n  protected lastY: number = 0;\r\n\r\n\r\n\r\n  //选择的id\r\n  public selID: number = -1;\r\n\r\n  private _moveId: number = null\r\n\r\n  constructor() {\r\n    this.operationType = OperationType.Base;\r\n\r\n    this.ListenerMouseDown = this.onMouseDown.bind(this);\r\n    this.ListenerMouseMove = this.onMouseMove.bind(this);\r\n    this.ListenerMouseUp = this.onMouseUp.bind(this);\r\n    this.ListenerkeyDown = this.onKeyDown.bind(this);\r\n  }\r\n\r\n\r\n\r\n  public Enter(): void {\r\n    this.enter();\r\n  }\r\n  public Quit(): void {\r\n    this.quit();\r\n  }\r\n  protected enter(): void {\r\n    this.eventListener(true);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  protected onMouseDown(event: MouseEvent) {\r\n    this.lastX = event.clientX;\r\n    this.lastY = event.clientY;\r\n  }\r\n\r\n\r\n\r\n\r\n  protected onMouseMove(event: MouseEvent) {\r\n    // if(App.scene.firstPerson) return\r\n    // let resut1 = this.selElemetColorByID(this._moveId, null)\r\n    // if (this.lastX) {\r\n    //   if (resut1) {\r\n    //     App.scene.enableRender();\r\n    //   }\r\n    //   return;\r\n    // }\r\n    // this._moveId = App.scene.raycaster.getIntersectObjByGPU(event);\r\n    // if (this._moveId == this.selID) {\r\n    //   this._moveId = null;\r\n    //   return;\r\n    // }\r\n    // let result2 = this.selElemetColorByID(this._moveId, MaterialData.selColor)\r\n    // if (resut1 || result2) {\r\n    //   App.scene.enableRender();\r\n    // }\r\n  }\r\n\r\n\r\n  protected onMouseUp(event: MouseEvent) {\r\n    let x = event.clientX - this.lastX;\r\n    let y = event.clientY - this.lastY;\r\n    if ((Math.abs(x) <= 1 && Math.abs(y) <= 0)) {\r\n      // let id=-1;\r\n      // let intersects = App.scene.raycaster.getIntersectObj(event);\r\n      // if (intersects.length != 0) {       \r\n      //   if (intersects[0].object instanceof InstancedMesh) {\r\n      //     let instancedMesh = intersects[0].object as THREE.InstancedMesh;\r\n      //     let instanceId = intersects[0].instanceId;\r\n      //     id= instancedMesh[\"IdMap\"].get(instanceId);\r\n      //   }\r\n      //   else {\r\n      //     let curNode = intersects[0].object as THREE.Mesh;\r\n      //     let batchIDs: BufferAttribute = curNode.geometry.getAttribute(\"_batchid\") as BufferAttribute;\r\n      //     let batchID = batchIDs.getX(intersects[0].face.a);\r\n      //     id=batchID;\r\n      //   }\r\n      // }\r\n      let id = App.scene.raycaster.getIntersectObjByGPU(event);\r\n      this.selElemetByID(id);\r\n    }\r\n    App.scene.enableRender();\r\n\r\n    this.lastX = null;\r\n    this.lastY = null;\r\n    this._moveId = null;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  public selElemetColorByID(id: number, color: Color) {\r\n    for (const iterator of App.scene.mapModels.values()) {\r\n      if (iterator.allElementData.has(id)) {\r\n        iterator.allElementData.get(id).color = color\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  public selElemetByID(id: number) {\r\n    this.resetSelEntity();\r\n    for (const iterator of App.scene.mapModels.values()) {\r\n      if (iterator.allElementData.has(id)) {\r\n        let element=iterator.allElementData.get(id);\r\n        element.color = MaterialData.selColor\r\n        this.selID = id\r\n          if (element.boundingBox&& !App.scene.firstPerson) {\r\n            App.scene.setOrbitPoint((element.boundingBox.min.x + element.boundingBox.max.x) / 2,\r\n            (element.boundingBox.min.y + element.boundingBox.max.y) / 2,\r\n            (element.boundingBox.min.z + element.boundingBox.max.z) / 2,)\r\n            App.scene.showBox3(element.boundingBox)\r\n          }\r\n        break;\r\n      }\r\n    }\r\n    this.showProperty(id)\r\n  }\r\n\r\n\r\n  private resetSelEntity() {\r\n    // if(GlbLoaders.allElementData.has(this.selID))\r\n    // {\r\n    //     GlbLoaders.allElementData.get(this.selID).color=null\r\n    // }\r\n    for (const iterator of App.scene.mapModels.values()) {\r\n      if (iterator.allElementData.has(this.selID)) {\r\n        iterator.allElementData.get(this.selID).color = null\r\n        break;\r\n      }\r\n    }\r\n    this.selID = -1;\r\n  }\r\n\r\n\r\n  public showProperty(id: number) {\r\n    let div = document.getElementById(\"create-page\");\r\n    div.innerHTML = \"\";\r\n    if (id == null) return\r\n    for (const iterator of App.scene.mapModels.values()) {\r\n      if (iterator.allElementData.has(id)) {\r\n        let element = iterator.allElementData.get(id)\r\n        if(element.useData)\r\n        {\r\n          let datas = []\r\n\r\n          for (let name in element.useData) {\r\n            if (name != \"Parameters\") {\r\n                let value = element.useData[name]\r\n                let data = { name, value }\r\n                data.name = name;\r\n                data.value = value;\r\n                datas.push(data)\r\n            }\r\n        }\r\n\r\n          this.setProperty(\"基础数据\", datas)\r\n          if (element.useData.Parameters) {\r\n            for (let group of element.useData.Parameters) {\r\n              this.setProperty(group.GroupName, group.Parameters)\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private setProperty(name: string, useData: any) {\r\n    let div = document.getElementById(\"create-page\");\r\n    let createPage = document.createElement(\"div\");\r\n    createPage.className = \"page-bar\"\r\n    let createLable = document.createElement(\"div\");\r\n    createLable.innerHTML = name;\r\n    createLable.className = \"pageBar-top\"\r\n    createPage.appendChild(createLable);\r\n    let table = document.createElement(\"table\");\r\n    table.className = \"gridtable\";\r\n    if (useData && useData.length) {\r\n      for (let i = 0; i < useData.length; i++) {\r\n        let data = useData[i];\r\n        let row = table.insertRow(i);\r\n        let c1 = row.insertCell(0);\r\n        c1.innerHTML = data.name;\r\n        let c2 = row.insertCell(1);\r\n        if (data.value != null) {\r\n          c2.innerHTML = data.value;\r\n        }\r\n      }\r\n    }\r\n    createPage.appendChild(table);\r\n    div.appendChild(createPage);\r\n  }\r\n\r\n\r\n\r\n  protected quit(): void {\r\n    this.eventListener(false);\r\n  }\r\n  public eventListener(listen: boolean) {\r\n    if (listen) {\r\n      App.scene.renderer.domElement.addEventListener('pointerdown', this.ListenerMouseDown);\r\n      App.scene.renderer.domElement.addEventListener('mousemove', this.ListenerMouseMove);\r\n      App.scene.renderer.domElement.addEventListener('pointerup', this.ListenerMouseUp);\r\n      document.addEventListener('keydown', this.ListenerkeyDown);\r\n    }\r\n    else {\r\n      App.scene.renderer.domElement.removeEventListener('pointerdown', this.ListenerMouseDown);\r\n      App.scene.renderer.domElement.removeEventListener('mousemove', this.ListenerMouseMove);\r\n      App.scene.renderer.domElement.removeEventListener('pointerup', this.ListenerMouseUp);\r\n      document.removeEventListener('keydown', this.ListenerkeyDown);\r\n    }\r\n  }\r\n\r\n  protected onKeyDown(event) {\r\n    if (event.code === 'Escape' || event.keyCode === 27) {\r\n      this.changeOperation();\r\n    }\r\n  }\r\n  public changeOperation() {\r\n    if (App.currentOperation.operationType != OperationType.Base) {\r\n      App.currentOperation.Quit();\r\n      App.currentOperation = App.Base;\r\n      App.currentOperation.Enter();\r\n    }\r\n  }\r\n\r\n}","import { MaterialData } from \"@/data/MaterialData\";\r\nimport * as THREE from \"three\"\r\nimport { App } from \"../App\";\r\n\r\n\r\n\r\nexport class ThreeRaycaster {\r\n    private raycaster :THREE.Raycaster\r\n    private _mouse = new THREE.Vector2();\r\n\r\n    private goldenContainer: HTMLElement;\r\n\r\n\r\n\r\n    constructor(goldenContainer) {\r\n\r\n        this.raycaster = new THREE.Raycaster();\r\n        this._mouse = new THREE.Vector2();\r\n        this.goldenContainer=goldenContainer;\r\n        \r\n\t}\r\n    public getIntersect(event):THREE.Vector3\r\n    {\r\n        this._mouse.x = (event.offsetX / this.goldenContainer.clientWidth) * 2 - 1;\r\n        this._mouse.y = -(event.offsetY / this.goldenContainer.clientHeight) * 2 + 1;\r\n        let normal = new THREE.Vector3(0, 0, 1);\r\n        /* 创建平面 */\r\n        let planeGround = new THREE.Plane(normal, 0);\r\n        /* 从相机发出一条射线经过鼠标点击的位置 */\r\n        this.raycaster.setFromCamera(this._mouse,App.scene.camera);\r\n        /* 获取射线 */\r\n        let ray = this.raycaster.ray;\r\n        /* 计算交点 */\r\n        let intersects  = new THREE.Vector3(0, 0, 0);\r\n        ray.intersectPlane(planeGround,intersects);\r\n        return intersects;\r\n    }\r\n\r\n    public getIntersectObj(event)\r\n    {\r\n        this._mouse.x = (event.offsetX / this.goldenContainer.clientWidth) * 2 - 1;\r\n        this._mouse.y = -(event.offsetY / this.goldenContainer.clientHeight) * 2 + 1;\r\n        /* 从相机发出一条射线经过鼠标点击的位置 */\r\n        this.raycaster.setFromCamera(this._mouse, App.scene.camera);\r\n\r\n        // let origin=new  THREE.Vector3();\r\n        // let direction=new THREE.Vector3();\r\n        // this.raycaster.set(origin,direction)\r\n        let intersects = this.raycaster.intersectObjects(App.scene.obj.children, true);\r\n\r\n\r\n\r\n        if (intersects.length != 0) {\r\n            // if (intersects[0].object instanceof THREE.InstancedMesh) {\r\n            //     let instancedMesh = intersects[0].object as THREE.InstancedMesh;\r\n            //     let instanceId = intersects[0].instanceId;\r\n            //     id = instancedMesh[\"elementID\"].get(instanceId);\r\n            // }\r\n            // else {\r\n            //     let curNode = intersects[0].object as THREE.Mesh;\r\n            //     let batchIDs: THREE.BufferAttribute = curNode.geometry.getAttribute(\"elementID\") as THREE.BufferAttribute;\r\n            //     let batchID = batchIDs.getX(intersects[0].face.a);\r\n            //     id = batchID;\r\n            // }\r\n            let curNode = intersects[0].object as THREE.Mesh;\r\n            let batchIDs: THREE.BufferAttribute = curNode.geometry.getAttribute(\"elementID\") as THREE.BufferAttribute;\r\n            let batchID = batchIDs.getX(intersects[0].face.a);\r\n            return batchID;\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n\r\n    public getIntersectObjByGPU(event)\r\n    {\r\n\r\n        //场景包围盒检测\r\n        this._mouse.x = (event.offsetX / this.goldenContainer.clientWidth) * 2 - 1;\r\n        this._mouse.y = -(event.offsetY / this.goldenContainer.clientHeight) * 2 + 1;\r\n        /* 从相机发出一条射线经过鼠标点击的位置 */\r\n        this.raycaster.setFromCamera(this._mouse,App.scene.camera);\r\n        /* 获取射线 */\r\n        let ray = this.raycaster.ray;\r\n        let modelData=App.scene.mapModels;\r\n        for (const iterator of modelData.values()) {\r\n            if(iterator.rootObject.visible==false||iterator.boundingBox==null) continue;\r\n\r\n           \r\n            let result = ray.intersectsBox(iterator.boundingBox)\r\n            if (!result) {\r\n                //不可以拾取\r\n                iterator.rootObject[\"notPick\"] = true;\r\n                continue;\r\n            }\r\n            if(iterator.tile)\r\n            {\r\n                for (const tile of  iterator.tile.visibleTiles) {\r\n                    if(tile.cached.curBox==null)\r\n                    {\r\n                        let box=tile.cached.box.clone().applyMatrix4(tile.cached.boxTransform)\r\n                        box.applyMatrix4(iterator.rootObject.matrix)\r\n                        tile.cached.curBox=box\r\n                    }\r\n                    let result = ray.intersectsBox(tile.cached.curBox)\r\n                    if (!result) {\r\n                        //不可以拾取\r\n                        tile.cached.scene[\"notPick\"] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // //设置相机为鼠标点的一个像素\r\n        App.scene.camera.setViewOffset(  App.scene.pickRender.domElement.width, App.scene.pickRender.domElement.height, \r\n            event.offsetX* window.devicePixelRatio | 0, event.offsetY * window.devicePixelRatio | 0, 1, 1 );\r\n        App.scene.pickRender.setRenderTarget(  App.scene.pickingTexture );// 设置渲染结果的存储对象\r\n\r\n\r\n\r\n        // App.scene.obj.traverse(function (child) {\r\n        //     if (child instanceof THREE.Mesh) {\r\n        //         if (child[\"orignMaterial\"] == null) {\r\n        //             child[\"orignMaterial\"] = child.material\r\n        //         }\r\n        //         if (child[\"orignMaterial\"].transparent==true\r\n        //            &&child[\"orignMaterial\"].opacity == 0) {\r\n        //             child.visible = false;\r\n        //             child[\"unEnbalePick\"]=true\r\n        //         }\r\n        //         child.material = MaterialData.pickMaterial;\r\n        //     }\r\n        // })\r\n\r\n        App.scene.obj[\"pickRender\"]=true;\r\n        (App.scene.pickRender as any) .render(   App.scene.obj,  App.scene.camera );\r\n        App.scene.obj[\"pickRender\"]=false;\r\n\r\n        // App.scene.obj.traverse(function (child) {\r\n        //     if (child instanceof THREE.Mesh)\r\n        //     {\r\n        //         child.material=child[\"orignMaterial\"];\r\n        //         child.visible = true;\r\n        //     }\r\n        // })\r\n\r\n        for (const iterator of modelData.values()) {\r\n            iterator.rootObject[\"notPick\"]=null;\r\n            if(iterator.tile)\r\n            {\r\n                for (const tile of  iterator.tile.visibleTiles) {\r\n                    \r\n                    tile.cached.scene[\"notPick\"] = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        const pixelBuffer = new Uint8Array( 4 );\r\n        App.scene.camera.clearViewOffset();\r\n        App.scene.pickRender.readRenderTargetPixels( App.scene.pickingTexture, 0, 0 , 1, 1, pixelBuffer ); // 读取副相机的渲染结果，存到pixelbuffer\r\n        App.scene.pickRender.setRenderTarget( null );\r\n        const id = ( pixelBuffer[ 0 ] << 16 ) | ( pixelBuffer[ 1 ] << 8 ) | ( pixelBuffer[ 2 ] );// 【 将物体的颜色转为id 】\r\n        return id;\r\n    }\r\n\r\n\r\n    \r\n    public getDepthByGPU(azimuthAngle:number,polarAngle:number)\r\n    { \r\n        //if(azimuthAngle==null&&polarAngle==null) return -1;\r\n        \r\n        //场景包围盒检测\r\n        // this._mouse.x = (event.offsetX / this.goldenContainer.clientWidth) * 2 - 1;\r\n        // this._mouse.y = -(event.offsetY / this.goldenContainer.clientHeight) * 2 + 1;\r\n        /* 从相机发出一条射线经过鼠标点击的位置 */\r\n        // this.raycaster.setFromCamera(this._mouse,App.scene.camera);\r\n        // /* 获取射线 */\r\n        // let ray = this.raycaster.ray;\r\n        // let modelData=App.scene.mapModels;\r\n        // for (const iterator of modelData.values()) {\r\n        //     if(iterator.rootObject.visible==false||iterator.boundingBox==null) continue;\r\n\r\n           \r\n        //     let result = ray.intersectsBox(iterator.boundingBox)\r\n        //     if (!result) {\r\n        //         //不可以拾取\r\n        //         iterator.rootObject[\"notPick\"] = true;\r\n        //         continue;\r\n        //     }\r\n        //     if(iterator.tile)\r\n        //     {\r\n        //         for (const tile of  iterator.tile.visibleTiles) {\r\n        //             if(tile.cached.curBox==null)\r\n        //             {\r\n        //                 let box=tile.cached.box.clone().applyMatrix4(tile.cached.boxTransform)\r\n        //                 box.applyMatrix4(iterator.rootObject.matrix)\r\n        //                 tile.cached.curBox=box\r\n        //             }\r\n        //             let result = ray.intersectsBox(tile.cached.curBox)\r\n        //             if (!result) {\r\n        //                 //不可以拾取\r\n        //                 tile.cached.scene[\"notPick\"] = true;\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n\r\n        \r\n        \r\n        let camera=App.scene.camera\r\n        // if( !MaterialData.depthMaterial[\"setFar\"])\r\n        // {\r\n        //     setTimeout(() => {\r\n        //         this.getDepthByGPU()\r\n        //     }, 100);\r\n        //     return\r\n        // }\r\n       \r\n\r\n        if( MaterialData.depthMaterial[\"setFar\"])\r\n        {\r\n            MaterialData.depthMaterial[\"setFar\"](camera.far)\r\n        }\r\n\r\n        // App.scene.obj.traverse(function (child) {\r\n        //     if (child instanceof THREE.Mesh) {\r\n        //         if (child[\"orignMaterial\"] == null) {\r\n        //             child[\"orignMaterial\"] = child.material\r\n        //         }\r\n        //         child.material = MaterialData.depthMaterial;\r\n        //     }\r\n        // })\r\n\r\n      \r\n\r\n        //let target= App.scene.controls.getPosition().clone()\r\n\r\n        //let vector=  target.project(camera)\r\n        // let offsetX=p.x\r\n        // let offsetY=p.y\r\n        let w = this.goldenContainer.clientWidth / 2;\r\n        let h = this.goldenContainer.clientHeight / 2;\r\n        // let offsetX = Math.round(vector.x *w + w);//标准设备坐标转屏幕坐标\r\n        // let offsetY = Math.round(-vector.y * h + h);\r\n        let offsetX = w\r\n        let offsetY =h\r\n\r\n        App.scene.controls.saveState();\r\n        // let target= camera.position.clone();\r\n        // App.scene.controls.setLookAt(target.x,target.y,target.z,target.x,target.y-100,target.z)\r\n        //App.scene.controls.rotateTo(  0, - Math.PI/2, false ) \r\n        //App.scene.controls.rotateTo(  Math.PI/2, Math.PI/2, false ) \r\n        // App.scene.controls.update()\r\n        // camera.updateProjectionMatrix()\r\n        // camera.updateMatrixWorld()\r\n        // camera.quaternion.x=-Math.SQRT1_2\r\n        // camera.quaternion.y=0\r\n        // camera.quaternion.y=0\r\n        // camera.quaternion.w=Math.SQRT1_2\r\n        // camera.updateMatrixWorld()\r\n\r\n        if(azimuthAngle!=null)\r\n        {\r\n            App.scene.controls.azimuthAngle=azimuthAngle\r\n        }\r\n        if(polarAngle!=null)\r\n        {\r\n            App.scene.controls.polarAngle=polarAngle\r\n        }\r\n        App.scene.controls.update()\r\n        camera.updateMatrixWorld()\r\n\r\n        // //设置相机为鼠标点的一个像素\r\n        camera.setViewOffset(  App.scene.pickRender.domElement.width, App.scene.pickRender.domElement.height, \r\n            offsetX* window.devicePixelRatio | 0, offsetY * window.devicePixelRatio | 0, 1, 1 );\r\n        App.scene.pickRender.setRenderTarget(  App.scene.pickingTexture );// 设置渲染结果的存储对象\r\n\r\n       \r\n      \r\n       \r\n        // let rotationx=  camera.rotation.x\r\n        // let rotationy=  camera.rotation.x\r\n        // let rotationz=  camera.rotation.x\r\n        // camera.rotation.x=-Math.PI/2\r\n        // camera.rotation.y=0\r\n        // camera.rotation.z=0\r\n        // let quaternionX=   camera.quaternion.x\r\n        // let quaternionY=   camera.quaternion.y\r\n        // let quaternionZ=   camera.quaternion.z\r\n        // let quaternionW=   camera.quaternion.w\r\n        // camera.quaternion.x=Math.sqrt(2)/2\r\n        // camera.quaternion.y=0\r\n        // camera.quaternion.z=0\r\n        // camera.quaternion.w=Math.sqrt(2)/2\r\n\r\n        // // camera.lookAt(camera.position.x,camera.position.y-100,camera.position.z)\r\n        // camera.updateProjectionMatrix()\r\n\r\n        App.scene.obj[\"isScene\"]=true;\r\n        App.scene.obj[\"overrideMaterial\"]=MaterialData.depthMaterial;\r\n        (App.scene.pickRender as any).render(   App.scene.obj,  camera );\r\n        App.scene.obj[\"overrideMaterial\"]=null\r\n        App.scene.obj[\"isScene\"]=false;\r\n        // camera.rotation.set(rotationx,rotationy,rotationz)\r\n        // camera.quaternion.set(quaternionX,quaternionY,quaternionZ,quaternionW)\r\n        // camera.updateProjectionMatrix()\r\n\r\n        //let a=App.scene.pickRender.domElement.toDataURL()\r\n      \r\n\r\n        // App.scene.obj.traverse(function (child) {\r\n        //     if (child instanceof THREE.Mesh)\r\n        //     {\r\n        //         child.material=child[\"orignMaterial\"];\r\n        //     }\r\n        // })\r\n\r\n        // for (const iterator of modelData.values()) {\r\n        //     iterator.rootObject[\"notPick\"]=null;\r\n        //     if(iterator.tile)\r\n        //     {\r\n        //         for (const tile of  iterator.tile.visibleTiles) {\r\n                    \r\n        //             tile.cached.scene[\"notPick\"] = null;\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        const pixelBuffer = new Uint8Array( 4 );\r\n        camera.clearViewOffset();\r\n        App.scene.pickRender.readRenderTargetPixels( App.scene.pickingTexture, 0, 0 , 1, 1, pixelBuffer ); // 读取副相机的渲染结果，存到pixelbuffer\r\n        App.scene.pickRender.setRenderTarget( null );\r\n\r\n        App.scene.controls.reset();\r\n        App.scene.controls.update()\r\n        camera.updateMatrixWorld()\r\n        if( !MaterialData.depthMaterial[\"setFar\"])\r\n        {\r\n            return -1;\r\n        }\r\n\r\n        if (pixelBuffer[2] !== 0 || pixelBuffer[1] !== 0 || pixelBuffer[0] !== 0) {\r\n            let hex = (pixelBuffer[0] * 65535 + pixelBuffer[1] * 255 + pixelBuffer[2]) /  0xffffff;\r\n            // if (pixelBuffer[3] === 0) {\r\n            //     hex = -hex;\r\n            // }\r\n            //console.log(hex)\r\n           let cameraDepth = Math.abs(hex)*camera .far; //相机坐标系中鼠标所在点的深度（注意：相机坐标系中的深度值为负值）\r\n           return cameraDepth\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n","import * as THREE from \"three\"\r\n\r\nexport class ThreeViewCube {\r\n    public cameraOrtho: THREE.OrthographicCamera;\r\n    public sceneOrtho: THREE.Scene;\r\n    public frustumSize: number = 27;\r\n\r\n    private _raycaster :THREE.Raycaster\r\n    private _mouse = new THREE.Vector2();\r\n\r\n    public  selectObject: THREE.Mesh;\r\n    public  oldMaterial: THREE.Material;\r\n\r\n    public goldenContainer: HTMLElement\r\n\r\n    private viewCubeMeshs = [{ \"vertexs\": [-15.0, -10.0, -10.0, -15.0, -10.0, 10.0, -15.0, 10.0, -10.0, -15.0, 10.0, 10.0], \"indexes\": [0, 1, 2, 2, 1, 3], \"uvs\": [5.0, -5.0, 25.0, -5.0, 5.0, -25.0, 25.0, -25.0], \"number_of_triangles\": 2 }, { \"vertexs\": [-15.0, -10.0, -10.0, -15.0, -10.0, 10.0, -14.87, -11.11, -10.0, -14.5, -12.17, -10.0, -13.91, -13.12, -10.0, -13.12, -13.91, -10.0, -12.17, -14.5, -10.0, -11.11, -14.87, -10.0, -10.0, -15.0, -10.0, -10.0, -15.0, 10.0, -14.87, -11.11, 10.0, -14.5, -12.17, 10.0, -13.91, -13.12, 10.0, -13.12, -13.91, 10.0, -12.17, -14.5, 10.0, -11.11, -14.87, 10.0], \"indexes\": [10, 1, 0, 10, 0, 2, 11, 2, 3, 11, 3, 4, 11, 10, 2, 12, 11, 4, 13, 4, 5, 13, 12, 4, 14, 5, 6, 14, 6, 7, 14, 13, 5, 15, 14, 7, 9, 7, 8, 9, 15, 7], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [-10.0, -10.0, -15.0, -11.11, -10.0, -14.87, -12.17, -10.0, -14.5, -13.12, -10.0, -13.91, -13.91, -10.0, -13.12, -14.5, -10.0, -12.17, -14.87, -10.0, -11.11, -15.0, -10.0, -10.0, -10.0, 10.0, -15.0, -11.11, 10.0, -14.87, -12.17, 10.0, -14.5, -13.12, 10.0, -13.91, -13.91, 10.0, -13.12, -14.5, 10.0, -12.17, -14.87, 10.0, -11.11, -15.0, 10.0, -10.0], \"indexes\": [7, 14, 6, 15, 14, 7, 5, 13, 4, 6, 13, 5, 14, 13, 6, 13, 12, 4, 4, 11, 3, 12, 11, 4, 2, 10, 1, 3, 10, 2, 11, 10, 3, 10, 9, 1, 1, 8, 0, 9, 8, 1], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [-10.0, -10.0, 15.0, -11.11, -10.0, 14.87, -12.17, -10.0, 14.5, -13.12, -10.0, 13.91, -13.91, -10.0, 13.12, -14.5, -10.0, 12.17, -14.87, -10.0, 11.11, -15.0, -10.0, 10.0, -10.0, 10.0, 15.0, -15.0, 10.0, 10.0, -14.87, 10.0, 11.11, -14.5, 10.0, 12.17, -13.91, 10.0, 13.12, -13.12, 10.0, 13.91, -12.17, 10.0, 14.5, -11.11, 10.0, 14.87], \"indexes\": [10, 7, 6, 10, 9, 7, 11, 5, 4, 11, 6, 5, 11, 10, 6, 12, 11, 4, 13, 4, 3, 13, 12, 4, 14, 2, 1, 14, 3, 2, 14, 13, 3, 15, 14, 1, 8, 1, 0, 8, 15, 1], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [-15.0, 10.0, -10.0, -15.0, 10.0, 10.0, -14.87, 11.11, -10.0, -14.5, 12.17, -10.0, -13.91, 13.12, -10.0, -13.12, 13.91, -10.0, -12.17, 14.5, -10.0, -11.11, 14.87, -10.0, -10.0, 15.0, -10.0, -10.0, 15.0, 10.0, -11.11, 14.87, 10.0, -12.17, 14.5, 10.0, -13.12, 13.91, 10.0, -13.91, 13.12, 10.0, -14.5, 12.17, 10.0, -14.87, 11.11, 10.0], \"indexes\": [1, 15, 0, 0, 15, 2, 2, 14, 3, 3, 14, 4, 15, 14, 2, 14, 13, 4, 4, 12, 5, 13, 12, 4, 5, 11, 6, 6, 11, 7, 12, 11, 5, 11, 10, 7, 7, 9, 8, 10, 9, 7], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [-10.0, -10.0, -15.0, -11.11, -10.0, -14.87, -12.17, -10.0, -14.5, -13.12, -10.0, -13.91, -13.91, -10.0, -13.12, -14.5, -10.0, -12.17, -14.87, -10.0, -11.11, -15.0, -10.0, -10.0, -10.0, -10.0, -15.0, -10.0, -11.11, -14.87, -10.0, -12.17, -14.5, -10.0, -13.12, -13.91, -10.0, -13.91, -13.12, -10.0, -14.5, -12.17, -10.0, -14.87, -11.11, -10.0, -15.0, -10.0, -14.87, -11.11, -10.0, -14.5, -12.17, -10.0, -13.91, -13.12, -10.0, -13.12, -13.91, -10.0, -12.17, -14.5, -10.0, -11.11, -14.87, -10.0, -11.53, -10.24, -14.76, -11.38, -10.7, -14.76, -11.09, -11.09, -14.76, -12.8, -10.91, -14.05, -10.7, -11.38, -14.76, -12.38, -11.73, -14.05, -14.0, -10.63, -12.94, -10.24, -11.53, -14.76, -11.73, -12.38, -14.05, -13.6, -11.84, -12.94, -10.91, -12.8, -14.05, -12.86, -12.86, -12.94, -14.52, -11.47, -11.55, -11.84, -13.6, -12.94, -13.85, -12.8, -11.55, -10.63, -14.0, -12.94, -12.8, -13.85, -11.55, -11.47, -14.52, -11.55], \"indexes\": [16, 7, 6, 15, 21, 14, 22, 2, 1, 23, 1, 0, 23, 22, 1, 24, 0, 8, 24, 23, 0, 25, 3, 2, 25, 2, 22, 25, 22, 23, 26, 8, 9, 26, 24, 8, 27, 23, 24, 27, 25, 23, 28, 4, 3, 28, 5, 4, 28, 3, 25, 29, 9, 10, 29, 26, 9, 30, 27, 24, 30, 24, 26, 31, 25, 27, 31, 28, 25, 32, 10, 11, 32, 26, 29, 32, 29, 10, 32, 30, 26, 33, 27, 30, 33, 31, 27, 34, 6, 5, 34, 17, 16, 34, 5, 28, 34, 28, 31, 34, 16, 6, 35, 30, 32, 35, 33, 30, 36, 18, 17, 36, 19, 18, 36, 17, 34, 36, 31, 33, 36, 34, 31, 37, 11, 12, 37, 12, 13, 37, 32, 11, 37, 35, 32, 38, 20, 19, 38, 19, 36, 38, 33, 35, 38, 36, 33, 39, 13, 14, 39, 21, 20, 39, 20, 38, 39, 14, 21, 39, 37, 13, 39, 35, 37, 39, 38, 35], \"uvs\": [], \"number_of_triangles\": 56 }, { \"vertexs\": [-10.0, -10.0, 15.0, -11.11, -10.0, 14.87, -12.17, -10.0, 14.5, -13.12, -10.0, 13.91, -13.91, -10.0, 13.12, -14.5, -10.0, 12.17, -14.87, -10.0, 11.11, -15.0, -10.0, 10.0, -10.0, -10.0, 15.0, -10.0, -11.11, 14.87, -10.0, -12.17, 14.5, -10.0, -13.12, 13.91, -10.0, -13.91, 13.12, -10.0, -14.5, 12.17, -10.0, -14.87, 11.11, -10.0, -15.0, 10.0, -14.87, -11.11, 10.0, -14.5, -12.17, 10.0, -13.91, -13.12, 10.0, -13.12, -13.91, 10.0, -12.17, -14.5, 10.0, -11.11, -14.87, 10.0, -11.53, -10.24, 14.76, -11.38, -10.7, 14.76, -11.09, -11.09, 14.76, -12.8, -10.91, 14.05, -10.7, -11.38, 14.76, -12.38, -11.73, 14.05, -14.0, -10.63, 12.94, -10.24, -11.53, 14.76, -11.73, -12.38, 14.05, -13.6, -11.84, 12.94, -10.91, -12.8, 14.05, -12.86, -12.86, 12.94, -14.52, -11.47, 11.55, -11.84, -13.6, 12.94, -13.85, -12.8, 11.55, -10.63, -14.0, 12.94, -12.8, -13.85, 11.55, -11.47, -14.52, 11.55], \"indexes\": [7, 16, 6, 21, 15, 14, 2, 22, 1, 1, 23, 0, 22, 23, 1, 0, 24, 8, 23, 24, 0, 3, 25, 2, 2, 25, 22, 22, 25, 23, 8, 26, 9, 24, 26, 8, 23, 27, 24, 25, 27, 23, 4, 28, 3, 5, 28, 4, 3, 28, 25, 9, 29, 10, 26, 29, 9, 27, 30, 24, 24, 30, 26, 25, 31, 27, 28, 31, 25, 10, 32, 11, 26, 32, 29, 29, 32, 10, 30, 32, 26, 27, 33, 30, 31, 33, 27, 6, 34, 5, 17, 34, 16, 5, 34, 28, 28, 34, 31, 16, 34, 6, 30, 35, 32, 33, 35, 30, 18, 36, 17, 19, 36, 18, 17, 36, 34, 31, 36, 33, 34, 36, 31, 11, 37, 12, 12, 37, 13, 32, 37, 11, 35, 37, 32, 20, 38, 19, 19, 38, 36, 33, 38, 35, 36, 38, 33, 13, 39, 14, 21, 39, 20, 20, 39, 38, 14, 39, 21, 37, 39, 13, 35, 39, 37, 38, 39, 35], \"uvs\": [], \"number_of_triangles\": 56 }, { \"vertexs\": [-10.0, -15.0, -10.0, -10.0, -15.0, 10.0, 10.0, -15.0, 10.0, 10.0, -15.0, -10.0], \"indexes\": [0, 2, 1, 3, 2, 0], \"uvs\": [5.0, 5.0, 25.0, 5.0, 25.0, 25.0, 5.0, 25.0], \"number_of_triangles\": 2 }, { \"vertexs\": [-10.0, -10.0, -15.0, -10.0, 10.0, -15.0, 10.0, -10.0, -15.0, 10.0, 10.0, -15.0], \"indexes\": [1, 3, 0, 0, 3, 2], \"uvs\": [5.0, 5.0, 5.0, 25.0, 25.0, 5.0, 25.0, 25.0], \"number_of_triangles\": 2 }, { \"vertexs\": [-10.0, 10.0, -15.0, -11.11, 10.0, -14.87, -12.17, 10.0, -14.5, -13.12, 10.0, -13.91, -13.91, 10.0, -13.12, -14.5, 10.0, -12.17, -14.87, 10.0, -11.11, -15.0, 10.0, -10.0, -10.0, 10.0, -15.0, -10.0, 11.11, -14.87, -10.0, 12.17, -14.5, -10.0, 13.12, -13.91, -10.0, 13.91, -13.12, -10.0, 14.5, -12.17, -10.0, 14.87, -11.11, -10.0, 15.0, -10.0, -14.87, 11.11, -10.0, -14.5, 12.17, -10.0, -13.91, 13.12, -10.0, -13.12, 13.91, -10.0, -12.17, 14.5, -10.0, -11.11, 14.87, -10.0, -11.53, 10.24, -14.76, -11.38, 10.7, -14.76, -11.09, 11.09, -14.76, -12.8, 10.91, -14.05, -10.7, 11.38, -14.76, -12.38, 11.73, -14.05, -14.0, 10.63, -12.94, -10.24, 11.53, -14.76, -11.73, 12.38, -14.05, -13.6, 11.84, -12.94, -10.91, 12.8, -14.05, -12.86, 12.86, -12.94, -14.52, 11.47, -11.55, -11.84, 13.6, -12.94, -13.85, 12.8, -11.55, -10.63, 14.0, -12.94, -12.8, 13.85, -11.55, -11.47, 14.52, -11.55], \"indexes\": [7, 16, 6, 21, 15, 14, 2, 22, 1, 1, 23, 0, 22, 23, 1, 0, 24, 8, 23, 24, 0, 3, 25, 2, 2, 25, 22, 22, 25, 23, 8, 26, 9, 24, 26, 8, 23, 27, 24, 25, 27, 23, 4, 28, 3, 5, 28, 4, 3, 28, 25, 9, 29, 10, 26, 29, 9, 27, 30, 24, 24, 30, 26, 25, 31, 27, 28, 31, 25, 10, 32, 11, 26, 32, 29, 29, 32, 10, 30, 32, 26, 27, 33, 30, 31, 33, 27, 6, 34, 5, 17, 34, 16, 5, 34, 28, 28, 34, 31, 16, 34, 6, 30, 35, 32, 33, 35, 30, 18, 36, 17, 19, 36, 18, 17, 36, 34, 31, 36, 33, 34, 36, 31, 11, 37, 12, 12, 37, 13, 32, 37, 11, 35, 37, 32, 20, 38, 19, 19, 38, 36, 33, 38, 35, 36, 38, 33, 13, 39, 14, 21, 39, 20, 20, 39, 38, 14, 39, 21, 37, 39, 13, 35, 39, 37, 38, 39, 35], \"uvs\": [], \"number_of_triangles\": 56 }, { \"vertexs\": [-10.0, -10.0, 15.0, -10.0, 10.0, 15.0, 10.0, -10.0, 15.0, 10.0, 10.0, 15.0], \"indexes\": [3, 1, 0, 3, 0, 2], \"uvs\": [5.0, 5.0, 5.0, 25.0, 25.0, 5.0, 25.0, 25.0], \"number_of_triangles\": 2 }, { \"vertexs\": [-10.0, 15.0, 10.0, -11.11, 14.87, 10.0, -12.17, 14.5, 10.0, -13.12, 13.91, 10.0, -13.91, 13.12, 10.0, -14.5, 12.17, 10.0, -14.87, 11.11, 10.0, -15.0, 10.0, 10.0, -10.0, 15.0, 10.0, -10.0, 14.87, 11.11, -10.0, 14.5, 12.17, -10.0, 13.91, 13.12, -10.0, 13.12, 13.91, -10.0, 12.17, 14.5, -10.0, 11.11, 14.87, -10.0, 10.0, 15.0, -14.87, 10.0, 11.11, -14.5, 10.0, 12.17, -13.91, 10.0, 13.12, -13.12, 10.0, 13.91, -12.17, 10.0, 14.5, -11.11, 10.0, 14.87, -11.53, 14.76, 10.24, -11.38, 14.76, 10.7, -11.09, 14.76, 11.09, -12.8, 14.05, 10.91, -10.7, 14.76, 11.38, -12.38, 14.05, 11.73, -14.0, 12.94, 10.63, -10.24, 14.76, 11.53, -11.73, 14.05, 12.38, -13.6, 12.94, 11.84, -10.91, 14.05, 12.8, -12.86, 12.94, 12.86, -14.52, 11.55, 11.47, -11.84, 12.94, 13.6, -13.85, 11.55, 12.8, -10.63, 12.94, 14.0, -12.8, 11.55, 13.85, -11.47, 11.55, 14.52], \"indexes\": [7, 16, 6, 21, 15, 14, 2, 22, 1, 1, 23, 0, 22, 23, 1, 0, 24, 8, 23, 24, 0, 3, 25, 2, 2, 25, 22, 22, 25, 23, 8, 26, 9, 24, 26, 8, 23, 27, 24, 25, 27, 23, 4, 28, 3, 5, 28, 4, 3, 28, 25, 9, 29, 10, 26, 29, 9, 27, 30, 24, 24, 30, 26, 25, 31, 27, 28, 31, 25, 10, 32, 11, 26, 32, 29, 29, 32, 10, 30, 32, 26, 27, 33, 30, 31, 33, 27, 6, 34, 5, 17, 34, 16, 5, 34, 28, 28, 34, 31, 16, 34, 6, 30, 35, 32, 33, 35, 30, 18, 36, 17, 19, 36, 18, 17, 36, 34, 31, 36, 33, 34, 36, 31, 11, 37, 12, 12, 37, 13, 32, 37, 11, 35, 37, 32, 20, 38, 19, 19, 38, 36, 33, 38, 35, 36, 38, 33, 13, 39, 14, 21, 39, 20, 20, 39, 38, 14, 39, 21, 37, 39, 13, 35, 39, 37, 38, 39, 35], \"uvs\": [], \"number_of_triangles\": 56 }, { \"vertexs\": [-10.0, 15.0, -10.0, -10.0, 15.0, 10.0, 10.0, 15.0, 10.0, 10.0, 15.0, -10.0], \"indexes\": [2, 0, 1, 2, 3, 0], \"uvs\": [5.0, 5.0, 25.0, 5.0, 25.0, 25.0, 5.0, 25.0], \"number_of_triangles\": 2 }, { \"vertexs\": [-10.0, -10.0, -15.0, -10.0, -11.11, -14.87, -10.0, -12.17, -14.5, -10.0, -13.12, -13.91, -10.0, -13.91, -13.12, -10.0, -14.5, -12.17, -10.0, -14.87, -11.11, -10.0, -15.0, -10.0, 10.0, -10.0, -15.0, 10.0, -11.11, -14.87, 10.0, -12.17, -14.5, 10.0, -13.12, -13.91, 10.0, -13.91, -13.12, 10.0, -14.5, -12.17, 10.0, -14.87, -11.11, 10.0, -15.0, -10.0], \"indexes\": [14, 7, 6, 14, 15, 7, 13, 5, 4, 13, 6, 5, 13, 14, 6, 12, 13, 4, 11, 4, 3, 11, 12, 4, 10, 2, 1, 10, 3, 2, 10, 11, 3, 9, 10, 1, 8, 1, 0, 8, 9, 1], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [-10.0, -10.0, 15.0, -10.0, -11.11, 14.87, -10.0, -12.17, 14.5, -10.0, -13.12, 13.91, -10.0, -13.91, 13.12, -10.0, -14.5, 12.17, -10.0, -14.87, 11.11, -10.0, -15.0, 10.0, 10.0, -10.0, 15.0, 10.0, -11.11, 14.87, 10.0, -12.17, 14.5, 10.0, -13.12, 13.91, 10.0, -13.91, 13.12, 10.0, -14.5, 12.17, 10.0, -14.87, 11.11, 10.0, -15.0, 10.0], \"indexes\": [7, 14, 6, 15, 14, 7, 5, 13, 4, 6, 13, 5, 14, 13, 6, 13, 12, 4, 4, 11, 3, 12, 11, 4, 2, 10, 1, 3, 10, 2, 11, 10, 3, 10, 9, 1, 1, 8, 0, 9, 8, 1], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [15.0, -10.0, -10.0, 15.0, -10.0, 10.0, 14.87, -11.11, -10.0, 14.5, -12.17, -10.0, 13.91, -13.12, -10.0, 13.12, -13.91, -10.0, 12.17, -14.5, -10.0, 11.11, -14.87, -10.0, 10.0, -15.0, -10.0, 10.0, -15.0, 10.0, 14.87, -11.11, 10.0, 14.5, -12.17, 10.0, 13.91, -13.12, 10.0, 13.12, -13.91, 10.0, 12.17, -14.5, 10.0, 11.11, -14.87, 10.0], \"indexes\": [1, 10, 0, 0, 10, 2, 2, 11, 3, 3, 11, 4, 10, 11, 2, 11, 12, 4, 4, 13, 5, 12, 13, 4, 5, 14, 6, 6, 14, 7, 13, 14, 5, 14, 15, 7, 7, 9, 8, 15, 9, 7], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [-10.0, 10.0, -15.0, -10.0, 11.11, -14.87, -10.0, 12.17, -14.5, -10.0, 13.12, -13.91, -10.0, 13.91, -13.12, -10.0, 14.5, -12.17, -10.0, 14.87, -11.11, -10.0, 15.0, -10.0, 10.0, 10.0, -15.0, 10.0, 11.11, -14.87, 10.0, 12.17, -14.5, 10.0, 13.12, -13.91, 10.0, 13.91, -13.12, 10.0, 14.5, -12.17, 10.0, 14.87, -11.11, 10.0, 15.0, -10.0], \"indexes\": [7, 14, 6, 15, 14, 7, 5, 13, 4, 6, 13, 5, 14, 13, 6, 13, 12, 4, 4, 11, 3, 12, 11, 4, 2, 10, 1, 3, 10, 2, 11, 10, 3, 10, 9, 1, 1, 8, 0, 9, 8, 1], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [10.0, -10.0, -15.0, 11.11, -10.0, -14.87, 12.17, -10.0, -14.5, 13.12, -10.0, -13.91, 13.91, -10.0, -13.12, 14.5, -10.0, -12.17, 14.87, -10.0, -11.11, 15.0, -10.0, -10.0, 10.0, 10.0, -15.0, 11.11, 10.0, -14.87, 12.17, 10.0, -14.5, 13.12, 10.0, -13.91, 13.91, 10.0, -13.12, 14.5, 10.0, -12.17, 14.87, 10.0, -11.11, 15.0, 10.0, -10.0], \"indexes\": [14, 7, 6, 14, 15, 7, 13, 5, 4, 13, 6, 5, 13, 14, 6, 12, 13, 4, 11, 4, 3, 11, 12, 4, 10, 2, 1, 10, 3, 2, 10, 11, 3, 9, 10, 1, 8, 1, 0, 8, 9, 1], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [-10.0, 15.0, 10.0, -10.0, 14.87, 11.11, -10.0, 14.5, 12.17, -10.0, 13.91, 13.12, -10.0, 13.12, 13.91, -10.0, 12.17, 14.5, -10.0, 11.11, 14.87, -10.0, 10.0, 15.0, 10.0, 10.0, 15.0, 10.0, 15.0, 10.0, 10.0, 14.87, 11.11, 10.0, 14.5, 12.17, 10.0, 13.91, 13.12, 10.0, 13.12, 13.91, 10.0, 12.17, 14.5, 10.0, 11.11, 14.87], \"indexes\": [10, 0, 1, 10, 9, 0, 11, 1, 2, 11, 2, 3, 11, 10, 1, 12, 11, 3, 13, 3, 4, 13, 12, 3, 14, 4, 5, 14, 5, 6, 14, 13, 4, 15, 14, 6, 8, 6, 7, 8, 15, 6], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [10.0, -10.0, 15.0, 11.11, -10.0, 14.87, 12.17, -10.0, 14.5, 13.12, -10.0, 13.91, 13.91, -10.0, 13.12, 14.5, -10.0, 12.17, 14.87, -10.0, 11.11, 15.0, -10.0, 10.0, 10.0, 10.0, 15.0, 15.0, 10.0, 10.0, 14.87, 10.0, 11.11, 14.5, 10.0, 12.17, 13.91, 10.0, 13.12, 13.12, 10.0, 13.91, 12.17, 10.0, 14.5, 11.11, 10.0, 14.87], \"indexes\": [7, 10, 6, 9, 10, 7, 5, 11, 4, 6, 11, 5, 10, 11, 6, 11, 12, 4, 4, 13, 3, 12, 13, 4, 2, 14, 1, 3, 14, 2, 13, 14, 3, 14, 15, 1, 1, 8, 0, 15, 8, 1], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [15.0, 10.0, -10.0, 15.0, 10.0, 10.0, 14.87, 11.11, -10.0, 14.5, 12.17, -10.0, 13.91, 13.12, -10.0, 13.12, 13.91, -10.0, 12.17, 14.5, -10.0, 11.11, 14.87, -10.0, 10.0, 15.0, -10.0, 10.0, 15.0, 10.0, 11.11, 14.87, 10.0, 12.17, 14.5, 10.0, 13.12, 13.91, 10.0, 13.91, 13.12, 10.0, 14.5, 12.17, 10.0, 14.87, 11.11, 10.0], \"indexes\": [15, 1, 0, 15, 0, 2, 14, 2, 3, 14, 3, 4, 14, 15, 2, 13, 14, 4, 12, 4, 5, 12, 13, 4, 11, 5, 6, 11, 6, 7, 11, 12, 5, 10, 11, 7, 9, 7, 8, 9, 10, 7], \"uvs\": [], \"number_of_triangles\": 14 }, { \"vertexs\": [10.0, -10.0, -15.0, 11.11, -10.0, -14.87, 12.17, -10.0, -14.5, 13.12, -10.0, -13.91, 13.91, -10.0, -13.12, 14.5, -10.0, -12.17, 14.87, -10.0, -11.11, 15.0, -10.0, -10.0, 10.0, -10.0, -15.0, 10.0, -11.11, -14.87, 10.0, -12.17, -14.5, 10.0, -13.12, -13.91, 10.0, -13.91, -13.12, 10.0, -14.5, -12.17, 10.0, -14.87, -11.11, 10.0, -15.0, -10.0, 14.87, -11.11, -10.0, 14.5, -12.17, -10.0, 13.91, -13.12, -10.0, 13.12, -13.91, -10.0, 12.17, -14.5, -10.0, 11.11, -14.87, -10.0, 11.53, -10.24, -14.76, 11.38, -10.7, -14.76, 11.09, -11.09, -14.76, 12.8, -10.91, -14.05, 10.7, -11.38, -14.76, 12.38, -11.73, -14.05, 14.0, -10.63, -12.94, 10.24, -11.53, -14.76, 11.73, -12.38, -14.05, 13.6, -11.84, -12.94, 10.91, -12.8, -14.05, 12.86, -12.86, -12.94, 14.52, -11.47, -11.55, 11.84, -13.6, -12.94, 13.85, -12.8, -11.55, 10.63, -14.0, -12.94, 12.8, -13.85, -11.55, 11.47, -14.52, -11.55], \"indexes\": [7, 16, 6, 21, 15, 14, 2, 22, 1, 1, 23, 0, 22, 23, 1, 0, 24, 8, 23, 24, 0, 3, 25, 2, 2, 25, 22, 22, 25, 23, 8, 26, 9, 24, 26, 8, 23, 27, 24, 25, 27, 23, 4, 28, 3, 5, 28, 4, 3, 28, 25, 9, 29, 10, 26, 29, 9, 27, 30, 24, 24, 30, 26, 25, 31, 27, 28, 31, 25, 10, 32, 11, 26, 32, 29, 29, 32, 10, 30, 32, 26, 27, 33, 30, 31, 33, 27, 6, 34, 5, 17, 34, 16, 5, 34, 28, 28, 34, 31, 16, 34, 6, 30, 35, 32, 33, 35, 30, 18, 36, 17, 19, 36, 18, 17, 36, 34, 31, 36, 33, 34, 36, 31, 11, 37, 12, 12, 37, 13, 32, 37, 11, 35, 37, 32, 20, 38, 19, 19, 38, 36, 33, 38, 35, 36, 38, 33, 13, 39, 14, 21, 39, 20, 20, 39, 38, 14, 39, 21, 37, 39, 13, 35, 39, 37, 38, 39, 35], \"uvs\": [], \"number_of_triangles\": 56 }, { \"vertexs\": [10.0, -10.0, 15.0, 11.11, -10.0, 14.87, 12.17, -10.0, 14.5, 13.12, -10.0, 13.91, 13.91, -10.0, 13.12, 14.5, -10.0, 12.17, 14.87, -10.0, 11.11, 15.0, -10.0, 10.0, 10.0, -10.0, 15.0, 10.0, -11.11, 14.87, 10.0, -12.17, 14.5, 10.0, -13.12, 13.91, 10.0, -13.91, 13.12, 10.0, -14.5, 12.17, 10.0, -14.87, 11.11, 10.0, -15.0, 10.0, 14.87, -11.11, 10.0, 14.5, -12.17, 10.0, 13.91, -13.12, 10.0, 13.12, -13.91, 10.0, 12.17, -14.5, 10.0, 11.11, -14.87, 10.0, 11.53, -10.24, 14.76, 11.38, -10.7, 14.76, 11.09, -11.09, 14.76, 12.8, -10.91, 14.05, 10.7, -11.38, 14.76, 12.38, -11.73, 14.05, 14.0, -10.63, 12.94, 10.24, -11.53, 14.76, 11.73, -12.38, 14.05, 13.6, -11.84, 12.94, 10.91, -12.8, 14.05, 12.86, -12.86, 12.94, 14.52, -11.47, 11.55, 11.84, -13.6, 12.94, 13.85, -12.8, 11.55, 10.63, -14.0, 12.94, 12.8, -13.85, 11.55, 11.47, -14.52, 11.55], \"indexes\": [16, 7, 6, 15, 21, 14, 22, 2, 1, 23, 1, 0, 23, 22, 1, 24, 0, 8, 24, 23, 0, 25, 3, 2, 25, 2, 22, 25, 22, 23, 26, 8, 9, 26, 24, 8, 27, 23, 24, 27, 25, 23, 28, 4, 3, 28, 5, 4, 28, 3, 25, 29, 9, 10, 29, 26, 9, 30, 27, 24, 30, 24, 26, 31, 25, 27, 31, 28, 25, 32, 10, 11, 32, 26, 29, 32, 29, 10, 32, 30, 26, 33, 27, 30, 33, 31, 27, 34, 6, 5, 34, 17, 16, 34, 5, 28, 34, 28, 31, 34, 16, 6, 35, 30, 32, 35, 33, 30, 36, 18, 17, 36, 19, 18, 36, 17, 34, 36, 31, 33, 36, 34, 31, 37, 11, 12, 37, 12, 13, 37, 32, 11, 37, 35, 32, 38, 20, 19, 38, 19, 36, 38, 33, 35, 38, 36, 33, 39, 13, 14, 39, 21, 20, 39, 20, 38, 39, 14, 21, 39, 37, 13, 39, 35, 37, 39, 38, 35], \"uvs\": [], \"number_of_triangles\": 56 }, { \"vertexs\": [15.0, -10.0, -10.0, 15.0, -10.0, 10.0, 15.0, 10.0, -10.0, 15.0, 10.0, 10.0], \"indexes\": [1, 0, 2, 1, 2, 3], \"uvs\": [5.0, -5.0, 25.0, -5.0, 5.0, -25.0, 25.0, -25.0], \"number_of_triangles\": 2 }, { \"vertexs\": [10.0, 10.0, -15.0, 11.11, 10.0, -14.87, 12.17, 10.0, -14.5, 13.12, 10.0, -13.91, 13.91, 10.0, -13.12, 14.5, 10.0, -12.17, 14.87, 10.0, -11.11, 15.0, 10.0, -10.0, 10.0, 10.0, -15.0, 10.0, 11.11, -14.87, 10.0, 12.17, -14.5, 10.0, 13.12, -13.91, 10.0, 13.91, -13.12, 10.0, 14.5, -12.17, 10.0, 14.87, -11.11, 10.0, 15.0, -10.0, 14.87, 11.11, -10.0, 14.5, 12.17, -10.0, 13.91, 13.12, -10.0, 13.12, 13.91, -10.0, 12.17, 14.5, -10.0, 11.11, 14.87, -10.0, 11.53, 10.24, -14.76, 11.38, 10.7, -14.76, 11.09, 11.09, -14.76, 12.8, 10.91, -14.05, 10.7, 11.38, -14.76, 12.38, 11.73, -14.05, 14.0, 10.63, -12.94, 10.24, 11.53, -14.76, 11.73, 12.38, -14.05, 13.6, 11.84, -12.94, 10.91, 12.8, -14.05, 12.86, 12.86, -12.94, 14.52, 11.47, -11.55, 11.84, 13.6, -12.94, 13.85, 12.8, -11.55, 10.63, 14.0, -12.94, 12.8, 13.85, -11.55, 11.47, 14.52, -11.55], \"indexes\": [16, 7, 6, 15, 21, 14, 22, 2, 1, 23, 1, 0, 23, 22, 1, 24, 0, 8, 24, 23, 0, 25, 3, 2, 25, 2, 22, 25, 22, 23, 26, 8, 9, 26, 24, 8, 27, 23, 24, 27, 25, 23, 28, 4, 3, 28, 5, 4, 28, 3, 25, 29, 9, 10, 29, 26, 9, 30, 27, 24, 30, 24, 26, 31, 25, 27, 31, 28, 25, 32, 10, 11, 32, 26, 29, 32, 29, 10, 32, 30, 26, 33, 27, 30, 33, 31, 27, 34, 6, 5, 34, 17, 16, 34, 5, 28, 34, 28, 31, 34, 16, 6, 35, 30, 32, 35, 33, 30, 36, 18, 17, 36, 19, 18, 36, 17, 34, 36, 31, 33, 36, 34, 31, 37, 11, 12, 37, 12, 13, 37, 32, 11, 37, 35, 32, 38, 20, 19, 38, 19, 36, 38, 33, 35, 38, 36, 33, 39, 13, 14, 39, 21, 20, 39, 20, 38, 39, 14, 21, 39, 37, 13, 39, 35, 37, 39, 38, 35], \"uvs\": [], \"number_of_triangles\": 56 }, { \"vertexs\": [10.0, 15.0, 10.0, 11.11, 14.87, 10.0, 12.17, 14.5, 10.0, 13.12, 13.91, 10.0, 13.91, 13.12, 10.0, 14.5, 12.17, 10.0, 14.87, 11.11, 10.0, 15.0, 10.0, 10.0, 10.0, 15.0, 10.0, 10.0, 14.87, 11.11, 10.0, 14.5, 12.17, 10.0, 13.91, 13.12, 10.0, 13.12, 13.91, 10.0, 12.17, 14.5, 10.0, 11.11, 14.87, 10.0, 10.0, 15.0, 14.87, 10.0, 11.11, 14.5, 10.0, 12.17, 13.91, 10.0, 13.12, 13.12, 10.0, 13.91, 12.17, 10.0, 14.5, 11.11, 10.0, 14.87, 11.53, 14.76, 10.24, 11.38, 14.76, 10.7, 11.09, 14.76, 11.09, 12.8, 14.05, 10.91, 10.7, 14.76, 11.38, 12.38, 14.05, 11.73, 14.0, 12.94, 10.63, 10.24, 14.76, 11.53, 11.73, 14.05, 12.38, 13.6, 12.94, 11.84, 10.91, 14.05, 12.8, 12.86, 12.94, 12.86, 14.52, 11.55, 11.47, 11.84, 12.94, 13.6, 13.85, 11.55, 12.8, 10.63, 12.94, 14.0, 12.8, 11.55, 13.85, 11.47, 11.55, 14.52], \"indexes\": [16, 7, 6, 15, 21, 14, 22, 2, 1, 23, 1, 0, 23, 22, 1, 24, 0, 8, 24, 23, 0, 25, 3, 2, 25, 2, 22, 25, 22, 23, 26, 8, 9, 26, 24, 8, 27, 23, 24, 27, 25, 23, 28, 4, 3, 28, 5, 4, 28, 3, 25, 29, 9, 10, 29, 26, 9, 30, 27, 24, 30, 24, 26, 31, 25, 27, 31, 28, 25, 32, 10, 11, 32, 26, 29, 32, 29, 10, 32, 30, 26, 33, 27, 30, 33, 31, 27, 34, 6, 5, 34, 17, 16, 34, 5, 28, 34, 28, 31, 34, 16, 6, 35, 30, 32, 35, 33, 30, 36, 18, 17, 36, 19, 18, 36, 17, 34, 36, 31, 33, 36, 34, 31, 37, 11, 12, 37, 12, 13, 37, 32, 11, 37, 35, 32, 38, 20, 19, 38, 19, 36, 38, 33, 35, 38, 36, 33, 39, 13, 14, 39, 21, 20, 39, 20, 38, 39, 14, 21, 39, 37, 13, 39, 35, 37, 39, 38, 35], \"uvs\": [], \"number_of_triangles\": 56 }]\r\n\r\n\r\n    constructor(goldenContainer) {\r\n        this.init()\r\n        this.goldenContainer=goldenContainer;\r\n    }\r\n    private init() {\r\n        this.initOrthoScene();\r\n        this.initOrthoCamera();\r\n        this._raycaster = new THREE.Raycaster();\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 新建一个viewcube场景\r\n     */\r\n    private initOrthoScene() {\r\n        this.sceneOrtho = new THREE.Scene();\r\n\r\n        this.sceneOrtho.add(new THREE.AmbientLight(0xffffff, 0.8));\r\n        const arrowPos = new THREE.Vector3(-15, -15, 15);\r\n        this.sceneOrtho.add(new THREE.ArrowHelper(\r\n            new THREE.Vector3(1, 0, 0), arrowPos, 30, 0x7F2020, 4, 2));\r\n        this.sceneOrtho.add(new THREE.ArrowHelper(\r\n            new THREE.Vector3(0, 1, 0), arrowPos, 30, 0x207F20, 4, 2));\r\n        this.sceneOrtho.add(new THREE.ArrowHelper(\r\n            new THREE.Vector3(0, 0, -1), arrowPos, 30, 0x20207F, 4, 2));\r\n\r\n\r\n        let a = new THREE.LineBasicMaterial({ color: 0xaaaaaa })\r\n\r\n\r\n        let m = this.creatTextMaterial(\"前\")\r\n        let geom = new THREE.PlaneGeometry(20, 20)\r\n        let mesh = new THREE.Mesh(geom, m);\r\n        mesh.position.set(0, 0, 15);\r\n        this.sceneOrtho.add(mesh);\r\n\r\n        m = this.creatTextMaterial(\"后\",180)\r\n        geom = new THREE.PlaneGeometry(20, 20)\r\n        mesh = new THREE.Mesh(geom, m);\r\n        mesh.rotation.set(Math.PI, 0, 0);\r\n        mesh.position.set(0, 0, -15);\r\n        this.sceneOrtho.add(mesh);\r\n\r\n\r\n        m = this.creatTextMaterial(\"左\")\r\n        geom = new THREE.PlaneGeometry(20, 20)\r\n        mesh = new THREE.Mesh(geom, m);\r\n        mesh.rotation.set(0, -Math.PI/2, 0);\r\n        mesh.position.set(-15, 0, 0);\r\n        this.sceneOrtho.add(mesh);\r\n\r\n\r\n        m = this.creatTextMaterial(\"右\")\r\n        geom = new THREE.PlaneGeometry(20, 20)\r\n        mesh = new THREE.Mesh(geom, m);\r\n        mesh.rotation.set(0, Math.PI/2, 0);\r\n        mesh.position.set(15, 0, 0);\r\n        this.sceneOrtho.add(mesh);\r\n\r\n        m = this.creatTextMaterial(\"下\")\r\n        geom = new THREE.PlaneGeometry(20, 20)\r\n        mesh = new THREE.Mesh(geom, m);\r\n        mesh.rotation.set(Math.PI/2, 0, 0);\r\n        mesh.position.set(0, -15, 0);\r\n        this.sceneOrtho.add(mesh);\r\n\r\n        m = this.creatTextMaterial(\"上\")\r\n        geom = new THREE.PlaneGeometry(20, 20)\r\n        mesh = new THREE.Mesh(geom, m);\r\n        mesh.rotation.set(-Math.PI/2, 0, 0);\r\n        mesh.position.set(0, 15, 0);\r\n        this.sceneOrtho.add(mesh);\r\n        for (let viewCubeMesh of this.viewCubeMeshs) {\r\n            if (viewCubeMesh.number_of_triangles != 2) {\r\n                let mesh = this.makeMesh(viewCubeMesh.vertexs, viewCubeMesh.indexes, a);\r\n                this.sceneOrtho.add(mesh);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private makeMesh(vertexs: number[], indexs: number[], material, uvs: number[] = null) {\r\n        let geometry = new THREE.BufferGeometry();\r\n        geometry.setIndex(indexs);\r\n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertexs, 3));\r\n        if (uvs) {\r\n            geometry.setAttribute('uv', new THREE.Float32BufferAttribute(uvs, 2));\r\n            geometry.setAttribute('uv2', new THREE.Float32BufferAttribute(uvs, 2));\r\n        }\r\n        let mesh = new THREE.Mesh(geometry, material);\r\n        return mesh;\r\n    }\r\n\r\n\r\n    public getIntersectObj(event)\r\n    {\r\n        this._mouse.x = ((event.offsetX-(this.goldenContainer.clientWidth-170)) / 120) * 2 - 1;\r\n        this._mouse.y = -((event.offsetY-45) / 120) * 2 + 1;\r\n        this._raycaster.setFromCamera(this._mouse, this.cameraOrtho);\r\n        let intersects = this._raycaster.intersectObjects(this.sceneOrtho.children, true);\r\n        if (intersects.length > 0) {\r\n            if (this.selectObject != null) {\r\n                this.selectObject.material =this.oldMaterial;\r\n            }\r\n            let intersectsObject = intersects[0].object as THREE.Mesh;\r\n            this.oldMaterial=intersectsObject.material as any;\r\n            this.selectObject=intersectsObject\r\n            intersectsObject.material= new THREE.LineBasicMaterial({ color: 0xbbbbbb })\r\n        }\r\n        else\r\n        {\r\n            if (this.selectObject != null) {\r\n                this.selectObject.material =this.oldMaterial;\r\n                this.selectObject==null;\r\n            }\r\n        }\r\n        return intersects;\r\n    }\r\n\r\n\r\n    private creatTextMaterial(text: string, rotate = 0) {\r\n        let width = 512, height = 512;\r\n        let canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        let ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.fillRect(0, 0, width, height);\r\n        ctx.font = '200px \" bold';\r\n        ctx.textAlign = 'center';\r\n        ctx.fillStyle = '#000000';\r\n        ctx.textBaseline = 'middle';\r\n\r\n        if (rotate != 0) {\r\n            let x = (canvas.width - width) * 0.5\r\n            let y = (canvas.height - height) * 0.5\r\n            let cx = x + 0.5 * width\r\n            let cy = y + 0.5 * height\r\n            ctx.translate(cx, cy)\r\n            ctx.rotate((Math.PI / 180) * rotate)\r\n            ctx.translate(-cx, -cy)\r\n        }\r\n        ctx.fillText(text, width / 2, height / 2);\r\n        let material = new THREE.MeshLambertMaterial({ map: new THREE.CanvasTexture(canvas) })\r\n        return material;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * 新建一个正交相机\r\n     */\r\n    private initOrthoCamera() {\r\n        this.cameraOrtho = new THREE.OrthographicCamera(-this.frustumSize, this.frustumSize, this.frustumSize, -this.frustumSize, 0.1, 10000)\r\n        this.cameraOrtho.position.set(0, 50, 100);\r\n        this.cameraOrtho.lookAt(0, 0, 0);\r\n    }\r\n\r\n    public setModelUpAxis(upAxis) {\r\n        //this.initCamera();\r\n        if (upAxis == true) {\r\n            this.cameraOrtho.up = new THREE.Vector3(0, 0, 1);\r\n        } else {\r\n            this.cameraOrtho.up = new THREE.Vector3(0, 1, 0);\r\n        }\r\n    }\r\n}","/**\r\n * Source: https://github.com/mattdesl/three-vignette-background\r\n * License: MIT\r\n */\r\n\r\nimport {\r\n  Color,\r\n  DoubleSide,\r\n  Mesh,\r\n  PlaneGeometry,\r\n  RawShaderMaterial,\r\n  Vector2\r\n} from 'three';\r\n\r\nimport vert from './three-vignette-vert.js';\r\nimport frag from './three-vignette-frag.js';\r\n\r\nfunction createBackground (opt) {\r\n  opt = opt || {}\r\n  var geometry = opt.geometry || new PlaneGeometry(2, 2, 1)\r\n  var material = new RawShaderMaterial({\r\n    vertexShader: vert,\r\n    fragmentShader: frag,\r\n    side: DoubleSide,\r\n    uniforms: {\r\n      aspectCorrection: { type: 'i', value: false },\r\n      aspect: { type: 'f', value: 1 },\r\n      grainScale: { type: 'f', value: 0.005 },\r\n      grainTime: { type: 'f', value: 0 },\r\n      noiseAlpha: { type: 'f', value: 0.25 },\r\n      offset: { type: 'v2', value: new Vector2(0, 0) },\r\n      scale: { type: 'v2', value: new Vector2(1, 1) },\r\n      smooth: { type: 'v2', value: new Vector2(0.0, 1.0) },\r\n      color1: { type: 'c', value: new Color('#fff') },\r\n      color2: { type: 'c', value: new Color('#283844') }\r\n    },\r\n    depthTest: false\r\n  })\r\n  var mesh = new Mesh(geometry, material)\r\n  mesh.frustumCulled = false\r\n  mesh.style = style\r\n  if (opt) mesh.style(opt)\r\n  return mesh\r\n\r\n  function style (opt) {\r\n    opt = opt || {}\r\n    if (Array.isArray(opt.colors)) {\r\n      var colors = opt.colors.map(function (c) {\r\n        if (typeof c === 'string' || typeof c === 'number') {\r\n          return new Color(c)\r\n        }\r\n        return c\r\n      })\r\n      material.uniforms.color1.value.copy(colors[0])\r\n      material.uniforms.color2.value.copy(colors[1])\r\n    }\r\n    if (typeof opt.aspect === 'number') {\r\n      material.uniforms.aspect.value = opt.aspect\r\n    }\r\n    if (typeof opt.grainScale === 'number') {\r\n      material.uniforms.grainScale.value = opt.grainScale\r\n    }\r\n    if (typeof opt.grainTime === 'number') {\r\n      material.uniforms.grainTime.value = opt.grainTime\r\n    }\r\n    if (opt.smooth) {\r\n      var smooth = fromArray(opt.smooth, Vector2)\r\n      material.uniforms.smooth.value.copy(smooth)\r\n    }\r\n    if (opt.offset) {\r\n      var offset = fromArray(opt.offset, Vector2)\r\n      material.uniforms.offset.value.copy(offset)\r\n    }\r\n    if (typeof opt.noiseAlpha === 'number') {\r\n      material.uniforms.noiseAlpha.value = opt.noiseAlpha\r\n    }\r\n    if (typeof opt.scale !== 'undefined') {\r\n      var scale = opt.scale\r\n      if (typeof scale === 'number') {\r\n        scale = [ scale, scale ]\r\n      }\r\n      scale = fromArray(scale, Vector2)\r\n      material.uniforms.scale.value.copy(scale)\r\n    }\r\n    if (typeof opt.aspectCorrection !== 'undefined') {\r\n      material.uniforms.aspectCorrection.value = Boolean(opt.aspectCorrection)\r\n    }\r\n  }\r\n\r\n  function fromArray (array, VectorType) {\r\n    if (Array.isArray(array)) {\r\n      return new VectorType().fromArray(array)\r\n    }\r\n    return array\r\n  }\r\n}\r\n\r\nexport { createBackground };\r\n","import type * as _THREE from 'three';\r\n\r\nexport type Ref = {\r\n\tvalue: number;\r\n}\r\n// see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#value\r\nexport const MOUSE_BUTTON = {\r\n\tLEFT: 1,\r\n\tRIGHT: 2,\r\n\tMIDDLE: 4,\r\n} as const;\r\nexport type MOUSE_BUTTON = typeof MOUSE_BUTTON[ keyof typeof MOUSE_BUTTON ];\r\nexport const ACTION = Object.freeze( {\r\n\tNONE: 0,\r\n\tROTATE: 1,\r\n\tTRUCK: 2,\r\n\tOFFSET: 4,\r\n\tDOLLY: 8,\r\n\tZOOM: 16,\r\n\tTOUCH_ROTATE: 32,\r\n\tTOUCH_TRUCK: 64,\r\n\tTOUCH_OFFSET: 128,\r\n\tTOUCH_DOLLY: 256,\r\n\tTOUCH_ZOOM: 512,\r\n\tTOUCH_DOLLY_TRUCK: 1024,\r\n\tTOUCH_DOLLY_OFFSET: 2048,\r\n\tTOUCH_DOLLY_ROTATE: 4096,\r\n\tTOUCH_ZOOM_TRUCK: 8192,\r\n\tTOUCH_ZOOM_OFFSET: 16384,\r\n\tTOUCH_ZOOM_ROTATE: 32768,\r\n} as const );\r\n\r\nexport type ACTION = number;\r\nexport interface PointerInput {\r\n\tpointerId: number;\r\n\tclientX: number;\r\n\tclientY: number;\r\n\tdeltaX: number;\r\n\tdeltaY: number;\r\n\tmouseButton: MOUSE_BUTTON | null;\r\n}\r\ntype mouseButtonAction = typeof ACTION.ROTATE | typeof ACTION.TRUCK | typeof ACTION.OFFSET | typeof ACTION.DOLLY | typeof ACTION.ZOOM | typeof ACTION.NONE;\r\ntype mouseWheelAction  = typeof ACTION.ROTATE | typeof ACTION.TRUCK | typeof ACTION.OFFSET | typeof ACTION.DOLLY | typeof ACTION.ZOOM | typeof ACTION.NONE;\r\ntype singleTouchAction = typeof ACTION.TOUCH_ROTATE | typeof ACTION.TOUCH_TRUCK | typeof ACTION.TOUCH_OFFSET | typeof ACTION.DOLLY | typeof ACTION.ZOOM | typeof ACTION.NONE;\r\ntype multiTouchAction =\r\n\ttypeof ACTION.TOUCH_DOLLY_ROTATE |\r\n\ttypeof ACTION.TOUCH_DOLLY_TRUCK |\r\n\ttypeof ACTION.TOUCH_DOLLY_OFFSET |\r\n\ttypeof ACTION.TOUCH_ZOOM_ROTATE |\r\n\ttypeof ACTION.TOUCH_ZOOM_TRUCK |\r\n\ttypeof ACTION.TOUCH_ZOOM_OFFSET |\r\n\ttypeof ACTION.TOUCH_DOLLY |\r\n\ttypeof ACTION.TOUCH_ZOOM |\r\n\ttypeof ACTION.TOUCH_ROTATE |\r\n\ttypeof ACTION.TOUCH_TRUCK |\r\n\ttypeof ACTION.TOUCH_OFFSET |\r\n\ttypeof ACTION.NONE;\r\n\r\nexport interface MouseButtons {\r\n\tleft     : mouseButtonAction;\r\n\tmiddle   : mouseButtonAction;\r\n\tright    : mouseButtonAction;\r\n\twheel    : mouseWheelAction;\r\n}\r\n\r\nexport interface Touches {\r\n\tone  : singleTouchAction;\r\n\ttwo  : multiTouchAction;\r\n\tthree: multiTouchAction;\r\n}\r\n\r\nexport interface FitToOptions {\r\n\tcover: boolean;\r\n\tpaddingLeft  : number;\r\n\tpaddingRight : number;\r\n\tpaddingBottom: number;\r\n\tpaddingTop   : number;\r\n}\r\n","import type * as _THREE  from 'three';\r\nimport type { PointerInput, Ref } from './types';\r\n\r\n\r\nexport function extractClientCoordFromEvent( pointers: PointerInput[], out: _THREE.Vector2 ) {\r\n\r\n\tout.set( 0, 0 );\r\n\r\n\tpointers.forEach( ( pointer ) => {\r\n\r\n\t\tout.x += pointer.clientX;\r\n\t\tout.y += pointer.clientY;\r\n\r\n\t} );\r\n\r\n\tout.x /= pointers.length;\r\n\tout.y /= pointers.length;\r\n\r\n}\r\n\r\n\r\nconst EPSILON = 1e-5;\r\nexport const DEG2RAD = Math.PI / 180;\r\n\r\nexport function clamp( value: number, min: number, max: number ) {\r\n\r\n\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n}\r\n\r\nexport function approxZero( number: number, error: number = EPSILON ): boolean {\r\n\r\n\treturn Math.abs( number ) < error;\r\n\r\n}\r\n\r\nexport function approxEquals( a: number, b: number, error: number = EPSILON ): boolean {\r\n\r\n\treturn approxZero( a - b, error );\r\n\r\n}\r\n\r\nexport function roundToStep( value: number, step: number ): number {\r\n\r\n\treturn Math.round( value / step ) * step;\r\n\r\n}\r\n\r\nexport function infinityToMaxNumber( value: number ): number {\r\n\r\n\tif ( isFinite( value ) ) return value;\r\n\r\n\tif ( value < 0 ) return - Number.MAX_VALUE;\r\n\r\n\treturn Number.MAX_VALUE;\r\n\r\n}\r\n\r\nexport function maxNumberToInfinity( value: number ): number {\r\n\r\n\tif ( Math.abs( value ) < Number.MAX_VALUE ) return value;\r\n\r\n\treturn value * Infinity;\r\n\r\n}\r\n\r\n// https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html\r\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Mathf.cs#L308\r\nexport function smoothDamp(\r\n\tcurrent: number,\r\n\ttarget: number,\r\n\tcurrentVelocityRef: Ref,\r\n\tsmoothTime: number,\r\n\tmaxSpeed: number = Infinity,\r\n\tdeltaTime: number,\r\n): number {\r\n\r\n\t// Based on Game Programming Gems 4 Chapter 1.10\r\n\tsmoothTime = Math.max( 0.0001, smoothTime );\r\n\tconst omega = 2 / smoothTime;\r\n\r\n\tconst x = omega * deltaTime;\r\n\tconst exp = 1 / ( 1 + x + 0.48 * x * x + 0.235 * x * x * x );\r\n\tlet change = current - target;\r\n\tconst originalTo = target;\r\n\r\n\t// Clamp maximum speed\r\n\tconst maxChange = maxSpeed * smoothTime;\r\n\tchange = clamp( change, - maxChange, maxChange );\r\n\ttarget = current - change;\r\n\r\n\tconst temp = ( currentVelocityRef.value + omega * change ) * deltaTime;\r\n\tcurrentVelocityRef.value = ( currentVelocityRef.value - omega * temp ) * exp;\r\n\tlet output = target + ( change + temp ) * exp;\r\n\r\n\t// Prevent overshooting\r\n\tif ( originalTo - current > 0.0 === output > originalTo ) {\r\n\r\n\t\toutput = originalTo;\r\n\t\tcurrentVelocityRef.value = ( output - originalTo ) / deltaTime;\r\n\r\n\t}\r\n\r\n\treturn output;\r\n\r\n}\r\n\r\n// https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html\r\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Vector3.cs#L97\r\nexport function smoothDampVec3(\r\n\tcurrent: _THREE.Vector3,\r\n\ttarget: _THREE.Vector3,\r\n\tcurrentVelocityRef: _THREE.Vector3,\r\n\tsmoothTime: number,\r\n\tmaxSpeed: number = Infinity,\r\n\tdeltaTime: number,\r\n\tout: _THREE.Vector3\r\n) {\r\n\r\n\t// Based on Game Programming Gems 4 Chapter 1.10\r\n\tsmoothTime = Math.max( 0.0001, smoothTime );\r\n\tconst omega = 2 / smoothTime;\r\n\r\n\tconst x = omega * deltaTime;\r\n\tconst exp = 1 / ( 1 + x + 0.48 * x * x + 0.235 * x * x * x );\r\n\r\n\tlet targetX = target.x;\r\n\tlet targetY = target.y;\r\n\tlet targetZ = target.z;\r\n\r\n\tlet changeX = current.x - targetX;\r\n\tlet changeY = current.y - targetY;\r\n\tlet changeZ = current.z - targetZ;\r\n\r\n\tconst originalToX = targetX;\r\n\tconst originalToY = targetY;\r\n\tconst originalToZ = targetZ;\r\n\r\n\t// Clamp maximum speed\r\n\tconst maxChange = maxSpeed * smoothTime;\r\n\r\n\tconst maxChangeSq = maxChange * maxChange;\r\n\tconst magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\r\n\r\n\tif ( magnitudeSq > maxChangeSq ) {\r\n\r\n\t\tconst magnitude = Math.sqrt( magnitudeSq );\r\n\t\tchangeX = changeX / magnitude * maxChange;\r\n\t\tchangeY = changeY / magnitude * maxChange;\r\n\t\tchangeZ = changeZ / magnitude * maxChange;\r\n\r\n\t}\r\n\r\n\ttargetX = current.x - changeX;\r\n\ttargetY = current.y - changeY;\r\n\ttargetZ = current.z - changeZ;\r\n\r\n\tconst tempX = ( currentVelocityRef.x + omega * changeX ) * deltaTime;\r\n\tconst tempY = ( currentVelocityRef.y + omega * changeY ) * deltaTime;\r\n\tconst tempZ = ( currentVelocityRef.z + omega * changeZ ) * deltaTime;\r\n\r\n\tcurrentVelocityRef.x = ( currentVelocityRef.x - omega * tempX ) * exp;\r\n\tcurrentVelocityRef.y = ( currentVelocityRef.y - omega * tempY ) * exp;\r\n\tcurrentVelocityRef.z = ( currentVelocityRef.z - omega * tempZ ) * exp;\r\n\r\n\tout.x = targetX + ( changeX + tempX ) * exp;\r\n\tout.y = targetY + ( changeY + tempY ) * exp;\r\n\tout.z = targetZ + ( changeZ + tempZ ) * exp;\r\n\r\n\t// Prevent overshooting\r\n\tconst origMinusCurrentX = originalToX - current.x;\r\n\tconst origMinusCurrentY = originalToY - current.y;\r\n\tconst origMinusCurrentZ = originalToZ - current.z;\r\n\tconst outMinusOrigX = out.x - originalToX;\r\n\tconst outMinusOrigY = out.y - originalToY;\r\n\tconst outMinusOrigZ = out.z - originalToZ;\r\n\r\n\tif ( origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0 ) {\r\n\r\n\t\tout.x = originalToX;\r\n\t\tout.y = originalToY;\r\n\t\tout.z = originalToZ;\r\n\r\n\t\tcurrentVelocityRef.x = ( out.x - originalToX ) / deltaTime;\r\n\t\tcurrentVelocityRef.y = ( out.y - originalToY ) / deltaTime;\r\n\t\tcurrentVelocityRef.z = ( out.z - originalToZ ) / deltaTime;\r\n\r\n\t}\r\n\r\n\treturn out;\r\n\r\n}\r\n\r\nexport function isPerspectiveCamera( camera: _THREE.Camera ): camera is _THREE.PerspectiveCamera {\r\n\r\n\treturn ( camera as _THREE.PerspectiveCamera  ).isPerspectiveCamera;\r\n\r\n}\r\nexport function isOrthographicCamera( camera: _THREE.Camera ): camera is _THREE.OrthographicCamera {\r\n\r\n\treturn ( camera as _THREE.OrthographicCamera  ).isOrthographicCamera;\r\n\r\n}\r\nexport function notSupportedInOrthographicCamera(\r\n\tcamera: _THREE.OrthographicCamera | _THREE.PerspectiveCamera,\r\n\tmessage: string\r\n): camera is _THREE.OrthographicCamera {\r\n\r\n\tif ( isOrthographicCamera( camera ) ) {\r\n\r\n\t\tconsole.warn( `${ message } is not supported in OrthographicCamera` );\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n","import * as THREE from \"three\"\r\nimport {\r\n\tRef,\r\n\tMOUSE_BUTTON,\r\n\tACTION,\r\n\tPointerInput,\r\n\tMouseButtons,\r\n\tTouches,\r\n\tFitToOptions,\r\n} from './types';\r\nimport { EventDispatcher } from \"three\";\r\n\r\nimport {\r\n\tDEG2RAD,\r\n\tclamp,\r\n\tapproxZero,\r\n\tapproxEquals,\r\n\troundToStep,\r\n\tinfinityToMaxNumber,\r\n\tmaxNumberToInfinity,\r\n\tsmoothDamp,\r\n\tsmoothDampVec3,\r\n\textractClientCoordFromEvent,\r\n\tnotSupportedInOrthographicCamera,\r\n\tisPerspectiveCamera,\r\n\tisOrthographicCamera\r\n} from './CameraControlsUtiles';\r\n// import { EventDispatcher, Listener } from './EventDispatcher';\r\n\r\nconst PI_2 = Math.PI * 2;\r\nconst PI_HALF = Math.PI / 2;\r\nconst VERSION = '__VERSION'; // will be replaced with `version` in package.json during the build process.\r\nconst TOUCH_DOLLY_FACTOR = 1 / 8;\r\n\r\nconst isBrowser = typeof window !== 'undefined';\r\nconst isMac = isBrowser && /Mac/.test( navigator.platform );\r\nconst isPointerEventsNotSupported = ! ( isBrowser && 'PointerEvent' in window ); // macOS Safari 12 does not support PointerEvents API\r\n\r\n// let THREE: THREESubset;\r\nlet _ORIGIN: THREE.Vector3;\r\nlet _AXIS_Y: THREE.Vector3;\r\nlet _AXIS_Z: THREE.Vector3;\r\nlet _v2: THREE.Vector2;\r\nlet _v3A: THREE.Vector3;\r\nlet _v3B: THREE.Vector3;\r\nlet _v3C: THREE.Vector3;\r\nlet _xColumn: THREE.Vector3;\r\nlet _yColumn: THREE.Vector3;\r\nlet _zColumn: THREE.Vector3;\r\nlet _deltaTarget: THREE.Vector3;\r\nlet _deltaOffset: THREE.Vector3;\r\nlet _sphericalA: THREE.Spherical;\r\nlet _sphericalB: THREE.Spherical;\r\nlet _box3A: THREE.Box3;\r\nlet _box3B: THREE.Box3;\r\nlet _sphere: THREE.Sphere;\r\nlet _quaternionA: THREE.Quaternion;\r\nlet _quaternionB: THREE.Quaternion;\r\nlet _rotationMatrix: THREE.Matrix4;\r\nlet _raycaster: THREE.Raycaster;\r\n\r\nexport class CameraControls extends EventDispatcher {\r\n\r\n\t/**\r\n\t * Injects THREE as the dependency. You can then proceed to use CameraControls.\r\n\t *\r\n\t * e.g\r\n\t * ```javascript\r\n\t * CameraControls.install( { THREE: THREE } );\r\n\t * ```\r\n\t *\r\n\t * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\r\n\t *\r\n\t * ```js\r\n\t * import {\r\n\t * \tVector2,\r\n\t * \tVector3,\r\n\t * \tVector4,\r\n\t * \tQuaternion,\r\n\t * \tMatrix4,\r\n\t * \tSpherical,\r\n\t * \tBox3,\r\n\t * \tSphere,\r\n\t * \tRaycaster,\r\n\t * \tMathUtils,\r\n\t * } from 'three';\r\n\t *\r\n\t * const subsetOfTHREE = {\r\n\t * \tVector2   : Vector2,\r\n\t * \tVector3   : Vector3,\r\n\t * \tVector4   : Vector4,\r\n\t * \tQuaternion: Quaternion,\r\n\t * \tMatrix4   : Matrix4,\r\n\t * \tSpherical : Spherical,\r\n\t * \tBox3      : Box3,\r\n\t * \tSphere    : Sphere,\r\n\t * \tRaycaster : Raycaster,\r\n\t * };\r\n\r\n\t * CameraControls.install( { THREE: subsetOfTHREE } );\r\n\t * ```\r\n\t * @category Statics\r\n\t */\r\n\t// static install( libs: { THREE: THREESubset } ): void {\r\n\r\n\t// \tTHREE = libs.THREE;\r\n\t// \t_ORIGIN = Object.freeze( new THREE.Vector3( 0, 0, 0 ) );\r\n\t// \t_AXIS_Y = Object.freeze( new THREE.Vector3( 0, 1, 0 ) );\r\n\t// \t_AXIS_Z = Object.freeze( new THREE.Vector3( 0, 0, 1 ) );\r\n\t// \t_v2 = new THREE.Vector2();\r\n\t// \t_v3A = new THREE.Vector3();\r\n\t// \t_v3B = new THREE.Vector3();\r\n\t// \t_v3C = new THREE.Vector3();\r\n\t// \t_xColumn = new THREE.Vector3();\r\n\t// \t_yColumn = new THREE.Vector3();\r\n\t// \t_zColumn = new THREE.Vector3();\r\n\t// \t_deltaTarget = new THREE.Vector3();\r\n\t// \t_deltaOffset = new THREE.Vector3();\r\n\t// \t_sphericalA = new THREE.Spherical();\r\n\t// \t_sphericalB = new THREE.Spherical();\r\n\t// \t_box3A = new THREE.Box3();\r\n\t// \t_box3B = new THREE.Box3();\r\n\t// \t_sphere = new THREE.Sphere();\r\n\t// \t_quaternionA = new THREE.Quaternion();\r\n\t// \t_quaternionB = new THREE.Quaternion();\r\n\t// \t_rotationMatrix = new THREE.Matrix4();\r\n\t// \t_raycaster = new THREE.Raycaster();\r\n\r\n\t// }\r\n\r\n\t/**\r\n\t * list all ACTIONs\r\n\t * @category Statics\r\n\t */\r\n\tstatic get ACTION(): typeof ACTION {\r\n\r\n\t\treturn ACTION;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Minimum vertical angle in radians.  \r\n\t * The angle has to be between `0` and `.maxPolarAngle` inclusive.  \r\n\t * The default value is `0`.\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControls.maxPolarAngle = 0;\r\n\t * ```\r\n\t * @category Properties\r\n\t */\r\n\tminPolarAngle = 0; // radians\r\n\r\n\t/**\r\n\t * Maximum vertical angle in radians.  \r\n\t * The angle has to be between `.maxPolarAngle` and `Math.PI` inclusive.  \r\n\t * The default value is `Math.PI`.\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControls.maxPolarAngle = Math.PI;\r\n\t * ```\r\n\t * @category Properties\r\n\t */\r\n\tmaxPolarAngle = Math.PI; // radians\r\n\r\n\t/**\r\n\t * Minimum horizontal angle in radians.  \r\n\t * The angle has to be less than `.maxAzimuthAngle`.  \r\n\t * The default value is `- Infinity`.\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControls.minAzimuthAngle = - Infinity;\r\n\t * ```\r\n\t * @category Properties\r\n\t */\r\n\tminAzimuthAngle = - Infinity; // radians\r\n\r\n\t/**\r\n\t * Maximum horizontal angle in radians.  \r\n\t * The angle has to be greater than `.minAzimuthAngle`.  \r\n\t * The default value is `Infinity`.\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControls.maxAzimuthAngle = Infinity;\r\n\t * ```\r\n\t * @category Properties\r\n\t */\r\n\tmaxAzimuthAngle = Infinity; // radians\r\n\r\n\t// How far you can dolly in and out ( PerspectiveCamera only )\r\n\t/**\r\n\t * Minimum distance for dolly. The value must be higher than `0`.  \r\n\t * PerspectiveCamera only.\r\n\t * @category Properties\r\n\t */\r\n\tminDistance = 0;\r\n\t/**\r\n\t * Maximum distance for dolly. The value must be higher than `minDistance`.  \r\n\t * PerspectiveCamera only.\r\n\t * @category Properties\r\n\t */\r\n\tmaxDistance = Infinity;\r\n\t/**\r\n\t * `true` to enable Infinity Dolly.  \r\n\t * When the Dolly distance is less than the `minDistance`, radius of the sphere will be set `minDistance` automatically.\r\n\t * @category Properties\r\n\t */\r\n\tinfinityDolly = false;\r\n\r\n\t/**\r\n\t * Minimum camera zoom.\r\n\t * @category Properties\r\n\t */\r\n\tminZoom = 0.01;\r\n\t/**\r\n\t * Maximum camera zoom.\r\n\t * @category Properties\r\n\t */\r\n\tmaxZoom = Infinity;\r\n\r\n\t/**\r\n\t * Approximate time in seconds to reach the target. A smaller value will reach the target faster.\r\n\t * @category Properties\r\n\t */\r\n\tsmoothTime = 0.25;\r\n\r\n\t/**\r\n\t * the smoothTime while dragging\r\n\t * @category Properties\r\n\t */\r\n\tdraggingSmoothTime = 0.125;\r\n\r\n\t/**\r\n\t * Max transition speed in unit-per-seconds\r\n\t * @category Properties\r\n\t */\r\n\tmaxSpeed = Infinity;\r\n\r\n\t/**\r\n\t * Speed of azimuth (horizontal) rotation.\r\n\t * @category Properties\r\n\t */\r\n\tazimuthRotateSpeed = 1.0;\r\n\t/**\r\n\t * Speed of polar (vertical) rotation.\r\n\t * @category Properties\r\n\t */\r\n\tpolarRotateSpeed = 1.0;\r\n\t/**\r\n\t * Speed of mouse-wheel dollying.\r\n\t * @category Properties\r\n\t */\r\n\tdollySpeed = 1.0;\r\n\r\n\t/**\r\n\t * `true` to invert direction when dollying or zooming via drag\r\n\t * @category Properties\r\n\t */\r\n\tdollyDragInverted = false;\r\n\r\n\t/**\r\n\t * Speed of drag for truck and pedestal.\r\n\t * @category Properties\r\n\t */\r\n\ttruckSpeed = 2.0;\r\n\t/**\r\n\t * `true` to enable Dolly-in to the mouse cursor coords.\r\n\t * @category Properties\r\n\t */\r\n\tdollyToCursor = false;\r\n\r\n\r\n\tdollyToOrbitPoint = false;\r\n\t/**\r\n\t * @category Properties\r\n\t */\r\n\tdragToOffset = false;\r\n\t/**\r\n\t * The same as `.screenSpacePanning` in three.js's OrbitControls.\r\n\t * @category Properties\r\n\t */\r\n\tverticalDragToForward = false;\r\n\r\n\t/**\r\n\t * Friction ratio of the boundary.\r\n\t * @category Properties\r\n\t */\r\n\tboundaryFriction = 0.0;\r\n\r\n\t/**\r\n\t * Controls how soon the `rest` event fires as the camera slows.\r\n\t * @category Properties\r\n\t */\r\n\trestThreshold = 0.01;\r\n\r\n\t/**\r\n\t * An array of Meshes to collide with camera.  \r\n\t * Be aware colliderMeshes may decrease performance. The collision test uses 4 raycasters from the camera since the near plane has 4 corners.\r\n\t * @category Properties\r\n\t */\r\n\tcolliderMeshes: THREE.Object3D[] = [];\r\n\r\n\t// button configs\r\n\t/**\r\n\t * User's mouse input config.\r\n\t *\r\n\t * | button to assign      | behavior |\r\n\t * | --------------------- | -------- |\r\n\t * | `mouseButtons.left`   | `CameraControls.ACTION.ROTATE`* \\| `CameraControls.ACTION.TRUCK` \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY` \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\r\n\t * | `mouseButtons.right`  | `CameraControls.ACTION.ROTATE` \\| `CameraControls.ACTION.TRUCK`* \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY` \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\r\n\t * | `mouseButtons.wheel` ¹ | `CameraControls.ACTION.ROTATE` \\| `CameraControls.ACTION.TRUCK` \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY` \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\r\n\t * | `mouseButtons.middle` ² | `CameraControls.ACTION.ROTATE` \\| `CameraControls.ACTION.TRUCK` \\| `CameraControls.ACTION.OFFSET` \\| `CameraControls.ACTION.DOLLY`* \\| `CameraControls.ACTION.ZOOM` \\| `CameraControls.ACTION.NONE` |\r\n\t *\r\n\t * 1. Mouse wheel event for scroll \"up/down\" on mac \"up/down/left/right\"\r\n\t * 2. Mouse click on wheel event \"button\"\r\n\t * - \\* is the default.\r\n\t * - The default of `mouseButtons.wheel` is:\r\n\t *   - `DOLLY` for Perspective camera.\r\n\t *   - `ZOOM` for Orthographic camera, and can't set `DOLLY`.\r\n\t * @category Properties\r\n\t */\r\n\tmouseButtons: MouseButtons;\r\n\t/**\r\n\t * User's touch input config.\r\n\t *\r\n\t * | fingers to assign     | behavior |\r\n\t * | --------------------- | -------- |\r\n\t * | `touches.one` | `CameraControls.ACTION.TOUCH_ROTATE`* \\| `CameraControls.ACTION.TOUCH_TRUCK` \\| `CameraControls.ACTION.TOUCH_OFFSET` \\| `CameraControls.ACTION.DOLLY` | `CameraControls.ACTION.ZOOM` | `CameraControls.ACTION.NONE` |\r\n\t * | `touches.two` | `ACTION.TOUCH_DOLLY_TRUCK` \\| `ACTION.TOUCH_DOLLY_OFFSET` \\| `ACTION.TOUCH_DOLLY_ROTATE` \\| `ACTION.TOUCH_ZOOM_TRUCK` \\| `ACTION.TOUCH_ZOOM_OFFSET` \\| `ACTION.TOUCH_ZOOM_ROTATE` \\| `ACTION.TOUCH_DOLLY` \\| `ACTION.TOUCH_ZOOM` \\| `CameraControls.ACTION.TOUCH_ROTATE` \\| `CameraControls.ACTION.TOUCH_TRUCK` \\| `CameraControls.ACTION.TOUCH_OFFSET` \\| `CameraControls.ACTION.NONE` |\r\n\t * | `touches.three` | `ACTION.TOUCH_DOLLY_TRUCK` \\| `ACTION.TOUCH_DOLLY_OFFSET` \\| `ACTION.TOUCH_DOLLY_ROTATE` \\| `ACTION.TOUCH_ZOOM_TRUCK` \\| `ACTION.TOUCH_ZOOM_OFFSET` \\| `ACTION.TOUCH_ZOOM_ROTATE` \\| `CameraControls.ACTION.TOUCH_ROTATE` \\| `CameraControls.ACTION.TOUCH_TRUCK` \\| `CameraControls.ACTION.TOUCH_OFFSET` \\| `CameraControls.ACTION.NONE` |\r\n\t *\r\n\t * - \\* is the default.\r\n\t * - The default of `touches.two` and `touches.three` is:\r\n\t *   - `TOUCH_DOLLY_TRUCK` for Perspective camera.\r\n\t *   - `TOUCH_ZOOM_TRUCK` for Orthographic camera, and can't set `TOUCH_DOLLY_TRUCK` and `TOUCH_DOLLY`.\r\n\t * @category Properties\r\n\t */\r\n\ttouches: Touches;\r\n\r\n\t/**\r\n\t * Force cancel user dragging.\r\n\t * @category Methods\r\n\t */\r\n\t// cancel will be overwritten in the constructor.\r\n\tcancel: () => void = () => {};\r\n\r\n\t/**\r\n\t * Still an experimental feature.\r\n\t * This could change at any time.\r\n\t * @category Methods\r\n\t */\r\n\tlockPointer: () => void;\r\n\r\n\t/**\r\n\t * Still an experimental feature.\r\n\t * This could change at any time.\r\n\t * @category Methods\r\n\t */\r\n\tunlockPointer: () => void;\r\n\r\n\tprotected _enabled = true;\r\n\tprotected _camera: THREE.PerspectiveCamera | THREE.OrthographicCamera;\r\n\tprotected _yAxisUpSpace: THREE.Quaternion;\r\n\tprotected _yAxisUpSpaceInverse: THREE.Quaternion;\r\n\tprotected _state: ACTION = ACTION.NONE;\r\n\r\n\tprotected _domElement?: HTMLElement;\r\n\tprotected _viewport: THREE.Vector4 | null = null;\r\n\r\n\t// the location of focus, where the object orbits around\r\n\tprotected _target: THREE.Vector3;\r\n\tprotected _targetEnd: THREE.Vector3;\r\n\tpublic curTarget: THREE.Vector3;\r\n\r\n\tprotected _focalOffset: THREE.Vector3;\r\n\tprotected _focalOffsetEnd: THREE.Vector3;\r\n\r\n\t// rotation and dolly distance\r\n\tprotected _spherical: THREE.Spherical;\r\n\tprotected _sphericalEnd: THREE.Spherical;\r\n\r\n\tprotected _zoom: number;\r\n\tprotected _zoomEnd: number;\r\n\r\n\t// reset\r\n\tprotected _cameraUp0: THREE.Vector3;\r\n\tprotected _target0: THREE.Vector3;\r\n\tprotected _position0: THREE.Vector3;\r\n\tprotected _zoom0: number;\r\n\tprotected _focalOffset0: THREE.Vector3;\r\n\r\n\tprotected _dollyControlAmount = 0;\r\n\tprotected _dollyControlCoord: THREE.Vector2;\r\n\r\n\t// collisionTest uses nearPlane. ( PerspectiveCamera only )\r\n\tprotected _nearPlaneCorners: [ THREE.Vector3, THREE.Vector3, THREE.Vector3, THREE.Vector3 ];\r\n\r\n\tprotected _hasRested = true;\r\n\r\n\tprotected _boundary: THREE.Box3;\r\n\tprotected _boundaryEnclosesCamera = false;\r\n\r\n\tprotected _needsUpdate = true;\r\n\tprotected _updatedLastTime = false;\r\n\tprotected _elementRect = new DOMRect();\r\n\r\n\tprotected _isDragging = false;\r\n\tprotected _activePointers: PointerInput[] = [];\r\n\tprotected _lockedPointer: PointerInput | null = null;\r\n\r\n\t// Use draggingSmoothTime over smoothTime while true.\r\n\t// set automatically true on user-dragging start.\r\n\t// set automatically false on programmable methods call.\r\n\tprotected _isUserControllingRotate: boolean = false;\r\n\tprotected _isUserControllingDolly: boolean = false;\r\n\tprotected _isUserControllingTruck: boolean = false;\r\n\tprotected _isUserControllingOffset: boolean = false;\r\n\tprotected _isUserControllingZoom: boolean = false;\r\n\r\n\t// velocities for smoothDamp\r\n\tprotected _thetaVelocity: Ref = { value: 0 };\r\n\tprotected _phiVelocity: Ref = { value: 0 };\r\n\tprotected _radiusVelocity: Ref = { value: 0 };\r\n\tprotected _targetVelocity: THREE.Vector3 = new THREE.Vector3();\r\n\tprotected _focalOffsetVelocity: THREE.Vector3 = new THREE.Vector3();\r\n\tprotected _zoomVelocity: Ref = { value: 0 };\r\n\r\n\t/**\r\n\t * Creates a `CameraControls` instance.\r\n\t *\r\n\t * Note:\r\n\t * You **must install** three.js before using camera-controls. see [#install](#install)\r\n\t * Not doing so will lead to runtime errors (`undefined` references to THREE).\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * CameraControls.install( { THREE } );\r\n\t * const cameraControls = new CameraControls( camera, domElement );\r\n\t * ```\r\n\t *\r\n\t * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\r\n\t * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\r\n\t * @category Constructor\r\n\t */\r\n\tconstructor(\r\n\t\tcamera: THREE.PerspectiveCamera | THREE.OrthographicCamera,\r\n\t\tdomElement?: HTMLElement,\r\n\t) {\r\n\r\n\t\tsuper();\r\n\r\n\t\t// Check if the user has installed THREE\r\n\t\tif (typeof THREE === 'undefined') {\r\n\r\n\t\t\tconsole.error('camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.');\r\n\r\n\t\t}\r\n\r\n\t\t_ORIGIN = Object.freeze( new THREE.Vector3( 0, 0, 0 ) );\r\n\t\t_AXIS_Y = Object.freeze( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\t_AXIS_Z = Object.freeze( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\t_v2 = new THREE.Vector2();\r\n\t\t_v3A = new THREE.Vector3();\r\n\t\t_v3B = new THREE.Vector3();\r\n\t\t_v3C = new THREE.Vector3();\r\n\t\t_xColumn = new THREE.Vector3();\r\n\t\t_yColumn = new THREE.Vector3();\r\n\t\t_zColumn = new THREE.Vector3();\r\n\t\t_deltaTarget = new THREE.Vector3();\r\n\t\t_deltaOffset = new THREE.Vector3();\r\n\t\t_sphericalA = new THREE.Spherical();\r\n\t\t_sphericalB = new THREE.Spherical();\r\n\t\t_box3A = new THREE.Box3();\r\n\t\t_box3B = new THREE.Box3();\r\n\t\t_sphere = new THREE.Sphere();\r\n\t\t_quaternionA = new THREE.Quaternion();\r\n\t\t_quaternionB = new THREE.Quaternion();\r\n\t\t_rotationMatrix = new THREE.Matrix4();\r\n\t\t_raycaster = new THREE.Raycaster();\r\n\r\n\r\n\t\tthis._camera = camera;\r\n\t\tthis._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);\r\n\t\tthis._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();\r\n\t\tthis._state = ACTION.NONE;\r\n\r\n\t\t// the location\r\n\t\tthis._target = new THREE.Vector3();\r\n\t\tthis._targetEnd = this._target.clone();\r\n\t\tthis.curTarget=new THREE.Vector3()\r\n\t\tthis._focalOffset = new THREE.Vector3();\r\n\t\tthis._focalOffsetEnd = this._focalOffset.clone();\r\n\r\n\t\t// rotation\r\n\t\tthis._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));\r\n\t\tthis._sphericalEnd = this._spherical.clone();\r\n\r\n\t\tthis._zoom = this._camera.zoom;\r\n\t\tthis._zoomEnd = this._zoom;\r\n\r\n\t\t// collisionTest uses nearPlane.s\r\n\t\tthis._nearPlaneCorners = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t];\r\n\t\tthis._updateNearPlaneCorners();\r\n\r\n\t\t// Target cannot move outside of this box\r\n\t\tthis._boundary = new THREE.Box3(\r\n\t\t\tnew THREE.Vector3(- Infinity, - Infinity, - Infinity),\r\n\t\t\tnew THREE.Vector3(Infinity, Infinity, Infinity),\r\n\t\t);\r\n\r\n\t\t// reset\r\n\t\tthis._cameraUp0 = this._camera.up.clone();\r\n\t\tthis._target0 = this._target.clone();\r\n\t\tthis._position0 = this._camera.position.clone();\r\n\t\tthis._zoom0 = this._zoom;\r\n\t\tthis._focalOffset0 = this._focalOffset.clone();\r\n\r\n\t\tthis._dollyControlAmount = 0;\r\n\t\tthis._dollyControlCoord = new THREE.Vector2();\r\n\r\n\t\t// configs\r\n\t\tthis.mouseButtons = {\r\n\t\t\tleft: ACTION.ROTATE,\r\n\t\t\tmiddle: ACTION.DOLLY,\r\n\t\t\tright: ACTION.TRUCK,\r\n\t\t\twheel:\r\n\t\t\t\tisPerspectiveCamera(this._camera) ? ACTION.DOLLY :\r\n\t\t\t\t\tisOrthographicCamera(this._camera) ? ACTION.ZOOM :\r\n\t\t\t\t\t\tACTION.NONE,\r\n\t\t};\r\n\r\n\t\tthis.touches = {\r\n\t\t\tone: ACTION.TOUCH_ROTATE,\r\n\t\t\ttwo:\r\n\t\t\t\tisPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK :\r\n\t\t\t\t\tisOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK :\r\n\t\t\t\t\t\tACTION.NONE,\r\n\t\t\tthree: ACTION.TOUCH_TRUCK,\r\n\t\t};\r\n\r\n\t\tconst dragStartPosition = new THREE.Vector2() as THREE.Vector2;\r\n\t\tconst lastDragPosition = new THREE.Vector2() as THREE.Vector2;\r\n\t\tconst dollyStart = new THREE.Vector2() as THREE.Vector2;\r\n\r\n\t\tconst onPointerDown = (event: PointerEvent) => {\r\n\r\n\t\t\tif (!this._enabled || !this._domElement) return;\r\n\r\n\t\t\t// Don't call `event.preventDefault()` on the pointerdown event\r\n\t\t\t// to keep receiving pointermove evens outside dragging iframe\r\n\t\t\t// https://taye.me/blog/tips/2015/11/16/mouse-drag-outside-iframe/\r\n\r\n\t\t\tconst mouseButton =\r\n\t\t\t\tevent.pointerType !== 'mouse' ? null :\r\n\t\t\t\t\t(event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\r\n\t\t\t\t\t\t(event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\r\n\t\t\t\t\t\t\t(event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\r\n\t\t\t\t\t\t\t\tnull;\r\n\r\n\t\t\tif (mouseButton !== null) {\r\n\r\n\t\t\t\tconst zombiePointer = this._findPointerByMouseButton(mouseButton);\r\n\t\t\t\tzombiePointer && this._disposePointer(zombiePointer);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer) return;\r\n\r\n\t\t\tconst pointer = {\r\n\t\t\t\tpointerId: event.pointerId,\r\n\t\t\t\tclientX: event.clientX,\r\n\t\t\t\tclientY: event.clientY,\r\n\t\t\t\tdeltaX: 0,\r\n\t\t\t\tdeltaY: 0,\r\n\t\t\t\tmouseButton,\r\n\t\t\t};\r\n\t\t\tthis._activePointers.push(pointer);\r\n\r\n\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false } as AddEventListenerOptions);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\r\n\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\r\n\r\n\t\t\tthis._isDragging = true;\r\n\t\t\tstartDragging(event);\r\n\r\n\t\t};\r\n\r\n\t\tconst onMouseDown = (event: MouseEvent) => {\r\n\r\n\t\t\tif (!this._enabled || !this._domElement || this._lockedPointer) return;\r\n\r\n\t\t\tconst mouseButton =\r\n\t\t\t\t(event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\r\n\t\t\t\t\t(event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\r\n\t\t\t\t\t\t(event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\r\n\t\t\t\t\t\t\tnull;\r\n\r\n\t\t\tif (mouseButton !== null) {\r\n\r\n\t\t\t\tconst zombiePointer = this._findPointerByMouseButton(mouseButton);\r\n\t\t\t\tzombiePointer && this._disposePointer(zombiePointer);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst pointer = {\r\n\t\t\t\tpointerId: 1,\r\n\t\t\t\tclientX: event.clientX,\r\n\t\t\t\tclientY: event.clientY,\r\n\t\t\t\tdeltaX: 0,\r\n\t\t\t\tdeltaY: 0,\r\n\t\t\t\tmouseButton:\r\n\t\t\t\t\t(event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\r\n\t\t\t\t\t\t(event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.MIDDLE :\r\n\t\t\t\t\t\t\t(event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.RIGHT :\r\n\t\t\t\t\t\t\t\tnull,\r\n\t\t\t};\r\n\t\t\tthis._activePointers.push(pointer);\r\n\r\n\t\t\t// see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\r\n\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\r\n\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('mousemove', onMouseMove);\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('mouseup', onMouseUp);\r\n\r\n\t\t\tthis._isDragging = true;\r\n\t\t\tstartDragging(event);\r\n\r\n\t\t};\r\n\r\n\t\tconst onPointerMove = (event: PointerEvent) => {\r\n\r\n\t\t\tif (event.cancelable) event.preventDefault();\r\n\r\n\t\t\tconst pointerId = event.pointerId;\r\n\t\t\tconst pointer = this._lockedPointer || this._findPointerById(pointerId);\r\n\r\n\t\t\tif (!pointer) return;\r\n\r\n\t\t\tpointer.clientX = event.clientX;\r\n\t\t\tpointer.clientY = event.clientY;\r\n\t\t\tpointer.deltaX = event.movementX;\r\n\t\t\tpointer.deltaY = event.movementY;\r\n\r\n\t\t\tthis._state = 0;\r\n\r\n\t\t\tif (event.pointerType === 'touch') {\r\n\r\n\t\t\t\tswitch (this._activePointers.length) {\r\n\r\n\t\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.one;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.two;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.three;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t(!this._isDragging && this._lockedPointer) ||\r\n\t\t\t\t\tthis._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT\r\n\t\t\t\t) {\r\n\r\n\t\t\t\t\tthis._state = this._state | this.mouseButtons.left;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\r\n\r\n\t\t\t\t\tthis._state = this._state | this.mouseButtons.middle;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\r\n\r\n\t\t\t\t\tthis._state = this._state | this.mouseButtons.right;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdragging();\r\n\r\n\t\t};\r\n\r\n\t\tconst onMouseMove = (event: MouseEvent) => {\r\n\r\n\t\t\tconst pointer = this._lockedPointer || this._findPointerById(1);\r\n\r\n\t\t\tif (!pointer) return;\r\n\r\n\t\t\tpointer.clientX = event.clientX;\r\n\t\t\tpointer.clientY = event.clientY;\r\n\t\t\tpointer.deltaX = event.movementX;\r\n\t\t\tpointer.deltaY = event.movementY;\r\n\r\n\t\t\tthis._state = 0;\r\n\r\n\t\t\tif (\r\n\t\t\t\tthis._lockedPointer ||\r\n\t\t\t\t(event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._state = this._state | this.mouseButtons.left;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\r\n\r\n\t\t\t\tthis._state = this._state | this.mouseButtons.middle;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\r\n\r\n\t\t\t\tthis._state = this._state | this.mouseButtons.right;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdragging();\r\n\r\n\t\t};\r\n\r\n\t\tconst onPointerUp = (event: PointerEvent) => {\r\n\r\n\t\t\tconst pointer = this._findPointerById(event.pointerId);\r\n\r\n\t\t\tif (pointer && pointer === this._lockedPointer) return;\r\n\r\n\t\t\tpointer && this._disposePointer(pointer);\r\n\r\n\t\t\tif (event.pointerType === 'touch') {\r\n\r\n\t\t\t\tswitch (this._activePointers.length) {\r\n\r\n\t\t\t\t\tcase 0:\r\n\r\n\t\t\t\t\t\tthis._state = ACTION.NONE;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.one;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.two;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.three;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._state = ACTION.NONE;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tendDragging();\r\n\r\n\t\t};\r\n\r\n\t\tconst onMouseUp = () => {\r\n\r\n\t\t\tconst pointer = this._findPointerById(1);\r\n\r\n\t\t\tif (pointer && pointer === this._lockedPointer) return;\r\n\r\n\t\t\tpointer && this._disposePointer(pointer);\r\n\r\n\t\t\tthis._state = ACTION.NONE;\r\n\r\n\t\t\tendDragging();\r\n\r\n\t\t};\r\n\r\n\t\tlet lastScrollTimeStamp = - 1;\r\n\r\n\t\tconst onMouseWheel = (event: WheelEvent): void => {\r\n\r\n\t\t\tif (!this._enabled || this.mouseButtons.wheel === ACTION.NONE) return;\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tif (\r\n\t\t\t\tthis.dollyToCursor ||\r\n\t\t\t\tthis.mouseButtons.wheel === ACTION.ROTATE ||\r\n\t\t\t\tthis.mouseButtons.wheel === ACTION.TRUCK\r\n\t\t\t) {\r\n\r\n\t\t\t\tconst now = performance.now();\r\n\r\n\t\t\t\t// only need to fire this at scroll start.\r\n\t\t\t\tif (lastScrollTimeStamp - now < 1000) this._getClientRect(this._elementRect);\r\n\t\t\t\tlastScrollTimeStamp = now;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ref: https://github.com/cedricpinson/osgjs/blob/00e5a7e9d9206c06fdde0436e1d62ab7cb5ce853/sources/osgViewer/input/source/InputSourceMouse.js#L89-L103\r\n\t\t\tconst deltaYFactor = isMac ? - 1 : - 3;\r\n\t\t\tconst delta = (event.deltaMode === 1) ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\r\n\t\t\tlet x = 0\r\n\t\t\tlet y = 0\r\n\t\t\tif (this.dollyToOrbitPoint) {\r\n\t\t\t\tlet vector = this.curTarget.clone().project(camera);\r\n\t\t\t\tx = vector.x\r\n\t\t\t\ty = vector.y\r\n\t\t\t\tthis.dollyToCursor = true\r\n\t\t\t}\r\n\t\t\telse if(this.dollyToCursor)\r\n\t\t\t{\r\n\t\t\t\tx = (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1\r\n\t\t\t\ty = (event.clientY - this._elementRect.y) / this._elementRect.height * - 2 + 1\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tswitch (this.mouseButtons.wheel) {\r\n\r\n\t\t\t\tcase ACTION.ROTATE: {\r\n\r\n\t\t\t\t\tthis._rotateInternal(event.deltaX, event.deltaY);\r\n\t\t\t\t\tthis._isUserControllingRotate = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase ACTION.TRUCK: {\r\n\r\n\t\t\t\t\tthis._truckInternal(event.deltaX, event.deltaY, false);\r\n\t\t\t\t\tthis._isUserControllingTruck = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase ACTION.OFFSET: {\r\n\r\n\t\t\t\t\tthis._truckInternal(event.deltaX, event.deltaY, true);\r\n\t\t\t\t\tthis._isUserControllingOffset = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase ACTION.DOLLY: {\r\n\r\n\t\t\t\t\tthis._dollyInternal(- delta, x, y);\r\n\t\t\t\t\tthis._isUserControllingDolly = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase ACTION.ZOOM: {\r\n\r\n\t\t\t\t\tthis._zoomInternal(- delta, x, y);\r\n\t\t\t\t\tthis._isUserControllingZoom = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tthis.update()\r\n\t\t\tif((this.dollyToOrbitPoint||this.dollyToCursor))\r\n\t\t\t{\r\n\t\t\t\tthis.setOrbitPoint(this.curTarget.x,this.curTarget.y,this.curTarget.z)\r\n\t\t\t}\r\n\t\t\tthis.dispatchEvent({ type: 'control' });\r\n\r\n\t\t};\r\n\r\n\t\tconst onContextMenu = (event: Event): void => {\r\n\r\n\t\t\tif (!this._domElement || !this._enabled) return;\r\n\r\n\t\t\t// contextmenu event is fired right after pointerdown/mousedown.\r\n\t\t\t// remove attached handlers and active pointer, if interrupted by contextmenu.\r\n\t\t\tif (this.mouseButtons.right === CameraControls.ACTION.NONE) {\r\n\r\n\t\t\t\tconst pointerId =\r\n\t\t\t\t\tevent instanceof PointerEvent ? event.pointerId :\r\n\t\t\t\t\t\tevent instanceof MouseEvent ? 0 :\r\n\t\t\t\t\t\t\t0;\r\n\r\n\t\t\t\tconst pointer = this._findPointerById(pointerId);\r\n\t\t\t\tpointer && this._disposePointer(pointer);\r\n\r\n\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false } as AddEventListenerOptions);\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t};\r\n\r\n\t\tconst startDragging = (event?: PointerEvent | MouseEvent): void => {\r\n\r\n\t\t\tif (!this._enabled) return;\r\n\r\n\t\t\textractClientCoordFromEvent(this._activePointers, _v2);\r\n\r\n\t\t\tthis._getClientRect(this._elementRect);\r\n\t\t\tdragStartPosition.copy(_v2);\r\n\t\t\tlastDragPosition.copy(_v2);\r\n\r\n\t\t\tconst isMultiTouch = this._activePointers.length >= 2;\r\n\r\n\t\t\tif (isMultiTouch) {\r\n\r\n\t\t\t\t// 2 finger pinch\r\n\t\t\t\tconst dx = _v2.x - this._activePointers[1].clientX;\r\n\t\t\t\tconst dy = _v2.y - this._activePointers[1].clientY;\r\n\t\t\t\tconst distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n\t\t\t\tdollyStart.set(0, distance);\r\n\r\n\t\t\t\t// center coords of 2 finger truck\r\n\t\t\t\tconst x = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;\r\n\t\t\t\tconst y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\r\n\r\n\t\t\t\tlastDragPosition.set(x, y);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._state = 0;\r\n\r\n\t\t\tif (!event) {\r\n\r\n\t\t\t\tif (this._lockedPointer) this._state = this._state | this.mouseButtons.left;\r\n\r\n\t\t\t} else if ('pointerType' in event && event.pointerType === 'touch') {\r\n\r\n\t\t\t\tswitch (this._activePointers.length) {\r\n\r\n\t\t\t\t\tcase 1:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.one;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 2:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.two;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 3:\r\n\r\n\t\t\t\t\t\tthis._state = this.touches.three;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\r\n\r\n\t\t\t\t\tthis._state = this._state | this.mouseButtons.left;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\r\n\r\n\t\t\t\t\tthis._state = this._state | this.mouseButtons.middle;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\r\n\r\n\t\t\t\t\tthis._state = this._state | this.mouseButtons.right;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// stop current movement on drag start\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.ROTATE) === ACTION.ROTATE ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._sphericalEnd.theta = this._spherical.theta;\r\n\t\t\t\tthis._sphericalEnd.phi = this._spherical.phi;\r\n\t\t\t\tthis._thetaVelocity.value = 0;\r\n\t\t\t\tthis._phiVelocity.value = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.TRUCK) === ACTION.TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._targetEnd.copy(this._target);\r\n\t\t\t\tthis._targetVelocity.set(0, 0, 0);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.DOLLY) === ACTION.DOLLY ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._sphericalEnd.radius = this._spherical.radius;\r\n\t\t\t\tthis._radiusVelocity.value = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.ZOOM) === ACTION.ZOOM ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._zoomEnd = this._zoom;\r\n\t\t\t\tthis._zoomVelocity.value = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.OFFSET) === ACTION.OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._focalOffsetEnd.copy(this._focalOffset);\r\n\t\t\t\tthis._focalOffsetVelocity.set(0, 0, 0);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispatchEvent({ type: 'controlstart' });\r\n\r\n\t\t};\r\n\r\n\t\tconst dragging = (): void => {\r\n\r\n\t\t\tif (!this._enabled) return;\r\n\r\n\t\t\textractClientCoordFromEvent(this._activePointers, _v2);\r\n\r\n\t\t\t// When pointer lock is enabled clientX, clientY, screenX, and screenY remain 0.\r\n\t\t\t// If pointer lock is enabled, use the Delta directory, and assume active-pointer is not multiple.\r\n\t\t\tconst isPointerLockActive = this._domElement && document.pointerLockElement === this._domElement;\r\n\t\t\tconst lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;\r\n\t\t\tconst deltaX = lockedPointer ? - lockedPointer.deltaX : lastDragPosition.x - _v2.x;\r\n\t\t\tconst deltaY = lockedPointer ? - lockedPointer.deltaY : lastDragPosition.y - _v2.y;\r\n\r\n\t\t\tlastDragPosition.copy(_v2);\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.ROTATE) === ACTION.ROTATE ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._rotateInternal(deltaX, deltaY);\r\n\t\t\t\tthis._isUserControllingRotate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.DOLLY) === ACTION.DOLLY ||\r\n\t\t\t\t(this._state & ACTION.ZOOM) === ACTION.ZOOM\r\n\t\t\t) {\r\n\r\n\t\t\t\tconst dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\r\n\t\t\t\tconst dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * - 2 + 1 : 0;\r\n\t\t\t\tconst dollyDirection = this.dollyDragInverted ? - 1 : 1;\r\n\r\n\t\t\t\tif ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {\r\n\r\n\t\t\t\t\tthis._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\r\n\t\t\t\t\tthis._isUserControllingDolly = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\r\n\t\t\t\t\tthis._isUserControllingZoom = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE\r\n\t\t\t) {\r\n\r\n\t\t\t\tconst dx = _v2.x - this._activePointers[1].clientX;\r\n\t\t\t\tconst dy = _v2.y - this._activePointers[1].clientY;\r\n\t\t\t\tconst distance = Math.sqrt(dx * dx + dy * dy);\r\n\t\t\t\tconst dollyDelta = dollyStart.y - distance;\r\n\t\t\t\tdollyStart.set(0, distance);\r\n\r\n\t\t\t\tconst dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\r\n\t\t\t\tconst dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * - 2 + 1 : 0;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t(this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\r\n\t\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\r\n\t\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\r\n\t\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET\r\n\t\t\t\t) {\r\n\r\n\t\t\t\t\tthis._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\r\n\t\t\t\t\tthis._isUserControllingDolly = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\r\n\t\t\t\t\tthis._isUserControllingZoom = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.TRUCK) === ACTION.TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._truckInternal(deltaX, deltaY, false);\r\n\t\t\t\tthis._isUserControllingTruck = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this._state & ACTION.OFFSET) === ACTION.OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\r\n\t\t\t\t(this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._truckInternal(deltaX, deltaY, true);\r\n\t\t\t\tthis._isUserControllingOffset = true;\r\n\r\n\t\t\t}\r\n\t\t\tthis.update()\r\n\t\t\tthis.dispatchEvent({ type: 'control' });\r\n\r\n\t\t};\r\n\r\n\t\tconst endDragging = (): void => {\r\n\r\n\t\t\textractClientCoordFromEvent(this._activePointers, _v2);\r\n\t\t\tlastDragPosition.copy(_v2);\r\n\r\n\t\t\tif (\r\n\t\t\t\tthis._activePointers.length === 0 ||\r\n\t\t\t\t(this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer)\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._isDragging = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (this._activePointers.length === 0 && this._domElement) {\r\n\r\n\t\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false } as AddEventListenerOptions);\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\r\n\t\t\t\tthis._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\r\n\r\n\t\t\t\tthis.dispatchEvent({ type: 'controlend' });\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.lockPointer = (): void => {\r\n\r\n\t\t\tif (!this._enabled || !this._domElement) return;\r\n\r\n\t\t\tthis.cancel();\r\n\r\n\t\t\t// Element.requestPointerLock is allowed to happen without any pointer active - create a faux one for compatibility with controls\r\n\t\t\tthis._lockedPointer = {\r\n\t\t\t\tpointerId: - 1,\r\n\t\t\t\tclientX: 0,\r\n\t\t\t\tclientY: 0,\r\n\t\t\t\tdeltaX: 0,\r\n\t\t\t\tdeltaY: 0,\r\n\t\t\t\tmouseButton: null,\r\n\t\t\t};\r\n\t\t\tthis._activePointers.push(this._lockedPointer);\r\n\r\n\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false } as AddEventListenerOptions);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\r\n\r\n\t\t\tthis._domElement.requestPointerLock();\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('pointerlockchange', onPointerLockChange);\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('pointerlockerror', onPointerLockError);\r\n\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\r\n\t\t\tthis._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\r\n\r\n\t\t\tstartDragging();\r\n\r\n\t\t};\r\n\r\n\t\tthis.unlockPointer = (): void => {\r\n\r\n\t\t\tif (this._lockedPointer !== null) {\r\n\r\n\t\t\t\tthis._disposePointer(this._lockedPointer);\r\n\t\t\t\tthis._lockedPointer = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdocument.exitPointerLock();\r\n\r\n\t\t\tthis.cancel();\r\n\r\n\t\t\tif (!this._domElement) return;\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\r\n\r\n\t\t};\r\n\r\n\t\tconst onPointerLockChange = (): void => {\r\n\r\n\t\t\tconst isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\r\n\t\t\tif (!isPointerLockActive) this.unlockPointer();\r\n\r\n\t\t};\r\n\r\n\t\tconst onPointerLockError = (): void => {\r\n\r\n\t\t\tthis.unlockPointer();\r\n\r\n\t\t};\r\n\r\n\t\tthis._addAllEventListeners = (domElement: HTMLElement): void => {\r\n\r\n\t\t\tthis._domElement = domElement;\r\n\r\n\t\t\tthis._domElement.style.touchAction = 'none';\r\n\t\t\tthis._domElement.style.userSelect = 'none';\r\n\t\t\tthis._domElement.style.webkitUserSelect = 'none';\r\n\r\n\t\t\tthis._domElement.addEventListener('pointerdown', onPointerDown);\r\n\t\t\tisPointerEventsNotSupported && this._domElement.addEventListener('mousedown', onMouseDown);\r\n\t\t\tthis._domElement.addEventListener('pointercancel', onPointerUp);\r\n\t\t\tthis._domElement.addEventListener('wheel', onMouseWheel, { passive: false });\r\n\t\t\tthis._domElement.addEventListener('contextmenu', onContextMenu);\r\n\r\n\t\t};\r\n\r\n\t\tthis._removeAllEventListeners = (): void => {\r\n\r\n\t\t\tif (!this._domElement) return;\r\n\r\n\t\t\tthis._domElement.style.touchAction = '';\r\n\t\t\tthis._domElement.style.userSelect = '';\r\n\t\t\tthis._domElement.style.webkitUserSelect = '';\r\n\r\n\t\t\tthis._domElement.removeEventListener('pointerdown', onPointerDown);\r\n\t\t\tthis._domElement.removeEventListener('mousedown', onMouseDown);\r\n\t\t\tthis._domElement.removeEventListener('pointercancel', onPointerUp);\r\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener#matching_event_listeners_for_removal\r\n\t\t\t// > it's probably wise to use the same values used for the call to `addEventListener()` when calling `removeEventListener()`\r\n\t\t\t// see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\r\n\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\tthis._domElement.removeEventListener('wheel', onMouseWheel, { passive: false } as AddEventListenerOptions);\r\n\t\t\tthis._domElement.removeEventListener('contextmenu', onContextMenu);\r\n\t\t\t// eslint-disable-next-line no-undef\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false } as AddEventListenerOptions);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('mouseup', onMouseUp);\r\n\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\r\n\t\t\tthis._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\r\n\r\n\t\t};\r\n\r\n\t\tthis.cancel = (): void => {\r\n\r\n\t\t\tif (this._state === ACTION.NONE) return;\r\n\r\n\t\t\tthis._state = ACTION.NONE;\r\n\t\t\tthis._activePointers.length = 0;\r\n\t\t\tendDragging();\r\n\r\n\t\t};\r\n\r\n\t\tif (domElement) this.connect(domElement);\r\n\t\tthis.update(0);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * The camera to be controlled\r\n\t * @category Properties\r\n\t */\r\n\tget camera(): THREE.PerspectiveCamera | THREE.OrthographicCamera {\r\n\r\n\t\treturn this._camera;\r\n\r\n\t}\r\n\r\n\tset camera( camera: THREE.PerspectiveCamera | THREE.OrthographicCamera ) {\r\n\r\n\t\tthis._camera = camera;\r\n\t\tthis.updateCameraUp();\r\n\t\tthis._camera.updateProjectionMatrix();\r\n\t\tthis._updateNearPlaneCorners();\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Whether or not the controls are enabled.  \r\n\t * `false` to disable user dragging/touch-move, but all methods works.\r\n\t * @category Properties\r\n\t */\r\n\tget enabled(): boolean {\r\n\r\n\t\treturn this._enabled;\r\n\r\n\t}\r\n\r\n\tset enabled( enabled: boolean ) {\r\n\r\n\t\tthis._enabled = enabled;\r\n\r\n\t\tif ( ! this._domElement ) return;\r\n\t\tif ( enabled ) {\r\n\r\n\t\t\tthis._domElement.style.touchAction = 'none';\r\n\t\t\tthis._domElement.style.userSelect = 'none';\r\n\t\t\tthis._domElement.style.webkitUserSelect = 'none';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.cancel();\r\n\t\t\tthis._domElement.style.touchAction = '';\r\n\t\t\tthis._domElement.style.userSelect = '';\r\n\t\t\tthis._domElement.style.webkitUserSelect = '';\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the controls are active updating.  \r\n\t * readonly value.\r\n\t * @category Properties\r\n\t */\r\n\tget active(): boolean {\r\n\r\n\t\treturn ! this._hasRested;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Getter for the current `ACTION`.  \r\n\t * readonly value.\r\n\t * @category Properties\r\n\t */\r\n\tget currentAction(): ACTION {\r\n\r\n\t\treturn this._state;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * get/set Current distance.\r\n\t * @category Properties\r\n\t */\r\n\tget distance(): number {\r\n\r\n\t\treturn this._spherical.radius;\r\n\r\n\t}\r\n\r\n\tset distance( distance: number ) {\r\n\r\n\t\tif (\r\n\t\t\tthis._spherical.radius === distance &&\r\n\t\t\tthis._sphericalEnd.radius === distance\r\n\t\t) return;\r\n\r\n\t\tthis._spherical.radius = distance;\r\n\t\tthis._sphericalEnd.radius = distance;\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// horizontal angle\r\n\t/**\r\n\t * get/set the azimuth angle (horizontal) in radians.  \r\n\t * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\r\n\t * @category Properties\r\n\t */\r\n\tget azimuthAngle(): number {\r\n\r\n\t\treturn this._spherical.theta;\r\n\r\n\t}\r\n\r\n\tset azimuthAngle( azimuthAngle: number ) {\r\n\r\n\t\tif (\r\n\t\t\tthis._spherical.theta === azimuthAngle &&\r\n\t\t\tthis._sphericalEnd.theta === azimuthAngle\r\n\t\t) return;\r\n\r\n\t\tthis._spherical.theta = azimuthAngle;\r\n\t\tthis._sphericalEnd.theta = azimuthAngle;\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// vertical angle\r\n\t/**\r\n\t * get/set the polar angle (vertical) in radians.\r\n\t * @category Properties\r\n\t */\r\n\tget polarAngle(): number {\r\n\r\n\t\treturn this._spherical.phi;\r\n\r\n\t}\r\n\r\n\tset polarAngle( polarAngle: number ) {\r\n\r\n\t\tif (\r\n\t\t\tthis._spherical.phi === polarAngle &&\r\n\t\t\tthis._sphericalEnd.phi === polarAngle\r\n\t\t) return;\r\n\r\n\t\tthis._spherical.phi = polarAngle;\r\n\t\tthis._sphericalEnd.phi = polarAngle;\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Whether camera position should be enclosed in the boundary or not.\r\n\t * @category Properties\r\n\t */\r\n\tget boundaryEnclosesCamera(): boolean {\r\n\r\n\t\treturn this._boundaryEnclosesCamera;\r\n\r\n\t}\r\n\r\n\tset boundaryEnclosesCamera( boundaryEnclosesCamera: boolean ) {\r\n\r\n\t\tthis._boundaryEnclosesCamera = boundaryEnclosesCamera;\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Adds the specified event listener.\r\n\t * Applicable event types (which is `K`) are:\r\n\t * | Event name          | Timing |\r\n\t * | ------------------- | ------ |\r\n\t * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\r\n\t * | `'control'`         | When the user controls the camera (dragging). |\r\n\t * | `'controlend'`      | When the user ends to control the camera. ¹ |\r\n\t * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\r\n\t * | `'update'`          | When the camera position is updated. |\r\n\t * | `'wake'`            | When the camera starts moving. |\r\n\t * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\r\n\t * | `'sleep'`           | When the camera end moving. |\r\n\t *\r\n\t * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\r\n\t * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\r\n\t * ```\r\n\t * @param type event name\r\n\t * @param listener handler function\r\n\t * @category Methods\r\n\t */\r\n\t// addEventListener<K extends keyof CameraControlsEventMap>(\r\n\t// \ttype: K,\r\n\t// \tlistener: ( event: CameraControlsEventMap[ K ] ) => any,\r\n\t// ): void {\r\n\r\n\t// \tsuper.addEventListener( type, listener as Listener );\r\n\r\n\t// }\r\n\r\n\t/**\r\n\t * Removes the specified event listener\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\r\n\t * ```\r\n\t * @param type event name\r\n\t * @param listener handler function\r\n\t * @category Methods\r\n\t */\r\n\t// removeEventListener<K extends keyof CameraControlsEventMap>(\r\n\t// \ttype: K,\r\n\t// \tlistener: ( event: CameraControlsEventMap[ K ] ) => any,\r\n\t// ): void {\r\n\r\n\t// \tsuper.removeEventListener( type, listener as Listener );\r\n\r\n\t// }\r\n\r\n\t/**\r\n\t * Rotate azimuthal angle(horizontal) and polar angle(vertical).\r\n\t * Every value is added to the current value.\r\n\t * @param azimuthAngle Azimuth rotate angle. In radian.\r\n\t * @param polarAngle Polar rotate angle. In radian.\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\trotate( azimuthAngle: number, polarAngle: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\treturn this.rotateTo(\r\n\t\t\tthis._sphericalEnd.theta + azimuthAngle,\r\n\t\t\tthis._sphericalEnd.phi   + polarAngle,\r\n\t\t\tenableTransition,\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\r\n\t * ```\r\n\t * @param azimuthAngle Azimuth rotate angle. In radian.\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\trotateAzimuthTo( azimuthAngle: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\treturn this.rotateTo(\r\n\t\t\tazimuthAngle,\r\n\t\t\tthis._sphericalEnd.phi,\r\n\t\t\tenableTransition,\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\r\n\t *\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\r\n\t * ```\r\n\t * @param polarAngle Polar rotate angle. In radian.\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\trotatePolarTo( polarAngle: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\treturn this.rotateTo(\r\n\t\t\tthis._sphericalEnd.theta,\r\n\t\t\tpolarAngle,\r\n\t\t\tenableTransition,\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.  \r\n\t * Camera view will rotate over the orbit pivot absolutely:\r\n\t *\r\n\t * azimuthAngle\r\n\t * ```\r\n\t *       0º\r\n\t *         \\\r\n\t * 90º -----+----- -90º\r\n\t *           \\\r\n\t *           180º\r\n\t * ```\r\n\t * | direction | angle                  |\r\n\t * | --------- | ---------------------- |\r\n\t * | front     | 0º                     |\r\n\t * | left      | 90º (`Math.PI / 2`)    |\r\n\t * | right     | -90º (`- Math.PI / 2`) |\r\n\t * | back      | 180º (`Math.PI`)       |\r\n\t *\r\n\t * polarAngle\r\n\t * ```\r\n\t *     180º\r\n\t *      |\r\n\t *      90º\r\n\t *      |\r\n\t *      0º\r\n\t * ```\r\n\t * | direction            | angle                  |\r\n\t * | -------------------- | ---------------------- |\r\n\t * | top/sky              | 180º (`Math.PI`)       |\r\n\t * | horizontal from view | 90º (`Math.PI / 2`)    |\r\n\t * | bottom/floor         | 0º                     |\r\n\t *\r\n\t * @param azimuthAngle Azimuth rotate angle to. In radian.\r\n\t * @param polarAngle Polar rotate angle to. In radian.\r\n\t * @param enableTransition  Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\trotateTo( azimuthAngle: number, polarAngle: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tthis._isUserControllingRotate = false;\r\n\r\n\t\tconst theta = clamp( azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle );\r\n\t\tconst phi   = clamp( polarAngle,   this.minPolarAngle,   this.maxPolarAngle );\r\n\r\n\t\tthis._sphericalEnd.theta = theta;\r\n\t\tthis._sphericalEnd.phi   = phi;\r\n\t\tthis._sphericalEnd.makeSafe();\r\n\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t\tif ( ! enableTransition ) {\r\n\r\n\t\t\tthis._spherical.theta = this._sphericalEnd.theta;\r\n\t\t\tthis._spherical.phi   = this._sphericalEnd.phi;\r\n\r\n\t\t}\r\n\r\n\t\tconst resolveImmediately = ! enableTransition ||\r\n\t\t\tapproxEquals( this._spherical.theta, this._sphericalEnd.theta, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._spherical.phi, this._sphericalEnd.phi, this.restThreshold );\r\n\t\treturn this._createOnRestPromise( resolveImmediately );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dolly in/out camera position.\r\n\t * @param distance Distance of dollyIn. Negative number for dollyOut.\r\n\t * @param enableTransition Whether to move smoothly or immediately.\r\n\t * @category Methods\r\n\t */\r\n\tdolly( distance: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\treturn this.dollyTo( this._sphericalEnd.radius - distance, enableTransition );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dolly in/out camera position to given distance.\r\n\t * @param distance Distance of dolly.\r\n\t * @param enableTransition Whether to move smoothly or immediately.\r\n\t * @category Methods\r\n\t */\r\n\tdollyTo( distance: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tthis._isUserControllingDolly = false;\r\n\r\n\t\tconst lastRadius = this._sphericalEnd.radius;\r\n\t\tconst newRadius = clamp( distance, this.minDistance, this.maxDistance );\r\n\t\tconst hasCollider = this.colliderMeshes.length >= 1;\r\n\r\n\t\tif ( hasCollider ) {\r\n\r\n\t\t\tconst maxDistanceByCollisionTest = this._collisionTest();\r\n\t\t\tconst isCollided = approxEquals( maxDistanceByCollisionTest, this._spherical.radius );\r\n\t\t\tconst isDollyIn = lastRadius > newRadius;\r\n\r\n\t\t\tif ( ! isDollyIn && isCollided ) return Promise.resolve();\r\n\r\n\t\t\tthis._sphericalEnd.radius = Math.min( newRadius, maxDistanceByCollisionTest );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis._sphericalEnd.radius = newRadius;\r\n\r\n\t\t}\r\n\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t\tif ( ! enableTransition ) {\r\n\r\n\t\t\tthis._spherical.radius = this._sphericalEnd.radius;\r\n\r\n\t\t}\r\n\r\n\t\tconst resolveImmediately =  ! enableTransition || approxEquals( this._spherical.radius, this._sphericalEnd.radius, this.restThreshold );\r\n\t\treturn this._createOnRestPromise( resolveImmediately );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Zoom in/out camera. The value is added to camera zoom.\r\n\t * Limits set with `.minZoom` and `.maxZoom`\r\n\t * @param zoomStep zoom scale\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\tzoom( zoomStep: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\treturn this.zoomTo( this._zoomEnd + zoomStep, enableTransition );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Zoom in/out camera to given scale. The value overwrites camera zoom.\r\n\t * Limits set with .minZoom and .maxZoom\r\n\t * @param zoom\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tzoomTo( zoom: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tthis._isUserControllingZoom = false;\r\n\r\n\t\tthis._zoomEnd = clamp( zoom, this.minZoom, this.maxZoom );\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t\tif ( ! enableTransition ) {\r\n\r\n\t\t\tthis._zoom = this._zoomEnd;\r\n\r\n\t\t}\r\n\r\n\t\tconst resolveImmediately = ! enableTransition || approxEquals( this._zoom, this._zoomEnd, this.restThreshold );\r\n\t\treturn this._createOnRestPromise( resolveImmediately );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated `pan()` has been renamed to `truck()`\r\n\t * @category Methods\r\n\t */\r\n\tpan( x: number, y: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tconsole.warn( '`pan` has been renamed to `truck`' );\r\n\t\treturn this.truck( x, y, enableTransition );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Truck and pedestal camera using current azimuthal angle\r\n\t * @param x Horizontal translate amount\r\n\t * @param y Vertical translate amount\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\ttruck( x: number, y: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tthis._camera.updateMatrix();\r\n\r\n\t\t_xColumn.setFromMatrixColumn( this._camera.matrix, 0 );\r\n\t\t_yColumn.setFromMatrixColumn( this._camera.matrix, 1 );\r\n\t\t_xColumn.multiplyScalar(   x );\r\n\t\t_yColumn.multiplyScalar( - y );\r\n\r\n\t\tconst offset = _v3A.copy( _xColumn ).add( _yColumn );\r\n\t\tconst to = _v3B.copy( this._targetEnd ).add( offset );\r\n\t\treturn this.moveTo( to.x, to.y, to.z, enableTransition );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Move forward / backward.\r\n\t * @param distance Amount to move forward / backward. Negative value to move backward\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\tforward( distance: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\t_v3A.setFromMatrixColumn( this._camera.matrix, 0 );\r\n\t\t_v3A.crossVectors( this._camera.up, _v3A );\r\n\t\t_v3A.multiplyScalar( distance );\r\n\r\n\t\tconst to = _v3B.copy( this._targetEnd ).add( _v3A );\r\n\t\treturn this.moveTo( to.x, to.y, to.z, enableTransition );\r\n\r\n\t}\r\n\r\n\tforward2( distance: number, enableTransition: boolean = false ): Promise<void> {\r\n\t\t_v3A.set(0, 0, -1).applyQuaternion(this._camera.quaternion);\r\n\t\t_v3A.multiplyScalar( distance );\r\n\t\tconst to = _v3B.copy( this._targetEnd ).add( _v3A );\r\n\t\treturn this.moveTo( to.x, to.y, to.z, enableTransition );\r\n\t}\r\n\r\n\t/**\r\n\t * Move up / down.\r\n\t * @param height Amount to move up / down. Negative value to move down\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\televate( height: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\t_v3A.copy( this._camera.up ).multiplyScalar( height );\r\n\t\treturn this.moveTo(\r\n\t\t\tthis._targetEnd.x + _v3A.x,\r\n\t\t\tthis._targetEnd.y + _v3A.y,\r\n\t\t\tthis._targetEnd.z + _v3A.z,\r\n\t\t\tenableTransition,\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Move target position to given point.\r\n\t * @param x x coord to move center position\r\n\t * @param y y coord to move center position\r\n\t * @param z z coord to move center position\r\n\t * @param enableTransition Whether to move smoothly or immediately\r\n\t * @category Methods\r\n\t */\r\n\tmoveTo( x: number, y: number, z: number, enableTransition: boolean = false ): Promise<void> {\r\n\t\tthis.curTarget.set(x,y,z);\r\n\r\n\t\tthis._isUserControllingTruck = false;\r\n\r\n\t\tconst offset = _v3A.set( x, y, z ).sub( this._targetEnd );\r\n\t\tthis._encloseToBoundary( this._targetEnd, offset, this.boundaryFriction );\r\n\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t\tif ( ! enableTransition ) {\r\n\r\n\t\t\tthis._target.copy( this._targetEnd );\r\n\r\n\t\t}\r\n\r\n\t\tconst resolveImmediately = ! enableTransition ||\r\n\t\t\tapproxEquals( this._target.x, this._targetEnd.x, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._target.y, this._targetEnd.y, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._target.z, this._targetEnd.z, this.restThreshold );\r\n\t\treturn this._createOnRestPromise( resolveImmediately );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Look in the given point direction.\r\n\t * @param x point x.\r\n\t * @param y point y.\r\n\t * @param z point z.\r\n\t * @param enableTransition Whether to move smoothly or immediately.\r\n\t * @returns Transition end promise\r\n\t * @category Methods\r\n\t */\r\n\tlookInDirectionOf( x: number, y: number, z: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tconst point = _v3A.set( x, y, z );\r\n\t\tconst direction = point.sub( this._targetEnd ).normalize();\r\n\t\tconst position = direction.multiplyScalar( - this._sphericalEnd.radius );\r\n\t\treturn this.setPosition( position.x, position.y, position.z, enableTransition );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\r\n\t * set `cover: true` to fill enter screen.\r\n\t * e.g.\r\n\t * ```\r\n\t * cameraControls.fitToBox( myMesh );\r\n\t * ```\r\n\t * @param box3OrObject Axis aligned bounding box to fit the view.\r\n\t * @param enableTransition Whether to move smoothly or immediately.\r\n\t * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\r\n\t * @returns Transition end promise\r\n\t * @category Methods\r\n\t */\r\n\tfitToBox( box3OrObject: THREE.Box3 | THREE.Object3D, enableTransition: boolean, {\r\n\t\tcover = false,\r\n\t\tpaddingLeft = 0,\r\n\t\tpaddingRight = 0,\r\n\t\tpaddingBottom = 0,\r\n\t\tpaddingTop =0\r\n\t}: Partial<FitToOptions> = {} ): Promise<void[]> {\r\n\r\n\t\tconst promises: Promise<void>[] = [];\r\n\t\tconst aabb = ( box3OrObject as THREE.Box3 ).isBox3\r\n\t\t\t? _box3A.copy( box3OrObject as THREE.Box3 )\r\n\t\t\t: _box3A.setFromObject( box3OrObject as THREE.Object3D );\r\n\r\n\t\tif ( aabb.isEmpty() )  {\r\n\r\n\t\t\tconsole.warn( 'camera-controls: fitTo() cannot be used with an empty box. Aborting' );\r\n\t\t\tPromise.resolve();\r\n\r\n\t\t}\r\n\r\n\t\t// round to closest axis ( forward | backward | right | left | top | bottom )\r\n\t\tconst theta = roundToStep( this._sphericalEnd.theta, PI_HALF );\r\n\t\tconst phi   = roundToStep( this._sphericalEnd.phi,   PI_HALF );\r\n\r\n\t\tpromises.push( this.rotateTo( theta, phi, enableTransition ) );\r\n\r\n\t\tconst normal = _v3A.setFromSpherical( this._sphericalEnd ).normalize();\r\n\t\tconst rotation = _quaternionA.setFromUnitVectors( normal, _AXIS_Z );\r\n\t\tconst viewFromPolar = approxEquals( Math.abs( normal.y ), 1 );\r\n\t\tif ( viewFromPolar ) {\r\n\r\n\t\t\trotation.multiply( _quaternionB.setFromAxisAngle( _AXIS_Y, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\trotation.multiply( this._yAxisUpSpaceInverse );\r\n\r\n\t\t// make oriented bounding box\r\n\t\tconst bb = _box3B.makeEmpty();\r\n\r\n\t\t// left bottom back corner\r\n\t\t_v3B.copy( aabb.min ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// right bottom back corner\r\n\t\t_v3B.copy( aabb.min ).setX( aabb.max.x ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// left top back corner\r\n\t\t_v3B.copy( aabb.min ).setY( aabb.max.y ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// right top back corner\r\n\t\t_v3B.copy( aabb.max ).setZ( aabb.min.z ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// left bottom front corner\r\n\t\t_v3B.copy( aabb.min ).setZ( aabb.max.z ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// right bottom front corner\r\n\t\t_v3B.copy( aabb.max ).setY( aabb.min.y ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// left top front corner\r\n\t\t_v3B.copy( aabb.max ).setX( aabb.min.x ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// right top front corner\r\n\t\t_v3B.copy( aabb.max ).applyQuaternion( rotation );\r\n\t\tbb.expandByPoint( _v3B );\r\n\r\n\t\t// add padding\r\n\t\tbb.min.x -= paddingLeft;\r\n\t\tbb.min.y -= paddingBottom;\r\n\t\tbb.max.x += paddingRight;\r\n\t\tbb.max.y += paddingTop;\r\n\r\n\t\trotation.setFromUnitVectors( _AXIS_Z, normal );\r\n\r\n\t\tif ( viewFromPolar ) {\r\n\r\n\t\t\trotation.premultiply( _quaternionB.invert() );\r\n\r\n\t\t}\r\n\r\n\t\trotation.premultiply( this._yAxisUpSpace );\r\n\r\n\t\tconst bbSize = bb.getSize( _v3A );\r\n\t\tconst center = bb.getCenter( _v3B ).applyQuaternion( rotation );\r\n\r\n\t\tif ( isPerspectiveCamera( this._camera ) ) {\r\n\r\n\t\t\tconst distance = this.getDistanceToFitBox( bbSize.x, bbSize.y, bbSize.z, cover );\r\n\t\t\tpromises.push( this.moveTo( center.x, center.y, center.z, enableTransition ) );\r\n\t\t\tpromises.push( this.dollyTo( distance, enableTransition ) );\r\n\t\t\tpromises.push( this.setFocalOffset( 0, 0, 0, enableTransition ) );\r\n\r\n\t\t} else if ( isOrthographicCamera( this._camera ) ) {\r\n\r\n\t\t\tconst camera = this._camera;\r\n\t\t\tconst width = camera.right - camera.left;\r\n\t\t\tconst height = camera.top - camera.bottom;\r\n\t\t\tconst zoom = cover ? Math.max( width / bbSize.x, height / bbSize.y ) : Math.min( width / bbSize.x, height / bbSize.y );\r\n\t\t\tpromises.push( this.moveTo( center.x, center.y, center.z, enableTransition ) );\r\n\t\t\tpromises.push( this.zoomTo( zoom, enableTransition ) );\r\n\t\t\tpromises.push( this.setFocalOffset( 0, 0, 0, enableTransition ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( promises );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Fit the viewport to the sphere or the bounding sphere of the object.\r\n\t * @param sphereOrMesh\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tfitToSphere( sphereOrMesh: THREE.Sphere | THREE.Object3D, enableTransition: boolean ): Promise<void[]> {\r\n\r\n\t\tconst promises: Promise<void>[] = [];\r\n\t\tconst isSphere = sphereOrMesh instanceof THREE.Sphere;\r\n\t\tconst boundingSphere = isSphere ?\r\n\t\t\t_sphere.copy( sphereOrMesh as THREE.Sphere ) :\r\n\t\t\tCameraControls.createBoundingSphere( sphereOrMesh as THREE.Object3D, _sphere );\r\n\r\n\t\tpromises.push( this.moveTo(\r\n\t\t\tboundingSphere.center.x,\r\n\t\t\tboundingSphere.center.y,\r\n\t\t\tboundingSphere.center.z,\r\n\t\t\tenableTransition,\r\n\t\t) );\r\n\r\n\t\tif ( isPerspectiveCamera( this._camera ) ) {\r\n\r\n\t\t\tconst distanceToFit = this.getDistanceToFitSphere( boundingSphere.radius );\r\n\t\t\tpromises.push( this.dollyTo( distanceToFit, enableTransition ) );\r\n\r\n\t\t} else if ( isOrthographicCamera( this._camera ) ) {\r\n\r\n\t\t\tconst width = this._camera.right - this._camera.left;\r\n\t\t\tconst height = this._camera.top - this._camera.bottom;\r\n\t\t\tconst diameter = 2 * boundingSphere.radius;\r\n\t\t\tconst zoom = Math.min( width / diameter, height / diameter );\r\n\t\t\tpromises.push( this.zoomTo( zoom, enableTransition ) );\r\n\r\n\t\t}\r\n\r\n\t\tpromises.push( this.setFocalOffset( 0, 0, 0, enableTransition ) );\r\n\r\n\t\treturn Promise.all( promises );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Look at the `target` from the `position`.\r\n\t * @param positionX\r\n\t * @param positionY\r\n\t * @param positionZ\r\n\t * @param targetX\r\n\t * @param targetY\r\n\t * @param targetZ\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tsetLookAt(\r\n\t\tpositionX: number, positionY: number, positionZ: number,\r\n\t\ttargetX: number, targetY: number, targetZ: number,\r\n\t\tenableTransition: boolean = false,\r\n\t): Promise<void> {\r\n\r\n\t\tthis._isUserControllingRotate = false;\r\n\t\tthis._isUserControllingDolly = false;\r\n\t\tthis._isUserControllingTruck = false;\r\n\r\n\t\tconst target = _v3B.set( targetX, targetY, targetZ );\r\n\t\tconst position = _v3A.set( positionX, positionY, positionZ );\r\n\r\n\t\tthis._targetEnd.copy( target );\r\n\t\tthis._sphericalEnd.setFromVector3( position.sub( target ).applyQuaternion( this._yAxisUpSpace ) );\r\n\t\tthis.normalizeRotations();\r\n\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t\tif ( ! enableTransition ) {\r\n\r\n\t\t\tthis._target.copy( this._targetEnd );\r\n\t\t\tthis._spherical.copy( this._sphericalEnd );\r\n\r\n\t\t}\r\n\r\n\t\tconst resolveImmediately = ! enableTransition ||\r\n\t\t\tapproxEquals( this._target.x, this._targetEnd.x, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._target.y, this._targetEnd.y, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._target.z, this._targetEnd.z, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._spherical.theta, this._sphericalEnd.theta, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._spherical.phi, this._sphericalEnd.phi, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._spherical.radius, this._sphericalEnd.radius, this.restThreshold );\r\n\t\treturn this._createOnRestPromise( resolveImmediately );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Similar to setLookAt, but it interpolates between two states.\r\n\t * @param positionAX\r\n\t * @param positionAY\r\n\t * @param positionAZ\r\n\t * @param targetAX\r\n\t * @param targetAY\r\n\t * @param targetAZ\r\n\t * @param positionBX\r\n\t * @param positionBY\r\n\t * @param positionBZ\r\n\t * @param targetBX\r\n\t * @param targetBY\r\n\t * @param targetBZ\r\n\t * @param t\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tlerpLookAt(\r\n\t\tpositionAX: number, positionAY: number, positionAZ: number,\r\n\t\ttargetAX: number, targetAY: number, targetAZ: number,\r\n\t\tpositionBX: number, positionBY: number, positionBZ: number,\r\n\t\ttargetBX: number, targetBY: number, targetBZ: number,\r\n\t\tt: number,\r\n\t\tenableTransition: boolean = false,\r\n\t): Promise<void> {\r\n\r\n\t\tthis._isUserControllingRotate = false;\r\n\t\tthis._isUserControllingDolly = false;\r\n\t\tthis._isUserControllingTruck = false;\r\n\r\n\t\tconst targetA = _v3A.set( targetAX, targetAY, targetAZ );\r\n\t\tconst positionA = _v3B.set( positionAX, positionAY, positionAZ );\r\n\t\t_sphericalA.setFromVector3( positionA.sub( targetA ).applyQuaternion( this._yAxisUpSpace ) );\r\n\r\n\t\tconst targetB = _v3C.set( targetBX, targetBY, targetBZ );\r\n\t\tconst positionB = _v3B.set( positionBX, positionBY, positionBZ );\r\n\t\t_sphericalB.setFromVector3( positionB.sub( targetB ).applyQuaternion( this._yAxisUpSpace ) );\r\n\r\n\t\tthis._targetEnd.copy( targetA.lerp( targetB, t ) ); // tricky\r\n\r\n\t\tconst deltaTheta  = _sphericalB.theta  - _sphericalA.theta;\r\n\t\tconst deltaPhi    = _sphericalB.phi    - _sphericalA.phi;\r\n\t\tconst deltaRadius = _sphericalB.radius - _sphericalA.radius;\r\n\r\n\t\tthis._sphericalEnd.set(\r\n\t\t\t_sphericalA.radius + deltaRadius * t,\r\n\t\t\t_sphericalA.phi    + deltaPhi    * t,\r\n\t\t\t_sphericalA.theta  + deltaTheta  * t,\r\n\t\t);\r\n\r\n\t\tthis.normalizeRotations();\r\n\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t\tif ( ! enableTransition ) {\r\n\r\n\t\t\tthis._target.copy( this._targetEnd );\r\n\t\t\tthis._spherical.copy( this._sphericalEnd );\r\n\r\n\t\t}\r\n\r\n\t\tconst resolveImmediately = ! enableTransition ||\r\n\t\t\tapproxEquals( this._target.x, this._targetEnd.x, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._target.y, this._targetEnd.y, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._target.z, this._targetEnd.z, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._spherical.theta, this._sphericalEnd.theta, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._spherical.phi, this._sphericalEnd.phi, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._spherical.radius, this._sphericalEnd.radius, this.restThreshold );\r\n\t\treturn this._createOnRestPromise( resolveImmediately );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set angle and distance by given position.\r\n\t * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\r\n\t * @param positionX\r\n\t * @param positionY\r\n\t * @param positionZ\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tsetPosition( positionX: number, positionY: number, positionZ: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\treturn this.setLookAt(\r\n\t\t\tpositionX, positionY, positionZ,\r\n\t\t\tthis._targetEnd.x, this._targetEnd.y, this._targetEnd.z,\r\n\t\t\tenableTransition,\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set the target position where gaze at.\r\n\t * An alias of `setLookAt()`, without position change. Thus keep the same position.\r\n\t * @param targetX\r\n\t * @param targetY\r\n\t * @param targetZ\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tsetTarget( targetX: number, targetY: number, targetZ: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tconst pos = this.getPosition( _v3A );\r\n\r\n\t\tconst promise = this.setLookAt(\r\n\t\t\tpos.x, pos.y, pos.z,\r\n\t\t\ttargetX, targetY, targetZ,\r\n\t\t\tenableTransition,\r\n\t\t);\r\n\r\n\t\t// see https://github.com/yomotsu/camera-controls/issues/335\r\n\t\tthis._sphericalEnd.phi = clamp( this.polarAngle, this.minPolarAngle, this.maxPolarAngle );\r\n\r\n\t\treturn promise;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\r\n\t * @param x\r\n\t * @param y\r\n\t * @param z\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tsetFocalOffset( x: number, y: number, z: number, enableTransition: boolean = false ): Promise<void> {\r\n\r\n\t\tthis._isUserControllingOffset = false;\r\n\r\n\t\tthis._focalOffsetEnd.set( x, y, z );\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t\tif ( ! enableTransition ) this._focalOffset.copy( this._focalOffsetEnd );\r\n\r\n\t\tconst resolveImmediately = ! enableTransition ||\r\n\t\t\tapproxEquals( this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold ) &&\r\n\t\t\tapproxEquals( this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold );\r\n\t\treturn this._createOnRestPromise( resolveImmediately );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set orbit point without moving the camera.\r\n\t * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\r\n\t * @param targetX\r\n\t * @param targetY\r\n\t * @param targetZ\r\n\t * @category Methods\r\n\t */\r\n\tsetOrbitPoint( targetX: number, targetY: number, targetZ : number ) {\r\n\r\n\t\tthis._camera.updateMatrixWorld();\r\n\t\t_xColumn.setFromMatrixColumn( this._camera.matrixWorldInverse, 0 );\r\n\t\t_yColumn.setFromMatrixColumn( this._camera.matrixWorldInverse, 1 );\r\n\t\t_zColumn.setFromMatrixColumn( this._camera.matrixWorldInverse, 2 );\r\n\r\n\t\tconst position = _v3A.set( targetX, targetY, targetZ );\r\n\t\tconst distance = position.distanceTo( this._camera.position );\r\n\t\tconst cameraToPoint = position.sub( this._camera.position );\r\n\t\t_xColumn.multiplyScalar( cameraToPoint.x );\r\n\t\t_yColumn.multiplyScalar( cameraToPoint.y );\r\n\t\t_zColumn.multiplyScalar( cameraToPoint.z );\r\n\r\n\t\t_v3A.copy( _xColumn ).add( _yColumn ).add( _zColumn );\r\n\t\t_v3A.z = _v3A.z + distance;\r\n\r\n\t\tthis.dollyTo( distance, false );\r\n\t\tthis.setFocalOffset( - _v3A.x, _v3A.y, - _v3A.z, false );\r\n\t\tthis.moveTo( targetX, targetY, targetZ, false );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\r\n\t * @param box3\r\n\t * @category Methods\r\n\t */\r\n\tsetBoundary( box3?: THREE.Box3 ): void {\r\n\r\n\t\tif ( ! box3 ) {\r\n\r\n\t\t\tthis._boundary.min.set( - Infinity, - Infinity, - Infinity );\r\n\t\t\tthis._boundary.max.set(   Infinity,   Infinity,   Infinity );\r\n\t\t\tthis._needsUpdate = true;\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._boundary.copy( box3 );\r\n\t\tthis._boundary.clampPoint( this._targetEnd, this._targetEnd );\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set (or unset) the current viewport.\r\n\t * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\r\n\t * @param viewportOrX\r\n\t * @param y\r\n\t * @param width\r\n\t * @param height\r\n\t * @category Methods\r\n\t */\r\n\tsetViewport( viewportOrX: THREE.Vector4 | number | null, y: number, width: number, height: number ): void {\r\n\r\n\t\tif ( viewportOrX === null ) { // null\r\n\r\n\t\t\tthis._viewport = null;\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._viewport = this._viewport || new THREE.Vector4() as THREE.Vector4;\r\n\r\n\t\tif ( typeof viewportOrX === 'number' ) { // number\r\n\r\n\t\t\tthis._viewport.set( viewportOrX, y, width, height );\r\n\r\n\t\t} else { // Vector4\r\n\r\n\t\t\tthis._viewport.copy( viewportOrX );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the distance to fit the box.\r\n\t * @param width box width\r\n\t * @param height box height\r\n\t * @param depth box depth\r\n\t * @returns distance\r\n\t * @category Methods\r\n\t */\r\n\tgetDistanceToFitBox( width: number, height: number, depth: number, cover: boolean = false ): number {\r\n\r\n\t\tif ( notSupportedInOrthographicCamera( this._camera, 'getDistanceToFitBox' ) ) return this._spherical.radius;\r\n\r\n\t\tconst boundingRectAspect = width / height;\r\n\t\tconst fov = this._camera.getEffectiveFOV() * DEG2RAD;\r\n\t\tconst aspect = this._camera.aspect;\r\n\r\n\t\tconst heightToFit = ( cover ? boundingRectAspect > aspect : boundingRectAspect < aspect ) ? height : width / aspect;\r\n\t\treturn heightToFit * 0.5 / Math.tan( fov * 0.5 ) + depth * 0.5;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the distance to fit the sphere.\r\n\t * @param radius sphere radius\r\n\t * @returns distance\r\n\t * @category Methods\r\n\t */\r\n\tgetDistanceToFitSphere( radius: number ): number {\r\n\r\n\t\tif ( notSupportedInOrthographicCamera( this._camera, 'getDistanceToFitSphere' ) ) return this._spherical.radius;\r\n\r\n\t\t// https://stackoverflow.com/a/44849975\r\n\t\tconst vFOV = this._camera.getEffectiveFOV() * DEG2RAD;\r\n\t\tconst hFOV = Math.atan( Math.tan( vFOV * 0.5 ) * this._camera.aspect ) * 2;\r\n\t\tconst fov = 1 < this._camera.aspect ? vFOV : hFOV;\r\n\t\treturn radius / ( Math.sin( fov * 0.5 ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns its current gazing target, which is the center position of the orbit.\r\n\t * @param out current gazing target\r\n\t * @category Methods\r\n\t */\r\n\tgetTarget( out?: THREE.Vector3 ): THREE.Vector3 {\r\n\r\n\t\tconst _out = !! out && out.isVector3 ? out : new THREE.Vector3() as THREE.Vector3;\r\n\t\treturn _out.copy( this._targetEnd );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns its current position.\r\n\t * @param out current position\r\n\t * @category Methods\r\n\t */\r\n\tgetPosition( out?: THREE.Vector3 ): THREE.Vector3 {\r\n\r\n\t\tconst _out = !! out && out.isVector3 ? out : new THREE.Vector3() as THREE.Vector3;\r\n\t\treturn _out.setFromSpherical( this._sphericalEnd ).applyQuaternion( this._yAxisUpSpaceInverse ).add( this._targetEnd );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns its current focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\r\n\t * @param out current focal offset\r\n\t * @category Methods\r\n\t */\r\n\tgetFocalOffset( out: THREE.Vector3 ): THREE.Vector3 {\r\n\r\n\t\tconst _out = !! out && out.isVector3 ? out : new THREE.Vector3() as THREE.Vector3;\r\n\t\treturn _out.copy( this._focalOffsetEnd );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize camera azimuth angle rotation between 0 and 360 degrees.\r\n\t * @category Methods\r\n\t */\r\n\tnormalizeRotations(): void {\r\n\r\n\t\tthis._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\r\n\t\tif ( this._sphericalEnd.theta < 0 ) this._sphericalEnd.theta += PI_2;\r\n\t\tthis._spherical.theta += PI_2 * Math.round( ( this._sphericalEnd.theta - this._spherical.theta ) / PI_2 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reset all rotation and position to defaults.\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\treset( enableTransition: boolean = false ): Promise<void[]> {\r\n\r\n\t\tif (\r\n\t\t\t! approxEquals( this._camera.up.x, this._cameraUp0.x ) ||\r\n\t\t\t! approxEquals( this._camera.up.y, this._cameraUp0.y ) ||\r\n\t\t\t! approxEquals( this._camera.up.z, this._cameraUp0.z )\r\n\t\t) {\r\n\r\n\t\t\tthis._camera.up.copy( this._cameraUp0 );\r\n\t\t\tconst position = this.getPosition( _v3A );\r\n\t\t\tthis.updateCameraUp();\r\n\t\t\tthis.setPosition( position.x, position.y, position.z );\r\n\r\n\t\t}\r\n\r\n\t\tconst promises = [\r\n\t\t\tthis.setLookAt(\r\n\t\t\t\tthis._position0.x, this._position0.y, this._position0.z,\r\n\t\t\t\tthis._target0.x, this._target0.y, this._target0.z,\r\n\t\t\t\tenableTransition,\r\n\t\t\t),\r\n\t\t\tthis.setFocalOffset(\r\n\t\t\t\tthis._focalOffset0.x,\r\n\t\t\t\tthis._focalOffset0.y,\r\n\t\t\t\tthis._focalOffset0.z,\r\n\t\t\t\tenableTransition,\r\n\t\t\t),\r\n\t\t\tthis.zoomTo( this._zoom0, enableTransition ),\r\n\t\t];\r\n\r\n\t\treturn Promise.all( promises );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Set current camera position as the default position.\r\n\t * @category Methods\r\n\t */\r\n\tsaveState(): void {\r\n\r\n\t\tthis._cameraUp0.copy( this._camera.up );\r\n\t\tthis.getTarget( this._target0 );\r\n\t\tthis.getPosition( this._position0 );\r\n\t\tthis._zoom0 = this._zoom;\r\n\t\tthis._focalOffset0.copy( this._focalOffset );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sync camera-up direction.  \r\n\t * When camera-up vector is changed, `.updateCameraUp()` must be called.\r\n\t * @category Methods\r\n\t */\r\n\tupdateCameraUp(): void {\r\n\r\n\t\tthis._yAxisUpSpace.setFromUnitVectors( this._camera.up, _AXIS_Y );\r\n\t\tthis._yAxisUpSpaceInverse.copy( this._yAxisUpSpace ).invert();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Apply current camera-up direction to the camera.  \r\n\t * The orbit system will be re-initialized with the current position.\r\n\t * @category Methods\r\n\t */\r\n\tapplyCameraUp():void {\r\n\r\n\t\tconst cameraDirection = _v3A.subVectors( this._target, this._camera.position ).normalize();\r\n\r\n\t\t// So first find the vector off to the side, orthogonal to both this.object.up and\r\n\t\t// the \"view\" vector.\r\n\t\tconst side = _v3B.crossVectors( cameraDirection, this._camera.up ).normalize();\r\n\t\t// Then find the vector orthogonal to both this \"side\" vector and the \"view\" vector.\r\n\t\t// This vector will be the new \"up\" vector.\r\n\t\tthis._camera.up.crossVectors( side, cameraDirection ).normalize();\r\n\t\tthis._camera.updateMatrixWorld();\r\n\r\n\t\tconst position = this.getPosition( _v3A );\r\n\t\tthis.updateCameraUp();\r\n\t\tthis.setPosition( position.x, position.y, position.z );\r\n\r\n\t}\r\n\tprivate clock = new THREE.Clock();\r\n\t/**\r\n\t * Update camera position and directions.  \r\n\t * This should be called in your tick loop every time, and returns true if re-rendering is needed.\r\n\t * @param delta\r\n\t * @returns updated\r\n\t * @category Methods\r\n\t */\r\n\tupdate( delta?: number ): boolean {\r\n\r\n\r\n\t\tif(delta==null)\r\n\t\t{\r\n\t\t\t//delta= this.clock.getDelta();\r\n\t\t\tdelta=0.1\r\n\t\t}\r\n\r\n\t\tconst deltaTheta  = this._sphericalEnd.theta  - this._spherical.theta;\r\n\t\tconst deltaPhi    = this._sphericalEnd.phi    - this._spherical.phi;\r\n\t\tconst deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\r\n\t\tconst deltaTarget = _deltaTarget.subVectors( this._targetEnd, this._target );\r\n\t\tconst deltaOffset = _deltaOffset.subVectors( this._focalOffsetEnd, this._focalOffset );\r\n\t\tconst deltaZoom = this._zoomEnd - this._zoom;\r\n\r\n\t\t// update theta\r\n\t\tif ( approxZero( deltaTheta ) ) {\r\n\r\n\t\t\tthis._thetaVelocity.value = 0;\r\n\t\t\tthis._spherical.theta = this._sphericalEnd.theta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\r\n\t\t\tthis._spherical.theta = smoothDamp( this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta );\r\n\t\t\tthis._needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update phi\r\n\t\tif ( approxZero( deltaPhi ) ) {\r\n\r\n\t\t\tthis._phiVelocity.value = 0;\r\n\t\t\tthis._spherical.phi = this._sphericalEnd.phi;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\r\n\t\t\tthis._spherical.phi = smoothDamp( this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta );\r\n\t\t\tthis._needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update distance\r\n\t\tif ( approxZero( deltaRadius ) ) {\r\n\r\n\t\t\tthis._radiusVelocity.value = 0;\r\n\t\t\tthis._spherical.radius = this._sphericalEnd.radius;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\r\n\t\t\tthis._spherical.radius = smoothDamp( this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta );\r\n\t\t\tthis._needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update target position\r\n\t\tif ( approxZero( deltaTarget.x ) && approxZero( deltaTarget.y ) && approxZero( deltaTarget.z ) ) {\r\n\r\n\t\t\tthis._targetVelocity.set( 0, 0, 0 );\r\n\t\t\tthis._target.copy( this._targetEnd );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\r\n\t\t\tsmoothDampVec3( this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target );\r\n\t\t\tthis._needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update focalOffset\r\n\t\tif ( approxZero( deltaOffset.x ) && approxZero( deltaOffset.y ) && approxZero( deltaOffset.z ) ) {\r\n\r\n\t\t\tthis._focalOffsetVelocity.set( 0, 0, 0 );\r\n\t\t\tthis._focalOffset.copy( this._focalOffsetEnd );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\r\n\t\t\tsmoothDampVec3( this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset );\r\n\t\t\tthis._needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._dollyControlAmount !== 0 ) {\r\n\r\n\t\t\tif ( isPerspectiveCamera( this._camera ) ) {\r\n\r\n\t\t\t\tconst camera = this._camera;\r\n\t\t\t\tconst cameraDirection = _v3A.setFromSpherical( this._spherical ).applyQuaternion( this._yAxisUpSpaceInverse ).normalize().negate();\r\n\t\t\t\tconst planeX = _v3B.copy( cameraDirection ).cross( camera.up ).normalize();\r\n\t\t\t\tif ( planeX.lengthSq() === 0 ) planeX.x = 1.0;\r\n\t\t\t\tconst planeY = _v3C.crossVectors( planeX, cameraDirection );\r\n\t\t\t\tconst worldToScreen = this._sphericalEnd.radius * Math.tan( camera.getEffectiveFOV() * DEG2RAD * 0.5 );\r\n\t\t\t\tconst prevRadius = this._sphericalEnd.radius - this._dollyControlAmount;\r\n\t\t\t\tconst lerpRatio = ( prevRadius - this._sphericalEnd.radius ) / this._sphericalEnd.radius;\r\n\t\t\t\tconst cursor = _v3A.copy( this._targetEnd )\r\n\t\t\t\t\t.add( planeX.multiplyScalar( this._dollyControlCoord.x * worldToScreen * camera.aspect ) )\r\n\t\t\t\t\t.add( planeY.multiplyScalar( this._dollyControlCoord.y * worldToScreen ) );\r\n\t\t\t\tthis._targetEnd.lerp( cursor, lerpRatio );\r\n\r\n\t\t\t} else if ( isOrthographicCamera( this._camera ) ) {\r\n\r\n\t\t\t\tconst camera = this._camera;\r\n\t\t\t\tconst worldCursorPosition = _v3A.set(\r\n\t\t\t\t\tthis._dollyControlCoord.x,\r\n\t\t\t\t\tthis._dollyControlCoord.y,\r\n\t\t\t\t\t( camera.near + camera.far ) / ( camera.near - camera.far )\r\n\t\t\t\t).unproject( camera );//.sub( _v3B.set( this._focalOffset.x, this._focalOffset.y, 0 ) );\r\n\t\t\t\tconst quaternion = _v3B.set( 0, 0, - 1 ).applyQuaternion( camera.quaternion );\r\n\t\t\t\tconst cursor = _v3C.copy( worldCursorPosition ).add( quaternion.multiplyScalar( - worldCursorPosition.dot( camera.up ) ) );\r\n\t\t\t\tconst prevZoom = this._zoom - this._dollyControlAmount;\r\n\t\t\t\tconst lerpRatio = - ( prevZoom - this._zoomEnd ) / this._zoom;\r\n\r\n\t\t\t\t// find the \"distance\" (aka plane constant in three.js) of Plane\r\n\t\t\t\t// from a given position (this._targetEnd) and normal vector (cameraDirection)\r\n\t\t\t\t// https://www.maplesoft.com/support/help/maple/view.aspx?path=MathApps%2FEquationOfAPlaneNormal#bkmrk0\r\n\t\t\t\tconst cameraDirection = _v3A.setFromSpherical( this._spherical ).applyQuaternion( this._yAxisUpSpaceInverse ).normalize().negate();\r\n\t\t\t\tconst prevPlaneConstant = this._targetEnd.dot( cameraDirection );\r\n\r\n\t\t\t\tthis._targetEnd.lerp( cursor, lerpRatio );\r\n\t\t\t\tconst newPlaneConstant = this._targetEnd.dot( cameraDirection );\r\n\r\n\t\t\t\t// Pull back the camera depth that has moved, to be the camera stationary as zoom\r\n\t\t\t\tconst pullBack = cameraDirection.multiplyScalar( newPlaneConstant - prevPlaneConstant );\r\n\t\t\t\tthis._targetEnd.sub( pullBack );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._target.copy( this._targetEnd );\r\n\t\t\t// target position may be moved beyond boundary.\r\n\t\t\tthis._boundary.clampPoint( this._targetEnd, this._targetEnd );\r\n\t\t\tthis._dollyControlAmount = 0;\r\n\r\n\t\t}\r\n\r\n\t\t// update zoom\r\n\t\tif ( approxZero( deltaZoom ) ) {\r\n\r\n\t\t\tthis._zoomVelocity.value = 0;\r\n\t\t\tthis._zoom = this._zoomEnd;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\r\n\t\t\tthis._zoom = smoothDamp( this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._camera.zoom !== this._zoom ) {\r\n\r\n\t\t\tthis._camera.zoom = this._zoom;\r\n\t\t\tthis._camera.updateProjectionMatrix();\r\n\t\t\tthis._updateNearPlaneCorners();\r\n\t\t\tthis._needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\t// collision detection\r\n\t\tconst maxDistance = this._collisionTest();\r\n\t\tthis._spherical.radius = Math.min( this._spherical.radius, maxDistance );\r\n\r\n\t\t// decompose spherical to the camera position\r\n\t\tthis._spherical.makeSafe();\r\n\t\tthis._camera.position.setFromSpherical( this._spherical ).applyQuaternion( this._yAxisUpSpaceInverse ).add( this._target );\r\n\t\tthis._camera.lookAt( this._target );\r\n\r\n\t\t// set offset after the orbit movement\r\n\t\tconst affectOffset =\r\n\t\t\t! approxZero( this._focalOffset.x ) ||\r\n\t\t\t! approxZero( this._focalOffset.y ) ||\r\n\t\t\t! approxZero( this._focalOffset.z );\r\n\t\tif ( affectOffset ) {\r\n\r\n\t\t\tthis._camera.updateMatrixWorld();\r\n\t\t\t_xColumn.setFromMatrixColumn( this._camera.matrix, 0 );\r\n\t\t\t_yColumn.setFromMatrixColumn( this._camera.matrix, 1 );\r\n\t\t\t_zColumn.setFromMatrixColumn( this._camera.matrix, 2 );\r\n\t\t\t_xColumn.multiplyScalar(   this._focalOffset.x );\r\n\t\t\t_yColumn.multiplyScalar( - this._focalOffset.y );\r\n\t\t\t_zColumn.multiplyScalar(   this._focalOffset.z ); // notice: z-offset will not affect in Orthographic.\r\n\r\n\t\t\t_v3A.copy( _xColumn ).add( _yColumn ).add( _zColumn );\r\n\t\t\tthis._camera.position.add( _v3A );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._boundaryEnclosesCamera ) {\r\n\r\n\t\t\tthis._encloseToBoundary(\r\n\t\t\t\tthis._camera.position.copy( this._target ),\r\n\t\t\t\t_v3A.setFromSpherical( this._spherical ).applyQuaternion( this._yAxisUpSpaceInverse ),\r\n\t\t\t\t1.0,\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tconst updated = this._needsUpdate;\r\n\r\n\t\tif ( updated && ! this._updatedLastTime ) {\r\n\r\n\t\t\tthis._hasRested = false;\r\n\t\t\tthis.dispatchEvent( { type: 'wake' } );\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t\t} else if ( updated ) {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t\t\tif (\r\n\t\t\t\tapproxZero( deltaTheta, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaPhi, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaRadius, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaTarget.x, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaTarget.y, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaTarget.z, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaOffset.x, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaOffset.y, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaOffset.z, this.restThreshold ) &&\r\n\t\t\t\tapproxZero( deltaZoom, this.restThreshold ) &&\r\n\t\t\t\t! this._hasRested\r\n\t\t\t) {\r\n\r\n\t\t\t\tthis._hasRested = true;\r\n\t\t\t\tthis.dispatchEvent( { type: 'rest' } );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( ! updated && this._updatedLastTime ) {\r\n\r\n\t\t\tthis.dispatchEvent( { type: 'sleep' } );\r\n\r\n\t\t}\r\n\r\n\t\tthis._updatedLastTime = updated;\r\n\t\tthis._needsUpdate = false;\r\n\t\treturn updated;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get all state in JSON string\r\n\t * @category Methods\r\n\t */\r\n\ttoJSON(): string {\r\n\r\n\t\treturn JSON.stringify( {\r\n\t\t\tenabled              : this._enabled,\r\n\r\n\t\t\tminDistance          : this.minDistance,\r\n\t\t\tmaxDistance          : infinityToMaxNumber( this.maxDistance ),\r\n\t\t\tminZoom              : this.minZoom,\r\n\t\t\tmaxZoom              : infinityToMaxNumber( this.maxZoom ),\r\n\t\t\tminPolarAngle        : this.minPolarAngle,\r\n\t\t\tmaxPolarAngle        : infinityToMaxNumber( this.maxPolarAngle ),\r\n\t\t\tminAzimuthAngle      : infinityToMaxNumber( this.minAzimuthAngle ),\r\n\t\t\tmaxAzimuthAngle      : infinityToMaxNumber( this.maxAzimuthAngle ),\r\n\t\t\tsmoothTime           : this.smoothTime,\r\n\t\t\tdraggingSmoothTime   : this.draggingSmoothTime,\r\n\t\t\tdollySpeed           : this.dollySpeed,\r\n\t\t\ttruckSpeed           : this.truckSpeed,\r\n\t\t\tdollyToCursor        : this.dollyToCursor,\r\n\t\t\tverticalDragToForward: this.verticalDragToForward,\r\n\r\n\t\t\ttarget               : this._targetEnd.toArray(),\r\n\t\t\tposition             : _v3A.setFromSpherical( this._sphericalEnd ).add( this._targetEnd ).toArray(),\r\n\t\t\tzoom                 : this._zoomEnd,\r\n\t\t\tfocalOffset          : this._focalOffsetEnd.toArray(),\r\n\r\n\t\t\ttarget0              : this._target0.toArray(),\r\n\t\t\tposition0            : this._position0.toArray(),\r\n\t\t\tzoom0                : this._zoom0,\r\n\t\t\tfocalOffset0         : this._focalOffset0.toArray(),\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\r\n\t * @param json\r\n\t * @param enableTransition\r\n\t * @category Methods\r\n\t */\r\n\tfromJSON( json: string, enableTransition: boolean = false ): void {\r\n\r\n\t\tconst obj = JSON.parse( json );\r\n\r\n\t\tthis.enabled               = obj.enabled;\r\n\r\n\t\tthis.minDistance           = obj.minDistance;\r\n\t\tthis.maxDistance           = maxNumberToInfinity( obj.maxDistance );\r\n\t\tthis.minZoom               = obj.minZoom;\r\n\t\tthis.maxZoom               = maxNumberToInfinity( obj.maxZoom );\r\n\t\tthis.minPolarAngle         = obj.minPolarAngle;\r\n\t\tthis.maxPolarAngle         = maxNumberToInfinity( obj.maxPolarAngle );\r\n\t\tthis.minAzimuthAngle       = maxNumberToInfinity( obj.minAzimuthAngle );\r\n\t\tthis.maxAzimuthAngle       = maxNumberToInfinity( obj.maxAzimuthAngle );\r\n\t\tthis.smoothTime            = obj.smoothTime;\r\n\t\tthis.draggingSmoothTime    = obj.draggingSmoothTime;\r\n\t\tthis.dollySpeed            = obj.dollySpeed;\r\n\t\tthis.truckSpeed            = obj.truckSpeed;\r\n\t\tthis.dollyToCursor         = obj.dollyToCursor;\r\n\t\tthis.verticalDragToForward = obj.verticalDragToForward;\r\n\r\n\t\tthis._target0.fromArray( obj.target0 );\r\n\t\tthis._position0.fromArray( obj.position0 );\r\n\t\tthis._zoom0 = obj.zoom0;\r\n\t\tthis._focalOffset0.fromArray( obj.focalOffset0 );\r\n\r\n\t\tthis.moveTo( obj.target[ 0 ], obj.target[ 1 ], obj.target[ 2 ], enableTransition );\r\n\t\t_sphericalA.setFromVector3( _v3A.fromArray( obj.position ).sub( this._targetEnd ).applyQuaternion( this._yAxisUpSpace ) );\r\n\t\tthis.rotateTo( _sphericalA.theta, _sphericalA.phi, enableTransition );\r\n\t\tthis.dollyTo( _sphericalA.radius, enableTransition );\r\n\t\tthis.zoomTo( obj.zoom, enableTransition );\r\n\t\tthis.setFocalOffset( obj.focalOffset[ 0 ], obj.focalOffset[ 1 ], obj.focalOffset[ 2 ], enableTransition );\r\n\r\n\t\tthis._needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Attach all internal event handlers to enable drag control.\r\n\t * @category Methods\r\n\t */\r\n\tconnect( domElement: HTMLElement ): void {\r\n\r\n\t\tif ( this._domElement ) {\r\n\r\n\t\t\tconsole.warn( 'camera-controls is already connected.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tdomElement.setAttribute( 'data-camera-controls-version', VERSION );\r\n\t\tthis._addAllEventListeners( domElement );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Detach all internal event handlers to disable drag control.\r\n\t */\r\n\tdisconnect() {\r\n\r\n\t\tthis.cancel();\r\n\t\tthis._removeAllEventListeners();\r\n\r\n\t\tif ( this._domElement ) {\r\n\r\n\t\t\tthis._domElement.removeAttribute( 'data-camera-controls-version' );\r\n\t\t\tthis._domElement = undefined;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Dispose the cameraControls instance itself, remove all eventListeners.\r\n\t * @category Methods\r\n\t */\r\n\tdispose(): void {\r\n\r\n\t\tthis._removeAllEventListeners()\r\n\t\t// remove all user event listeners\r\n\t\t// remove all internal event listeners\r\n\t\tthis.disconnect();\r\n\r\n\t}\r\n\r\n\r\n\tprotected _findPointerById( pointerId: number ): PointerInput | undefined {\r\n\r\n\t\treturn this._activePointers.find( ( activePointer ) => activePointer.pointerId === pointerId );\r\n\r\n\t}\r\n\r\n\tprotected _findPointerByMouseButton( mouseButton: MOUSE_BUTTON ): PointerInput | undefined {\r\n\r\n\t\treturn this._activePointers.find( ( activePointer ) => activePointer.mouseButton === mouseButton );\r\n\r\n\t}\r\n\r\n\r\n\tprotected _disposePointer( pointer: PointerInput ): void {\r\n\r\n\t\tthis._activePointers.splice( this._activePointers.indexOf( pointer ), 1 );\r\n\r\n\t}\r\n\r\n\tprotected _encloseToBoundary( position: THREE.Vector3, offset: THREE.Vector3, friction: number ): THREE.Vector3 {\r\n\r\n\t\tconst offsetLength2 = offset.lengthSq();\r\n\r\n\t\tif ( offsetLength2 === 0.0 ) { // sanity check\r\n\r\n\t\t\treturn position;\r\n\r\n\t\t}\r\n\r\n\t\t// See: https://twitter.com/FMS_Cat/status/1106508958640988161\r\n\t\tconst newTarget = _v3B.copy( offset ).add( position ); // target\r\n\t\tconst clampedTarget = this._boundary.clampPoint( newTarget, _v3C ); // clamped target\r\n\t\tconst deltaClampedTarget = clampedTarget.sub( newTarget ); // newTarget -> clampedTarget\r\n\t\tconst deltaClampedTargetLength2 = deltaClampedTarget.lengthSq(); // squared length of deltaClampedTarget\r\n\r\n\t\tif ( deltaClampedTargetLength2 === 0.0 ) { // when the position doesn't have to be clamped\r\n\r\n\t\t\treturn position.add( offset );\r\n\r\n\t\t} else if ( deltaClampedTargetLength2 === offsetLength2 ) { // when the position is completely stuck\r\n\r\n\t\t\treturn position;\r\n\r\n\t\t} else if ( friction === 0.0 ) {\r\n\r\n\t\t\treturn position.add( offset ).add( deltaClampedTarget );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot( deltaClampedTarget );\r\n\r\n\t\t\treturn position\r\n\t\t\t\t.add( _v3B.copy( offset ).multiplyScalar( offsetFactor ) )\r\n\t\t\t\t.add( deltaClampedTarget.multiplyScalar( 1.0 - friction ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _updateNearPlaneCorners(): void {\r\n\r\n\t\tif ( isPerspectiveCamera( this._camera ) )  {\r\n\r\n\t\t\tconst camera = this._camera;\r\n\t\t\tconst near = camera.near;\r\n\t\t\tconst fov = camera.getEffectiveFOV() * DEG2RAD;\r\n\t\t\tconst heightHalf = Math.tan( fov * 0.5 ) * near; // near plain half height\r\n\t\t\tconst widthHalf = heightHalf * camera.aspect; // near plain half width\r\n\t\t\tthis._nearPlaneCorners[ 0 ].set( - widthHalf, - heightHalf, 0 );\r\n\t\t\tthis._nearPlaneCorners[ 1 ].set(   widthHalf, - heightHalf, 0 );\r\n\t\t\tthis._nearPlaneCorners[ 2 ].set(   widthHalf,   heightHalf, 0 );\r\n\t\t\tthis._nearPlaneCorners[ 3 ].set( - widthHalf,   heightHalf, 0 );\r\n\r\n\t\t} else if ( isOrthographicCamera( this._camera ) ) {\r\n\r\n\t\t\tconst camera = this._camera;\r\n\t\t\tconst zoomInv = 1 / camera.zoom;\r\n\t\t\tconst left   = camera.left   * zoomInv;\r\n\t\t\tconst right  = camera.right  * zoomInv;\r\n\t\t\tconst top    = camera.top    * zoomInv;\r\n\t\t\tconst bottom = camera.bottom * zoomInv;\r\n\r\n\t\t\tthis._nearPlaneCorners[ 0 ].set( left,  top,    0 );\r\n\t\t\tthis._nearPlaneCorners[ 1 ].set( right, top,    0 );\r\n\t\t\tthis._nearPlaneCorners[ 2 ].set( right, bottom, 0 );\r\n\t\t\tthis._nearPlaneCorners[ 3 ].set( left,  bottom, 0 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _truckInternal = ( deltaX: number, deltaY: number, dragToOffset: boolean ): void => {\r\n\r\n\t\tlet truckX: number;\r\n\t\tlet pedestalY: number;\r\n\r\n\t\tif ( isPerspectiveCamera( this._camera ) ) {\r\n\r\n\t\t\tconst offset = _v3A.copy( this._camera.position ).sub( this._target );\r\n\t\t\t// half of the fov is center to top of screen\r\n\t\t\tconst fov = this._camera.getEffectiveFOV() * DEG2RAD;\r\n\t\t\tconst targetDistance = offset.length() * Math.tan( fov * 0.5 );\r\n\r\n\t\t\ttruckX    = ( this.truckSpeed * deltaX * targetDistance / this._elementRect.height );\r\n\t\t\tpedestalY = ( this.truckSpeed * deltaY * targetDistance / this._elementRect.height );\r\n\r\n\t\t} else if ( isOrthographicCamera( this._camera ) ) {\r\n\r\n\t\t\tconst camera = this._camera;\r\n\r\n\t\t\ttruckX    = deltaX * ( camera.right - camera.left   ) / camera.zoom / this._elementRect.width;\r\n\t\t\tpedestalY = deltaY * ( camera.top   - camera.bottom ) / camera.zoom / this._elementRect.height;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.verticalDragToForward ) {\r\n\r\n\t\t\tdragToOffset ?\r\n\t\t\t\tthis.setFocalOffset(\r\n\t\t\t\t\tthis._focalOffsetEnd.x + truckX,\r\n\t\t\t\t\tthis._focalOffsetEnd.y,\r\n\t\t\t\t\tthis._focalOffsetEnd.z,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t) :\r\n\t\t\t\tthis.truck( truckX, 0, true );\r\n\r\n\t\t\tthis.forward( - pedestalY, true );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdragToOffset ?\r\n\t\t\t\tthis.setFocalOffset(\r\n\t\t\t\t\tthis._focalOffsetEnd.x + truckX,\r\n\t\t\t\t\tthis._focalOffsetEnd.y + pedestalY,\r\n\t\t\t\t\tthis._focalOffsetEnd.z,\r\n\t\t\t\t\ttrue,\r\n\t\t\t\t) :\r\n\t\t\t\tthis.truck( truckX, pedestalY, true );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tprotected _rotateInternal = ( deltaX: number, deltaY: number ): void => {\r\n\r\n\t\tconst theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height; // divide by *height* to refer the resolution\r\n\t\tconst phi   = PI_2 * this.polarRotateSpeed   * deltaY / this._elementRect.height;\r\n\t\tthis.rotate( theta, phi, true );\r\n\r\n\t};\r\n\r\n\tprotected _dollyInternal = ( delta: number, x: number, y : number ): void => {\r\n\r\n\t\tconst dollyScale = Math.pow( 0.95, - delta * this.dollySpeed );\r\n\t\tconst distance = this._sphericalEnd.radius * dollyScale;\r\n\t\tconst prevRadius = this._sphericalEnd.radius;\r\n\t\tconst signedPrevRadius = prevRadius * ( delta >= 0 ? - 1 : 1 );\r\n\r\n\t\tthis.dollyTo( distance );\r\n\r\n\t\tif ( this.infinityDolly && ( distance < this.minDistance || this.maxDistance === this.minDistance ) ) {\r\n\r\n\t\t\tthis._camera.getWorldDirection( _v3A );\r\n\t\t\tthis._targetEnd.add( _v3A.normalize().multiplyScalar( signedPrevRadius ) );\r\n\t\t\tthis._target.add( _v3A.normalize().multiplyScalar( signedPrevRadius ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.dollyToCursor ) {\r\n\r\n\t\t\tthis._dollyControlAmount += this._sphericalEnd.radius - prevRadius;\r\n\r\n\t\t\tif ( this.infinityDolly && ( distance < this.minDistance || this.maxDistance === this.minDistance ) ) {\r\n\r\n\t\t\t\tthis._dollyControlAmount -= signedPrevRadius;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._dollyControlCoord.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tprotected _zoomInternal = ( delta: number, x: number, y: number ): void => {\r\n\r\n\t\tconst zoomScale = Math.pow( 0.95, delta * this.dollySpeed );\r\n\t\tconst prevZoom = this._zoomEnd;\r\n\r\n\t\t// for both PerspectiveCamera and OrthographicCamera\r\n\t\tthis.zoomTo( this._zoom * zoomScale );\r\n\r\n\t\tif ( this.dollyToCursor ) {\r\n\r\n\t\t\tthis._dollyControlAmount += this._zoomEnd - prevZoom;\r\n\t\t\tthis._dollyControlCoord.set( x, y );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// lateUpdate\r\n\tprotected _collisionTest(): number {\r\n\r\n\t\tlet distance = Infinity;\r\n\r\n\t\tconst hasCollider = this.colliderMeshes.length >= 1;\r\n\t\tif ( ! hasCollider ) return distance;\r\n\r\n\t\tif ( notSupportedInOrthographicCamera( this._camera, '_collisionTest' ) ) return distance;\r\n\r\n\t\t// divide by distance to normalize, lighter than `Vector3.prototype.normalize()`\r\n\t\tconst direction = _v3A.setFromSpherical( this._spherical ).divideScalar( this._spherical.radius );\r\n\r\n\t\t_rotationMatrix.lookAt( _ORIGIN, direction, this._camera.up );\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tconst nearPlaneCorner = _v3B.copy( this._nearPlaneCorners[ i ] );\r\n\t\t\tnearPlaneCorner.applyMatrix4( _rotationMatrix );\r\n\r\n\t\t\tconst origin = _v3C.addVectors( this._target, nearPlaneCorner );\r\n\t\t\t_raycaster.set( origin, direction );\r\n\t\t\t_raycaster.far = this._spherical.radius + 1;\r\n\r\n\t\t\tconst intersects = _raycaster.intersectObjects( this.colliderMeshes );\r\n\r\n\t\t\tif ( intersects.length !== 0 && intersects[ 0 ].distance < distance ) {\r\n\r\n\t\t\t\tdistance = intersects[ 0 ].distance;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn distance;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get its client rect and package into given `DOMRect` .\r\n\t */\r\n\tprotected _getClientRect( target: DOMRect ): DOMRect | undefined {\r\n\r\n\t\tif ( ! this._domElement ) return;\r\n\r\n\t\tconst rect = this._domElement.getBoundingClientRect();\r\n\r\n\t\ttarget.x = rect.left;\r\n\t\ttarget.y = rect.top;\r\n\r\n\t\tif ( this._viewport ) {\r\n\r\n\t\t\ttarget.x += this._viewport.x;\r\n\t\t\ttarget.y += rect.height - this._viewport.w - this._viewport.y;\r\n\t\t\ttarget.width = this._viewport.z;\r\n\t\t\ttarget.height = this._viewport.w;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttarget.width = rect.width;\r\n\t\t\ttarget.height = rect.height;\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tprotected _createOnRestPromise( resolveImmediately: boolean ): Promise<void> {\r\n\r\n\t\tif ( resolveImmediately ) return Promise.resolve();\r\n\r\n\t\tthis._hasRested = false;\r\n\t\tthis.dispatchEvent( { type: 'transitionstart' } );\r\n\r\n\t\treturn new Promise( ( resolve ) => {\r\n\r\n\t\t\tconst onResolve = () => {\r\n\r\n\t\t\t\tthis.removeEventListener( 'rest', onResolve );\r\n\t\t\t\tresolve();\r\n\r\n\t\t\t};\r\n\r\n\t\t\tthis.addEventListener( 'rest', onResolve );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\tprotected _addAllEventListeners( _domElement: HTMLElement ): void {}\r\n\r\n\tprotected _removeAllEventListeners(): void {}\r\n\r\n\t/**\r\n\t * backward compatible\r\n\t * @deprecated use smoothTime (in seconds) instead\r\n\t * @category Properties\r\n\t */\r\n\tget dampingFactor() {\r\n\r\n\t\tconsole.warn( '.dampingFactor has been deprecated. use smoothTime (in seconds) instead.' );\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * backward compatible\r\n\t * @deprecated use smoothTime (in seconds) instead\r\n\t * @category Properties\r\n\t */\r\n\tset dampingFactor( _: number ) {\r\n\r\n\t\tconsole.warn( '.dampingFactor has been deprecated. use smoothTime (in seconds) instead.' );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * backward compatible\r\n\t * @deprecated use draggingSmoothTime (in seconds) instead\r\n\t * @category Properties\r\n\t */\r\n\tget draggingDampingFactor() {\r\n\r\n\t\tconsole.warn( '.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.' );\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * backward compatible\r\n\t * @deprecated use draggingSmoothTime (in seconds) instead\r\n\t * @category Properties\r\n\t */\r\n\tset draggingDampingFactor( _: number ) {\r\n\r\n\t\tconsole.warn( '.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.' );\r\n\r\n\t}\r\n\r\n\tstatic createBoundingSphere( object3d: THREE.Object3D, out: THREE.Sphere = new THREE.Sphere() ): THREE.Sphere {\r\n\r\n\t\tconst boundingSphere = out;\r\n\t\tconst center = boundingSphere.center;\r\n\r\n\t\t_box3A.makeEmpty();\r\n\t\t// find the center\r\n\t\tobject3d.traverseVisible( ( object ) => {\r\n\r\n\t\t\tif ( ! ( object as THREE.Mesh ).isMesh ) return;\r\n\r\n\t\t\t_box3A.expandByObject( object );\r\n\r\n\t\t} );\r\n\t\t_box3A.getCenter( center );\r\n\r\n\t\t// find the radius\r\n\t\tlet maxRadiusSq = 0;\r\n\t\tobject3d.traverseVisible( ( object ) => {\r\n\r\n\t\t\tif ( ! ( object as THREE.Mesh ).isMesh ) return;\r\n\r\n\t\t\tconst mesh = ( object as THREE.Mesh );\r\n\t\t\tconst geometry = mesh.geometry.clone();\r\n\t\t\tgeometry.applyMatrix4( mesh.matrixWorld );\r\n\r\n\t\t\tconst bufferGeometry = geometry;\r\n\t\t\tconst position = bufferGeometry.attributes.position as THREE.BufferAttribute;\r\n\r\n\t\t\tfor ( let i = 0, l = position.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_v3A.fromBufferAttribute( position, i );\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _v3A ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tboundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\treturn boundingSphere;\r\n\r\n\t}\r\n\r\n}\r\n","import { App } from \"@/App\";\r\nimport { CameraControls } from \"@/sence/controls/CameraControls\";\r\nimport { Box3, Scene, WebGLRenderer, Vector3, Mesh, MeshBasicMaterial, Vector2, Raycaster, PerspectiveCamera, Group, LineSegments, LineBasicMaterial, Plane, PlaneGeometry, BackSide, BufferGeometry, OrthographicCamera, Object3D, DoubleSide } from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\n// Note: this code is originally from https://github.com/screamsyk/three.js-clipping\r\n\r\n/**\r\n * Object's box section\r\n */\r\nexport class BaseBoxSection {\r\n  static MIN_WIDTH = 1; // min width of section box\r\n  // basic member data\r\n  public isOpen: boolean = false;\r\n  protected sectionBox?: Box3;\r\n  protected scene: Object3D;\r\n  protected camera: PerspectiveCamera | OrthographicCamera;\r\n  protected renderer: WebGLRenderer;\r\n\r\n  protected goldenContainer: HTMLElement\r\n  protected controls: CameraControls;\r\n  /**\r\n   * Constructor\r\n   * @param scene\r\n   * @param camera\r\n   * @param renderer\r\n   * @param controls\r\n   */\r\n  constructor(scene: Object3D, camera: PerspectiveCamera | OrthographicCamera, renderer: WebGLRenderer,controls:CameraControls, goldenContainer: HTMLElement) {\r\n    this.scene = scene;\r\n    this.camera = camera;\r\n    this.renderer = renderer;\r\n    this.goldenContainer= goldenContainer\r\n    this.controls=controls\r\n  }\r\n\r\n  /**\r\n   * If sectionBox is not assigned in constructor, then set it here.\r\n   * For now, we only support it to be set once. Otherwise, need to check isOpen status, and initSectionBox properly.\r\n   * @param sectionBox\r\n   */\r\n  protected setSectionBox(sectionBox: Box3) {\r\n    if (this.sectionBox) {\r\n      throw new Error(\"sectionBox is assigned already!\");\r\n    }\r\n    this.sectionBox = sectionBox;\r\n  }\r\n\r\n  /**\r\n   * Starts to clip\r\n   */\r\n  open() {\r\n    this.initSectionBox();\r\n    this.addMouseListener();\r\n    this.isOpen = true;\r\n\r\n    // 这个也是全局的, localClippingEnable = false也有效\r\n        // 全局截断平面\r\n        //this.renderer.clippingPlanes = Empty;\r\n        // 这个是全局的, 不开的话material中的clipping无效\r\n        // 这个设置为true后才能局部截断\r\n        this.renderer.localClippingEnabled = true;\r\n  }\r\n\r\n  /**\r\n   * Close clipper\r\n   */\r\n  close() {\r\n    this.isOpen = false;\r\n    this.removeMouseListener();\r\n    this.clearSectionBox();\r\n  }\r\n\r\n  /**\r\n   * reset clipper\r\n   */\r\n  reset() {\r\n    this.close();\r\n    this.open();\r\n  }\r\n\r\n  // --------------- Clipping box --------------------\r\n\r\n  // basic data member\r\n  protected boxMin: Vector3 = new Vector3() // min point of section box\r\n  protected boxMax: Vector3 = new Vector3() // max point of section box\r\n  protected group: Group = new Group() // contains any object for section\r\n  protected planes: Array<Plane> = [] // section planes\r\n  protected vertices = [\r\n    new Vector3(), new Vector3(), new Vector3(), new Vector3(), // 4 vertices at the top\r\n    new Vector3(), new Vector3(), new Vector3(), new Vector3() // 4 vertices at the bottom\r\n  ]\r\n\r\n  protected faces: Array<BoxFace> = []\r\n  protected lines: Array<BoxLine> = []\r\n\r\n  /**\r\n   * Initialize clip box\r\n   */\r\n  protected initSectionBox() {\r\n    if (!this.sectionBox) {\r\n      throw new Error(\"Need to set sectionBox first!\");\r\n    }\r\n    this.boxMin = this.sectionBox.min;\r\n    this.boxMax = this.sectionBox.max;\r\n    this.group = new Group();\r\n    this.initPlanes();\r\n    this.initOrUpdateVertices();\r\n    this.initOrUpdateFaces();\r\n    this.initOrUpdateLines();\r\n    this.scene.add(this.group);\r\n  }\r\n\r\n  /**\r\n   * Initialize 6 section plane\r\n   */\r\n  protected initPlanes() {\r\n    this.planes = [];\r\n    this.planes.push(\r\n      new Plane(new Vector3(0, -1, 0), this.boxMax.y), // up\r\n      new Plane(new Vector3(0, 1, 0), -this.boxMin.y), // down\r\n      new Plane(new Vector3(1, 0, 0), -this.boxMin.x), // left\r\n      new Plane(new Vector3(-1, 0, 0), this.boxMax.x), // right\r\n      new Plane(new Vector3(0, 0, -1), this.boxMax.z), // front\r\n      new Plane(new Vector3(0, 0, 1), -this.boxMin.z) // back\r\n    );\r\n  }\r\n\r\n  protected updatePlanes() {\r\n    this.planes[0].constant = this.boxMax.y;\r\n    this.planes[1].constant = -this.boxMin.y;\r\n    this.planes[2].constant = -this.boxMin.x;\r\n    this.planes[3].constant = this.boxMax.x;\r\n    this.planes[4].constant = this.boxMax.z;\r\n    this.planes[5].constant = -this.boxMin.z;\r\n  }\r\n\r\n  /**\r\n   * Initialize or update 8 vertices of section box\r\n   */\r\n  protected initOrUpdateVertices() {\r\n    this.vertices[0].set(this.boxMin.x, this.boxMax.y, this.boxMin.z); // 4 vertices at the top\r\n    this.vertices[1].set(this.boxMax.x, this.boxMax.y, this.boxMin.z);\r\n    this.vertices[2].set(this.boxMax.x, this.boxMax.y, this.boxMax.z);\r\n    this.vertices[3].set(this.boxMin.x, this.boxMax.y, this.boxMax.z);\r\n    this.vertices[4].set(this.boxMin.x, this.boxMin.y, this.boxMin.z); // 4 vertices at the bottom\r\n    this.vertices[5].set(this.boxMax.x, this.boxMin.y, this.boxMin.z);\r\n    this.vertices[6].set(this.boxMax.x, this.boxMin.y, this.boxMax.z);\r\n    this.vertices[7].set(this.boxMin.x, this.boxMin.y, this.boxMax.z);\r\n  }\r\n\r\n  /**\r\n   * Initialize 6 faces of section box\r\n   */\r\n  protected initOrUpdateFaces() {\r\n    const v = this.vertices;\r\n    if (!this.faces || this.faces.length === 0) {\r\n      this.faces = [];\r\n      this.faces.push(\r\n        new BoxFace(\"yUp\", [v[0], v[1], v[2], v[3]]), // up\r\n        new BoxFace(\"yDown\", [v[4], v[7], v[6], v[5]]), // down\r\n        new BoxFace(\"xLeft\", [v[0], v[3], v[7], v[4]]), // left\r\n        new BoxFace(\"xRight\", [v[1], v[5], v[6], v[2]]), // right\r\n        new BoxFace(\"zFront\", [v[2], v[6], v[7], v[3]]), // front\r\n        new BoxFace(\"zBack\", [v[0], v[4], v[5], v[1]]) // back\r\n      );\r\n      this.group.add(...this.faces);\r\n      this.faces.forEach(face => {\r\n        this.group.add(face.backFace);\r\n      });\r\n    } else {\r\n      const f = this.faces;\r\n      f[0].setFromPoints([v[0], v[1], v[2], v[3]]);\r\n      f[1].setFromPoints([v[4], v[7], v[6], v[5]]);\r\n      f[2].setFromPoints([v[0], v[3], v[7], v[4]]);\r\n      f[3].setFromPoints([v[1], v[5], v[6], v[2]]);\r\n      f[4].setFromPoints([v[2], v[6], v[7], v[3]]);\r\n      f[5].setFromPoints([v[0], v[4], v[5], v[1]]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize 12 lines of section box\r\n   */\r\n  protected initOrUpdateLines() {\r\n    const v = this.vertices;\r\n    if (!this.lines || this.lines.length === 0) {\r\n      const f = this.faces;\r\n      if (!f) {\r\n        throw Error(\"Need to init Face first!\");\r\n      }\r\n      this.lines = [];\r\n      this.lines.push(\r\n        new BoxLine([v[0], v[1]], [f[0], f[5]]),\r\n        new BoxLine([v[1], v[2]], [f[0], f[3]]),\r\n        new BoxLine([v[2], v[3]], [f[0], f[4]]),\r\n        new BoxLine([v[3], v[0]], [f[0], f[2]]),\r\n        new BoxLine([v[4], v[5]], [f[1], f[5]]),\r\n        new BoxLine([v[5], v[6]], [f[1], f[3]]),\r\n        new BoxLine([v[6], v[7]], [f[1], f[4]]),\r\n        new BoxLine([v[7], v[4]], [f[1], f[2]]),\r\n        new BoxLine([v[0], v[4]], [f[2], f[5]]),\r\n        new BoxLine([v[1], v[5]], [f[3], f[5]]),\r\n        new BoxLine([v[2], v[6]], [f[3], f[4]]),\r\n        new BoxLine([v[3], v[7]], [f[2], f[4]])\r\n      );\r\n      this.group.add(...this.lines);\r\n    } else {\r\n      let i = 0;\r\n      this.lines[i++].setFromPoints([v[0], v[1]]);\r\n      this.lines[i++].setFromPoints([v[1], v[2]]);\r\n      this.lines[i++].setFromPoints([v[2], v[3]]);\r\n      this.lines[i++].setFromPoints([v[3], v[0]]);\r\n      this.lines[i++].setFromPoints([v[4], v[5]]);\r\n      this.lines[i++].setFromPoints([v[5], v[6]]);\r\n      this.lines[i++].setFromPoints([v[6], v[7]]);\r\n      this.lines[i++].setFromPoints([v[7], v[4]]);\r\n      this.lines[i++].setFromPoints([v[0], v[4]]);\r\n      this.lines[i++].setFromPoints([v[1], v[5]]);\r\n      this.lines[i++].setFromPoints([v[2], v[6]]);\r\n      this.lines[i++].setFromPoints([v[3], v[7]]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears clip box\r\n   */\r\n  protected clearSectionBox() {\r\n    this.scene.remove(this.group);\r\n    this.renderer.domElement.style.cursor = \"\";\r\n  }\r\n\r\n  // ------------------- Mouse events -----------------------\r\n\r\n  // basic data member\r\n  protected raycaster: Raycaster = new Raycaster()\r\n  protected mousePosition: Vector2 = new Vector2()\r\n  protected activeFace: BoxFace | null = null // the face that the mouse is hovering\r\n\r\n  /**\r\n   * Adds mouse event listener\r\n   */\r\n  private addMouseListener() {\r\n    this.goldenContainer.addEventListener(\"pointermove\", this.onMouseMove);\r\n    this.goldenContainer.addEventListener(\"pointerdown\", this.onMouseDown);\r\n  }\r\n\r\n  /**\r\n   * Removes mouse event listener\r\n   */\r\n  private removeMouseListener() {\r\n    this.goldenContainer.removeEventListener(\"pointermove\", this.onMouseMove);\r\n    this.goldenContainer.removeEventListener(\"pointerdown\", this.onMouseDown);\r\n  }\r\n\r\n  /**\r\n   * Converts mouse coordinates, and updates raycaster\r\n   */\r\n  protected updateMouseAndRay(event: MouseEvent) {\r\n    this.mousePosition.setX((event.offsetX / this.goldenContainer.clientWidth) * 2 - 1);\r\n    this.mousePosition.setY(-(event.offsetY / this.goldenContainer.clientHeight) * 2 + 1);\r\n    this.raycaster.setFromCamera(this.mousePosition, this.camera);\r\n  }\r\n\r\n  /**\r\n   * Handles mouse move event, highlights corresponding face/lines properly\r\n   */\r\n  protected onMouseMove = (event: MouseEvent) => {\r\n    this.updateMouseAndRay(event);\r\n    const intersects = this.raycaster.intersectObjects(this.faces); // intersects for mouse and faces\r\n    if (intersects.length) {\r\n      this.renderer.domElement.style.cursor = \"pointer\";\r\n      const face = intersects[0].object as BoxFace;\r\n      if (face !== this.activeFace) {\r\n        if (this.activeFace) {\r\n          this.activeFace.setActive(false);\r\n        }\r\n        face.setActive(true);\r\n        this.activeFace = face;\r\n      }\r\n    } else {\r\n      if (this.activeFace) {\r\n        this.activeFace.setActive(false);\r\n        this.activeFace = null;\r\n        this.renderer.domElement.style.cursor = \"auto\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles mouse down event, starts to drag a face using left button\r\n   */\r\n  protected onMouseDown = (event: MouseEvent) => {\r\n    const isLeftButton = event.button === 0; // 0: left button, 1: middle button, 2: right button\r\n    if (this.activeFace && isLeftButton) {\r\n      this.updateMouseAndRay(event);\r\n      const intersects = this.raycaster.intersectObjects(this.faces); // intersects for mouse and faces\r\n      if (intersects.length) {\r\n        const face = intersects[0].object as BoxFace;\r\n        const axis = face.axis;\r\n        const point = intersects[0].point;\r\n        this.drag.start(axis, point);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The drag object, used to handle clip operation\r\n   */\r\n  protected drag = {\r\n    axis: \"\", // one of the 6 axis to be dragged\r\n    point: new Vector3(), // to record where the drag point is\r\n    ground: new Mesh(new PlaneGeometry(1000000, 1000000), new MeshBasicMaterial({ colorWrite: false, depthWrite: false,side: DoubleSide})),\r\n\r\n    normals:  {\r\n      xLeft: new Vector3(-1, 0, 0),\r\n      xRight: new Vector3(1, 0, 0),\r\n      yDown: new Vector3(0, -1, 0),\r\n      yUp: new Vector3(0, 1, 0),\r\n      zBack: new Vector3(0, 0, -1),\r\n      zFront: new Vector3(0, 0, 1)\r\n    },\r\n    \r\n    start: (axis: string, point: Vector3) => {\r\n      this.drag.axis = axis;\r\n      this.drag.point = point;\r\n      this.drag.initGround();\r\n      this.controls.enabled=false;\r\n      // this.controls.enablePan = false;\r\n      // this.controls.enableZoom = false;\r\n      // this.controls.enableRotate = false;\r\n      this.renderer.domElement.style.cursor = \"move\";\r\n      // mouseup/mousedown/mousemove event is prevented by OrbitControls, let's use pointerup/pointerdown/pointermove\r\n      window.removeEventListener(\"pointermove\", this.onMouseMove);\r\n      window.addEventListener(\"pointermove\", this.drag.mousemove);\r\n      window.addEventListener(\"pointerup\", this.drag.mouseup);\r\n    },\r\n    end: () => {\r\n      this.scene.remove(this.drag.ground);\r\n      this.controls.enabled=true;\r\n      // this.controls.enablePan = true;\r\n      // this.controls.enableZoom = true;\r\n      // this.controls.enableRotate = true;\r\n      window.removeEventListener(\"pointermove\", this.drag.mousemove);\r\n      window.removeEventListener(\"pointerup\", this.drag.mouseup);\r\n      window.addEventListener(\"pointermove\", this.onMouseMove);\r\n    },\r\n    mousemove: (event: MouseEvent) => {\r\n      this.updateMouseAndRay(event);\r\n      const intersects = this.raycaster.intersectObject(this.drag.ground); // 鼠标与拖动地面的相交情况\r\n      if (intersects.length) {\r\n        this.drag.updateSectionBox(intersects[0].point);\r\n        console.log(\"拖动\")\r\n      }\r\n      // else\r\n      // {\r\n      //   let normal = this.drag.normals[this.drag.axis]\r\n      //   /* 创建平面 */\r\n      //   let planeGround = new Plane(normal, 0);\r\n      //   /* 获取射线 */\r\n      //   let ray = this.raycaster.ray;\r\n      //   /* 计算交点 */\r\n      //   let intersects = new Vector3(0, 0, 0);\r\n      //   ray.intersectPlane(planeGround, intersects);\r\n      //   this.drag.updateSectionBox(intersects);\r\n      //   console.log(\"mousemove\")\r\n      // }\r\n\r\n      // let normal = this.drag.normals[this.drag.axis]\r\n      // /* 创建平面 */\r\n      // let planeGround = new Plane(normal, 0);\r\n      // /* 获取射线 */\r\n      // let ray = this.raycaster.ray;\r\n      // /* 计算交点 */\r\n      // let intersects  = new Vector3(0, 0, 0);\r\n      // ray.intersectPlane(planeGround,intersects);\r\n      // this.drag.updateSectionBox(intersects);\r\n      // console.log(\"mousemove\")\r\n    },\r\n    mouseup: () => {\r\n      this.drag.end();\r\n    },\r\n    // Initialize the reference plane while dragging, which can be XY, YZ, ZX plane\r\n    initGround: () => {\r\n      \r\n      if ([\"xLeft\", \"xRight\"].includes(this.drag.axis)) {\r\n        this.drag.point.setX(0);\r\n      } else if ([\"yDown\", \"yUp\"].includes(this.drag.axis)) {\r\n        this.drag.point.setY(0);\r\n      } else if ([\"zBack\", \"zFront\"].includes(this.drag.axis)) {\r\n        this.drag.point.setZ(0);\r\n      }\r\n      this.drag.ground.position.copy(this.drag.point);\r\n      const newNormal = this.camera.position.clone()\r\n        .sub(this.camera.position.clone().projectOnVector(this.drag.normals[this.drag.axis]))\r\n        .add(this.drag.point); // gets the normal of the plane\r\n      this.drag.ground.lookAt(newNormal);\r\n      this.scene.add(this.drag.ground);\r\n    },\r\n    // updates section box, thus applies section\r\n    updateSectionBox: (point: Vector3) => {\r\n      const minSize = BaseBoxSection.MIN_WIDTH; // min size of section box\r\n      switch (this.drag.axis) {\r\n        case \"yUp\": // up\r\n          this.boxMax.setY(Math.max(this.boxMin.y + minSize, point.y));\r\n          break;\r\n        case \"yDown\": // down\r\n          this.boxMin.setY(Math.min(this.boxMax.y - minSize, point.y));\r\n          break;\r\n        case \"xLeft\": // left\r\n          this.boxMin.setX(Math.min(this.boxMax.x - minSize, point.x));\r\n          break;\r\n        case \"xRight\": // right\r\n          this.boxMax.setX(Math.max(this.boxMin.x + minSize, point.x));\r\n          break;\r\n        case \"zFront\": // front\r\n          this.boxMax.setZ(Math.max(this.boxMin.z + minSize, point.z));\r\n          break;\r\n        case \"zBack\": // back\r\n          this.boxMin.setZ(Math.min(this.boxMax.z - minSize, point.z));\r\n          break;\r\n      }\r\n\r\n      // updates section box's planes, vertices, faces and lines\r\n      // this.initPlanes()\r\n      this.updatePlanes();\r\n      this.initOrUpdateVertices();\r\n      this.initOrUpdateFaces();\r\n      this.initOrUpdateLines();\r\n      App.scene.enableRender();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * BoxLine of a section box\r\n */\r\nclass BoxLine extends LineSegments {\r\n  // basic data member\r\n  private normalMaterial = new LineBasicMaterial({ color: 0x000000 }) // 0xffa080, normal color of line (original color: 0xe1f2fb)\r\n  private activeMaterial = new LineBasicMaterial({ color: 0xfffff }) // 0xff5000, active color of line (original color: 0x00ffff)\r\n\r\n  /**\r\n   * @param vertices two points of a line\r\n   * @param faces two faces relative to a line\r\n   */\r\n  constructor(vertices: Array<Vector3>, faces: Array<BoxFace>) {\r\n    super();\r\n    faces.forEach(face => face.lines.push(this)); // saves the relationship between face and line\r\n    this.geometry = new BufferGeometry();\r\n    this.geometry.setFromPoints(vertices);\r\n    this.material = this.normalMaterial;\r\n  }\r\n\r\n  /**\r\n   * Updates geometry\r\n   */\r\n  setFromPoints(vertices: Vector3[]) {\r\n    this.geometry.setFromPoints(vertices);\r\n  }\r\n\r\n  /**\r\n   * Sets to active or inactive\r\n   * @param isActive\r\n   */\r\n  setActive(isActive: boolean) {\r\n    this.material = isActive ? this.activeMaterial : this.normalMaterial;\r\n  }\r\n}\r\n\r\n/**\r\n * BoxFace of a section box\r\n */\r\nclass BoxFace extends Mesh {\r\n  // basic data member\r\n  axis: string\r\n  lines: Array<BoxLine> = [] // 4 lines relative to a face\r\n  backFace: Mesh // the back side of a face, used to display\r\n\r\n  /**\r\n   * @param axis axis of a face\r\n   * @param vertices 4 points of a face\r\n   */\r\n  constructor(axis: string, vertices: Array<Vector3>) {\r\n    super();\r\n    this.axis = axis;\r\n    this.lines = [];\r\n    this.geometry = new BufferGeometry();\r\n    this.geometry.setFromPoints(vertices);\r\n    this.geometry.setIndex([0, 3, 2, 0, 2, 1]);\r\n    this.geometry.computeVertexNormals();\r\n    this.material = new MeshBasicMaterial({ colorWrite: false, depthWrite: false });\r\n    const backMaterial = new MeshBasicMaterial({ color: 0xb1bfcb, transparent: true, opacity: 0.3, side: BackSide });\r\n    this.backFace = new Mesh(this.geometry, backMaterial);\r\n  }\r\n\r\n  /**\r\n   * Updates geometry\r\n   */\r\n  setFromPoints(vertices: Vector3[]) {\r\n    this.geometry.setFromPoints(vertices);\r\n  }\r\n\r\n  /**\r\n   * Sets to active or inactive\r\n   * @param isActive\r\n   */\r\n  setActive(isActive: boolean) {\r\n    this.lines.forEach(line => { line.setActive(isActive) });\r\n  }\r\n}\r\n","import { BaseBoxSection } from \"./BaseBoxSection\";\r\nimport { Box3, Scene, WebGLRenderer, PerspectiveCamera, OrthographicCamera, Mesh, Plane, Object3D, Material, InstancedMesh, Vector3 } from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport * as THREE from \"three\";\r\nimport { CameraControls } from \"@/sence/controls/CameraControls\";\r\nimport { MaterialData } from \"@/data/MaterialData\";\r\nimport { App } from \"@/App\";\r\nimport { CutPlan } from \"./CutPlan\";\r\nimport { PlaneData } from \"@/sence/ThreeScene\";\r\n\r\n/**\r\n * Object's box section\r\n **/\r\nexport class ObjectsBoxSection extends BaseBoxSection {\r\n  // basic member data\r\n  //private objectUuids: string[];\r\n  /**\r\n   * Constructor\r\n   */\r\n\r\n  public group: THREE.Group\r\n\r\n  public planeDatas:PlaneData[];\r\n\r\n  constructor(box3: Box3, scene: THREE.Object3D, camera: PerspectiveCamera | OrthographicCamera, renderer: WebGLRenderer, controls: CameraControls, goldenContainer: HTMLElement) {\r\n    super(scene, camera, renderer, controls, goldenContainer);\r\n\r\n    \r\n    box3.expandByScalar(1.5); // expand bounding box a bit\r\n    super.setSectionBox(box3);\r\n  }\r\n\r\n\r\n\r\n  public resBox() {\r\n    let boxHelper = new THREE.BoxHelper(this.scene);\r\n    boxHelper.geometry.computeBoundingBox();\r\n    const box3 = boxHelper.geometry.boundingBox;\r\n    this.sectionBox = box3;\r\n  }\r\n\r\n  /**\r\n   * Initialize 6 section plane\r\n   **/\r\n  protected initPlanes() {\r\n    super.initPlanes();\r\n\r\n    this.planeDatas=[]\r\n    //new CutPlan(this.planes[0])\r\n\r\n   \r\n    this.scene.children.forEach(object => {\r\n      object && object.traverse((child: any) => {\r\n        if ([\"Mesh\", \"LineSegments\"].includes(child.type)) {\r\n          child.material.clippingPlanes = this.planes;\r\n          // clipIntersection is false by default, but it may changed by other section (ObjectsPlaneClipper, etc.)\r\n          // so, need to set it back here\r\n          child.material.clipIntersection = false;\r\n        }\r\n      });\r\n    });\r\n\r\n    MaterialData.pickMaterial.clippingPlanes = this.planes;\r\n    MaterialData.pickMaterial.clipIntersection = false;\r\n\r\n\r\n\r\n    // this.group = new THREE.Group();\r\n    // this.group.name = 'cutPlaneGroup'\r\n    // this.forEvent(this.scene, this.group, this.planes)  \r\n    // let max=Math.max(this.sectionBox.max.x - this.sectionBox.min.x,this.sectionBox.max.y - this.sectionBox.min.y,this.sectionBox.max.z - this.sectionBox.min.z)\r\n    // const planeGeom = new THREE.PlaneGeometry(max, max);\r\n    // const planeMat = new THREE.MeshStandardMaterial({\r\n    //   color: \"#1B6CC3\",//#868686\\#1B6CC3\\#00ffff\r\n    //   metalness: 0.1,\r\n    //   roughness: 0.75,\r\n    //   stencilWrite: true,\r\n    //   stencilRef: 0,\r\n    //   stencilFunc: THREE.NotEqualStencilFunc,\r\n    //   stencilFail: THREE.ReplaceStencilOp,\r\n    //   stencilZFail: THREE.ReplaceStencilOp,\r\n    //   stencilZPass: THREE.ReplaceStencilOp,\r\n    // });\r\n    // let center = new THREE.Vector3((this.sectionBox.max.x + this.sectionBox.min.x) / 2,\r\n    // (this.sectionBox.max.y + this.sectionBox.min.y) / 2, \r\n    // (this.sectionBox.max.z + this.sectionBox.min.z) / 2);\r\n    // planeGeom.translate(center.x,-center.z,0)\r\n\r\n\r\n    // const po = new THREE.Mesh(planeGeom, planeMat);\r\n    // // po.onAfterRender = function (renderer) {\r\n    // //   renderer.clearStencil();\r\n    // // };\r\n    // po.renderOrder = 10;\r\n    // po.name = 'cutPlaneMesh'\r\n    // let planeData = new PlaneData()\r\n    // planeData.plane = this.planes[0]\r\n    // planeData.planeObject = po;\r\n    // App.scene.planeDatas.push(planeData)\r\n    // this.planeDatas.push(planeData)\r\n    // App.scene.scene.add(po);\r\n    // App.scene.scene.updateMatrix()\r\n    // App.scene.enableRender();\r\n\r\n\r\n    // let cutPlanes=this.planes\r\n\r\n\r\n    // this.group = new THREE.Group();\r\n    // this.group.name = 'cutPlaneGroup'\r\n    // this.forEvent(this.scene, this.group, cutPlanes,1)\r\n\r\n    // ///cutPlanes=[this.planes[0]]\r\n    // for (let i = 0; i < cutPlanes.length; i++) {\r\n    //   let plane= cutPlanes[i]\r\n    //   //this.forEvent(this.scene, this.group, [plane],i+1)\r\n\r\n\r\n    //   // let max = Math.max(this.sectionBox.max.x - this.sectionBox.min.x, this.sectionBox.max.y - this.sectionBox.min.y, this.sectionBox.max.z - this.sectionBox.min.z)\r\n    //   let  max=5000\r\n    //   let planeGeom = new THREE.PlaneGeometry(max, max);\r\n    //   const planeMat = new THREE.MeshStandardMaterial({\r\n    //     color: \"#1B6CC3\",//#868686\\#1B6CC3\\#00ffff\r\n    //     metalness: 0.1,\r\n    //     roughness: 0.75,\r\n       \r\n    //     //clippingPlanes:  cutPlanes.filter( p => p !== plane ),\r\n\r\n    //     stencilWrite: true,\r\n    //     stencilRef: 0,\r\n    //     stencilFunc: THREE.NotEqualStencilFunc,\r\n    //     stencilFail: THREE.ReplaceStencilOp,\r\n    //     stencilZFail: THREE.ReplaceStencilOp,\r\n    //     stencilZPass: THREE.ReplaceStencilOp,\r\n    //   });\r\n\r\n\r\n    //   // let center = new THREE.Vector3((this.sectionBox.max.x + this.sectionBox.min.x) / 2,\r\n    //   //   (this.sectionBox.max.y + this.sectionBox.min.y) / 2,\r\n    //   //   (this.sectionBox.max.z + this.sectionBox.min.z) / 2);\r\n    //   //planeGeom.translate(center.x,-center.z,0)\r\n\r\n    //   //let matrix = new THREE.Matrix4();\r\n\r\n    //   // let zaxis=plane.normal.normalize()\r\n\r\n    //   // // 计算垂直向量\r\n    //   // let xaxis = this.verticalNormal(zaxis)\r\n    //   // let yaxis=zaxis.clone().cross(xaxis)\r\n\r\n    //   // matrix.set(xaxis.x, yaxis.x, zaxis.x, center.x,\r\n    //   //            xaxis.y, yaxis.y, zaxis.y, -center.z,\r\n    //   //            xaxis.z, yaxis.z, zaxis.z, 0,\r\n    //   //            0, 0, 0, 1)\r\n    //   // planeGeom.applyMatrix4(matrix) as any\r\n      \r\n    \r\n    //   // let axis=plane.normal.clone().cross(z);\r\n\r\n\r\n\r\n    //   // let rightMat =this.rotateAxisAndSetPosition(Math.PI / 2,axis)\r\n    //   // planeGeom.applyMatrix4(rightMat)\r\n      \r\n\r\n    //   //planeGeom.translate(center.x, -center.z, 0)\r\n\r\n    //   const po = new THREE.Mesh(planeGeom, planeMat);\r\n    //   po.onAfterRender = function (renderer) {\r\n    //     renderer.clearStencil();\r\n    //   };\r\n    //   po.renderOrder = i+1.1;\r\n    //   po.name = 'cutPlaneMesh'\r\n    //   let planeData = new PlaneData()\r\n    //   planeData.plane = plane\r\n    //   planeData.planeObject = po;\r\n    //   App.scene.planeDatas.push(planeData)\r\n    //   this.planeDatas.push(planeData)\r\n    //   App.scene.scene.add(po);\r\n    // }\r\n\r\n    // this.scene.children.forEach(object => {\r\n    //   //const object = this.scene.getObjectByProperty(\"uuid\", uuid);\r\n    //   object && object.traverse((child: any) => {\r\n    //     if ([\"Mesh\", \"LineSegments\"].includes(child.type)) {\r\n    //       child.renderOrder=10\r\n    //     }\r\n    //   });\r\n    // });\r\n\r\n    \r\n\r\n    App.scene.scene.updateMatrix()\r\n    App.scene.enableRender();\r\n  }\r\n\r\n\r\n\r\n\r\n  public forEvent = (lists, parentGroup,planes,renderOrder) => {\r\n    let list = lists.children\r\n    const group = new THREE.Group();\r\n    group.matrix.copy(lists.matrix)\r\n    group.matrixAutoUpdate = false\r\n    parentGroup.add(group);\r\n\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].type != 'Mesh') {\r\n        this.forEvent(list[i], group,planes,renderOrder);\r\n        continue;\r\n      }\r\n      list[i].material.clippingPlanes = this.planes;\r\n      list[i].material.clipIntersection = false;\r\n      //创建封闭的面\r\n      this.createPlaneStencilGroup(list[i], planes, group,renderOrder);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears section box\r\n   **/\r\n  protected clearSectionBox() {\r\n    super.clearSectionBox();\r\n    this.scene.children.forEach(object => {\r\n      //const object = this.scene.getObjectByProperty(\"uuid\", uuid);\r\n      object && object.traverse((child: any) => {\r\n        if ([\"Mesh\", \"LineSegments\"].includes(child.type)) {\r\n          child.material.clippingPlanes = [];\r\n          child.material.clipIntersection = false;\r\n        }\r\n      });\r\n    });\r\n    MaterialData.pickMaterial.clippingPlanes = [];\r\n    MaterialData.pickMaterial.clipIntersection = false;\r\n    this.group.clear()\r\n    for (const planeData of this.planeDatas) {\r\n      let index=App.scene.planeDatas.indexOf(planeData)\r\n      if(index!=-1)\r\n      {\r\n        App.scene.planeDatas.splice(index,1)\r\n      }\r\n      App.scene.scene.remove(planeData.planeObject);\r\n    }\r\n  }\r\n\r\n\r\n  public createPlaneStencilGroup(original: Mesh | any, planes: Plane[], group: Object3D,renderOrder:number) {\r\n\r\n    if (original.isMesh == false) {\r\n      return;\r\n    }\r\n\r\n    const baseMat = new THREE.MeshBasicMaterial();\r\n    baseMat.depthWrite = true;\r\n    baseMat.depthTest = true;\r\n    baseMat.colorWrite = false;\r\n    baseMat.stencilWrite = true;\r\n    baseMat.stencilFunc = THREE.AlwaysStencilFunc;\r\n    // 前面\r\n    const mesh0 = original.clone()\r\n    const mat0 = baseMat.clone();\r\n    mat0.side = THREE.BackSide;\r\n    mat0.clippingPlanes = planes\r\n    mat0.stencilFail = THREE.IncrementWrapStencilOp;\r\n    mat0.stencilZFail = THREE.IncrementWrapStencilOp;\r\n    mat0.stencilZPass = THREE.IncrementWrapStencilOp;\r\n    mesh0.material = mat0\r\n    mesh0.renderOrder = renderOrder;\r\n    group.add(mesh0);\r\n    // 背面\r\n    const mesh1 = original.clone()\r\n    const mat1 = baseMat.clone();\r\n    mat1.side = THREE.FrontSide;\r\n    mat1.clippingPlanes = planes\r\n    mat1.stencilFail = THREE.DecrementWrapStencilOp;\r\n    mat1.stencilZFail = THREE.DecrementWrapStencilOp;\r\n    mat1.stencilZPass = THREE.DecrementWrapStencilOp;\r\n    mesh1.material = mat1\r\n    mesh1.renderOrder = renderOrder;\r\n    group.add(mesh1);\r\n  }\r\n}\r\n","import { EventDispatcher } from \"three\";\r\n\r\nexport enum HOLD_EVENT_TYPE {\r\n\tHOLD_START = 'holdStart',\r\n\tHOLD_END = 'holdEnd',\r\n\tHOLDING = 'holding',\r\n}\r\n\r\nexport class Hold extends EventDispatcher {\r\n\r\n\tholdIntervalDelay?: number;\r\n\tprotected _enabled: boolean = true;\r\n\tprotected _holding: boolean = false;\r\n\tprotected _intervalId: number = - 1;\r\n\tprotected _deltaTime: number = 0;\r\n\tprotected _elapsedTime: number = 0;\r\n\tprotected _lastTime: number = 0;\r\n\r\n\tconstructor( holdIntervalDelay?: number ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.holdIntervalDelay = holdIntervalDelay;\r\n\r\n\t}\r\n\r\n\tget enabled(): boolean {\r\n\r\n\t\treturn this._enabled;\r\n\r\n\t}\r\n\r\n\tset enabled( enabled: boolean ) {\r\n\r\n\t\tif ( this._enabled === enabled ) return;\r\n\r\n\t\tthis._enabled = enabled;\r\n\r\n\t\tif ( ! this._enabled ) this._holdEnd();\r\n\r\n\t}\r\n\r\n\tget holding(): boolean {\r\n\r\n\t\treturn this._holding;\r\n\r\n\t}\r\n\r\n\tprotected _holdStart = ( event?: Event ) => {\r\n\r\n\t\tif ( ! this._enabled ) return;\r\n\t\tif ( this._holding ) return;\r\n\r\n\t\tthis._deltaTime = 0;\r\n\t\tthis._elapsedTime = 0;\r\n\t\tthis._lastTime = performance.now();\r\n\r\n\t\tthis.dispatchEvent( {\r\n\t\t\ttype: HOLD_EVENT_TYPE.HOLD_START,\r\n\t\t\tdeltaTime: this._deltaTime,\r\n\t\t\telapsedTime: this._elapsedTime,\r\n\t\t\toriginalEvent: event,\r\n\t\t} );\r\n\r\n\t\tthis._holding = true;\r\n\r\n\t\tconst cb = () => {\r\n\r\n\t\t\tthis._intervalId = !! this.holdIntervalDelay ?\r\n\t\t\t\twindow.setTimeout( cb, this.holdIntervalDelay ) :\r\n\t\t\t\twindow.requestAnimationFrame( cb );\r\n\r\n\t\t\tconst now = performance.now();\r\n\t\t\tthis._deltaTime = now - this._lastTime;\r\n\t\t\tthis._elapsedTime += this._deltaTime;\r\n\t\t\tthis._lastTime = performance.now();\r\n\r\n\t\t\tthis.dispatchEvent( {\r\n\t\t\t\ttype: HOLD_EVENT_TYPE.HOLDING,\r\n\t\t\t\tdeltaTime: this._deltaTime,\r\n\t\t\t\telapsedTime: this._elapsedTime,\r\n\t\t\t\toriginalEvent: event\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t\tthis._intervalId = !! this.holdIntervalDelay ?\r\n\t\t\twindow.setTimeout( cb, this.holdIntervalDelay ) :\r\n\t\t\twindow.requestAnimationFrame( cb );\r\n\r\n\t}\r\n\r\n\tprotected _holdEnd = ( event?: Event ) => {\r\n\r\n\t\tif ( ! this._enabled ) return;\r\n\t\tif ( ! this._holding ) return;\r\n\r\n\t\tconst now = performance.now();\r\n\t\tthis._deltaTime = now - this._lastTime;\r\n\t\tthis._elapsedTime += this._deltaTime;\r\n\t\tthis._lastTime = performance.now();\r\n\r\n\t\tthis.dispatchEvent( {\r\n\t\t\ttype: HOLD_EVENT_TYPE.HOLD_END,\r\n\t\t\tdeltaTime: this._deltaTime,\r\n\t\t\telapsedTime: this._elapsedTime,\r\n\t\t\toriginalEvent: event,\r\n\t\t} );\r\n\r\n\t\twindow.clearTimeout( this._intervalId );\r\n\t\twindow.cancelAnimationFrame( this._intervalId );\r\n\t\tthis._holding = false;\r\n\r\n\t};\r\n\r\n}\r\n\r\nexport class ElementHold extends Hold {\r\n\r\n\tconstructor( element: HTMLElement, holdIntervalDelay?: number ) {\r\n\r\n\t\tsuper( holdIntervalDelay );\r\n\r\n\t\tthis._holdStart = this._holdStart.bind( this );\r\n\t\tthis._holdEnd = this._holdEnd.bind( this );\r\n\r\n\t\tconst onPointerDown = this._holdStart;\r\n\t\tconst onPointerUp = this._holdEnd;\r\n\r\n\t\telement.addEventListener( 'mousedown', onPointerDown );\r\n\t\tdocument.addEventListener( 'mouseup', onPointerUp );\r\n\t\t//window.addEventListener( 'blur', this._holdEnd );\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n// // https://www.w3.org/TR/uievents-code/#keyboard-key-codes\r\n// type WritingSystemKeys = 'Backquote' | 'Backslash' | 'Backspace' | 'BracketLeft' | 'BracketRight' | 'Comma' | 'Digit0' | 'Digit1' | 'Digit2' | 'Digit3' | 'Digit4' | 'Digit5' | 'Digit6' | 'Digit7' | 'Digit8' | 'Digit9' | 'Equal' | 'IntlBackslash' | 'IntlRo' | 'IntlYen' | 'KeyA' | 'KeyB' | 'KeyC' | 'KeyD' | 'KeyE' | 'KeyF' | 'KeyG' | 'KeyH' | 'KeyI' | 'KeyJ' | 'KeyK' | 'KeyL' | 'KeyM' | 'KeyN' | 'KeyO' | 'KeyP' | 'KeyQ' | 'KeyR' | 'KeyS' | 'KeyT' | 'KeyU' | 'KeyV' | 'KeyW' | 'KeyX' | 'KeyY' | 'KeyZ' | 'Minus' | 'Period' | 'Quote' | 'Semicolon' | 'Slash';\r\n// type FunctionalKeys = 'AltLeft' | 'AltRight' | 'CapsLock' | 'ContextMenu' | 'ControlLeft' | 'ControlRight' | 'Enter' | 'MetaLeft' | 'MetaRight' | 'ShiftLeft' | 'ShiftRight' | 'Space' | 'Tab';\r\n// type CJKFunctionalKeys = 'Convert' | 'KanaMode' | 'Lang1' | 'Lang2' | 'Lang3' | 'Lang4' | 'Lang5' | 'NonConvert';\r\n// type ControlPadKeys = 'Delete' | 'End' | 'Help' | 'Home' | 'Insert' | 'PageDown' | 'PageUp';\r\n// type AllowKeys = 'ArrowDown' | 'ArrowLeft' | 'ArrowRight' | 'ArrowUp';\r\n// type NumPadKeys = 'NumLock' | 'Numpad0' | 'Numpad1' | 'Numpad2' | 'Numpad3' | 'Numpad4' | 'Numpad5' | 'Numpad6' | 'Numpad7' | 'Numpad8' | 'Numpad9' | 'NumpadAdd' | 'NumpadBackspace' | 'NumpadClear' | 'NumpadClearEntry' | 'NumpadComma' | 'NumpadDecimal' | 'NumpadDivide' | 'NumpadEnter' | 'NumpadEqual' | 'NumpadHash' | 'NumpadMemoryAdd' | 'NumpadMemoryClear' | 'NumpadMemoryRecall' | 'NumpadMemoryStore' | 'NumpadMemorySubtract' | 'NumpadMultiply' | 'NumpadParenLeft' | 'NumpadParenRight' | 'NumpadStar' | 'NumpadSubtract';\r\n// type FunctionKeys = 'Escape' | 'F1' | 'F2' | 'F3' | 'F4' | 'F5' | 'F6' | 'F7' | 'F8' | 'F9' | 'F10' | 'F11' | 'F12' | 'Fn' | 'FnLock' | 'PrintScreen' | 'ScrollLock' | 'Pause';\r\n// type MediaKeys =  'BrowserBack' | 'BrowserFavorites' | 'BrowserForward' | 'BrowserHome' | 'BrowserRefresh' | 'BrowserSearch' | 'BrowserStop' | 'Eject' | 'LaunchApp1' | 'LaunchApp2' | 'LaunchMail' | 'MediaPlayPause' | 'MediaSelect' | 'MediaStop' | 'MediaTrackNext' | 'MediaTrackPrevious' | 'Power' | 'Sleep' | 'AudioVolumeDown' | 'AudioVolumeMute' | 'AudioVolumeUp' | 'WakeUp';\r\n// type KeyboardEventCode = WritingSystemKeys | FunctionalKeys | CJKFunctionalKeys | ControlPadKeys | AllowKeys | NumPadKeys | FunctionKeys | MediaKeys;\r\n\r\n\r\nexport class KeyboardKeyHold extends Hold {\r\n\r\n\tconstructor( code: string, holdIntervalDelay?: number ) {\r\n\r\n\r\n\t\tif ( typeof code !== 'string' ) {\r\n\r\n\t\t\tconsole.error( 'KeyboardKeyHold: the first argument has to be a KeyboardEvent.code string.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tsuper( holdIntervalDelay );\r\n\r\n\t\tthis._holdStart = this._holdStart.bind( this );\r\n\t\tthis._holdEnd = this._holdEnd.bind( this );\r\n\r\n\t\tconst onKeydown = ( event: KeyboardEvent ) => {\r\n\r\n\t\t\tif ( isInputEvent( event ) ) return;\r\n\t\t\tif ( event.code !== code ) return;\r\n\r\n\t\t\tthis._holdStart( event );\r\n\r\n\t\t};\r\n\r\n\t\tconst onKeyup = ( event: KeyboardEvent ) => {\r\n\r\n\t\t\tif ( event.code !== code ) return;\r\n\r\n\t\t\tthis._holdEnd( event );\r\n\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener( 'keydown', onKeydown );\r\n\t\tdocument.addEventListener( 'keyup', onKeyup );\r\n\t\t//window.addEventListener( 'blur', this._holdEnd );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction isInputEvent( event: KeyboardEvent ) {\r\n\r\n\tconst target = event.target as HTMLElement;\r\n\r\n\treturn (\r\n\t\ttarget.tagName === 'INPUT' ||\r\n\t\ttarget.tagName === 'SELECT' ||\r\n\t\ttarget.tagName === 'TEXTAREA' ||\r\n\t\ttarget.isContentEditable\r\n\t);\r\n\r\n}","import { App } from \"@/App\";\r\nimport gsap from \"gsap\";\r\nimport * as THREE from \"three\";\r\nimport { CameraControls } from \"./controls/CameraControls\";\r\ninterface LookAt\r\n{\r\n    position: THREE.Vector3\r\n    target: THREE.Vector3\r\n    duration:number\r\n    url:string\r\n}\r\n\r\nexport class PathAnimation\r\n{\r\n\r\n\r\n    private static id=0\r\n\r\n    public paths:Array<LookAt>\r\n\r\n\r\n    //public duration: number=3;\r\n\r\n    private _tmp: THREE.Vector3;\r\n\r\n    private _cameraControls: CameraControls;\r\n\r\n    public name: string;\r\n\r\n\r\n    public selIndex: number;\r\n\r\n    constructor(cameraControls:CameraControls)\r\n    {\r\n        this._tmp=new THREE.Vector3();\r\n        this.paths=[];\r\n        this._cameraControls=cameraControls;\r\n        this.name=\"动画\"+PathAnimation.id++\r\n        this.selIndex=0\r\n    }\r\n \r\n    \r\n    public play(index:number)\r\n    {\r\n        if(this.paths.length<=1||this.paths.length==index+1) return;\r\n\r\n        let cameraPosition:THREE.Vector3[]=[]\r\n        let cameraTarget:THREE.Vector3[]=[]\r\n        for (let i =index; i < this.paths.length; i++) {\r\n            const path = this.paths[i];\r\n            cameraPosition.push(path.position)\r\n            cameraTarget.push(path.target)\r\n        }\r\n\r\n        const cameraCurve = new THREE.CatmullRomCurve3(cameraPosition);\r\n        const targetCurve  = new THREE.CatmullRomCurve3(cameraTarget);\r\n\r\n        const animationProgress = { value: 0 };\r\n        let start=0\r\n        let time=1/(this.paths.length-1)\r\n        let pathIndex=0\r\n        this._paly(cameraCurve,targetCurve,animationProgress,start,time,this.paths[0].duration,pathIndex)\r\n    }\r\n\r\n\r\n\r\n    private _paly(cameraCurve:THREE.CatmullRomCurve3,targetCurve:THREE.CatmullRomCurve3,animationProgress:any,start:number,time:number,duration:number,pathIndex:number)\r\n    {\r\n        const tmp = this._tmp\r\n        const cameraControls = this._cameraControls\r\n        const source =this\r\n        const pathAnimation = gsap.fromTo(\r\n            animationProgress,\r\n            {\r\n                value: start,\r\n            },\r\n            {\r\n                value: start+time,\r\n                duration: duration,//动画时间\r\n                overwrite: true,\r\n                paused: true,\r\n                ease:\"none\",\r\n                onUpdateParams: [ animationProgress ],\r\n                onUpdate( { value } ) {\r\n                    if ( ! this.isActive() ) return;\r\n                    cameraCurve.getPoint ( value, tmp);\r\n                    const cameraX = tmp.x;\r\n                    const cameraY = tmp.y;\r\n                    const cameraZ = tmp.z;\r\n                    targetCurve.getPoint ( value,tmp);\r\n                    const lookAtX =tmp.x;\r\n                    const lookAtY = tmp.y;\r\n                    const lookAtZ = tmp.z;\r\n        \r\n                    cameraControls.setLookAt(\r\n                        cameraX,\r\n                        cameraY,\r\n                        cameraZ,\r\n                        lookAtX,\r\n                        lookAtY,\r\n                        lookAtZ,\r\n                        false, // IMPORTANT! disable cameraControls's transition and leave it to gsap.\r\n                    );\r\n                    cameraControls.update()\r\n                    App.scene.render();\r\n                },\r\n                onStart() {\r\n        \r\n                    cameraControls.enabled = false;\r\n        \r\n                },\r\n                onComplete() {\r\n                    start+=time\r\n                    if(start>=1)\r\n                    {\r\n                        cameraControls.enabled = true;\r\n                        return;\r\n                    }\r\n                    pathIndex++\r\n                    source._paly(cameraCurve,targetCurve,animationProgress,start,time,source.paths[pathIndex].duration,pathIndex)\r\n                },\r\n            }\r\n        );\r\n\r\n        pathAnimation.play( 0)\r\n    }\r\n\r\n    \r\n}","import * as THREE from \"three\"\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\"\r\nimport { ThreeRaycaster } from \"./ThreeRaycaster\";\r\nimport { ThreeViewCube } from \"./ThreeViewCube\";\r\nimport elementResizeDetectorMaker from 'element-resize-detector'\r\nimport { createBackground } from './vignette/three-vignette.js';\r\nimport Stats from 'three/examples/jsm/libs/stats.module'\r\nimport { Box3, Object3D, Plane, PMREMGenerator } from \"three\";\r\nimport { CameraControls } from \"./controls/CameraControls\";\r\nimport { ModelData } from \"@/data/ModelData\";\r\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\r\nimport { ObjectsBoxSection } from \"@/section/ObjectsBoxSection\";\r\nimport { KeyboardKeyHold } from \"./controls/HoldEvent\";\r\nimport { View3DComponent } from \"@/components/View3DComponent\";\r\nimport { RoamingVideo } from \"./RoamingVideo\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { PathAnimation } from \"./PathAnimation\";\r\nimport gsap from \"gsap\";\r\nimport { ProjectViewComponent } from \"@/components/ProjectViewComponent\";\r\n// import WebGPURenderer from 'three/examples/jsm/renderers/webgpu/WebGPURenderer';\r\n\r\n// import * as Nodes from 'three-nodes/Nodes';\r\n// import { add, mul } from 'three-nodes/ShaderNode.js';\r\n\r\n\r\n\r\nexport class PlaneData\r\n{\r\n    planeObject:THREE.Mesh\r\n    plane:Plane\r\n}\r\n\r\n\r\nexport class ThreeScene {\r\n    public scene: THREE.Scene\r\n\r\n    public camera: THREE.PerspectiveCamera|THREE.OrthographicCamera\r\n\r\n\r\n    public renderer: THREE.WebGLRenderer\r\n    public pickRender: THREE.WebGLRenderer\r\n    //public controls: OrbitControls;\r\n\r\n    public controls:CameraControls\r\n\r\n    public raycaster: ThreeRaycaster;\r\n\r\n\r\n    public obj: THREE.Object3D;\r\n\r\n\r\n\r\n    public goldenContainer: HTMLElement\r\n\r\n    public vignette: any\r\n\r\n    public viewCube:ThreeViewCube;\r\n    \r\n\r\n    public stats :Stats;\r\n    public section: ObjectsBoxSection;\r\n\r\n    private renderEnabled = true // used together with RafHelper\r\n    public autoRender = false // used together with RafHelper\r\n\r\n    private pmremGenerator:PMREMGenerator;\r\n\r\n\r\n    public pickingTexture:THREE.WebGLRenderTarget \r\n\r\n\r\n\r\n    public mapModels:Map<string,ModelData>;\r\n\r\n\r\n\r\n    // private gui:GUI;\r\n    // public curVideoGUI: any;\r\n    // public videoGUI: any;\r\n\r\n    private keyDownEvent:any;\r\n\r\n\r\n    private keyDownEvents:Map<string, KeyboardKeyHold> \r\n\r\n\r\n\r\n\r\n    public pathAnimations:PathAnimation[]=[]\r\n    public curPathAnimation:PathAnimation\r\n\r\n    public planeDatas:PlaneData[];\r\n\r\n    constructor(goldenContainer) {\r\n        this.mapModels=new Map()\r\n        this.planeDatas=[]\r\n        this.goldenContainer = goldenContainer;\r\n        this.keyDownEvent= this.onKeyDown.bind(this)\r\n        this.init();\r\n        this.raycaster = new ThreeRaycaster(this.goldenContainer);\r\n        \r\n        \r\n    }\r\n    private init() {\r\n        this.initRenderer();\r\n        this.initGPURenderer();\r\n        this.initScene();\r\n        this.initCamera();\r\n        this.initLight();\r\n        this.initControls();\r\n        this.initStats();\r\n        //this.initGUI();\r\n        this.initEnvironment(\"environment/footprint_court_2k.hdr\")\r\n        this.viewCube=new ThreeViewCube(this.goldenContainer);\r\n        const erd = elementResizeDetectorMaker();\r\n        erd.listenTo(this.goldenContainer,(element)=>{\r\n            this.onWindowResize()\r\n        })\r\n        this.animate();\r\n    }\r\n    private onWindowResize = () => {\r\n        // this.camera.aspect = this.goldenContainer.clientWidth / this.goldenContainer.clientHeight;\r\n        // this.camera.updateProjectionMatrix();\r\n        let aspect = this.goldenContainer.clientWidth / this.goldenContainer.clientHeight;\r\n        //正交使用\r\n        if(this.camera instanceof THREE.OrthographicCamera){\r\n            const width = this.goldenContainer.clientWidth;\r\n            const height = width / aspect;\r\n            this.camera.left = -width / 2;\r\n            this.camera.right = width / 2;\r\n            this.camera.top = height / 2;\r\n            this.camera.bottom = -height / 2;\r\n        }\r\n        //透视相机使用\r\n        if(this.camera instanceof THREE.PerspectiveCamera){\r\n            this.camera.aspect = aspect\r\n        }\r\n        this.camera.updateProjectionMatrix();\r\n        this.renderer.setSize(this.goldenContainer.clientWidth, this.goldenContainer.clientHeight);\r\n        this.pickRender.setSize(this.goldenContainer.clientWidth, this.goldenContainer.clientHeight);\r\n        //正交相机\r\n        this.viewCube.cameraOrtho.left = -this.viewCube.frustumSize;\r\n        this.viewCube.cameraOrtho.right = this.viewCube.frustumSize;\r\n        this.viewCube.cameraOrtho.top = this.viewCube.frustumSize;\r\n        this.viewCube.cameraOrtho.bottom = -this.viewCube.frustumSize;\r\n        this.viewCube.cameraOrtho.updateProjectionMatrix();\r\n        this.enableRender();\r\n        \r\n    }\r\n    /**\r\n     * 场景\r\n     */\r\n    private initScene() {\r\n        this.scene = new THREE.Scene();\r\n        this.obj=new THREE.Object3D();\r\n        this.obj[\"overrideMaterial\"]=null\r\n        this.obj.name = 'rootObject3D'\r\n        this.scene.add(this.obj);\r\n    }\r\n\r\n    /**\r\n     *  初始化相机\r\n     */\r\n    private initCamera() {\r\n\r\n        this.camera = new THREE.PerspectiveCamera (45, 1, 0.01, 5000);\r\n        this.camera.aspect =this.goldenContainer.clientWidth/ this.goldenContainer.clientHeight;\r\n        this.camera.position.set(0, 40, 40);\r\n        this.scene.add( this.camera );\r\n    }\r\n\r\n\r\n    /**\r\n     *  初始渲染器\r\n     */\r\n    private initRenderer() {\r\n        this.pickRender = new THREE.WebGLRenderer();\r\n        this.pickRender.setSize(this.goldenContainer.clientWidth, this.goldenContainer.clientHeight);\r\n         //curCanvas = document.createElement('canvas');\r\n        // this.goldenContainer.getElement().get(0).appendChild(curCanvas);\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            antialias: true ,\r\n            alpha: true\r\n            //preserveDrawingBuffer: true // true/false 表示是否保存绘图缓冲\r\n        });\r\n\r\n\r\n        //this.renderer = new THREE.WebGLRenderer();\r\n\r\n        this.renderer.autoClear = false;\r\n        this.renderer.setSize(this.goldenContainer.clientWidth, this.goldenContainer.clientHeight);\r\n        this.goldenContainer.appendChild(this.renderer.domElement)\r\n         //背景色\r\n         //this.renderer.setClearColor(0xcccccc);\r\n         //屏幕物理像素和px比率\r\n         this.renderer.setPixelRatio(window.devicePixelRatio);\r\n         //threejs的色彩空间渲染方式（重要）\r\n         this.renderer.outputEncoding =THREE.sRGBEncoding;\r\n         this.renderer.physicallyCorrectLights = true;\r\n         //阴影\r\n         //this.renderer.shadowMap.enabled = true;\r\n    }\r\n\r\n    private initGPURenderer()\r\n    {\r\n        //this.pickingScene = new THREE.Scene();\r\n        //一像素\r\n        this.pickingTexture = new THREE.WebGLRenderTarget( 1, 1);\r\n    }\r\n\r\n\r\n    private initLight() {\r\n        \r\n        const light1  = new THREE.AmbientLight(0xffffff, 1);\r\n        this.camera.add( light1 );\r\n        let light2 = new THREE.DirectionalLight(0xffffff, 1*Math.PI);\r\n        light2.position.set(0.5, 0, 0.866); // ~60º\r\n        this.camera.add( light2 );\r\n    }\r\n\r\n    /**\r\n     * 控制器\r\n     */\r\n    private initControls() {\r\n        //初始化轨迹球控件\r\n        // this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        // // 使动画循环使用时阻尼或自转 意思是否有惯性\r\n        // this.controls.enableDamping = true;\r\n        // //动态阻尼系数 就是鼠标拖拽旋转灵敏度\r\n        // this.controls.dampingFactor = 0.5;\r\n        // //是否可以缩放\r\n        // this.controls.enableZoom = true;\r\n        // //是否自动旋转\r\n        // this.controls.autoRotate = false;\r\n        // //设置相机距离原点的最近距离\r\n        // //controls.minDistance = 50;\r\n        // //设置相机距离原点的最远距离\r\n        // //controls.maxDistance = 200;\r\n        // //是否开启右键拖拽\r\n        // //this.controls.enablePan = true;\r\n        // this.controls.mouseButtons = {\r\n        //     LEFT: -1,\r\n        //     MIDDLE: THREE.MOUSE.PAN,\r\n        //     RIGHT: THREE.MOUSE.ROTATE,\r\n        // }\r\n\r\n        // this.controls.addEventListener('change', () => {\r\n        //     this.enableRender()\r\n        // })\r\n\r\n        this.controls = new CameraControls(this.camera, this.renderer.domElement);\r\n        //this.controls .mouseButtons.right = CameraControls.ACTION.OFFSET;\r\n        this.controls .mouseButtons.right = CameraControls.ACTION.ROTATE;\r\n        this.controls .mouseButtons.left = CameraControls.ACTION.OFFSET;\r\n\r\n        this.controls.dollySpeed=0.5//滚动速度\r\n        // this.controls.dollyToOrbitPoint = true//围绕控制的缩放\r\n        // this.controls.dollyToCursor = true //围绕鼠标的缩放\r\n\r\n        this.controls.addEventListener('control', () => {\r\n            this.enableRender()\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * 渲染\r\n     */\r\n    public render() {\r\n        \r\n        if( this.firstPerson&&!this._gravityIng&& this._gravity)\r\n        {\r\n            this.gravity(true)\r\n        }\r\n\r\n\r\n        for (let i = 0; i < this.planeDatas?.length; i++) {\r\n            let planeData = this.planeDatas[i];\r\n            const plane = planeData.plane;\r\n            const po = planeData.planeObject;\r\n            plane.coplanarPoint(po.position);\r\n            po.lookAt(\r\n                po.position.x - plane.normal.x,\r\n                po.position.y - plane.normal.y,\r\n                po.position.z - plane.normal.z,\r\n            );\r\n        }\r\n\r\n\r\n\r\n        for (const iterator of this.mapModels.values()) {\r\n            if(iterator.tile)\r\n            {\r\n                iterator.tile.update();\r\n            }\r\n        }\r\n        this.renderer.clear()\r\n        //this.renderer.autoClear = false;\r\n        this.renderer.setViewport(0, 0, this.goldenContainer.clientWidth,  this.goldenContainer.clientHeight);\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n       //console.log(this.controls[\"_target\"])\r\n        //复制主场景相机的信息，位置，四元数等\r\n        this.viewCube.cameraOrtho.position.copy(this.controls.getPosition());\r\n        this.viewCube.cameraOrtho.position.sub( this.controls.getTarget());\r\n        this.viewCube.cameraOrtho.lookAt(this.scene.position);\r\n        let dir= this.viewCube.cameraOrtho.position.normalize();\r\n        this.viewCube.cameraOrtho.position.x=dir.x*50;\r\n        this.viewCube.cameraOrtho.position.y=dir.y*50;\r\n        this.viewCube.cameraOrtho.position.z=dir.z*50;\r\n        this.renderer.setViewport(this.goldenContainer.clientWidth-170,this.goldenContainer.clientHeight-170, 120, 120)\r\n        this.renderer.render(this.viewCube.sceneOrtho, this.viewCube.cameraOrtho);\r\n        //this.controls.update();\r\n    }\r\n\r\n\r\n    public clearModel()\r\n    {\r\n        for (const iterator of this.mapModels.values()) {\r\n            iterator.clear()\r\n        }\r\n        this.mapModels.clear();\r\n        ProjectViewComponent.ModelData.value = []\r\n        ProjectViewComponent.SpaceTreeCheckIDs.value=[]\r\n        ProjectViewComponent.SpaceTreeExpandedIDs.value=[]\r\n\r\n        this.pathAnimations=[]\r\n        this.curPathAnimation=null\r\n\r\n    }\r\n\r\n\r\n    public firstPerson=false\r\n    public curTarget:THREE.Vector3;\r\n    public point:HTMLDivElement;\r\n    public firstPersonSpeed: number=0.005;\r\n    public collision=false;\r\n    public setFirstPerson(value:boolean=true)\r\n    {\r\n        this.firstPerson=value\r\n        if (value) {\r\n            if(this.keyDownEvents==null)\r\n            {\r\n                let holdIntervalDelay=16.666;\r\n                this.keyDownEvents = new Map()\r\n                this.keyDownEvents.set(\"KeyW\", new KeyboardKeyHold(\"KeyW\", holdIntervalDelay))\r\n                this.keyDownEvents.set(\"KeyA\", new KeyboardKeyHold(\"KeyA\", holdIntervalDelay))\r\n                this.keyDownEvents.set(\"KeyS\", new KeyboardKeyHold(\"KeyS\", holdIntervalDelay))\r\n                this.keyDownEvents.set(\"KeyD\", new KeyboardKeyHold(\"KeyD\", holdIntervalDelay))\r\n                this.keyDownEvents.set(\"KeyQ\", new KeyboardKeyHold(\"KeyQ\", holdIntervalDelay))\r\n                this.keyDownEvents.set(\"KeyE\", new KeyboardKeyHold(\"KeyE\", holdIntervalDelay))\r\n            }\r\n\r\n            if(this.point==null)\r\n            {\r\n                this.point=document.createElement(\"div\");\r\n                this.point.style.position=\"absolute\"\r\n                this.point.style.background=\"#ff0000\"\r\n                this.point.style.top=\"50%\"\r\n                this.point.style.left=\"50%\"\r\n                this.point.style.width=\"10px\"\r\n                this.point.style.height=\"10px\"\r\n                this.point.style.border=\"2px\"\r\n                this.point.style.borderRadius=\"5px\"\r\n            }\r\n            this.goldenContainer.appendChild(this.point)\r\n\r\n            this.controls.minDistance = this.controls.maxDistance = 0.000001;\r\n            this.controls.azimuthRotateSpeed = - 0.3; // negative value to invert rotation direction\r\n            this.controls.polarRotateSpeed = - 0.3; // negative value to invert rotation direction\r\n            this.controls.truckSpeed = 10;\r\n            this.controls.mouseButtons.wheel = CameraControls.ACTION.NONE;\r\n            this.controls.mouseButtons.right = CameraControls.ACTION.ROTATE;\r\n            this.controls.mouseButtons.left = CameraControls.ACTION.ROTATE;\r\n            this.controls.touches.two = CameraControls.ACTION.TOUCH_ZOOM_TRUCK;\r\n            this.curTarget= this.controls.curTarget.clone();\r\n            //this.control.setLookAt\r\n            //this.controls.setTarget\r\n            // document.addEventListener(\"keydown\", this.keyDownEvent);\r\n            //this.controls.setLookAt(this.camera.position.x,this.camera.position.y,this.camera.position.z,   this.curTarget.x, this.curTarget.y, this.curTarget.z)\r\n            this.controls.setOrbitPoint(this.camera.position.x,this.camera.position.y,this.camera.position.z)\r\n            //this.controls.forward(0.00001)\r\n            this.controls.update()\r\n            for (const evt of  this.keyDownEvents.values()) {\r\n                evt.addEventListener( 'holding', this.keyDownEvent );\r\n            }\r\n            //this.camera.setFocalLength (18);\r\n        }\r\n        else\r\n        {\r\n           \r\n            //this.camera.fov=45;\r\n            this.controls.minDistance =0\r\n            this.controls.maxDistance =Infinity\r\n            this.controls.azimuthRotateSpeed = 1;\r\n            this.controls.polarRotateSpeed = 1;\r\n            this.controls.truckSpeed = 2;\r\n            this.controls.mouseButtons.wheel = CameraControls.ACTION.DOLLY;\r\n            this.controls.mouseButtons.right = CameraControls.ACTION.ROTATE;\r\n            this.controls.mouseButtons.left = CameraControls.ACTION.OFFSET;\r\n            this.controls.touches.two = CameraControls.ACTION.TOUCH_DOLLY_TRUCK;\r\n            //document.removeEventListener(\"keydown\", this.keyDownEvent);\r\n            this.controls.setOrbitPoint(this.curTarget.x,this.curTarget.y,this.curTarget.z)\r\n             this.controls.update()       \r\n            for (const evt of  this.keyDownEvents.values()) {\r\n                evt.removeEventListener( 'holding', this.keyDownEvent );\r\n            }\r\n            if(this.point)\r\n            {\r\n                this.goldenContainer.removeChild(this.point)\r\n            }\r\n        }\r\n     \r\n        this.render();\r\n\r\n    }\r\n\r\n\r\n    private initStats()\r\n    {\r\n        this.stats=Stats();\r\n        this.stats.setMode(0);\r\n        this.stats.domElement.style.position = 'absolute';\r\n        this.stats.domElement.style.left = '0px';\r\n        this.stats.domElement.style.top = '0px';\r\n        this.goldenContainer.appendChild(this.stats.domElement);\r\n    }\r\n\r\n\r\n   \r\n    private animate = () => {\r\n        requestAnimationFrame(this.animate)\r\n\r\n\r\n        if(this.autoRender)\r\n        {\r\n            const updated = this.controls.update();\r\n            if (updated) {\r\n                this.render();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.renderEnabled)\r\n            {\r\n                this.render();\r\n                this.renderEnabled=false;\r\n            }\r\n        }\r\n        this.stats.update();\r\n\r\n       \r\n\r\n        // this.controls.azimuthAngle += 2  * THREE.MathUtils.DEG2RAD;\r\n        // this.controls.update();\r\n        // this.renderEnabled=true\r\n\r\n        //this.vignette.style({aspect: this.camera.aspect});\r\n    }\r\n\r\n\r\n   \r\n\r\n\r\n\r\n\r\n   \r\n\r\n    private moveTo(x:number,y:number,z:number)\r\n    {\r\n        this.controls.moveTo(x,y,z)\r\n        this.controls.polarAngle=Math.PI/4\r\n        this.showPoint(x,y,z)\r\n        this.controls.update()\r\n        \r\n    }\r\n\r\n    public setOrbitPoint(x:number,y:number,z:number)\r\n    {\r\n        this.controls.setOrbitPoint(x,y,z)\r\n        this.showPoint(x,y,z)\r\n        this.controls.update()\r\n    }\r\n\r\n\r\n\r\n    public homeTarget:THREE.Vector3\r\n    public homePosition:THREE.Vector3\r\n    public setCameraByBox(box:THREE.Box3) {\r\n        //计算相机位置\r\n        let center = new THREE.Vector3((box.max.x + box.min.x) / 2, (box.max.y + box.min.y) / 2, (box.max.z + box.min.z) / 2);\r\n        this.controls.fitToBox(box, false,{\r\n            cover :false,\r\n            paddingLeft : 0,\r\n            paddingRight : 0,\r\n            paddingBottom : 0,\r\n            paddingTop :0\r\n        })\r\n        this.moveTo(center.x, center.y, center.z)   \r\n        this.enableRender()\r\n        //this.homeBoxData=this.controls.toJSON()\r\n        this.homeTarget= this.controls.getTarget()\r\n        this.homePosition= this.controls.getPosition()\r\n    }\r\n\r\n\r\n    private mesh:THREE.Mesh;\r\n\r\n    public showPoint(x:number,y:number,z:number)\r\n    {\r\n        // if(this.mesh==null)\r\n        // {\r\n        //     this.mesh = new THREE.Mesh(new THREE.SphereGeometry(1), new THREE.MeshBasicMaterial({ color: 0xff0000 }));\r\n        //     this.scene.add(this.mesh);\r\n        // }\r\n        // this.mesh.position.set(x,y,z)\r\n    }\r\n\r\n    \r\n    public showBox3(box:THREE.Box3)\r\n    {\r\n        // let testBoxHelper = new THREE.Box3Helper( box);\r\n        // this.scene.add(testBoxHelper)\r\n    }\r\n\r\n\r\n    public clearObject() {\r\n        this.obj.clear();\r\n    }\r\n\r\n\r\n    public getIntersect(event): THREE.Vector3 {\r\n        return this.raycaster.getIntersect(event)\r\n    }\r\n\r\n\r\n    public enableRender ()  {\r\n        this.renderEnabled = true;\r\n    }\r\n\r\n\r\n    private initEnvironment(path): Promise<THREE.Texture> {\r\n\r\n        this.vignette  = createBackground({\r\n            //aspect: this.camera.aspect,\r\n            //grainScale: false ? 0 : 0.001, // mattdesl/three-vignette-background#1\r\n            grainScale:0.001,\r\n            colors: [\"#ffffff\", '#4b4b4b']\r\n        });\r\n        this.vignette.name = 'Vignette';\r\n        this.vignette.renderOrder = -1;\r\n        this.scene.add(this.vignette)\r\n        return null\r\n        // if (!path) return Promise.resolve(null);\r\n        // if(this.pmremGenerator ==null)\r\n        // {\r\n        //     this.pmremGenerator = new PMREMGenerator(this.renderer);\r\n        //     this.pmremGenerator.compileEquirectangularShader();\r\n        // }\r\n        // return new Promise((resolve, reject) => {\r\n        //     new RGBELoader().load(path, (texture) => {\r\n        //             const envMap = this.pmremGenerator.fromEquirectangular(texture).texture;\r\n        //             this.pmremGenerator.dispose();\r\n        //             this.scene.environment = envMap;\r\n        //             //this.scene.background =  envMap;\r\n        //             resolve(envMap);\r\n        //         }, undefined, reject);\r\n        // });\r\n    }\r\n\r\n\r\n    protected onKeyDown(event) {\r\n        let deltaTime=event.deltaTime\r\n        let code=event.originalEvent.code\r\n        const speed=this.firstPersonSpeed\r\n        switch (code) {\r\n            case \"KeyA\":\r\n                //this.controls.truck( - speed * deltaTime, 0, false ) \r\n                if(this.collision)\r\n                {\r\n                    let depth= this.raycaster.getDepthByGPU(this.controls.azimuthAngle+Math.PI/2,Math.PI/2)\r\n                    if(depth!=-1&&depth<=0.5)\r\n                    {\r\n                        return;\r\n                    }\r\n                }\r\n                this.controls.truck( - speed * deltaTime, 0, false ) \r\n                break;\r\n            case \"KeyD\":\r\n                if(this.collision)\r\n                {\r\n                    let depth= this.raycaster.getDepthByGPU(this.controls.azimuthAngle-Math.PI/2,Math.PI/2)\r\n                    if(depth!=-1&&depth<=0.5)\r\n                    {\r\n                        return;\r\n                    }\r\n                }\r\n                this.controls.truck( speed * deltaTime, 0, false ) \r\n                break;\r\n            case \"KeyW\":\r\n                if(this.collision)\r\n                {\r\n                    let depth=this.raycaster.getDepthByGPU(null,Math.PI/2)\r\n                    if(depth!=-1&&depth<=0.6)\r\n                    {\r\n                        return;\r\n                    }\r\n                }\r\n                this.controls.forward(  speed * deltaTime, false ) \r\n                break;\r\n            case \"KeyS\":\r\n                if(this.collision)\r\n                {\r\n                    let depth=this.raycaster.getDepthByGPU(this.controls.azimuthAngle+Math.PI,Math.PI/2)\r\n                    if(depth!=-1&&depth<=0.6)\r\n                    {\r\n                        return;\r\n                    }\r\n                }\r\n                this.controls.forward( - speed* deltaTime, false ) \r\n                break;\r\n            case \"KeyQ\":\r\n                this.controls.elevate(  speed * deltaTime, false ) \r\n                break;\r\n            case \"KeyE\":\r\n                this.controls.elevate(  -speed* deltaTime, false ) \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.controls.update()\r\n        // this.controls.dispatchEvent({ type: 'control' });\r\n        this.enableRender()\r\n      \r\n    }\r\n    public newCapture()\r\n    {\r\n        if(this.curPathAnimation==null)\r\n        {\r\n            this.curPathAnimation=new PathAnimation(this.controls);\r\n            //this.curPathAnimation.name='动画'+ this.pathAnimations.length\r\n            this.pathAnimations.push(this.curPathAnimation)\r\n            //this.curVideoGUI=this.videoGUI.addFolder('动画'+ this.pathAnimations.length)\r\n        }\r\n    }\r\n\r\n    public capture()\r\n    {\r\n       this.newCapture();\r\n        let duration=1\r\n        let obj = {\r\n            index: this.curPathAnimation.paths.length,\r\n            pathIndex: this.pathAnimations.length-1,\r\n            动画时间: duration,\r\n            播放: () =>{\r\n                this.pathAnimations[obj.pathIndex].play(obj.index)\r\n            }\r\n        };\r\n        // this.curVideoGUI.add(obj, '动画时间', 1, 10).onChange((value) => {\r\n        //     this.pathAnimations[obj.pathIndex].paths[obj.index].duration = value\r\n        // });\r\n        let imgData = this.renderer.domElement.toDataURL(\"image/jpeg\");\r\n        //this.curVideoGUI.add(obj, '播放');\r\n        this.curPathAnimation.paths.push({\r\n            position: this.controls.getPosition().clone(),\r\n            target: this.controls.getTarget().clone(),\r\n            duration:duration,\r\n            url:imgData\r\n        })\r\n    }\r\n\r\n\r\n\r\n    public captureFinish()\r\n    {\r\n        this.curPathAnimation=null\r\n        //this.curVideoGUI=null\r\n    }\r\n    \r\n\r\n    private _gravity=false\r\n    private _gravityIng=false\r\n    private pathAnimation\r\n    //重力\r\n\r\n    public setGravity(value){\r\n        if (value) {\r\n            this.keyDownEvents.get(\"KeyE\").removeEventListener('holding', this.keyDownEvent);\r\n            this.keyDownEvents.get(\"KeyQ\").removeEventListener('holding', this.keyDownEvent);\r\n        }\r\n        else\r\n        {\r\n            this.keyDownEvents.get(\"KeyE\").addEventListener('holding', this.keyDownEvent);\r\n            this.keyDownEvents.get(\"KeyQ\").addEventListener('holding', this.keyDownEvent);\r\n        }\r\n        this.gravity(value)\r\n        window.setTimeout(() =>{\r\n            this.goldenContainer.focus();\r\n        }, 100);\r\n    }\r\n\r\n\r\n    public gravity(value: any) {\r\n        this._gravity=value\r\n        if(!this.firstPerson||this._gravityIng|| !this._gravity) return\r\n        let depth= this.raycaster.getDepthByGPU(null,0)\r\n        //let depth= this.raycaster.getDepthByGPU(-Math.PI/2,Math.PI/2)\r\n       \r\n        if(depth!>1)\r\n        {\r\n            let dis=depth-1.70\r\n            if(Math.abs(dis)<0.001)\r\n            {\r\n                return;\r\n            }\r\n            let g=9.8\r\n            //落地时间计算 h=1/2gt^2\r\n            let time=Math.sqrt(2*Math.abs(dis)/g)\r\n            //console.log(\"深度：\"+depth+\"；位移：\"+dis+\";时间\"+time)\r\n            const cameraControls = this.controls\r\n            const animationProgress = { value: 0 };\r\n            const source =this;\r\n            let start =0;\r\n\r\n            if(dis<0.5)\r\n            {\r\n                cameraControls.elevate(-dis, false)\r\n                cameraControls.update()\r\n                source.enableRender()\r\n                return\r\n            }\r\n        \r\n            if( this.pathAnimation)\r\n            {\r\n                this.pathAnimation .kill()\r\n            }\r\n           \r\n            this.pathAnimation = gsap.fromTo(\r\n                animationProgress,\r\n                {\r\n                    value: 0,\r\n                },\r\n                {\r\n                    value: time,\r\n                    duration: time,//动画时间\r\n                    overwrite: true,\r\n                    paused: true,\r\n                    ease:\"none\",\r\n                    onUpdateParams: [ animationProgress ],\r\n                    onUpdate( { value } ) {\r\n                        if ( ! this.isActive() ) return;\r\n\r\n                        let time=value\r\n                        value=1/2*g*time*time\r\n                        // console.log(\"时间：\"+time+\";高度\"+value+\"；速度：\"+g*time)\r\n                         //console.log(value)\r\n                        let elevate=-(value-start);\r\n                        if(elevate!=0)\r\n                        {\r\n                            cameraControls.elevate(elevate, false)\r\n                            cameraControls.update()\r\n                            source.enableRender()\r\n                            start=value\r\n                        }\r\n                        \r\n                    },\r\n                    onStart() {\r\n                        source._gravityIng=true;\r\n                        cameraControls.enabled = false;\r\n            \r\n                    },\r\n                    onComplete() {\r\n                        source._gravityIng=false;\r\n                        cameraControls.enabled = true;\r\n                    },\r\n                }\r\n            );\r\n            this.pathAnimation .play( 0)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    public flyTo(positionX: number, positionY: number, positionZ: number,\r\n        targetX: number, targetY: number, targetZ: number,) {\r\n\r\n        this.controls.restThreshold = 0.1\r\n        this.controls.enabled = false;\r\n        this.autoRender = true\r\n        this.controls.setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, true).then(() => {\r\n            this.autoRender = false\r\n            this.controls.enabled = true;\r\n        })\r\n    }\r\n\r\n\r\n    public setSection(value:Boolean)\r\n    {\r\n        \r\n        if(this.section==null)\r\n        {\r\n            // let boxHelper = new THREE.BoxHelper(this.obj);\r\n            // boxHelper.geometry.computeBoundingBox();\r\n            let boundingBox = new THREE.Box3()\r\n            for (const model of this.mapModels.values()) {\r\n                boundingBox.union(model.boundingBox)\r\n            }\r\n            this.section = new ObjectsBoxSection(  boundingBox,this.obj, this.camera, this.renderer,this.controls,this.goldenContainer);\r\n        }\r\n        if(value)\r\n        {\r\n            //this.section.resBox();\r\n            this.section.open();\r\n        }\r\n        else\r\n        {\r\n            this.section.close();\r\n            this.section=null;\r\n        }\r\n        this.render();\r\n    }\r\n\r\n}","\r\nimport * as THREE from \"three\";\r\nimport { GlbLoaders } from \"./loaders/GlbLoaders\";\r\nimport { TilesLoaders } from \"./loaders/TilesLoaders\";\r\nimport { OperationBase } from \"./operation/OperationBase\";\r\nimport { OperationType } from \"./operation/OperationType\";\r\nimport { ThreeScene } from \"./sence/ThreeScene\";\r\n\r\n\r\n\r\n\r\n\r\nexport class App {\r\n\r\n\r\n  public static scene: ThreeScene;\r\n  public static currentOperation: OperationBase;\r\n  public static allOperation: Map<string, OperationBase>;\r\n  public static Base: OperationBase;\r\n\r\n\r\n\r\n  constructor(goldenContainer) {\r\n    App.scene = new ThreeScene(goldenContainer);\r\n    App.Base = new OperationBase();\r\n\r\n    App.allOperation = new Map();\r\n    App.allOperation.set(OperationType.Base, App.Base)\r\n    App.currentOperation = App.Base;\r\n    App.currentOperation.Enter();\r\n\r\n   \r\n\r\n\r\n\r\n\r\n   \r\n    for (let type in OperationType) {\r\n      let element = document.getElementById(type);\r\n      if (element) {\r\n          element.onclick = function () {App.runCommand(type); }\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    document.getElementById(\"fileInputGLTF\").addEventListener('input', async (event) => {\r\n      let srcElement: any = event.srcElement;\r\n      let glbfUrl = URL.createObjectURL(srcElement.files[0]);\r\n      GlbLoaders.gltfLoader(App.scene,glbfUrl,srcElement.files[0].name);\r\n    });\r\n    //GlbLoaders.gltfLoader(App.scene,\"2.glb\",\"2\");\r\n    //GlbLoaders.gltfLoader(App.scene,\"test.glb\");\r\n    //TilesLoaders.tilesLoaders(App.scene,\"JZ/tileset.json\"); \r\n    //TilesLoaders.tilesLoaders(App.scene,\"3dtiles/tileset.json\");\r\n    // TilesLoaders.tilesLoaders(App.scene,\"3dtiles/jz/tileset.json\");\r\n    // TilesLoaders.tilesLoaders(App.scene,\"3dtiles/jd/tileset.json\");\r\n\r\n    let param= new URLSearchParams(window.location.search || window.location.hash.substr(1))\r\n    if(param.has(\"model\"))\r\n    {\r\n      let id=param.get(\"model\")\r\n      switch (id) {\r\n        case \"1\":\r\n          GlbLoaders.gltfLoader(App.scene,\"glb/1.glb\",\"rac_basic_sample_project\");\r\n          break;\r\n        case \"2\":\r\n          GlbLoaders.gltfLoader(App.scene,\"glb/2.glb\",\"rac_advanced_sample_project\");\r\n          break;\r\n        case \"3\":\r\n          TilesLoaders.tilesLoaders(App.scene,\"3dtiles/tileset.json\");\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  public static runCommand(data: string) {\r\n    App.currentOperation.Quit();\r\n    for (let type of this.allOperation.keys()) {\r\n      if (type == data) {\r\n        App.currentOperation = this.allOperation.get(type);\r\n        App.currentOperation.Enter();\r\n        return;\r\n      }\r\n    }\r\n  }\r\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!./goldenlayout-base.css?vue&type=style&index=0&lang=css\"","/**\r\n * Returns the file extension of the path component of a URL\r\n * @param {string} url\r\n * @returns {string} null if no extension found\r\n */\r\nexport function getUrlExtension( url ) {\r\n\r\n\tlet parsedUrl;\r\n\ttry {\r\n\r\n\t\tparsedUrl = new URL( url, 'http://fakehost.com/' );\r\n\r\n\t} catch ( _ ) {\r\n\r\n\t\t// Ignore invalid URLs\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tconst filename = parsedUrl.pathname.split( '/' ).pop();\r\n\tconst dotIndex = filename.lastIndexOf( '.' );\r\n\tif ( dotIndex === - 1 || dotIndex === filename.length - 1 ) {\r\n\r\n\t\t// Has no extension or has trailing . character\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tconst extension = filename.substring( dotIndex + 1 );\r\n\treturn extension;\r\n\r\n}\r\n","// Fires at the end of the frame and before the next one\r\nfunction enqueueMicrotask( callback ) {\r\n\r\n\tPromise.resolve().then( callback );\r\n\r\n}\r\n\r\nclass LRUCache {\r\n\r\n\tconstructor() {\r\n\r\n\t\t// options\r\n\t\tthis.maxSize = 800;\r\n\t\tthis.minSize = 600;\r\n\t\tthis.unloadPercent = 0.05;\r\n\r\n\t\t// \"itemSet\" doubles as both the list of the full set of items currently\r\n\t\t// stored in the cache (keys) as well as a map to the time the item was last\r\n\t\t// used so it can be sorted appropriately.\r\n\t\tthis.itemSet = new Map();\r\n\t\tthis.itemList = [];\r\n\t\tthis.usedSet = new Set();\r\n\t\tthis.callbacks = new Map();\r\n\r\n\t\tthis.unloadPriorityCallback = null;\r\n\r\n\t\tconst itemSet = this.itemSet;\r\n\t\tthis.defaultPriorityCallback = item => itemSet.get( item );\r\n\r\n\t}\r\n\r\n\t// Returns whether or not the cache has reached the maximum size\r\n\tisFull() {\r\n\r\n\t\treturn this.itemSet.size >= this.maxSize;\r\n\r\n\t}\r\n\r\n\tadd( item, removeCb ) {\r\n\r\n\t\tconst itemSet = this.itemSet;\r\n\t\tif ( itemSet.has( item ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isFull() ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tconst usedSet = this.usedSet;\r\n\t\tconst itemList = this.itemList;\r\n\t\tconst callbacks = this.callbacks;\r\n\t\titemList.push( item );\r\n\t\tusedSet.add( item );\r\n\t\titemSet.set( item, Date.now() );\r\n\t\tcallbacks.set( item, removeCb );\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tremove( item ) {\r\n\r\n\t\tconst usedSet = this.usedSet;\r\n\t\tconst itemSet = this.itemSet;\r\n\t\tconst itemList = this.itemList;\r\n\t\tconst callbacks = this.callbacks;\r\n\r\n\t\tif ( itemSet.has( item ) ) {\r\n\r\n\t\t\tcallbacks.get( item )( item );\r\n\r\n\t\t\tconst index = itemList.indexOf( item );\r\n\t\t\titemList.splice( index, 1 );\r\n\t\t\tusedSet.delete( item );\r\n\t\t\titemSet.delete( item );\r\n\t\t\tcallbacks.delete( item );\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tmarkUsed( item ) {\r\n\r\n\t\tconst itemSet = this.itemSet;\r\n\t\tconst usedSet = this.usedSet;\r\n\t\tif ( itemSet.has( item ) && ! usedSet.has( item ) ) {\r\n\r\n\t\t\titemSet.set( item, Date.now() );\r\n\t\t\tusedSet.add( item );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tmarkAllUnused() {\r\n\r\n\t\tthis.usedSet.clear();\r\n\r\n\t}\r\n\r\n\t// TODO: this should be renamed because it's not necessarily unloading all unused content\r\n\t// Maybe call it \"cleanup\" or \"unloadToMinSize\"\r\n\tunloadUnusedContent() {\r\n\r\n\t\tconst unloadPercent = this.unloadPercent;\r\n\t\tconst targetSize = this.minSize;\r\n\t\tconst itemList = this.itemList;\r\n\t\tconst itemSet = this.itemSet;\r\n\t\tconst usedSet = this.usedSet;\r\n\t\tconst callbacks = this.callbacks;\r\n\t\tconst unused = itemList.length - usedSet.size;\r\n\t\tconst excess = itemList.length - targetSize;\r\n\t\tconst unloadPriorityCallback = this.unloadPriorityCallback || this.defaultPriorityCallback;\r\n\r\n\t\tif ( excess > 0 && unused > 0 ) {\r\n\r\n\t\t\t// used items should be at the end of the array\r\n\t\t\titemList.sort( ( a, b ) => {\r\n\r\n\t\t\t\tconst usedA = usedSet.has( a );\r\n\t\t\t\tconst usedB = usedSet.has( b );\r\n\t\t\t\tif ( usedA && usedB ) {\r\n\r\n\t\t\t\t\t// If they're both used then don't bother moving them\r\n\t\t\t\t\treturn 0;\r\n\r\n\t\t\t\t} else if ( ! usedA && ! usedB ) {\r\n\r\n\t\t\t\t\t// Use the sort function otherwise\r\n\t\t\t\t\t// higher priority should be further to the left\r\n\t\t\t\t\treturn unloadPriorityCallback( b ) - unloadPriorityCallback( a );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// If one is used and the other is not move the used one towards the end of the array\r\n\t\t\t\t\treturn usedA ? 1 : - 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t// address corner cases where the minSize might be zero or smaller than maxSize - minSize,\r\n\t\t\t// which would result in a very small or no items being unloaded.\r\n\t\t\tconst unusedExcess = Math.min( excess, unused );\r\n\t\t\tconst maxUnload = Math.max( targetSize * unloadPercent, unusedExcess * unloadPercent );\r\n\t\t\tlet nodesToUnload = Math.min( maxUnload, unused );\r\n\t\t\tnodesToUnload = Math.ceil( nodesToUnload );\r\n\r\n\t\t\tconst removedItems = itemList.splice( 0, nodesToUnload );\r\n\t\t\tfor ( let i = 0, l = removedItems.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst item = removedItems[ i ];\r\n\t\t\t\tcallbacks.get( item )( item );\r\n\t\t\t\titemSet.delete( item );\r\n\t\t\t\tcallbacks.delete( item );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tscheduleUnload( markAllUnused = true ) {\r\n\r\n\t\tif ( ! this.scheduled ) {\r\n\r\n\t\t\tthis.scheduled = true;\r\n\t\t\tenqueueMicrotask( () => {\r\n\r\n\t\t\t\tthis.scheduled = false;\r\n\t\t\t\tthis.unloadUnusedContent();\r\n\t\t\t\tif ( markAllUnused ) {\r\n\r\n\t\t\t\t\tthis.markAllUnused();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { LRUCache };\r\n","class PriorityQueue {\r\n\r\n\tconstructor() {\r\n\r\n\t\t// options\r\n\t\tthis.maxJobs = 6;\r\n\r\n\t\tthis.items = [];\r\n\t\tthis.callbacks = new Map();\r\n\t\tthis.currJobs = 0;\r\n\t\tthis.scheduled = false;\r\n\t\tthis.autoUpdate = true;\r\n\r\n\t\tthis.priorityCallback = () => {\r\n\r\n\t\t\tthrow new Error( 'PriorityQueue: PriorityCallback function not defined.' );\r\n\r\n\t\t};\r\n\r\n\t\t// Customizable scheduling callback. Default using requestAnimationFrame()\r\n\t\tthis.schedulingCallback = func => {\r\n\r\n\t\t\trequestAnimationFrame( func );\r\n\r\n\t\t};\r\n\r\n\t\tthis._runjobs = () => {\r\n\r\n\t\t\tthis.tryRunJobs();\r\n\t\t\tthis.scheduled = false;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tsort() {\r\n\r\n\t\tconst priorityCallback = this.priorityCallback;\r\n\t\tconst items = this.items;\r\n\t\titems.sort( priorityCallback );\r\n\r\n\t}\r\n\r\n\tadd( item, callback ) {\r\n\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tconst prCallback = ( ...args ) => callback( ...args ).then( resolve ).catch( reject );\r\n\t\t\tconst items = this.items;\r\n\t\t\tconst callbacks = this.callbacks;\r\n\r\n\t\t\titems.push( item );\r\n\t\t\tcallbacks.set( item, prCallback );\r\n\r\n\t\t\tif ( this.autoUpdate ) {\r\n\r\n\t\t\t\tthis.scheduleJobRun();\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tremove( item ) {\r\n\r\n\t\tconst items = this.items;\r\n\t\tconst callbacks = this.callbacks;\r\n\r\n\t\tconst index = items.indexOf( item );\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\titems.splice( index, 1 );\r\n\t\t\tcallbacks.delete( item );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttryRunJobs() {\r\n\r\n\t\tthis.sort();\r\n\r\n\t\tconst items = this.items;\r\n\t\tconst callbacks = this.callbacks;\r\n\t\tconst maxJobs = this.maxJobs;\r\n\t\tlet currJobs = this.currJobs;\r\n\t\twhile ( maxJobs > currJobs && items.length > 0 ) {\r\n\r\n\t\t\tcurrJobs ++;\r\n\t\t\tconst item = items.pop();\r\n\t\t\tconst callback = callbacks.get( item );\r\n\t\t\tcallbacks.delete( item );\r\n\t\t\tcallback( item )\r\n\t\t\t\t.then( () => {\r\n\r\n\t\t\t\t\tthis.currJobs --;\r\n\r\n\t\t\t\t\tif ( this.autoUpdate ) {\r\n\r\n\t\t\t\t\t\tthis.scheduleJobRun();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.catch( () => {\r\n\r\n\t\t\t\t\tthis.currJobs --;\r\n\r\n\t\t\t\t\tif ( this.autoUpdate ) {\r\n\r\n\t\t\t\t\t\tthis.scheduleJobRun();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t}\r\n\t\tthis.currJobs = currJobs;\r\n\r\n\t}\r\n\r\n\tscheduleJobRun() {\r\n\r\n\t\tif ( ! this.scheduled ) {\r\n\r\n\t\t\tthis.schedulingCallback( this._runjobs );\r\n\r\n\t\t\tthis.scheduled = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { PriorityQueue };\r\n","export const UNLOADED = 0;\r\nexport const LOADING = 1;\r\nexport const PARSING = 2;\r\nexport const LOADED = 3;\r\nexport const FAILED = 4;\r\n\r\n// https://en.wikipedia.org/wiki/World_Geodetic_System\r\n// https://en.wikipedia.org/wiki/Flattening\r\nexport const WGS84_RADIUS = 6378137;\r\nexport const WGS84_FLATTENING = 1 / 298.257223563;\r\nexport const WGS84_HEIGHT = - ( WGS84_FLATTENING * WGS84_RADIUS - WGS84_RADIUS );\r\n","import { LOADED, FAILED } from './constants.js';\r\n\r\nfunction isDownloadFinished( value ) {\r\n\r\n\treturn value === LOADED || value === FAILED;\r\n\r\n}\r\n\r\n// Checks whether this tile was last used on the given frame.\r\nfunction isUsedThisFrame( tile, frameCount ) {\r\n\r\n\treturn tile.__lastFrameVisited === frameCount && tile.__used;\r\n\r\n}\r\n\r\n// Resets the frame frame information for the given tile\r\nfunction resetFrameState( tile, frameCount ) {\r\n\r\n\tif ( tile.__lastFrameVisited !== frameCount ) {\r\n\r\n\t\ttile.__lastFrameVisited = frameCount;\r\n\t\ttile.__used = false;\r\n\t\ttile.__inFrustum = false;\r\n\t\ttile.__isLeaf = false;\r\n\t\ttile.__visible = false;\r\n\t\ttile.__active = false;\r\n\t\ttile.__error = Infinity;\r\n\t\ttile.__distanceFromCamera = Infinity;\r\n\t\ttile.__childrenWereVisible = false;\r\n\t\ttile.__allChildrenLoaded = false;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Recursively mark tiles used down to the next tile with content\r\nfunction recursivelyMarkUsed( tile, frameCount, lruCache ) {\r\n\r\n\tresetFrameState( tile, frameCount );\r\n\r\n\ttile.__used = true;\r\n\tlruCache.markUsed( tile );\r\n\tif ( tile.__contentEmpty ) {\r\n\r\n\t\tconst children = tile.children;\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\trecursivelyMarkUsed( children[ i ], frameCount, lruCache );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction recursivelyLoadTiles( tile, depthFromRenderedParent, renderer ) {\r\n\r\n\t// Try to load any external tile set children if the external tile set has loaded.\r\n\tconst doTraverse =\r\n\t\ttile.__contentEmpty && (\r\n\t\t\t! tile.__externalTileSet ||\r\n\t\t\tisDownloadFinished( tile.__loadingState )\r\n\t\t);\r\n\tif ( doTraverse ) {\r\n\r\n\t\tconst children = tile.children;\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t// don't increment depth to rendered parent here because we should treat\r\n\t\t\t// the next layer of rendered children as just a single depth away for the\r\n\t\t\t// sake of sorting.\r\n\t\t\tconst child = children[ i ];\r\n\t\t\tchild.__depthFromRenderedParent = depthFromRenderedParent;\r\n\t\t\trecursivelyLoadTiles( child, depthFromRenderedParent, renderer );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\trenderer.requestTileContents( tile );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Helper function for recursively traversing a tile set. If `beforeCb` returns `true` then the\r\n// traversal will end early.\r\nexport function traverseSet( tile, beforeCb = null, afterCb = null, parent = null, depth = 0 ) {\r\n\r\n\tif ( beforeCb && beforeCb( tile, parent, depth ) ) {\r\n\r\n\t\tif ( afterCb ) {\r\n\r\n\t\t\tafterCb( tile, parent, depth );\r\n\r\n\t\t}\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tconst children = tile.children;\r\n\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\ttraverseSet( children[ i ], beforeCb, afterCb, tile, depth + 1 );\r\n\r\n\t}\r\n\r\n\tif ( afterCb ) {\r\n\r\n\t\tafterCb( tile, parent, depth );\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Determine which tiles are within the camera frustum.\r\n// TODO: this is marking items as used in the lrucache, which means some data is\r\n// being kept around that isn't being used -- is that okay?\r\nexport function determineFrustumSet( tile, renderer ) {\r\n\r\n\tconst stats = renderer.stats;\r\n\tconst frameCount = renderer.frameCount;\r\n\tconst errorTarget = renderer.errorTarget;\r\n\tconst maxDepth = renderer.maxDepth;\r\n\tconst loadSiblings = renderer.loadSiblings;\r\n\tconst lruCache = renderer.lruCache;\r\n\tconst stopAtEmptyTiles = renderer.stopAtEmptyTiles;\r\n\tresetFrameState( tile, frameCount );\r\n\r\n\t// Early out if this tile is not within view.\r\n\tconst inFrustum = renderer.tileInView( tile );\r\n\tif ( inFrustum === false ) {\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\ttile.__used = true;\r\n\tlruCache.markUsed( tile );\r\n\r\n\ttile.__inFrustum = true;\r\n\tstats.inFrustum ++;\r\n\r\n\t// Early out if this tile has less error than we're targeting but don't stop\r\n\t// at an external tile set.\r\n\tif ( ( stopAtEmptyTiles || ! tile.__contentEmpty ) && ! tile.__externalTileSet ) {\r\n\r\n\t\t// compute the _error and __distanceFromCamera fields\r\n\t\trenderer.calculateError( tile );\r\n\r\n\t\tconst error = tile.__error;\r\n\t\tif ( error <= errorTarget ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// Early out if we've reached the maximum allowed depth.\r\n\t\tif ( renderer.maxDepth > 0 && tile.__depth + 1 >= maxDepth ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Traverse children and see if any children are in view.\r\n\tlet anyChildrenUsed = false;\r\n\tconst children = tile.children;\r\n\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\tconst c = children[ i ];\r\n\t\tconst r = determineFrustumSet( c, renderer );\r\n\t\tanyChildrenUsed = anyChildrenUsed || r;\r\n\r\n\t}\r\n\r\n\t// If there are children within view and we are loading siblings then mark\r\n\t// all sibling tiles as used, as well.\r\n\tif ( anyChildrenUsed && loadSiblings ) {\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst c = children[ i ];\r\n\t\t\trecursivelyMarkUsed( c, frameCount, lruCache );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\n// Traverse and mark the tiles that are at the leaf nodes of the \"used\" tree.\r\nexport function markUsedSetLeaves( tile, renderer ) {\r\n\r\n\tconst stats = renderer.stats;\r\n\tconst frameCount = renderer.frameCount;\r\n\tif ( ! isUsedThisFrame( tile, frameCount ) ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tstats.used ++;\r\n\r\n\t// This tile is a leaf if none of the children had been used.\r\n\tconst children = tile.children;\r\n\tlet anyChildrenUsed = false;\r\n\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\tconst c = children[ i ];\r\n\t\tanyChildrenUsed = anyChildrenUsed || isUsedThisFrame( c, frameCount );\r\n\r\n\t}\r\n\r\n\r\n\tif ( ! anyChildrenUsed ) {\r\n\r\n\t\t// TODO: This isn't necessarily right because it's possible that a parent tile is considered in the\r\n\t\t// frustum while the child tiles are not, making them unused. If all children have loaded and were properly\r\n\t\t// considered to be in the used set then we shouldn't set ourselves to a leaf here.\r\n\t\ttile.__isLeaf = true;\r\n\r\n\t} else {\r\n\r\n\t\tlet childrenWereVisible = false;\r\n\t\tlet allChildrenLoaded = true;\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst c = children[ i ];\r\n\t\t\tmarkUsedSetLeaves( c, renderer );\r\n\t\t\tchildrenWereVisible = childrenWereVisible || c.__wasSetVisible || c.__childrenWereVisible;\r\n\r\n\t\t\tif ( isUsedThisFrame( c, frameCount ) ) {\r\n\r\n\t\t\t\tconst childLoaded =\r\n\t\t\t\t\tc.__allChildrenLoaded ||\r\n\t\t\t\t\t( ! c.__contentEmpty && isDownloadFinished( c.__loadingState ) ) ||\r\n\t\t\t\t\t( c.__externalTileSet && c.__loadingState === FAILED );\r\n\t\t\t\tallChildrenLoaded = allChildrenLoaded && childLoaded;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\ttile.__childrenWereVisible = childrenWereVisible;\r\n\t\ttile.__allChildrenLoaded = allChildrenLoaded;\r\n\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Skip past tiles we consider unrenderable because they are outside the error threshold.\r\nexport function skipTraversal( tile, renderer ) {\r\n\r\n\tconst stats = renderer.stats;\r\n\tconst frameCount = renderer.frameCount;\r\n\tif ( ! isUsedThisFrame( tile, frameCount ) ) {\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tconst parent = tile.parent;\r\n\tconst parentDepthToParent = parent ? parent.__depthFromRenderedParent : - 1;\r\n\ttile.__depthFromRenderedParent = parentDepthToParent;\r\n\r\n\t// Request the tile contents or mark it as visible if we've found a leaf.\r\n\tconst lruCache = renderer.lruCache;\r\n\tif ( tile.__isLeaf ) {\r\n\r\n\t\ttile.__depthFromRenderedParent ++;\r\n\r\n\t\tif ( tile.__loadingState === LOADED ) {\r\n\r\n\t\t\tif ( tile.__inFrustum ) {\r\n\r\n\t\t\t\ttile.__visible = true;\r\n\t\t\t\tstats.visible ++;\r\n\r\n\t\t\t}\r\n\t\t\ttile.__active = true;\r\n\t\t\tstats.active ++;\r\n\r\n\t\t} else if ( ! lruCache.isFull() && ( ! tile.__contentEmpty || tile.__externalTileSet ) ) {\r\n\r\n\t\t\trenderer.requestTileContents( tile );\r\n\r\n\t\t}\r\n\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tconst errorRequirement = ( renderer.errorTarget + 1 ) * renderer.errorThreshold;\r\n\tconst meetsSSE = tile.__error <= errorRequirement;\r\n\tconst includeTile = meetsSSE || tile.refine === 'ADD';\r\n\tconst hasModel = ! tile.__contentEmpty;\r\n\tconst hasContent = hasModel || tile.__externalTileSet;\r\n\tconst loadedContent = isDownloadFinished( tile.__loadingState ) && hasContent;\r\n\tconst childrenWereVisible = tile.__childrenWereVisible;\r\n\tconst children = tile.children;\r\n\tconst allChildrenHaveContent = tile.__allChildrenLoaded;\r\n\r\n\t// Increment the relative depth of the node to the nearest rendered parent if it has content\r\n\t// and is being rendered.\r\n\tif ( includeTile && hasModel ) {\r\n\r\n\t\ttile.__depthFromRenderedParent ++;\r\n\r\n\t}\r\n\r\n\t// If we've met the SSE requirements and we can load content then fire a fetch.\r\n\tif ( includeTile && ! loadedContent && ! lruCache.isFull() && hasContent ) {\r\n\r\n\t\trenderer.requestTileContents( tile );\r\n\r\n\t}\r\n\r\n\t// Only mark this tile as visible if it meets the screen space error requirements, has loaded content, not\r\n\t// all children have loaded yet, and if no children were visible last frame. We want to keep children visible\r\n\t// that _were_ visible to avoid a pop in level of detail as the camera moves around and parent / sibling tiles\r\n\t// load in.\r\n\r\n\t// Skip the tile entirely if there's no content to load\r\n\tif (\r\n\t\t( meetsSSE && ! allChildrenHaveContent && ! childrenWereVisible && loadedContent )\r\n\t\t\t|| ( tile.refine === 'ADD' && loadedContent )\r\n\t) {\r\n\r\n\t\tif ( tile.__inFrustum ) {\r\n\r\n\t\t\ttile.__visible = true;\r\n\t\t\tstats.visible ++;\r\n\r\n\t\t}\r\n\t\ttile.__active = true;\r\n\t\tstats.active ++;\r\n\r\n\t}\r\n\r\n\t// If we're additive then don't stop the traversal here because it doesn't matter whether the children load in\r\n\t// at the same rate.\r\n\tif ( tile.refine !== 'ADD' && meetsSSE && ! allChildrenHaveContent && loadedContent ) {\r\n\r\n\t\t// load the child content if we've found that we've been loaded so we can move down to the next tile\r\n\t\t// layer when the data has loaded.\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst c = children[ i ];\r\n\t\t\tif ( isUsedThisFrame( c, frameCount ) && ! lruCache.isFull() ) {\r\n\r\n\t\t\t\tc.__depthFromRenderedParent = tile.__depthFromRenderedParent + 1;\r\n\t\t\t\trecursivelyLoadTiles( c, c.__depthFromRenderedParent, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst c = children[ i ];\r\n\t\t\tif ( isUsedThisFrame( c, frameCount ) ) {\r\n\r\n\t\t\t\tskipTraversal( c, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Final traverse to toggle tile visibility.\r\nexport function toggleTiles( tile, renderer ) {\r\n\r\n\tconst frameCount = renderer.frameCount;\r\n\tconst isUsed = isUsedThisFrame( tile, frameCount );\r\n\tif ( isUsed || tile.__usedLastFrame ) {\r\n\r\n\t\tlet setActive = false;\r\n\t\tlet setVisible = false;\r\n\t\tif ( isUsed ) {\r\n\r\n\t\t\t// enable visibility if active due to shadows\r\n\t\t\tsetActive = tile.__active;\r\n\t\t\tif ( renderer.displayActiveTiles ) {\r\n\r\n\t\t\t\tsetVisible = tile.__active || tile.__visible;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsetVisible = tile.__visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// If the active or visible state changed then call the functions.\r\n\t\tif ( ! tile.__contentEmpty && tile.__loadingState === LOADED ) {\r\n\r\n\t\t\tif ( tile.__wasSetActive !== setActive ) {\r\n\r\n\t\t\t\trenderer.setTileActive( tile, setActive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tile.__wasSetVisible !== setVisible ) {\r\n\r\n\t\t\t\trenderer.setTileVisible( tile, setVisible );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\ttile.__wasSetActive = setActive;\r\n\t\ttile.__wasSetVisible = setVisible;\r\n\t\ttile.__usedLastFrame = isUsed;\r\n\r\n\t\tconst children = tile.children;\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst c = children[ i ];\r\n\t\t\ttoggleTiles( c, renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { getUrlExtension } from '../utilities/urlExtension.js';\r\nimport { LRUCache } from '../utilities/LRUCache.js';\r\nimport { PriorityQueue } from '../utilities/PriorityQueue.js';\r\nimport { determineFrustumSet, toggleTiles, skipTraversal, markUsedSetLeaves, traverseSet } from './traverseFunctions.js';\r\nimport { UNLOADED, LOADING, PARSING, LOADED, FAILED } from './constants.js';\r\n\r\n/**\r\n * Function for provided to sort all tiles for prioritizing loading/unloading.\r\n *\r\n * @param {Tile} a\r\n * @param {Tile} b\r\n * @returns number\r\n */\r\nconst priorityCallback = ( a, b ) => {\r\n\r\n\tif ( a.__depth !== b.__depth ) {\r\n\r\n\t\t// load shallower tiles first\r\n\t\treturn a.__depth > b.__depth ? - 1 : 1;\r\n\r\n\t} else if ( a.__inFrustum !== b.__inFrustum ) {\r\n\r\n\t\t// load tiles that are in the frustum at the current depth\r\n\t\treturn a.__inFrustum ? 1 : - 1;\r\n\r\n\t} else if ( a.__used !== b.__used ) {\r\n\r\n\t\t// load tiles that have been used\r\n\t\treturn a.__used ? 1 : - 1;\r\n\r\n\t} else if ( a.__error !== b.__error ) {\r\n\r\n\t\t// load the tile with the higher error\r\n\t\treturn a.__error > b.__error ? 1 : - 1;\r\n\r\n\t} else if ( a.__distanceFromCamera !== b.__distanceFromCamera ) {\r\n\r\n\t\t// and finally visible tiles which have equal error (ex: if geometricError === 0)\r\n\t\t// should prioritize based on distance.\r\n\t\treturn a.__distanceFromCamera > b.__distanceFromCamera ? - 1 : 1;\r\n\r\n\t}\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n/**\r\n * Function for sorting the evicted LRU items. We should evict the shallowest depth first.\r\n * @param {Tile} tile\r\n * @returns number\r\n */\r\nconst lruPriorityCallback = ( tile ) => 1 / ( tile.__depthFromRenderedParent + 1 );\r\n\r\nexport class TilesRendererBase {\r\n\r\n\tget rootTileSet() {\r\n\r\n\t\tconst tileSet = this.tileSets[ this.rootURL ];\r\n\t\tif ( ! tileSet || tileSet instanceof Promise ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn tileSet;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tget root() {\r\n\r\n\t\tconst tileSet = this.rootTileSet;\r\n\t\treturn tileSet ? tileSet.root : null;\r\n\r\n\t}\r\n\r\n\tconstructor( url ) {\r\n\r\n\r\n\t\tthis.modelData=null\r\n\t\t// state\r\n\t\tthis.tileSets = {};\r\n\t\tthis.rootURL = url;\r\n\t\tthis.fetchOptions = {};\r\n\r\n\t\tthis.preprocessURL = null;\r\n\r\n\t\tconst lruCache = new LRUCache();\r\n\t\tlruCache.unloadPriorityCallback = lruPriorityCallback;\r\n\r\n\t\tconst downloadQueue = new PriorityQueue();\r\n\t\tdownloadQueue.maxJobs = 4;\r\n\t\tdownloadQueue.priorityCallback = priorityCallback;\r\n\r\n\t\tconst parseQueue = new PriorityQueue();\r\n\t\tparseQueue.maxJobs = 1;\r\n\t\tparseQueue.priorityCallback = priorityCallback;\r\n\r\n\t\tthis.lruCache = lruCache;\r\n\t\tthis.downloadQueue = downloadQueue;\r\n\t\tthis.parseQueue = parseQueue;\r\n\t\tthis.stats = {\r\n\t\t\tparsing: 0,\r\n\t\t\tdownloading: 0,\r\n\t\t\tfailed: 0,\r\n\t\t\tinFrustum: 0,\r\n\t\t\tused: 0,\r\n\t\t\tactive: 0,\r\n\t\t\tvisible: 0,\r\n\t\t};\r\n\t\tthis.frameCount = 0;\r\n\r\n\t\t// options\r\n\t\tthis.errorTarget = 6.0;\r\n\t\tthis.errorThreshold = Infinity;\r\n\t\tthis.loadSiblings = true;\r\n\t\tthis.displayActiveTiles = false;\r\n\t\tthis.maxDepth = Infinity;\r\n\t\tthis.stopAtEmptyTiles = true;\r\n\r\n\t\t\r\n\r\n\t}\r\n\r\n\ttraverse( beforecb, aftercb ) {\r\n\r\n\t\tconst tileSets = this.tileSets;\r\n\t\tconst rootTileSet = tileSets[ this.rootURL ];\r\n\t\tif ( ! rootTileSet || ! rootTileSet.root ) return;\r\n\r\n\t\ttraverseSet( rootTileSet.root, beforecb, aftercb );\r\n\r\n\t}\r\n\r\n\t// Public API\r\n\tupdate() {\r\n\r\n\t\tconst stats = this.stats;\r\n\t\tconst lruCache = this.lruCache;\r\n\t\tconst tileSets = this.tileSets;\r\n\t\tconst rootTileSet = tileSets[ this.rootURL ];\r\n\t\tif ( ! ( this.rootURL in tileSets ) ) {\r\n\r\n\t\t\tthis.loadRootTileSet( this.rootURL );\r\n\t\t\treturn;\r\n\r\n\t\t} else if ( ! rootTileSet || ! rootTileSet.root ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst root = rootTileSet.root;\r\n\r\n\t\tstats.inFrustum = 0,\r\n\t\tstats.used = 0,\r\n\t\tstats.active = 0,\r\n\t\tstats.visible = 0,\r\n\t\tthis.frameCount ++;\r\n\r\n\t\tdetermineFrustumSet( root, this );\r\n\t\tmarkUsedSetLeaves( root, this );\r\n\t\tskipTraversal( root, this );\r\n\t\ttoggleTiles( root, this );\r\n\r\n\t\tlruCache.scheduleUnload();\r\n\r\n\t}\r\n\r\n\t// Overrideable\r\n\tparseTile( buffer, tile, extension ) {\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tdisposeTile( tile ) {\r\n\r\n\t}\r\n\r\n\tpreprocessNode( tile, parentTile, tileSetDir ) {\r\n\r\n\t\tif ( tile.content ) {\r\n\r\n\t\t\t// Fix old file formats\r\n\t\t\tif ( ! ( 'uri' in tile.content ) && 'url' in tile.content ) {\r\n\r\n\t\t\t\ttile.content.uri = tile.content.url;\r\n\t\t\t\tdelete tile.content.url;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( tile.content.uri ) {\r\n\r\n\t\t\t\t// tile content uri has to be interpreted relative to the tileset.json\r\n\t\t\t\ttile.content.uri = new URL( tile.content.uri, tileSetDir + '/' ).toString();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// NOTE: fix for some cases where tilesets provide the bounding volume\r\n\t\t\t// but volumes are not present.\r\n\t\t\tif (\r\n\t\t\t\ttile.content.boundingVolume &&\r\n\t\t\t\t! (\r\n\t\t\t\t\t'box' in tile.content.boundingVolume ||\r\n\t\t\t\t\t'sphere' in tile.content.boundingVolume ||\r\n\t\t\t\t\t'region' in tile.content.boundingVolume\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\r\n\t\t\t\tdelete tile.content.boundingVolume;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ttile.parent = parentTile;\r\n\t\ttile.children = tile.children || [];\r\n\r\n\t\tconst uri = tile.content && tile.content.uri;\r\n\t\tif ( uri ) {\r\n\r\n\t\t\t// \"content\" should only indicate loadable meshes, not external tile sets\r\n\t\t\tconst extension = getUrlExtension( tile.content.uri );\r\n\t\t\tconst isExternalTileSet = Boolean( extension && extension.toLowerCase() === 'json' );\r\n\t\t\ttile.__externalTileSet = isExternalTileSet;\r\n\t\t\ttile.__contentEmpty = isExternalTileSet;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttile.__externalTileSet = false;\r\n\t\t\ttile.__contentEmpty = true;\r\n\r\n\t\t}\r\n\r\n\t\t// Expected to be set during calculateError()\r\n\t\ttile.__distanceFromCamera = Infinity;\r\n\t\ttile.__error = Infinity;\r\n\r\n\t\ttile.__inFrustum = false;\r\n\t\ttile.__isLeaf = false;\r\n\r\n\t\ttile.__usedLastFrame = false;\r\n\t\ttile.__used = false;\r\n\r\n\t\ttile.__wasSetVisible = false;\r\n\t\ttile.__visible = false;\r\n\t\ttile.__childrenWereVisible = false;\r\n\t\ttile.__allChildrenLoaded = false;\r\n\r\n\t\ttile.__wasSetActive = false;\r\n\t\ttile.__active = false;\r\n\r\n\t\ttile.__loadingState = UNLOADED;\r\n\t\ttile.__loadIndex = 0;\r\n\r\n\t\ttile.__loadAbort = null;\r\n\r\n\t\ttile.__depthFromRenderedParent = - 1;\r\n\t\tif ( parentTile === null ) {\r\n\r\n\t\t\ttile.__depth = 0;\r\n\t\t\ttile.refine = tile.refine || 'REPLACE';\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttile.__depth = parentTile.__depth + 1;\r\n\t\t\ttile.refine = tile.refine || parentTile.refine;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetTileActive( tile, state ) {\r\n\r\n\t}\r\n\r\n\tsetTileVisible( tile, state ) {\r\n\r\n\t}\r\n\r\n\tcalculateError( tile ) {\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\ttileInView( tile ) {\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\r\n\tresetFailedTiles() {\r\n\r\n\t\tconst stats = this.stats;\r\n\t\tif ( stats.failed === 0 ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.traverse( tile => {\r\n\r\n\t\t\tif ( tile.__loadingState === FAILED ) {\r\n\r\n\t\t\t\ttile.__loadingState = UNLOADED;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tstats.failed = 0;\r\n\r\n\t}\r\n\r\n\t// Private Functions\r\n\tfetchTileSet( url, fetchOptions, parent = null ) {\r\n\r\n\t\treturn fetch( url, fetchOptions )\r\n\t\t\t.then( res => {\r\n\r\n\t\t\t\tif ( res.ok ) {\r\n\r\n\t\t\t\t\treturn res.json();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( `TilesRenderer: Failed to load tileset \"${ url }\" with status ${ res.status } : ${ res.statusText }` );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\t\t\t.then( json => {\r\n\r\n\t\t\t\tconst version = json.asset.version;\r\n\t\t\t\tconsole.assert(\r\n\t\t\t\t\tversion === '1.0' || version === '0.0',\r\n\t\t\t\t\t'asset.version is expected to be a string of \"1.0\" or \"0.0\"'\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// remove trailing slash and last path-segment from the URL\r\n\t\t\t\t// let basePath = url.replace( /\\/[^\\/]*\\/?$/, '' );\r\n\t\t\t\tlet basePath = url.replace( /\\/[^/]*\\/?$/, '' );\r\n\t\t\t\tbasePath = new URL( basePath, window.location.href ).toString();\r\n\r\n\t\t\t\ttraverseSet(\r\n\t\t\t\t\tjson.root,\r\n\t\t\t\t\t( node, parent ) => this.preprocessNode( node, parent, basePath ),\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\tparent,\r\n\t\t\t\t\tparent ? parent.__depth : 0,\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn json;\r\n\r\n\t\t\t} );\r\n\r\n\t}\r\n\r\n\tloadRootTileSet( url ) {\r\n\r\n\t\tconst tileSets = this.tileSets;\r\n\t\tif ( ! ( url in tileSets ) ) {\r\n\r\n\t\t\tconst pr = this\r\n\t\t\t\t.fetchTileSet( this.preprocessURL ? this.preprocessURL( url ) : url, this.fetchOptions )\r\n\t\t\t\t.then( json => {\r\n\r\n\t\t\t\t\ttileSets[ url ] = json;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\tpr.catch( err => {\r\n\r\n\t\t\t\tconsole.error( err );\r\n\t\t\t\ttileSets[ url ] = err;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\ttileSets[ url ] = pr;\r\n\r\n\t\t\treturn pr;\r\n\r\n\t\t} else if ( tileSets[ url ] instanceof Error ) {\r\n\r\n\t\t\treturn Promise.reject( tileSets[ url ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn Promise.resolve( tileSets[ url ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trequestTileContents( tile ) {\r\n\r\n\t\t// If the tile is already being loaded then don't\r\n\t\t// start it again.\r\n\t\tif ( tile.__loadingState !== UNLOADED ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst stats = this.stats;\r\n\t\tconst lruCache = this.lruCache;\r\n\t\tconst downloadQueue = this.downloadQueue;\r\n\t\tconst parseQueue = this.parseQueue;\r\n\t\tconst isExternalTileSet = tile.__externalTileSet;\r\n\t\tlruCache.add( tile, t => {\r\n\r\n\t\t\t// Stop the load if it's started\r\n\t\t\tif ( t.__loadingState === LOADING ) {\r\n\r\n\t\t\t\tt.__loadAbort.abort();\r\n\t\t\t\tt.__loadAbort = null;\r\n\r\n\t\t\t} else if ( isExternalTileSet ) {\r\n\r\n\t\t\t\tt.children.length = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.disposeTile( t );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Decrement stats\r\n\t\t\tif ( t.__loadingState === LOADING ) {\r\n\r\n\t\t\t\tstats.downloading --;\r\n\r\n\t\t\t} else if ( t.__loadingState === PARSING ) {\r\n\r\n\t\t\t\tstats.parsing --;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tt.__loadingState = UNLOADED;\r\n\t\t\tt.__loadIndex ++;\r\n\r\n\t\t\tparseQueue.remove( t );\r\n\t\t\tdownloadQueue.remove( t );\r\n\r\n\t\t} );\r\n\r\n\t\t// Track a new load index so we avoid the condition where this load is stopped and\r\n\t\t// another begins soon after so we don't parse twice.\r\n\t\ttile.__loadIndex ++;\r\n\t\tconst loadIndex = tile.__loadIndex;\r\n\t\tconst controller = new AbortController();\r\n\t\tconst signal = controller.signal;\r\n\r\n\t\tstats.downloading ++;\r\n\t\ttile.__loadAbort = controller;\r\n\t\ttile.__loadingState = LOADING;\r\n\r\n\t\tconst errorCallback = e => {\r\n\r\n\t\t\t// if it has been unloaded then the tile has been disposed\r\n\t\t\tif ( tile.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( e.name !== 'AbortError' ) {\r\n\r\n\t\t\t\tparseQueue.remove( tile );\r\n\t\t\t\tdownloadQueue.remove( tile );\r\n\r\n\t\t\t\tif ( tile.__loadingState === PARSING ) {\r\n\r\n\t\t\t\t\tstats.parsing --;\r\n\r\n\t\t\t\t} else if ( tile.__loadingState === LOADING ) {\r\n\r\n\t\t\t\t\tstats.downloading --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstats.failed ++;\r\n\r\n\t\t\t\tconsole.error( `TilesRenderer : Failed to load tile at url \"${ tile.content.uri }\".` );\r\n\t\t\t\tconsole.error( e );\r\n\t\t\t\ttile.__loadingState = FAILED;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlruCache.remove( tile );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( isExternalTileSet ) {\r\n\r\n\t\t\tdownloadQueue.add( tile, tileCb => {\r\n\r\n\t\t\t\t// if it has been unloaded then the tile has been disposed\r\n\t\t\t\tif ( tileCb.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\t\treturn Promise.resolve();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst uri = this.preprocessURL ? this.preprocessURL( tileCb.content.uri ) : tileCb.content.uri;\r\n\t\t\t\treturn this.fetchTileSet( uri, Object.assign( { signal }, this.fetchOptions ), tileCb );\r\n\r\n\t\t\t} )\r\n\t\t\t\t.then( json => {\r\n\r\n\t\t\t\t\t// if it has been unloaded then the tile has been disposed\r\n\t\t\t\t\tif ( tile.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstats.downloading --;\r\n\t\t\t\t\ttile.__loadAbort = null;\r\n\t\t\t\t\ttile.__loadingState = LOADED;\r\n\r\n\t\t\t\t\ttile.children.push( json.root );\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.catch( errorCallback );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdownloadQueue.add( tile, downloadTile => {\r\n\r\n\t\t\t\tif ( downloadTile.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\t\treturn Promise.resolve();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst uri = this.preprocessURL ? this.preprocessURL( downloadTile.content.uri ) : downloadTile.content.uri;\r\n\t\t\t\treturn fetch( uri, Object.assign( { signal }, this.fetchOptions ) );\r\n\r\n\t\t\t} )\r\n\t\t\t\t.then( res => {\r\n\r\n\t\t\t\t\tif ( tile.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( res.ok ) {\r\n\r\n\t\t\t\t\t\treturn res.arrayBuffer();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthrow new Error( `Failed to load model with error code ${res.status}` );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.then( buffer => {\r\n\r\n\t\t\t\t\t// if it has been unloaded then the tile has been disposed\r\n\t\t\t\t\tif ( tile.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstats.downloading --;\r\n\t\t\t\t\tstats.parsing ++;\r\n\t\t\t\t\ttile.__loadAbort = null;\r\n\t\t\t\t\ttile.__loadingState = PARSING;\r\n\r\n\t\t\t\t\treturn parseQueue.add( tile, parseTile => {\r\n\r\n\t\t\t\t\t\t// if it has been unloaded then the tile has been disposed\r\n\t\t\t\t\t\tif ( parseTile.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\t\t\t\treturn Promise.resolve();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst uri = parseTile.content.uri;\r\n\t\t\t\t\t\tconst extension = getUrlExtension( uri );\r\n\r\n\t\t\t\t\t\treturn this.parseTile( buffer, parseTile, extension );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.then( () => {\r\n\r\n\t\t\t\t\t// if it has been unloaded then the tile has been disposed\r\n\t\t\t\t\tif ( tile.__loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstats.parsing --;\r\n\t\t\t\t\ttile.__loadingState = LOADED;\r\n\r\n\t\t\t\t\tif ( tile.__wasSetVisible ) {\r\n\r\n\t\t\t\t\t\tthis.setTileVisible( tile, true );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( tile.__wasSetActive ) {\r\n\r\n\t\t\t\t\t\tthis.setTileActive( tile, true );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.catch( errorCallback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tconst lruCache = this.lruCache;\r\n\t\tthis.traverse( tile => {\r\n\r\n\t\t\tlruCache.remove( tile );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.stats = {\r\n\t\t\tparsing: 0,\r\n\t\t\tdownloading: 0,\r\n\t\t\tfailed: 0,\r\n\t\t\tinFrustum: 0,\r\n\t\t\tused: 0,\r\n\t\t\tactive: 0,\r\n\t\t\tvisible: 0,\r\n\t\t};\r\n\t\tthis.frameCount = 0;\r\n\r\n\t}\r\n\r\n}\r\n","export function arrayToString( array ) {\r\n\r\n\tconst utf8decoder = new TextDecoder();\r\n\treturn utf8decoder.decode( array );\r\n\r\n}\r\n","import { arrayToString } from './arrayToString.js';\r\n\r\nexport class FeatureTable {\r\n\r\n\tconstructor( buffer, start, headerLength, binLength ) {\r\n\r\n\t\tthis.buffer = buffer;\r\n\t\tthis.binOffset = start + headerLength;\r\n\t\tthis.binLength = binLength;\r\n\r\n\t\tlet header = null;\r\n\t\tif ( headerLength !== 0 ) {\r\n\r\n\t\t\tconst headerData = new Uint8Array( buffer, start, headerLength );\r\n\t\t\theader = JSON.parse( arrayToString( headerData ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\theader = {};\r\n\r\n\t\t}\r\n\t\tthis.header = header;\r\n\r\n\t}\r\n\r\n\tgetKeys() {\r\n\r\n\t\treturn Object.keys( this.header );\r\n\r\n\t}\r\n\r\n\tgetData( key, count, defaultComponentType = null, defaultType = null ) {\r\n\r\n\t\tconst header = this.header;\r\n\r\n\t\tif ( ! ( key in header ) ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst feature = header[ key ];\r\n\t\tif ( ! ( feature instanceof Object ) ) {\r\n\r\n\t\t\treturn feature;\r\n\r\n\t\t} else if ( Array.isArray( feature ) ) {\r\n\r\n\t\t\treturn feature;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst { buffer, binOffset, binLength } = this;\r\n\t\t\tconst byteOffset = feature.byteOffset || 0;\r\n\t\t\tconst featureType = feature.type || defaultType;\r\n\t\t\tconst featureComponentType = feature.componentType || defaultComponentType;\r\n\r\n\t\t\tif ( 'type' in feature && defaultType && feature.type !== defaultType ) {\r\n\r\n\t\t\t\tthrow new Error( 'FeatureTable: Specified type does not match expected type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet stride;\r\n\t\t\tswitch ( featureType ) {\r\n\r\n\t\t\t\tcase 'SCALAR':\r\n\t\t\t\t\tstride = 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'VEC2':\r\n\t\t\t\t\tstride = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'VEC3':\r\n\t\t\t\t\tstride = 3;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'VEC4':\r\n\t\t\t\t\tstride = 4;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( `FeatureTable : Feature type not provided for \"${ key }\".` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet data;\r\n\t\t\tconst arrayStart = binOffset + byteOffset;\r\n\t\t\tconst arrayLength = count * stride;\r\n\r\n\t\t\tswitch ( featureComponentType ) {\r\n\r\n\t\t\t\tcase 'BYTE':\r\n\t\t\t\t\tdata = new Int8Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'UNSIGNED_BYTE':\r\n\t\t\t\t\tdata = new Uint8Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SHORT':\r\n\t\t\t\t\tdata = new Int16Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'UNSIGNED_SHORT':\r\n\t\t\t\t\tdata = new Uint16Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'INT':\r\n\t\t\t\t\tdata = new Int32Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'UNSIGNED_INT':\r\n\t\t\t\t\tdata = new Uint32Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'FLOAT':\r\n\t\t\t\t\tdata = new Float32Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DOUBLE':\r\n\t\t\t\t\tdata = new Float64Array( buffer, arrayStart, arrayLength );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error( `FeatureTable : Feature component type not provided for \"${ key }\".` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst dataEnd = arrayStart + arrayLength * data.BYTES_PER_ELEMENT;\r\n\t\t\tif ( dataEnd > binOffset + binLength ) {\r\n\r\n\t\t\t\tthrow new Error( 'FeatureTable: Feature data read outside binary body length.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetBuffer( byteOffset, byteLength ) {\r\n\r\n\t\tconst { buffer, binOffset } = this;\r\n\t\treturn buffer.slice( binOffset + byteOffset, binOffset + byteOffset + byteLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class BatchTable extends FeatureTable {\r\n\r\n\tconstructor( buffer, batchSize, start, headerLength, binLength ) {\r\n\r\n\t\tsuper( buffer, start, headerLength, binLength );\r\n\t\tthis.batchSize = batchSize;\r\n\r\n\t}\r\n\r\n\tgetData( key, componentType = null, type = null ) {\r\n\r\n\t\treturn super.getData( key, this.batchSize, componentType, type );\r\n\r\n\t}\r\n\r\n}\r\n","export class LoaderBase {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.fetchOptions = {};\r\n\t\tthis.workingPath = '';\r\n\r\n\t}\r\n\r\n\tload( url ) {\r\n\r\n\t\treturn fetch( url, this.fetchOptions )\r\n\t\t\t.then( res => {\r\n\r\n\t\t\t\tif ( ! res.ok ) {\r\n\r\n\t\t\t\t\tthrow new Error( `Failed to load file \"${ url }\" with status ${ res.status } : ${ res.statusText }` );\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn res.arrayBuffer();\r\n\r\n\t\t\t} )\r\n\t\t\t.then( buffer => {\r\n\r\n\t\t\t\tif ( this.workingPath === '' ) {\r\n\r\n\t\t\t\t\tthis.workingPath = this.workingPathForURL( url );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.parse( buffer );\r\n\r\n\t\t\t} );\r\n\r\n\t}\r\n\r\n\tresolveExternalURL( url ) {\r\n\r\n\t\tif ( /^[^\\\\/]/.test( url ) ) {\r\n\r\n\t\t\treturn this.workingPath + '/' + url;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn url;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tworkingPathForURL( url ) {\r\n\r\n\t\tconst splits = url.split( /[\\\\/]/g );\r\n\t\tsplits.pop();\r\n\t\tconst workingPath = splits.join( '/' );\r\n\t\treturn workingPath + '/';\r\n\r\n\t}\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\tthrow new Error( 'LoaderBase: Parse not implemented.' );\r\n\r\n\t}\r\n\r\n}\r\n","export function readMagicBytes( bufferOrDataView ) {\r\n\r\n\tlet view;\r\n\tif ( bufferOrDataView instanceof DataView ) {\r\n\r\n\t\tview = bufferOrDataView;\r\n\r\n\t} else {\r\n\r\n\t\tview = new DataView( bufferOrDataView );\r\n\r\n\t}\r\n\r\n\tif ( String.fromCharCode( view.getUint8( 0 ) ) === '{' ) {\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tlet magicBytes = '';\r\n\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\tmagicBytes += String.fromCharCode( view.getUint8( i ) );\r\n\r\n\t}\r\n\r\n\treturn magicBytes;\r\n\r\n}\r\n","// B3DM File Format\r\n// https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/Batched3DModel/README.md\r\n\r\nimport { FeatureTable, BatchTable } from '../utilities/FeatureTable.js';\r\nimport { LoaderBase } from './LoaderBase.js';\r\nimport { readMagicBytes } from '../utilities/readMagicBytes.js';\r\n\r\nexport class B3DMLoaderBase extends LoaderBase {\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\t// TODO: this should be able to take a uint8array with an offset and length\r\n\t\tconst dataView = new DataView( buffer );\r\n\r\n\t\t// 28-byte header\r\n\r\n\t\t// 4 bytes\r\n\t\tconst magic = readMagicBytes( dataView );\r\n\r\n\t\tconsole.assert( magic === 'b3dm' );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst version = dataView.getUint32( 4, true );\r\n\r\n\t\tconsole.assert( version === 1 );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst byteLength = dataView.getUint32( 8, true );\r\n\r\n\t\tconsole.assert( byteLength === buffer.byteLength );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst featureTableJSONByteLength = dataView.getUint32( 12, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst featureTableBinaryByteLength = dataView.getUint32( 16, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst batchTableJSONByteLength = dataView.getUint32( 20, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst batchTableBinaryByteLength = dataView.getUint32( 24, true );\r\n\r\n\t\t// Feature Table\r\n\t\tconst featureTableStart = 28;\r\n\t\tconst featureTableBuffer = buffer.slice(\r\n\t\t\tfeatureTableStart,\r\n\t\t\tfeatureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength,\r\n\t\t);\r\n\t\tconst featureTable = new FeatureTable(\r\n\t\t\tfeatureTableBuffer,\r\n\t\t\t0,\r\n\t\t\tfeatureTableJSONByteLength,\r\n\t\t\tfeatureTableBinaryByteLength,\r\n\t\t);\r\n\r\n\t\t// Batch Table\r\n\t\tconst batchTableStart = featureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength;\r\n\t\tconst batchTableBuffer = buffer.slice(\r\n\t\t\tbatchTableStart,\r\n\t\t\tbatchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength,\r\n\t\t);\r\n\t\tconst batchTable = new BatchTable(\r\n\t\t\tbatchTableBuffer,\r\n\t\t\tfeatureTable.getData( 'BATCH_LENGTH' ),\r\n\t\t\t0,\r\n\t\t\tbatchTableJSONByteLength,\r\n\t\t\tbatchTableBinaryByteLength,\r\n\t\t);\r\n\r\n\t\tconst glbStart = batchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength;\r\n\t\tconst glbBytes = new Uint8Array( buffer, glbStart, byteLength - glbStart );\r\n\r\n\t\treturn {\r\n\t\t\tversion,\r\n\t\t\tfeatureTable,\r\n\t\t\tbatchTable,\r\n\t\t\tglbBytes,\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { B3DMLoaderBase } from '../base/B3DMLoaderBase.js';\r\nimport { DefaultLoadingManager, Matrix4 ,Float32BufferAttribute,Color,Mesh,Int32BufferAttribute,BufferAttribute} from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { ElementData } from '@/data/ElementData';\r\nimport { BatchData } from '@/data/BatchData';\r\nimport { MaterialData } from '@/data/MaterialData';\r\nexport class B3DMLoader extends B3DMLoaderBase {\r\n\r\n\tconstructor( manager = DefaultLoadingManager,tilesRenderer ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.manager = manager;\r\n\t\tthis.adjustmentTransform = new Matrix4();\r\n\t\tthis.tilesRenderer = tilesRenderer;\r\n\r\n\t}\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\tconst b3dm = super.parse( buffer );\r\n\t\tconst gltfBuffer = b3dm.glbBytes.slice().buffer;\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tconst manager = this.manager;\r\n\t\t\tconst fetchOptions = this.fetchOptions;\r\n\t\t\tconst tilesRenderer = this.tilesRenderer;\r\n\t\t\tconst loader = manager.getHandler( 'path.gltf' ) || new GLTFLoader( manager );\r\n\r\n\t\t\tif ( fetchOptions.credentials === 'include' && fetchOptions.mode === 'cors' ) {\r\n\r\n\t\t\t\tloader.setCrossOrigin( 'use-credentials' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 'credentials' in fetchOptions ) {\r\n\r\n\t\t\t\tloader.setWithCredentials( fetchOptions.credentials === 'include' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( fetchOptions.headers ) {\r\n\r\n\t\t\t\tloader.setRequestHeader( fetchOptions.headers );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// GLTFLoader assumes the working path ends in a slash\r\n\t\t\tlet workingPath = this.workingPath;\r\n\t\t\tif ( ! /[\\\\/]$/.test( workingPath ) && workingPath.length ) {\r\n\r\n\t\t\t\tworkingPath += '/';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst adjustmentTransform = this.adjustmentTransform;\r\n\r\n\t\t\tloader.parse( gltfBuffer, workingPath, model => {\r\n\r\n\t\t\t\tconst { batchTable, featureTable } = b3dm;\r\n\t\t\t\tconst { scene } = model;\r\n\r\n\t\t\t\tconst rtcCenter = featureTable.getData( 'RTC_CENTER' );\r\n\t\t\t\tif ( rtcCenter ) {\r\n\r\n\t\t\t\t\tscene.position.x += rtcCenter[ 0 ];\r\n\t\t\t\t\tscene.position.y += rtcCenter[ 1 ];\r\n\t\t\t\t\tscene.position.z += rtcCenter[ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet classes = null;\r\n\t\t\t\tif (batchTable && batchTable.header && batchTable.header.extensions[\"3DTILES_batch_table_hierarchy\"] != null) {\r\n\t\t\t\t\tclasses = batchTable.header.extensions[\"3DTILES_batch_table_hierarchy\"].classes;\r\n\t\t\t\t}\r\n\t\t\t\t//const pickColor = new Color();\r\n\r\n\t\t\t\tlet mapElement=new Map()\r\n\t\t\t\tscene.traverse(function (child) {\r\n\t\t\t\t\tif (child instanceof Mesh) {\r\n\r\n\t\t\t\t\t\tchild[\"orignMaterial\"]=child.material;\r\n\t\t\t\t\t\tchild[\"pickMaterial\"]=MaterialData.pickMaterial\r\n\t\t\t\t\t\tchild.material.vertexColors = true;\r\n\r\n\t\t\t\t\t\tlet positionsCount = child.geometry.getAttribute(\"position\").count;\r\n\t\t\t\t\t\tlet colors =new BufferAttribute( new Float32Array( 3* positionsCount ), 3)\r\n\t\t\t\t\t\t//let pickColors = new BufferAttribute( new Float32Array( 3* positionsCount ), 3)\r\n\t\t\t\t\t\tlet elementIDS =new BufferAttribute( new Int32Array( positionsCount ), 1)\r\n\r\n\t\t\t\t\t\tlet indexs = child.geometry.index\r\n\t\t\t\t\t\tlet batchids = child.geometry.getAttribute(\"_batchid\");\r\n\t\t\t\t\t\tfor (let i = 0; i < indexs.count; i++)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet index = indexs.getX(i)\r\n\t\t\t\t\t\t\tlet id =Math.round(batchids.getX(index))\r\n\t\t\t\t\t\t\tlet batchData;\r\n\t\t\t\t\t\t\tlet element\r\n\t\t\t\t\t\t\tif (!mapElement.has(id)) {\r\n\t\t\t\t\t\t\t\telement=new ElementData();\r\n\t\t\t\t\t\t\t\tif(classes&&classes[id])\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\telement.useData=classes[id].instances\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telement[\"mapbatchData\"]=new Map()\r\n\t\t\t\t\t\t\t\ttilesRenderer.modelData.allElementData.set(element.id,element)\r\n\t\t\t\t\t\t\t\tmapElement.set(id, element)\r\n\t\t\t\t\t\t\t\tbatchData = new BatchData(child, element.id)\r\n\t\t\t\t\t\t\t\telement.addMeshData(batchData)\r\n\t\t\t\t\t\t\t\telement[\"mapbatchData\"].set(child.material, batchData)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\telement = mapElement.get(id);\r\n\t\t\t\t\t\t\t\tif (element[\"mapbatchData\"].has(child.material)) {\r\n\t\t\t\t\t\t\t\t\tbatchData = element[\"mapbatchData\"].get(child.material)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbatchData = new BatchData(child, element.id)\r\n\t\t\t\t\t\t\t\t\telement.addMeshData(batchData)\r\n\t\t\t\t\t\t\t\t\telement[\"mapbatchData\"].set(child.material, batchData)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telementIDS.setX(index,element.id)\r\n\t\t\t\t\t\t\t//pickColor.setHex( element.id);\r\n\t\t\t\t\t\t\tcolors.setXYZ(index,1,1,1)\r\n\r\n\r\n\t\t\t\t\t\t\t// if (child.material.map == null&&child.material.opacity==0&&child.material.color) {     \r\n\t\t\t\t\t\t\t// \tcolors.setXYZ(index,child.material.color.r,child.material.color.g,child.material.color.b)\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// else {\r\n\t\t\t\t\t\t\t// \tcolors.setXYZ(index,1,1,1)\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t// colors.setXYZ(index,child.material.color.r,child.material.color.g,child.material.color.b)\r\n\t\t\t\t\t\t\t//pickColors.setXYZ( i, pickColor.r, pickColor.g, pickColor.b );\r\n\t\t\t\t\t\t\tbatchData.indexs.push(index)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//child.geometry.setAttribute('pickColor', pickColors);\r\n\t\t\t\t\t\tchild.geometry.setAttribute('color', colors);\r\n\t\t\t\t\t\tchild.geometry.setAttribute('elementID', elementIDS);\r\n\t\t\t\t\t\tchild.geometry.deleteAttribute(\"_batchid\")\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tfor (const element of mapElement.values()) {\r\n\t\t\t\t\telement.mapbatchData.clear();\r\n\t\t\t\t\telement.mapbatchData=null\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmodel.scene.updateMatrix();\r\n\t\t\t\tmodel.scene.matrix.multiply( adjustmentTransform );\r\n\t\t\t\tmodel.scene.matrix.decompose( model.scene.position, model.scene.quaternion, model.scene.scale );\r\n\r\n\t\t\t\t// model.batchTable = batchTable;\r\n\t\t\t\t// model.featureTable = featureTable;\r\n\r\n\t\t\t\t// scene.batchTable = batchTable;\r\n\t\t\t\t// scene.featureTable = featureTable;\r\n\r\n\t\t\t\tresolve( model );\r\n\r\n\t\t\t}, reject );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","// PNTS File Format\r\n// https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/PointCloud/README.md\r\n\r\nimport { FeatureTable, BatchTable } from '../utilities/FeatureTable.js';\r\nimport { readMagicBytes } from '../utilities/readMagicBytes.js';\r\nimport { LoaderBase } from './LoaderBase.js';\r\n\r\nexport class PNTSLoaderBase extends LoaderBase {\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\tconst dataView = new DataView( buffer );\r\n\r\n\t\t// 28-byte header\r\n\r\n\t\t// 4 bytes\r\n\t\tconst magic = readMagicBytes( dataView );\r\n\r\n\t\tconsole.assert( magic === 'pnts' );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst version = dataView.getUint32( 4, true );\r\n\r\n\t\tconsole.assert( version === 1 );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst byteLength = dataView.getUint32( 8, true );\r\n\r\n\t\tconsole.assert( byteLength === buffer.byteLength );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst featureTableJSONByteLength = dataView.getUint32( 12, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst featureTableBinaryByteLength = dataView.getUint32( 16, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst batchTableJSONByteLength = dataView.getUint32( 20, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst batchTableBinaryByteLength = dataView.getUint32( 24, true );\r\n\r\n\t\t// Feature Table\r\n\t\tconst featureTableStart = 28;\r\n\t\tconst featureTableBuffer = buffer.slice(\r\n\t\t\tfeatureTableStart,\r\n\t\t\tfeatureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength,\r\n\t\t);\r\n\t\tconst featureTable = new FeatureTable(\r\n\t\t\tfeatureTableBuffer,\r\n\t\t\t0,\r\n\t\t\tfeatureTableJSONByteLength,\r\n\t\t\tfeatureTableBinaryByteLength,\r\n\t\t);\r\n\r\n\t\t// Batch Table\r\n\t\tconst batchTableStart = featureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength;\r\n\t\tconst batchTableBuffer = buffer.slice(\r\n\t\t\tbatchTableStart,\r\n\t\t\tbatchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength,\r\n\t\t);\r\n\t\tconst batchTable = new BatchTable(\r\n\t\t\tbatchTableBuffer,\r\n\t\t\tfeatureTable.getData( 'BATCH_LENGTH' ) || featureTable.getData( 'POINTS_LENGTH' ),\r\n\t\t\t0,\r\n\t\t\tbatchTableJSONByteLength,\r\n\t\t\tbatchTableBinaryByteLength,\r\n\t\t);\r\n\r\n\t\treturn Promise.resolve( {\r\n\r\n\t\t\tversion,\r\n\t\t\tfeatureTable,\r\n\t\t\tbatchTable,\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { PNTSLoaderBase } from '../base/PNTSLoaderBase.js';\r\nimport {\r\n\tPoints,\r\n\tPointsMaterial,\r\n\tBufferGeometry,\r\n\tBufferAttribute,\r\n\tDefaultLoadingManager,\r\n} from 'three';\r\n\r\nconst DRACO_ATTRIBUTE_MAP = {\r\n\tRGB: 'color',\r\n\tPOSITION: 'position',\r\n};\r\n\r\nexport class PNTSLoader extends PNTSLoaderBase {\r\n\r\n\tconstructor( manager = DefaultLoadingManager ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.manager = manager;\r\n\r\n\t}\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\treturn super.parse( buffer ).then( async ( result ) => {\r\n\r\n\t\t\tconst { featureTable } = result;\r\n\r\n\t\t\tconst material = new PointsMaterial();\r\n\t\t\tconst extensions = featureTable.header.extensions;\r\n\t\t\tlet geometry;\r\n\r\n\t\t\t// handle loading the draco data\r\n\t\t\tif ( extensions && extensions[ '3DTILES_draco_point_compression' ] ) {\r\n\r\n\t\t\t\tconst { byteOffset, byteLength, properties } = extensions[ '3DTILES_draco_point_compression' ];\r\n\t\t\t\tconst dracoLoader = this.manager.getHandler( 'draco.drc' );\r\n\t\t\t\tif ( dracoLoader == null ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'PNTSLoader: dracoLoader not available.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// map PNTS keys to draco types\r\n\t\t\t\tconst attributeIDs = {};\r\n\t\t\t\tfor ( const key in properties ) {\r\n\r\n\t\t\t\t\tif ( key in DRACO_ATTRIBUTE_MAP && key in properties ) {\r\n\r\n\t\t\t\t\t\tconst mappedKey = DRACO_ATTRIBUTE_MAP[ key ];\r\n\t\t\t\t\t\tattributeIDs[ mappedKey ] = properties[ key ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// decode the geometry\r\n\t\t\t\tconst taskConfig = {\r\n\t\t\t\t\tattributeIDs,\r\n\t\t\t\t\tattributeTypes: {\r\n\t\t\t\t\t\tposition: 'Float32Array',\r\n\t\t\t\t\t\tcolor: 'Uint8Array',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tuseUniqueIDs: true,\r\n\t\t\t\t};\r\n\r\n\t\t\t\tconst buffer = featureTable.getBuffer( byteOffset, byteLength );\r\n\t\t\t\tgeometry = await dracoLoader.decodeGeometry( buffer, taskConfig );\r\n\t\t\t\tif ( geometry.attributes.color ) {\r\n\r\n\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// handle non compressed case\r\n\t\t\t\tconst POINTS_LENGTH = featureTable.getData( 'POINTS_LENGTH' );\r\n\t\t\t\tconst POSITION = featureTable.getData( 'POSITION', POINTS_LENGTH, 'FLOAT', 'VEC3' );\r\n\t\t\t\tconst RGB = featureTable.getData( 'RGB', POINTS_LENGTH, 'UNSIGNED_BYTE', 'VEC3' );\r\n\r\n\t\t\t\tgeometry = new BufferGeometry();\r\n\t\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( POSITION, 3, false ) );\r\n\t\t\t\tif ( RGB !== null ) {\r\n\r\n\t\t\t\t\tgeometry.setAttribute( 'color', new BufferAttribute( RGB, 3, true ) );\r\n\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t[\r\n\t\t\t\t'QUANTIZED_VOLUME_OFFSET',\r\n\t\t\t\t'QUANTIZED_VOLUME_SCALE',\r\n\t\t\t\t'CONSTANT_RGBA',\r\n\t\t\t\t'BATCH_LENGTH',\r\n\t\t\t\t'POSITION_QUANTIZED',\r\n\t\t\t\t'RGBA',\r\n\t\t\t\t'RGB565',\r\n\t\t\t\t'NORMAL',\r\n\t\t\t\t'NORMAL_OCT16P',\r\n\t\t\t].forEach( ( feature ) => {\r\n\r\n\t\t\t\tif ( feature in featureTable.header ) {\r\n\r\n\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t`PNTSLoader: Unsupported FeatureTable feature \"${feature}\" detected.`\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tconst object = new Points( geometry, material );\r\n\t\t\tresult.scene = object;\r\n\t\t\tresult.scene.featureTable = featureTable;\r\n\r\n\t\t\tconst rtcCenter = featureTable.getData( 'RTC_CENTER' );\r\n\r\n\t\t\tif ( rtcCenter ) {\r\n\r\n\t\t\t\tresult.scene.position.x += rtcCenter[ 0 ];\r\n\t\t\t\tresult.scene.position.y += rtcCenter[ 1 ];\r\n\t\t\t\tresult.scene.position.z += rtcCenter[ 2 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","// I3DM File Format\r\n// https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/Instanced3DModel/README.md\r\n\r\nimport { FeatureTable, BatchTable } from '../utilities/FeatureTable.js';\r\nimport { arrayToString } from '../utilities/arrayToString.js';\r\nimport { LoaderBase } from './LoaderBase.js';\r\nimport { readMagicBytes } from '../utilities/readMagicBytes.js';\r\n\r\nexport class I3DMLoaderBase extends LoaderBase {\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\tconst dataView = new DataView( buffer );\r\n\r\n\t\t// 32-byte header\r\n\r\n\t\t// 4 bytes\r\n\t\tconst magic = readMagicBytes( dataView );\r\n\r\n\t\tconsole.assert( magic === 'i3dm' );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst version = dataView.getUint32( 4, true );\r\n\r\n\t\tconsole.assert( version === 1 );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst byteLength = dataView.getUint32( 8, true );\r\n\r\n\t\tconsole.assert( byteLength === buffer.byteLength );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst featureTableJSONByteLength = dataView.getUint32( 12, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst featureTableBinaryByteLength = dataView.getUint32( 16, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst batchTableJSONByteLength = dataView.getUint32( 20, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst batchTableBinaryByteLength = dataView.getUint32( 24, true );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst gltfFormat = dataView.getUint32( 28, true );\r\n\r\n\t\t// Feature Table\r\n\t\tconst featureTableStart = 32;\r\n\t\tconst featureTableBuffer = buffer.slice(\r\n\t\t\tfeatureTableStart,\r\n\t\t\tfeatureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength,\r\n\t\t);\r\n\t\tconst featureTable = new FeatureTable(\r\n\t\t\tfeatureTableBuffer,\r\n\t\t\t0,\r\n\t\t\tfeatureTableJSONByteLength,\r\n\t\t\tfeatureTableBinaryByteLength,\r\n\t\t);\r\n\r\n\t\t// Batch Table\r\n\t\tconst batchTableStart = featureTableStart + featureTableJSONByteLength + featureTableBinaryByteLength;\r\n\t\tconst batchTableBuffer = buffer.slice(\r\n\t\t\tbatchTableStart,\r\n\t\t\tbatchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength,\r\n\t\t);\r\n\t\tconst batchTable = new BatchTable(\r\n\t\t\tbatchTableBuffer,\r\n\t\t\tfeatureTable.getData( 'INSTANCES_LENGTH' ),\r\n\t\t\t0,\r\n\t\t\tbatchTableJSONByteLength,\r\n\t\t\tbatchTableBinaryByteLength,\r\n\t\t);\r\n\r\n\t\tconst glbStart = batchTableStart + batchTableJSONByteLength + batchTableBinaryByteLength;\r\n\t\tconst bodyBytes = new Uint8Array( buffer, glbStart, byteLength - glbStart );\r\n\r\n\t\tlet glbBytes = null;\r\n\t\tlet promise = null;\r\n\t\tif ( gltfFormat ) {\r\n\r\n\t\t\tglbBytes = bodyBytes;\r\n\t\t\tpromise = Promise.resolve();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst externalUri = this.resolveExternalURL( arrayToString( bodyBytes ) );\r\n\t\t\tpromise = fetch( externalUri, this.fetchOptions )\r\n\t\t\t\t.then( res => {\r\n\r\n\t\t\t\t\tif ( ! res.ok ) {\r\n\r\n\t\t\t\t\t\tthrow new Error( `I3DMLoaderBase : Failed to load file \"${ externalUri }\" with status ${ res.status } : ${ res.statusText }` );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn res.arrayBuffer();\r\n\r\n\t\t\t\t} )\r\n\t\t\t\t.then( buffer => {\r\n\r\n\t\t\t\t\tglbBytes = new Uint8Array( buffer );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn promise.then( () => {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tversion,\r\n\t\t\t\tfeatureTable,\r\n\t\t\t\tbatchTable,\r\n\t\t\t\tglbBytes,\r\n\t\t\t};\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { I3DMLoaderBase } from '../base/I3DMLoaderBase.js';\r\nimport { DefaultLoadingManager, Matrix4, InstancedMesh, Vector3, Quaternion,InstancedBufferAttribute,Color } from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { ElementData } from '@/data/ElementData';\r\nimport { InstanceData } from '@/data/InstanceData';\r\nimport { MaterialData } from '@/data/MaterialData';\r\nconst tempFwd = new Vector3();\r\nconst tempUp = new Vector3();\r\nconst tempRight = new Vector3();\r\nconst tempPos = new Vector3();\r\nconst tempQuat = new Quaternion();\r\nconst tempSca = new Vector3();\r\nconst tempMat = new Matrix4();\r\nexport class I3DMLoader extends I3DMLoaderBase {\r\n\r\n\tconstructor( manager = DefaultLoadingManager ,tilesRenderer) {\r\n\r\n\t\tsuper();\r\n\t\tthis.manager = manager;\r\n\t\tthis.adjustmentTransform = new Matrix4();\r\n\t\tthis.tilesRenderer = tilesRenderer;\r\n\t}\r\n\r\n\tresolveExternalURL( url ) {\r\n\r\n\t\treturn this.manager.resolveURL( super.resolveExternalURL( url ) );\r\n\r\n\t}\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\treturn super\r\n\t\t\t.parse( buffer )\r\n\t\t\t.then( i3dm => {\r\n\r\n\t\t\t\tconst { featureTable, batchTable } = i3dm;\r\n\t\t\t\tconst gltfBuffer = i3dm.glbBytes.slice().buffer;\r\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\t\t\tconst fetchOptions = this.fetchOptions;\r\n\t\t\t\t\tconst tilesRenderer = this.tilesRenderer;\r\n\t\t\t\t\tconst manager = this.manager;\r\n\t\t\t\t\tconst loader = manager.getHandler( 'path.gltf' ) || new GLTFLoader( manager );\r\n\r\n\t\t\t\t\tif ( fetchOptions.credentials === 'include' && fetchOptions.mode === 'cors' ) {\r\n\r\n\t\t\t\t\t\tloader.setCrossOrigin( 'use-credentials' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( 'credentials' in fetchOptions ) {\r\n\r\n\t\t\t\t\t\tloader.setWithCredentials( fetchOptions.credentials === 'include' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( fetchOptions.headers ) {\r\n\r\n\t\t\t\t\t\tloader.setRequestHeader( fetchOptions.headers );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// GLTFLoader assumes the working path ends in a slash\r\n\t\t\t\t\tlet workingPath = this.workingPath;\r\n\t\t\t\t\tif ( ! /[\\\\/]$/.test( workingPath ) ) {\r\n\r\n\t\t\t\t\t\tworkingPath += '/';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst adjustmentTransform = this.adjustmentTransform;\r\n\r\n\t\t\t\t\tloader.parse( gltfBuffer, workingPath, model => {\r\n\r\n\t\t\t\t\t\tconst INSTANCES_LENGTH = featureTable.getData( 'INSTANCES_LENGTH' );\r\n\t\t\t\t\t\tconst POSITION = featureTable.getData( 'POSITION', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\r\n\t\t\t\t\t\tconst NORMAL_UP = featureTable.getData( 'NORMAL_UP', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\r\n\t\t\t\t\t\tconst NORMAL_RIGHT = featureTable.getData( 'NORMAL_RIGHT', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\r\n\t\t\t\t\t\tconst SCALE_NON_UNIFORM = featureTable.getData( 'SCALE_NON_UNIFORM', INSTANCES_LENGTH, 'FLOAT', 'VEC3' );\r\n\t\t\t\t\t\tconst SCALE = featureTable.getData( 'SCALE', INSTANCES_LENGTH, 'FLOAT', 'SCALAR' );\r\n\r\n\t\t\t\t\t\t// [\r\n\t\t\t\t\t\t// \t'RTC_CENTER',\r\n\t\t\t\t\t\t// \t'QUANTIZED_VOLUME_OFFSET',\r\n\t\t\t\t\t\t// \t'QUANTIZED_VOLUME_SCALE',\r\n\t\t\t\t\t\t// \t'EAST_NORTH_UP',\r\n\t\t\t\t\t\t// \t'POSITION_QUANTIZED',\r\n\t\t\t\t\t\t// \t'NORMAL_UP_OCT32P',\r\n\t\t\t\t\t\t// \t'NORMAL_RIGHT_OCT32P',\r\n\t\t\t\t\t\t// ].forEach( feature => {\r\n\r\n\t\t\t\t\t\t// \tif ( feature in featureTable.header ) {\r\n\r\n\t\t\t\t\t\t// \t\tconsole.warn( `I3DMLoader: Unsupported FeatureTable feature \"${ feature }\" detected.` );\r\n\r\n\t\t\t\t\t\t// \t}\r\n\r\n\t\t\t\t\t\t// } );\r\n\r\n\t\t\t\t\t\tconst instanceMap = new Map();\r\n\t\t\t\t\t\tconst instances = [];\r\n\t\t\t\t\t\tmodel.scene.traverse( child => {\r\n\r\n\t\t\t\t\t\t\tif ( child.isMesh ) {\r\n\r\n\r\n\t\t\t\t\t\t\t\tconst { geometry, material } = child;\r\n\t\t\t\t\t\t\t\tlet m = child.matrix;\r\n\t\t\t\t\t\t\t\tlet getMatrix4 = (obj) => {\r\n\t\t\t\t\t\t\t\t\tif (obj.parent) {\r\n\t\t\t\t\t\t\t\t\t\tm = m.premultiply(obj.parent.matrix);\r\n\t\t\t\t\t\t\t\t\t\tgetMatrix4(obj.parent)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tgetMatrix4(child);   \r\n\t\t\t\t\t\t\t\tgeometry.applyMatrix4(m)        \r\n\r\n\t\t\t\t\t\t\t\tconst instancedMesh = new InstancedMesh( geometry, material, INSTANCES_LENGTH );\r\n\t\t\t\t\t\t\t\tinstancedMesh.position.copy( child.position );\r\n\t\t\t\t\t\t\t\tinstancedMesh.rotation.copy( child.rotation );\r\n\t\t\t\t\t\t\t\tinstancedMesh.scale.copy( child.scale );\r\n\r\n\t\t\t\t\t\t\t\tinstancedMesh[\"orignMaterial\"]=material;\r\n\t\t\t\t\t\t\t\tinstancedMesh[\"pickMaterial\"]=MaterialData.pickMaterial\r\n\r\n\t\t\t\t\t\t\t\tinstances.push( instancedMesh );\r\n\t\t\t\t\t\t\t\tinstanceMap.set( child, instancedMesh );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tmodel.scene.clear()\r\n\t\t\t\t\t\tconst averageVector = new Vector3();\r\n\t\t\t\t\t\t// for ( let i = 0; i < INSTANCES_LENGTH; i ++ ) {\r\n\r\n\t\t\t\t\t\t// \taverageVector.x += POSITION[ i * 3 + 0 ] / INSTANCES_LENGTH;\r\n\t\t\t\t\t\t// \taverageVector.y += POSITION[ i * 3 + 1 ] / INSTANCES_LENGTH;\r\n\t\t\t\t\t\t// \taverageVector.z += POSITION[ i * 3 + 2 ] / INSTANCES_LENGTH;\r\n\r\n\t\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t\t// replace the meshes with instanced meshes\r\n\t\t\t\t\t\tinstanceMap.forEach( ( instancedMesh, mesh ) => {\r\n\t\t\t\t\t\t\t// const parent = mesh.parent;\r\n\t\t\t\t\t\t\t// if ( parent ) {\r\n\r\n\t\t\t\t\t\t\t// \t// Mesh have no children\r\n\t\t\t\t\t\t\t// \tparent.remove( mesh );\r\n\t\t\t\t\t\t\t// \tparent.add( instancedMesh );\r\n\r\n\t\t\t\t\t\t\t// \t// Center the instance around an average point to avoid jitter at large scales.\r\n\t\t\t\t\t\t\t// \t// Transform the average vector by matrix world so we can account for any existing\r\n\t\t\t\t\t\t\t// \t// transforms of the instanced mesh.\r\n\t\t\t\t\t\t\t// \t// instancedMesh.updateMatrixWorld();\r\n\t\t\t\t\t\t\t// \t// instancedMesh\r\n\t\t\t\t\t\t\t// \t// \t.position\r\n\t\t\t\t\t\t\t// \t// \t.copy( averageVector )\r\n\t\t\t\t\t\t\t// \t// \t.applyMatrix4( instancedMesh.matrixWorld );\r\n\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\tmodel.scene.add( instancedMesh );\r\n\t\t\t\t\t\t} );\r\n\r\n\r\n\t\t\t\t\t\tlet classes=null;\r\n\t\t\t\t\t\tif(batchTable&&batchTable.header&&batchTable.header.extensions&&batchTable.header.extensions[\"3DTILES_batch_table_hierarchy\"]!=null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tclasses=batchTable.header.extensions[\"3DTILES_batch_table_hierarchy\"].classes;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//let pickColors = new InstancedBufferAttribute(new Float32Array(INSTANCES_LENGTH*3 ), 3);\r\n\t\t\t\t\t\tlet elementIDS = new InstancedBufferAttribute(new Int32Array(INSTANCES_LENGTH ), 1);\r\n\t\t\t\t\t\t//const pickColor = new Color();      \r\n\t\t\t\t\t\tfor ( let i = 0; i < INSTANCES_LENGTH; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t// position\r\n\t\t\t\t\t\t\ttempPos.set(\r\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 0 ] - averageVector.x,\r\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 1 ] - averageVector.y,\r\n\t\t\t\t\t\t\t\tPOSITION[ i * 3 + 2 ] - averageVector.z,\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// rotation\r\n\t\t\t\t\t\t\tif ( NORMAL_UP ) {\r\n\r\n\t\t\t\t\t\t\t\ttempUp.set(\r\n\t\t\t\t\t\t\t\t\tNORMAL_UP[ i * 3 + 0 ],\r\n\t\t\t\t\t\t\t\t\tNORMAL_UP[ i * 3 + 1 ],\r\n\t\t\t\t\t\t\t\t\tNORMAL_UP[ i * 3 + 2 ],\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\ttempRight.set(\r\n\t\t\t\t\t\t\t\t\tNORMAL_RIGHT[ i * 3 + 0 ],\r\n\t\t\t\t\t\t\t\t\tNORMAL_RIGHT[ i * 3 + 1 ],\r\n\t\t\t\t\t\t\t\t\tNORMAL_RIGHT[ i * 3 + 2 ],\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\ttempFwd.crossVectors( tempRight, tempUp )\r\n\t\t\t\t\t\t\t\t\t.normalize();\r\n\r\n\t\t\t\t\t\t\t\ttempMat.makeBasis(\r\n\t\t\t\t\t\t\t\t\ttempRight,\r\n\t\t\t\t\t\t\t\t\ttempUp,\r\n\t\t\t\t\t\t\t\t\ttempFwd,\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\ttempQuat.setFromRotationMatrix( tempMat );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\ttempQuat.set( 0, 0, 0, 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// scale\r\n\t\t\t\t\t\t\tif ( SCALE ) {\r\n\r\n\t\t\t\t\t\t\t\ttempSca.setScalar( SCALE[ i ] );\r\n\r\n\t\t\t\t\t\t\t} else if ( SCALE_NON_UNIFORM ) {\r\n\r\n\t\t\t\t\t\t\t\ttempSca.set(\r\n\t\t\t\t\t\t\t\t\tSCALE_NON_UNIFORM[ i * 3 + 0 ],\r\n\t\t\t\t\t\t\t\t\tSCALE_NON_UNIFORM[ i * 3 + 1 ],\r\n\t\t\t\t\t\t\t\t\tSCALE_NON_UNIFORM[ i * 3 + 2 ],\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\ttempSca.set( 1, 1, 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\ttempMat.compose( tempPos, tempQuat, tempSca );\r\n\r\n\t\t\t\t\t\t\tlet element=new ElementData()\r\n\t\t\t\t\t\t\tif(classes&&classes[i])\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telement.useData=classes[i].instances\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttilesRenderer.modelData.allElementData.set(element.id,element)\r\n\t\t\t\t\t\t\t//pickColor.setHex( element.id);\r\n\t\t\t\t\t\t\t//pickColors.setXYZ( i, pickColor.r, pickColor.g, pickColor.b );\r\n\t\t\t\t\t\t\telementIDS.setX(i,element.id)\r\n\r\n\t\t\t\t\t\t\tfor ( let j = 0, l = instances.length; j < l; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tconst instance = instances[ j ];\r\n\t\t\t\t\t\t\t\tinstance.setMatrixAt( i, tempMat );\r\n\t\t\t\t\t\t\t\tinstance.setColorAt(i, MaterialData.normalColor);  \r\n\r\n\t\t\t\t\t\t\t\tlet instanceData=new InstanceData(instance, i)\r\n\r\n\t\t\t\t\t\t\t\telement.addMeshData(instanceData)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor ( let j = 0, l = instances.length; j < l; j ++ ) {\r\n\t\t\t\t\t\t\tconst instance = instances[ j ];\r\n\t\t\t\t\t\t\t//instance.geometry.setAttribute('pickColor', pickColors);\r\n\t\t\t\t\t\t\tinstance.geometry.setAttribute('elementID', elementIDS);\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t// model.batchTable = batchTable;\r\n\t\t\t\t\t\t// model.featureTable = featureTable;\r\n\r\n\t\t\t\t\t\t// model.scene.batchTable = batchTable;\r\n\t\t\t\t\t\t// model.scene.featureTable = featureTable;\r\n\r\n\t\t\t\t\t\tresolve( model );\r\n\r\n\t\t\t\t\t}, reject );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","// CMPT File Format\r\n// https://github.com/CesiumGS/3d-tiles/blob/master/specification/TileFormats/Composite/README.md\r\nimport { LoaderBase } from './LoaderBase.js';\r\nimport { readMagicBytes } from '../utilities/readMagicBytes.js';\r\n\r\nexport class CMPTLoaderBase extends LoaderBase {\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\tconst dataView = new DataView( buffer );\r\n\r\n\t\t// 16-byte header\r\n\r\n\t\t// 4 bytes\r\n\t\tconst magic = readMagicBytes( dataView );\r\n\r\n\t\tconsole.assert( magic === 'cmpt', 'CMPTLoader: The magic bytes equal \"cmpt\".' );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst version = dataView.getUint32( 4, true );\r\n\r\n\t\tconsole.assert( version === 1, 'CMPTLoader: The version listed in the header is \"1\".' );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst byteLength = dataView.getUint32( 8, true );\r\n\r\n\t\tconsole.assert( byteLength === buffer.byteLength, 'CMPTLoader: The contents buffer length listed in the header matches the file.' );\r\n\r\n\t\t// 4 bytes\r\n\t\tconst tilesLength = dataView.getUint32( 12, true );\r\n\r\n\t\tconst tiles = [];\r\n\t\tlet offset = 16;\r\n\t\tfor ( let i = 0; i < tilesLength; i ++ ) {\r\n\r\n\t\t\tconst tileView = new DataView( buffer, offset, 12 );\r\n\t\t\tconst tileMagic = readMagicBytes( tileView );\r\n\t\t\tconst tileVersion = tileView.getUint32( 4, true );\r\n\t\t\tconst byteLength = tileView.getUint32( 8, true );\r\n\r\n\t\t\tconst tileBuffer = new Uint8Array( buffer, offset, byteLength );\r\n\t\t\ttiles.push( {\r\n\r\n\t\t\t\ttype: tileMagic,\r\n\t\t\t\tbuffer: tileBuffer,\r\n\t\t\t\tversion: tileVersion,\r\n\r\n\t\t\t} );\r\n\t\t\toffset += byteLength;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tversion,\r\n\t\t\ttiles,\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\n","import { Group, DefaultLoadingManager, Matrix4 } from 'three';\r\nimport { CMPTLoaderBase } from '../base/CMPTLoaderBase.js';\r\nimport { B3DMLoader } from './B3DMLoader.js';\r\nimport { PNTSLoader } from './PNTSLoader.js';\r\nimport { I3DMLoader } from './I3DMLoader.js';\r\n\r\nexport class CMPTLoader extends CMPTLoaderBase {\r\n\r\n\tconstructor( manager = DefaultLoadingManager, tilesRenderer) {\r\n\r\n\t\tsuper();\r\n\t\tthis.manager = manager;\r\n\t\tthis.adjustmentTransform = new Matrix4();\r\n\t\tthis.tilesRenderer = tilesRenderer;\r\n\t}\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\tconst result = super.parse( buffer );\r\n\t\tconst manager = this.manager;\r\n\t\tconst adjustmentTransform = this.adjustmentTransform;\r\n\t\tconst promises = [];\r\n\r\n\t\tfor ( const i in result.tiles ) {\r\n\r\n\t\t\tconst { type, buffer } = result.tiles[ i ];\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 'b3dm': {\r\n\r\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\r\n\t\t\t\t\tconst loader = new B3DMLoader( manager,this.tilesRenderer  );\r\n\t\t\t\t\tloader.workingPath = this.workingPath;\r\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\r\n\r\n\t\t\t\t\tloader.adjustmentTransform.copy( adjustmentTransform );\r\n\r\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\r\n\t\t\t\t\tpromises.push( promise );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase 'pnts': {\r\n\r\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\r\n\t\t\t\t\tconst loader = new PNTSLoader( manager );\r\n\t\t\t\t\tloader.workingPath = this.workingPath;\r\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\r\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\r\n\t\t\t\t\tpromises.push( promise );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcase 'i3dm': {\r\n\r\n\t\t\t\t\tconst slicedBuffer = buffer.slice();\r\n\t\t\t\t\tconst loader = new I3DMLoader( manager,this.tilesRenderer  );\r\n\t\t\t\t\tloader.workingPath = this.workingPath;\r\n\t\t\t\t\tloader.fetchOptions = this.fetchOptions;\r\n\r\n\t\t\t\t\tloader.adjustmentTransform.copy( adjustmentTransform );\r\n\r\n\t\t\t\t\tconst promise = loader.parse( slicedBuffer.buffer );\r\n\t\t\t\t\tpromises.push( promise );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn Promise.all( promises ).then( results => {\r\n\r\n\t\t\tconst group = new Group();\r\n\t\t\tresults.forEach( result => {\r\n\r\n\t\t\t\tgroup.add( result.scene );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn {\r\n\r\n\t\t\t\ttiles: results,\r\n\t\t\t\tscene: group,\r\n\r\n\t\t\t};\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","export class GLTFCesiumRTCExtension {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.name = 'CESIUM_RTC';\r\n\r\n\t}\r\n\r\n\tafterRoot( res ) {\r\n\r\n\t\tif ( res.parser.json.extensions && res.parser.json.extensions.CESIUM_RTC ) {\r\n\r\n\t\t\tconst { center } = res.parser.json.extensions.CESIUM_RTC;\r\n\r\n\t\t\tif ( center ) {\r\n\r\n\t\t\t\tres.scene.position.x += center[ 0 ];\r\n\t\t\t\tres.scene.position.y += center[ 1 ];\r\n\t\t\t\tres.scene.position.z += center[ 2 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { DefaultLoadingManager } from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { LoaderBase } from '../base/LoaderBase.js';\r\nimport { GLTFCesiumRTCExtension } from './GLTFCesiumRTCExtension.js';\r\n\r\nexport class GLTFExtensionLoader extends LoaderBase {\r\n\r\n\tconstructor( manager = DefaultLoadingManager ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.manager = manager;\r\n\r\n\t}\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\treturn new Promise( ( resolve, reject ) => {\r\n\r\n\t\t\tconst manager = this.manager;\r\n\t\t\tconst fetchOptions = this.fetchOptions;\r\n\t\t\tlet loader = manager.getHandler( 'path.gltf' ) || manager.getHandler( 'path.glb' );\r\n\r\n\t\t\tif ( ! loader ) {\r\n\r\n\t\t\t\tloader = new GLTFLoader( manager );\r\n\r\n\t\t\t\tloader.register( () => new GLTFCesiumRTCExtension() );\r\n\t\t\t\tif ( fetchOptions.credentials === 'include' && fetchOptions.mode === 'cors' ) {\r\n\r\n\t\t\t\t\tloader.setCrossOrigin( 'use-credentials' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( 'credentials' in fetchOptions ) {\r\n\r\n\t\t\t\t\tloader.setWithCredentials( fetchOptions.credentials === 'include' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( fetchOptions.headers ) {\r\n\r\n\t\t\t\t\tloader.setRequestHeader( fetchOptions.headers );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// assume any pre-registered loader has paths configured as the user desires, but if we're making\r\n\t\t\t// a new loader, use the working path during parse to support relative uris on other hosts\r\n\t\t\tlet resourcePath = loader.resourcePath || loader.path || this.workingPath;\r\n\t\t\tif ( ! /[\\\\/]$/.test( resourcePath ) && resourcePath.length ) {\r\n\r\n\t\t\t\tresourcePath += '/';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tloader.parse( buffer, resourcePath, model => {\r\n\r\n\t\t\t\tresolve( model );\r\n\r\n\t\t\t}, reject );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n","import { Group, Matrix4 } from 'three';\r\n\r\n// Specialization of \"Group\" that only updates world matrices of children if\r\n// the transform has changed since the last update and ignores the \"force\"\r\n// parameter under the assumption that the children tiles will not move.\r\nconst tempMat = new Matrix4();\r\nexport class TilesGroup extends Group {\r\n\r\n\tconstructor( tilesRenderer ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.name = 'TilesRenderer.TilesGroup';\r\n\t\tthis.tilesRenderer = tilesRenderer;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tif ( this.tilesRenderer.optimizeRaycast ) {\r\n\r\n\t\t\tthis.tilesRenderer.raycast( raycaster, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate ) {\r\n\r\n\t\t\tthis.updateMatrix();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\ttempMat.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttempMat.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\t// check if the matrix changed relative to what it was.\r\n\t\t\tconst elA = tempMat.elements;\r\n\t\t\tconst elB = this.matrixWorld.elements;\r\n\t\t\tlet isDifferent = false;\r\n\t\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\tconst itemA = elA[ i ];\r\n\t\t\t\tconst itemB = elB[ i ];\r\n\t\t\t\tconst diff = Math.abs( itemA - itemB );\r\n\r\n\t\t\t\tif ( diff > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tisDifferent = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isDifferent ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( tempMat );\r\n\r\n\t\t\t\t// update children\r\n\t\t\t\t// the children will not have to change unless the parent group has updated\r\n\t\t\t\tconst children = this.children;\r\n\t\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tchildren[ i ].updateMatrixWorld();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n","import { Vector3, Spherical } from 'three';\r\n\r\n// Cesium / 3D tiles Spheroid:\r\n// - Up is Z at 90 degrees latitude\r\n// - 0, 0 latitude, longitude is X axis\r\n//      Z\r\n//      |\r\n//      |\r\n//      .----- Y\r\n//     /\r\n//   X\r\n\r\n\r\n// Three.js Spherical Coordinates\r\n// - Up is Y at 90 degrees latitude\r\n// - 0, 0 latitude, longitude is Z\r\n//       Y\r\n//      |\r\n//      |\r\n//      .----- X\r\n//     /\r\n//   Z\r\n\r\nfunction swapFrame( target ) {\r\n\r\n\tconst { x, y, z } = target;\r\n\ttarget.x = z;\r\n\ttarget.y = x;\r\n\ttarget.z = y;\r\n\r\n}\r\n\r\nexport function sphericalPhiToLatitude( phi ) {\r\n\r\n\treturn - ( phi - Math.PI / 2 );\r\n\r\n}\r\n\r\nexport function latitudeToSphericalPhi( latitude ) {\r\n\r\n\treturn - latitude + Math.PI / 2;\r\n\r\n}\r\n\r\nconst _spherical = new Spherical();\r\nconst _norm = new Vector3();\r\nconst _vec = new Vector3();\r\n\r\nexport class Ellipsoid {\r\n\r\n\tconstructor( x = 1, y = 1, z = 1 ) {\r\n\r\n\t\tthis.radius = new Vector3( x, y, z );\r\n\r\n\t}\r\n\r\n\tgetCartographicToPosition( lat, lon, height, target ) {\r\n\r\n\t\t// https://github.com/CesiumGS/cesium/blob/main/Source/Core/Ellipsoid.js#L396\r\n\t\tconst radius = this.radius;\r\n\t\t_spherical.set( 1, latitudeToSphericalPhi( lat ), lon );\r\n\t\t_norm.setFromSpherical( _spherical ).normalize();\r\n\r\n\t\tswapFrame( _norm );\r\n\r\n\t\t_vec.copy( _norm );\r\n\t\t_vec.x *= radius.x ** 2;\r\n\t\t_vec.y *= radius.y ** 2;\r\n\t\t_vec.z *= radius.z ** 2;\r\n\r\n\t\tconst gamma = Math.sqrt( _norm.dot( _vec ) );\r\n\t\t_vec.divideScalar( gamma );\r\n\r\n\t\treturn target.copy( _vec ).addScaledVector( _norm, height );\r\n\r\n\t}\r\n\r\n\tgetCartographicToNormal( lat, lon, target ) {\r\n\r\n\t\t_spherical.set( 1, ( - lat + Math.PI / 2 ), lon );\r\n\t\ttarget.setFromSpherical( _spherical ).normalize();\r\n\r\n\t\tswapFrame( target );\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetPositionToNormal( pos, target ) {\r\n\r\n\t\tconst radius = this.radius;\r\n\t\ttarget.copy( pos );\r\n\t\ttarget.x /= radius.x ** 2;\r\n\t\ttarget.y /= radius.y ** 2;\r\n\t\ttarget.z /= radius.z ** 2;\r\n\t\ttarget.normalize();\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n}\r\n","import { MathUtils, Matrix4 } from 'three';\r\nimport { Vector3 } from 'three';\r\nimport { Ellipsoid } from './Ellipsoid.js';\r\n\r\nconst PI = Math.PI;\r\nconst HALF_PI = PI / 2;\r\n\r\nconst _orthoX = new Vector3();\r\nconst _orthoY = new Vector3();\r\nconst _orthoZ = new Vector3();\r\nconst _invMatrix = new Matrix4();\r\n\r\nlet _poolIndex = 0;\r\nconst _pointsPool = [];\r\nfunction getVector( usePool = false ) {\r\n\r\n\tif ( ! usePool ) {\r\n\r\n\t\treturn new Vector3();\r\n\r\n\t}\r\n\r\n\tif ( ! _pointsPool[ _poolIndex ] ) {\r\n\r\n\t\t_pointsPool[ _poolIndex ] = new Vector3();\r\n\r\n\t}\r\n\r\n\t_poolIndex ++;\r\n\treturn _pointsPool[ _poolIndex - 1 ];\r\n\r\n}\r\n\r\nfunction resetPool() {\r\n\r\n\t_poolIndex = 0;\r\n\r\n}\r\n\r\nexport class EllipsoidRegion extends Ellipsoid {\r\n\r\n\tconstructor(\r\n\t\tx, y, z,\r\n\t\tlatStart = - HALF_PI, latEnd = HALF_PI,\r\n\t\tlonStart = 0, lonEnd = 2 * PI,\r\n\t\theightStart = 0, heightEnd = 0\r\n\t) {\r\n\r\n\t\tsuper( x, y, z );\r\n\t\tthis.latStart = latStart;\r\n\t\tthis.latEnd = latEnd;\r\n\t\tthis.lonStart = lonStart;\r\n\t\tthis.lonEnd = lonEnd;\r\n\t\tthis.heightStart = heightStart;\r\n\t\tthis.heightEnd = heightEnd;\r\n\r\n\t}\r\n\r\n\t_getPoints( usePool = false ) {\r\n\r\n\t\tconst {\r\n\t\t\tlatStart, latEnd,\r\n\t\t\tlonStart, lonEnd,\r\n\t\t\theightStart, heightEnd,\r\n\t\t} = this;\r\n\r\n\t\tconst midLat = MathUtils.mapLinear( 0.5, 0, 1, latStart, latEnd );\r\n\t\tconst midLon = MathUtils.mapLinear( 0.5, 0, 1, lonStart, lonEnd );\r\n\r\n\t\tconst lonOffset = Math.floor( lonStart / HALF_PI ) * HALF_PI;\r\n\t\tconst latlon = [\r\n\t\t\t[ - PI / 2, 0 ],\r\n\t\t\t[ PI / 2, 0 ],\r\n\t\t\t[ 0, lonOffset ],\r\n\t\t\t[ 0, lonOffset + PI / 2 ],\r\n\t\t\t[ 0, lonOffset + PI ],\r\n\t\t\t[ 0, lonOffset + 3 * PI / 2 ],\r\n\r\n\t\t\t[ latStart, lonEnd ],\r\n\t\t\t[ latEnd, lonEnd ],\r\n\t\t\t[ latStart, lonStart ],\r\n\t\t\t[ latEnd, lonStart ],\r\n\r\n\t\t\t[ 0, lonStart ],\r\n\t\t\t[ 0, lonEnd ],\r\n\r\n\t\t\t[ midLat, midLon ],\r\n\t\t\t[ latStart, midLon ],\r\n\t\t\t[ latEnd, midLon ],\r\n\t\t\t[ midLat, lonStart ],\r\n\t\t\t[ midLat, lonEnd ],\r\n\r\n\t\t];\r\n\r\n\t\tconst target = [];\r\n\t\tconst total = latlon.length;\r\n\r\n\t\tfor ( let z = 0; z <= 1; z ++ ) {\r\n\r\n\t\t\tconst height = MathUtils.mapLinear( z, 0, 1, heightStart, heightEnd );\r\n\t\t\tfor ( let i = 0, l = total; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst [ lat, lon ] = latlon[ i ];\r\n\t\t\t\tif ( lat >= latStart && lat <= latEnd && lon >= lonStart && lon <= lonEnd ) {\r\n\r\n\t\t\t\t\tconst v = getVector( usePool );\r\n\t\t\t\t\ttarget.push( v );\r\n\t\t\t\t\tthis.getCartographicToPosition( lat, lon, height, v );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetBoundingBox( box, matrix ) {\r\n\r\n\t\tresetPool();\r\n\r\n\t\tconst {\r\n\t\t\tlatStart, latEnd,\r\n\t\t\tlonStart, lonEnd,\r\n\t\t} = this;\r\n\r\n\t\tconst latRange = latEnd - latStart;\r\n\t\tif ( latRange < PI / 2 ) {\r\n\r\n\t\t\t// get the midway point for the region\r\n\t\t\tconst midLat = MathUtils.mapLinear( 0.5, 0, 1, latStart, latEnd );\r\n\t\t\tconst midLon = MathUtils.mapLinear( 0.5, 0, 1, lonStart, lonEnd );\r\n\r\n\t\t\t// get the frame matrix for the box - works well for smaller regions\r\n\t\t\tthis.getCartographicToNormal( midLat, midLon, _orthoZ );\r\n\t\t\t_orthoY.set( 0, 0, 1 );\r\n\t\t\t_orthoX.crossVectors( _orthoY, _orthoZ );\r\n\t\t\t_orthoY.crossVectors( _orthoX, _orthoZ );\r\n\t\t\tmatrix.makeBasis( _orthoX, _orthoY, _orthoZ );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_orthoX.set( 1, 0, 0 );\r\n\t\t\t_orthoY.set( 0, 1, 0 );\r\n\t\t\t_orthoZ.set( 0, 0, 1 );\r\n\t\t\tmatrix.makeBasis( _orthoX, _orthoY, _orthoZ );\r\n\r\n\t\t}\r\n\r\n\t\t// transform the points into the local frame\r\n\t\t_invMatrix.copy( matrix ).invert();\r\n\r\n\t\tconst points = this._getPoints( true );\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tpoints[ i ].applyMatrix4( _invMatrix );\r\n\r\n\t\t}\r\n\r\n\t\t// init the box\r\n\t\tbox.makeEmpty();\r\n\t\tbox.setFromPoints( points );\r\n\r\n\t}\r\n\r\n\tgetBoundingSphere( sphere, center ) {\r\n\r\n\t\tresetPool();\r\n\r\n\t\tconst points = this._getPoints( true );\r\n\t\tsphere.makeEmpty();\r\n\t\tsphere.setFromPoints( points, center );\r\n\r\n\t}\r\n\r\n}\r\n","import { Matrix4, Sphere, Ray, Vector3 } from 'three';\r\nconst _sphere = new Sphere();\r\nconst _mat = new Matrix4();\r\nconst _vec = new Vector3();\r\nconst _vec2 = new Vector3();\r\nconst _ray = new Ray();\r\n\r\nconst _hitArray = [];\r\n\r\nfunction distanceSort( a, b ) {\r\n\r\n\treturn a.distance - b.distance;\r\n\r\n}\r\n\r\nfunction intersectTileScene( scene, raycaster, intersects ) {\r\n\r\n\t// Don't intersect the box3 helpers because those are used for debugging\r\n\tscene.traverse( c => {\r\n\r\n\t\t// We set the default raycast function to empty so three.js doesn't automatically cast against it\r\n\t\tObject.getPrototypeOf( c ).raycast.call( c, raycaster, intersects );\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// Returns the closest hit when traversing the tree\r\nexport function raycastTraverseFirstHit( root, group, activeTiles, raycaster ) {\r\n\r\n\t// If the root is active make sure we've checked it\r\n\tif ( activeTiles.has( root ) ) {\r\n\r\n\t\tintersectTileScene( root.cached.scene, raycaster, _hitArray );\r\n\r\n\t\tif ( _hitArray.length > 0 ) {\r\n\r\n\t\t\tif ( _hitArray.length > 1 ) {\r\n\r\n\t\t\t\t_hitArray.sort( distanceSort );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst res = _hitArray[ 0 ];\r\n\t\t\t_hitArray.length = 0;\r\n\t\t\treturn res;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// TODO: can we avoid creating a new array here every time to save on memory?\r\n\tconst array = [];\r\n\tconst children = root.children;\r\n\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\tconst tile = children[ i ];\r\n\t\tconst cached = tile.cached;\r\n\t\tconst groupMatrixWorld = group.matrixWorld;\r\n\r\n\t\t_mat.copy( groupMatrixWorld );\r\n\r\n\t\t// if we don't hit the sphere then early out\r\n\t\tconst sphere = cached.sphere;\r\n\t\tif ( sphere ) {\r\n\r\n\t\t\t_sphere.copy( sphere );\r\n\t\t\t_sphere.applyMatrix4( _mat );\r\n\t\t\tif ( ! raycaster.ray.intersectsSphere( _sphere ) ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// TODO: check region?\r\n\r\n\t\tconst boundingBox = cached.box;\r\n\t\tconst obbMat = cached.boxTransform;\r\n\t\tif ( boundingBox ) {\r\n\r\n\t\t\t_mat.multiply( obbMat ).invert();\r\n\t\t\t_ray.copy( raycaster.ray );\r\n\t\t\t_ray.applyMatrix4( _mat );\r\n\t\t\tif ( _ray.intersectBox( boundingBox, _vec ) ) {\r\n\r\n\t\t\t\t// account for tile scale\r\n\t\t\t\t_vec2.setFromMatrixScale( _mat );\r\n\t\t\t\tconst invScale = _vec2.x;\r\n\r\n\t\t\t\tif ( Math.abs( Math.max( _vec2.x - _vec2.y, _vec2.x - _vec2.z ) ) > 1e-6 ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'ThreeTilesRenderer : Non uniform scale used for tile which may cause issues when raycasting.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if we intersect the box save the distance to the tile bounds\r\n\t\t\t\tconst data = {\r\n\t\t\t\t\tdistance: Infinity,\r\n\t\t\t\t\ttile: null\r\n\t\t\t\t};\r\n\t\t\t\tarray.push( data );\r\n\r\n\t\t\t\tif ( boundingBox.containsPoint( _ray.origin ) ) {\r\n\r\n\t\t\t\t\tdata.distance = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdata.distance = _vec.distanceToSquared( _ray.origin ) * invScale * invScale;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.tile = tile;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// sort them by ascending distance\r\n\tarray.sort( distanceSort );\r\n\r\n\t// traverse until we find the best hit and early out if a tile bounds\r\n\t// couldn't possible include a best hit\r\n\tlet bestDistanceSquared = Infinity;\r\n\tlet bestHit = null;\r\n\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\tconst data = array[ i ];\r\n\t\tconst distanceSquared = data.distance;\r\n\t\tif ( distanceSquared > bestDistanceSquared ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst tile = data.tile;\r\n\t\t\tconst scene = tile.cached.scene;\r\n\r\n\t\t\tlet hit = null;\r\n\t\t\tif ( activeTiles.has( tile ) ) {\r\n\r\n\t\t\t\t// save the hit if it's closer\r\n\t\t\t\tintersectTileScene( scene, raycaster, _hitArray );\r\n\t\t\t\tif ( _hitArray.length > 0 ) {\r\n\r\n\t\t\t\t\tif ( _hitArray.length > 1 ) {\r\n\r\n\t\t\t\t\t\t_hitArray.sort( distanceSort );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thit = _hitArray[ 0 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thit = raycastTraverseFirstHit( tile, group, activeTiles, raycaster );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hit ) {\r\n\r\n\t\t\t\tconst hitDistanceSquared = hit.distance * hit.distance;\r\n\t\t\t\tif ( hitDistanceSquared < bestDistanceSquared ) {\r\n\r\n\t\t\t\t\tbestDistanceSquared = hitDistanceSquared;\r\n\t\t\t\t\tbestHit = hit;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t_hitArray.length = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn bestHit;\r\n\r\n}\r\n\r\nexport function raycastTraverse( tile, group, activeTiles, raycaster, intersects ) {\r\n\r\n\tconst cached = tile.cached;\r\n\tconst groupMatrixWorld = group.matrixWorld;\r\n\r\n\t_mat.copy( groupMatrixWorld );\r\n\r\n\t// Early out if we don't hit this tile sphere\r\n\tconst sphere = cached.sphere;\r\n\tif ( sphere ) {\r\n\r\n\t\t_sphere.copy( sphere );\r\n\t\t_sphere.applyMatrix4( _mat );\r\n\t\tif ( ! raycaster.ray.intersectsSphere( _sphere ) ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Early out if we don't this this tile box\r\n\tconst boundingBox = cached.box;\r\n\tconst obbMat = cached.boxTransform;\r\n\tif ( boundingBox ) {\r\n\r\n\t\t_mat.multiply( obbMat ).invert();\r\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _mat );\r\n\t\tif ( ! _ray.intersectsBox( boundingBox ) ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// TODO: check region\r\n\r\n\tconst scene = cached.scene;\r\n\tif ( activeTiles.has( tile ) ) {\r\n\r\n\t\tintersectTileScene( scene, raycaster, intersects );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tconst children = tile.children;\r\n\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\traycastTraverse( children[ i ], group, activeTiles, raycaster, intersects );\r\n\r\n\t}\r\n\r\n}\r\n","import { TilesRendererBase } from '../base/TilesRendererBase.js';\r\nimport { WGS84_HEIGHT, WGS84_RADIUS } from '../base/constants.js';\r\nimport { B3DMLoader } from './B3DMLoader.js';\r\nimport { PNTSLoader } from './PNTSLoader.js';\r\nimport { I3DMLoader } from './I3DMLoader.js';\r\nimport { CMPTLoader } from './CMPTLoader.js';\r\nimport { GLTFExtensionLoader } from './GLTFExtensionLoader.js';\r\nimport { TilesGroup } from './TilesGroup.js';\r\nimport { EllipsoidRegion } from './math/EllipsoidRegion.js';\r\nimport {\r\n\tMatrix4,\r\n\tBox3,\r\n\tSphere,\r\n\tVector3,\r\n\tVector2,\r\n\tFrustum,\r\n\tLoadingManager\r\n} from 'three';\r\nimport { raycastTraverse, raycastTraverseFirstHit } from './raycastTraverse.js';\r\nimport { readMagicBytes } from '../utilities/readMagicBytes.js';\r\n\r\nconst INITIAL_FRUSTUM_CULLED = Symbol( 'INITIAL_FRUSTUM_CULLED' );\r\nconst tempMat = new Matrix4();\r\nconst tempMat2 = new Matrix4();\r\nconst tempVector = new Vector3();\r\nconst vecX = new Vector3();\r\nconst vecY = new Vector3();\r\nconst vecZ = new Vector3();\r\n\r\nconst X_AXIS = new Vector3( 1, 0, 0 );\r\nconst Y_AXIS = new Vector3( 0, 1, 0 );\r\n\r\nfunction updateFrustumCulled( object, toInitialValue ) {\r\n\r\n\tobject.traverse( c => {\r\n\r\n\t\tc.frustumCulled = c[ INITIAL_FRUSTUM_CULLED ] && toInitialValue;\r\n\r\n\t} );\r\n\r\n}\r\n\r\nexport class TilesRenderer extends TilesRendererBase {\r\n\r\n\tget autoDisableRendererCulling() {\r\n\r\n\t\treturn this._autoDisableRendererCulling;\r\n\r\n\t}\r\n\r\n\tset autoDisableRendererCulling( value ) {\r\n\r\n\t\tif ( this._autoDisableRendererCulling !== value ) {\r\n\r\n\t\t\tsuper._autoDisableRendererCulling = value;\r\n\t\t\tthis.forEachLoadedModel( ( scene ) => {\r\n\r\n\t\t\t\tupdateFrustumCulled( scene, ! value );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconstructor( ...args ) {\r\n\r\n\t\tsuper( ...args );\r\n\t\tthis.group = new TilesGroup( this );\r\n\t\tthis.cameras = [];\r\n\t\tthis.cameraMap = new Map();\r\n\t\tthis.cameraInfo = [];\r\n\t\tthis.activeTiles = new Set();\r\n\t\tthis.visibleTiles = new Set();\r\n\t\tthis._autoDisableRendererCulling = true;\r\n\t\tthis.optimizeRaycast = true;\r\n\r\n\t\tthis.onLoadTileSet = null;\r\n\t\tthis.onLoadModel = null;\r\n\t\tthis.onDisposeModel = null;\r\n\t\tthis.onTileVisibilityChange = null;\r\n\r\n\t\tconst manager = new LoadingManager();\r\n\t\tmanager.setURLModifier( url => {\r\n\r\n\t\t\tif ( this.preprocessURL ) {\r\n\r\n\t\t\t\treturn this.preprocessURL( url );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn url;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\tthis.manager = manager;\r\n\r\n\t\t// Setting up the override raycasting function to be used by\r\n\t\t// 3D objects created by this renderer\r\n\t\tconst tilesRenderer = this;\r\n\t\tthis._overridenRaycast = function ( raycaster, intersects ) {\r\n\r\n\t\t\tif ( ! tilesRenderer.optimizeRaycast ) {\r\n\r\n\t\t\t\tObject.getPrototypeOf( this ).raycast.call( this, raycaster, intersects );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/* Public API */\r\n\tgetBounds( box ) {\r\n\r\n\t\tif ( ! this.root ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tconst cached = this.root.cached;\r\n\t\tconst boundingBox = cached.box;\r\n\t\tconst obbMat = cached.boxTransform;\r\n\r\n\t\tif ( boundingBox ) {\r\n\r\n\t\t\tbox.copy( boundingBox );\r\n\t\t\tbox.applyMatrix4( obbMat );\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetOrientedBounds( box, matrix ) {\r\n\r\n\t\tif ( ! this.root ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tconst cached = this.root.cached;\r\n\t\tconst boundingBox = cached.box;\r\n\t\tconst obbMat = cached.boxTransform;\r\n\r\n\t\tif ( boundingBox ) {\r\n\r\n\t\t\tbox.copy( boundingBox );\r\n\t\t\tmatrix.copy( obbMat );\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetBoundingSphere( sphere ) {\r\n\r\n\t\tif ( ! this.root ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingSphere = this.root.cached.sphere;\r\n\r\n\t\tif ( boundingSphere ) {\r\n\r\n\t\t\tsphere.copy( boundingSphere );\r\n\t\t\treturn true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tforEachLoadedModel( callback ) {\r\n\r\n\t\tthis.traverse( tile => {\r\n\r\n\t\t\tconst scene = tile.cached.scene;\r\n\t\t\tif ( scene ) {\r\n\r\n\t\t\t\tcallback( scene, tile );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tif ( ! this.root ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( raycaster.firstHitOnly ) {\r\n\r\n\t\t\tconst hit = raycastTraverseFirstHit( this.root, this.group, this.activeTiles, raycaster );\r\n\t\t\tif ( hit ) {\r\n\r\n\t\t\t\tintersects.push( hit );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\traycastTraverse( this.root, this.group, this.activeTiles, raycaster, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\thasCamera( camera ) {\r\n\r\n\t\treturn this.cameraMap.has( camera );\r\n\r\n\t}\r\n\r\n\tsetCamera( camera ) {\r\n\r\n\t\tconst cameras = this.cameras;\r\n\t\tconst cameraMap = this.cameraMap;\r\n\t\tif ( ! cameraMap.has( camera ) ) {\r\n\r\n\t\t\tcameraMap.set( camera, new Vector2() );\r\n\t\t\tcameras.push( camera );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tsetResolution( camera, xOrVec, y ) {\r\n\r\n\t\tconst cameraMap = this.cameraMap;\r\n\t\tif ( ! cameraMap.has( camera ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( xOrVec instanceof Vector2 ) {\r\n\r\n\t\t\tcameraMap.get( camera ).copy( xOrVec );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcameraMap.get( camera ).set( xOrVec, y );\r\n\r\n\t\t}\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tsetResolutionFromRenderer( camera, renderer ) {\r\n\r\n\t\tconst cameraMap = this.cameraMap;\r\n\t\tif ( ! cameraMap.has( camera ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\tconst resolution = cameraMap.get( camera );\r\n\t\trenderer.getSize( resolution );\r\n\t\tresolution.multiplyScalar( renderer.getPixelRatio() );\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tdeleteCamera( camera ) {\r\n\r\n\t\tconst cameras = this.cameras;\r\n\t\tconst cameraMap = this.cameraMap;\r\n\t\tif ( cameraMap.has( camera ) ) {\r\n\r\n\t\t\tconst index = cameras.indexOf( camera );\r\n\t\t\tcameras.splice( index, 1 );\r\n\t\t\tcameraMap.delete( camera );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\t/* Overriden */\r\n\tfetchTileSet( url, ...rest ) {\r\n\r\n\t\tconst pr = super.fetchTileSet( url, ...rest );\r\n\t\tpr.then( json => {\r\n\r\n\t\t\tif ( this.onLoadTileSet ) {\r\n\r\n\t\t\t\t// Push this onto the end of the event stack to ensure this runs\r\n\t\t\t\t// after the base renderer has placed the provided json where it\r\n\t\t\t\t// needs to be placed and is ready for an update.\r\n\t\t\t\tPromise.resolve().then( () => {\r\n\r\n\t\t\t\t\tthis.onLoadTileSet( json, url );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\treturn pr;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst group = this.group;\r\n\t\tconst cameras = this.cameras;\r\n\t\tconst cameraMap = this.cameraMap;\r\n\t\tconst cameraInfo = this.cameraInfo;\r\n\r\n\t\tif ( cameras.length === 0 ) {\r\n\r\n\t\t\tconsole.warn( 'TilesRenderer: no cameras defined. Cannot update 3d tiles.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// automatically scale the array of cameraInfo to match the cameras\r\n\t\twhile ( cameraInfo.length > cameras.length ) {\r\n\r\n\t\t\tcameraInfo.pop();\r\n\r\n\t\t}\r\n\r\n\t\twhile ( cameraInfo.length < cameras.length ) {\r\n\r\n\t\t\tcameraInfo.push( {\r\n\r\n\t\t\t\tfrustum: new Frustum(),\r\n\t\t\t\tisOrthographic: false,\r\n\t\t\t\tsseDenominator: - 1, // used if isOrthographic:false\r\n\t\t\t\tposition: new Vector3(),\r\n\t\t\t\tinvScale: - 1,\r\n\t\t\t\tpixelSize: 0, // used if isOrthographic:true\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\t// extract scale of group container\r\n\t\ttempMat2.copy( group.matrixWorld ).invert();\r\n\r\n\t\ttempVector.setFromMatrixScale( tempMat2 );\r\n\t\tconst invScale = tempVector.x;\r\n\r\n\t\tif ( Math.abs( Math.max( tempVector.x - tempVector.y, tempVector.x - tempVector.z ) ) > 1e-6 ) {\r\n\r\n\t\t\tconsole.warn( 'ThreeTilesRenderer : Non uniform scale used for tile which may cause issues when calculating screen space error.' );\r\n\r\n\t\t}\r\n\r\n\t\t// store the camera cameraInfo in the 3d tiles root frame\r\n\t\tfor ( let i = 0, l = cameraInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst camera = cameras[ i ];\r\n\t\t\tconst info = cameraInfo[ i ];\r\n\t\t\tconst frustum = info.frustum;\r\n\t\t\tconst position = info.position;\r\n\t\t\tconst resolution = cameraMap.get( camera );\r\n\r\n\t\t\tif ( resolution.width === 0 || resolution.height === 0 ) {\r\n\r\n\t\t\t\tconsole.warn( 'TilesRenderer: resolution for camera error calculation is not set.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Read the calculated projection matrix directly to support custom Camera implementations\r\n\t\t\tconst projection = camera.projectionMatrix.elements;\r\n\r\n\t\t\t// The last element of the projection matrix is 1 for orthographic, 0 for perspective\r\n\t\t\tinfo.isOrthographic = projection[ 15 ] === 1;\r\n\r\n\t\t\tif ( info.isOrthographic ) {\r\n\r\n\t\t\t\t// See OrthographicCamera.updateProjectionMatrix and Matrix4.makeOrthographic:\r\n\t\t\t\t// the view width and height are used to populate matrix elements 0 and 5.\r\n\t\t\t\tconst w = 2 / projection[ 0 ];\r\n\t\t\t\tconst h = 2 / projection[ 5 ];\r\n\t\t\t\tinfo.pixelSize = Math.max( h / resolution.height, w / resolution.width );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// See PerspectiveCamera.updateProjectionMatrix and Matrix4.makePerspective:\r\n\t\t\t\t// the vertical FOV is used to populate matrix element 5.\r\n\t\t\t\tinfo.sseDenominator = ( 2 / projection[ 5 ] ) / resolution.height;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinfo.invScale = invScale;\r\n\r\n\t\t\t// get frustum in group root frame\r\n\t\t\ttempMat.copy( group.matrixWorld );\r\n\t\t\ttempMat.premultiply( camera.matrixWorldInverse );\r\n\t\t\ttempMat.premultiply( camera.projectionMatrix );\r\n\r\n\t\t\tfrustum.setFromProjectionMatrix( tempMat );\r\n\r\n\t\t\t// get transform position in group root frame\r\n\t\t\tposition.set( 0, 0, 0 );\r\n\t\t\tposition.applyMatrix4( camera.matrixWorld );\r\n\t\t\tposition.applyMatrix4( tempMat2 );\r\n\r\n\t\t}\r\n\r\n\t\tsuper.update();\r\n\r\n\t}\r\n\r\n\tpreprocessNode( tile, parentTile, tileSetDir ) {\r\n\r\n\t\tsuper.preprocessNode( tile, parentTile, tileSetDir );\r\n\r\n\t\t// const transform = new Matrix4();\r\n\t\t// if ( tile.transform ) {\r\n\r\n\t\t// \tconst transformArr = tile.transform;\r\n\t\t// \tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t// \t\ttransform.elements[ i ] = transformArr[ i ];\r\n\r\n\t\t// \t}\r\n\r\n\t\t// } else {\r\n\r\n\t\t// \ttransform.identity();\r\n\r\n\t\t// }\r\n\r\n\t\t// if ( parentTile ) {\r\n\r\n\t\t// \ttransform.premultiply( parentTile.cached.transform );\r\n\r\n\t\t// }\r\n\t\tconst transform = new Matrix4();\r\n        if (tile.transform) {\r\n\r\n            if (!parentTile) {\r\n                tile.transform[0] = 1\r\n                tile.transform[1] = 0\r\n                tile.transform[2] = 0\r\n                tile.transform[3] = 0\r\n                tile.transform[4] = 0\r\n                tile.transform[5] = 1\r\n                tile.transform[6] = 0\r\n                tile.transform[7] = 0\r\n                tile.transform[8] = 0\r\n                tile.transform[9] = 0\r\n                tile.transform[10] = 1\r\n                tile.transform[11] = 0\r\n                tile.transform[12] = 0\r\n                tile.transform[13] = 0\r\n                tile.transform[14] = 0\r\n                tile.transform[15] = 1.0\r\n            }\r\n            const transformArr = tile.transform;\r\n            for (let i = 0; i < 16; i++) {\r\n\r\n                transform.elements[i] = transformArr[i];\r\n\r\n            }\r\n        }\r\n\r\n        if (parentTile) {\r\n\r\n            transform.premultiply(parentTile.cached.transform);\r\n\r\n        }\r\n\r\n\t\tconst transformInverse = new Matrix4().copy( transform ).invert();\r\n\r\n\t\tlet box = null;\r\n\t\tlet boxTransform = null;\r\n\t\tlet boxTransformInverse = null;\r\n\t\tif ( 'box' in tile.boundingVolume ) {\r\n\r\n\t\t\tconst data = tile.boundingVolume.box;\r\n\t\t\tbox = new Box3();\r\n\t\t\tboxTransform = new Matrix4();\r\n\t\t\tboxTransformInverse = new Matrix4();\r\n\r\n\t\t\t// get the extents of the bounds in each axis\r\n\t\t\tvecX.set( data[ 3 ], data[ 4 ], data[ 5 ] );\r\n\t\t\tvecY.set( data[ 6 ], data[ 7 ], data[ 8 ] );\r\n\t\t\tvecZ.set( data[ 9 ], data[ 10 ], data[ 11 ] );\r\n\r\n\t\t\tconst scaleX = vecX.length();\r\n\t\t\tconst scaleY = vecY.length();\r\n\t\t\tconst scaleZ = vecZ.length();\r\n\r\n\t\t\tvecX.normalize();\r\n\t\t\tvecY.normalize();\r\n\t\t\tvecZ.normalize();\r\n\r\n\t\t\t// handle the case where the box has a dimension of 0 in one axis\r\n\t\t\tif ( scaleX === 0 ) {\r\n\r\n\t\t\t\tvecX.crossVectors( vecY, vecZ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scaleY === 0 ) {\r\n\r\n\t\t\t\tvecY.crossVectors( vecX, vecZ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( scaleZ === 0 ) {\r\n\r\n\t\t\t\tvecZ.crossVectors( vecX, vecY );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// create the oriented frame that the box exists in\r\n\t\t\tboxTransform.set(\r\n\t\t\t\tvecX.x, vecY.x, vecZ.x, data[ 0 ],\r\n\t\t\t\tvecX.y, vecY.y, vecZ.y, data[ 1 ],\r\n\t\t\t\tvecX.z, vecY.z, vecZ.z, data[ 2 ],\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\t\tboxTransform.premultiply( transform );\r\n\t\t\tboxTransformInverse.copy( boxTransform ).invert();\r\n\r\n\t\t\t// scale the box by the extents\r\n\t\t\tbox.min.set( - scaleX, - scaleY, - scaleZ );\r\n\t\t\tbox.max.set( scaleX, scaleY, scaleZ );\r\n\r\n\t\t}\r\n\r\n\t\tlet sphere = null;\r\n\t\tif ( 'sphere' in tile.boundingVolume ) {\r\n\r\n\t\t\tconst data = tile.boundingVolume.sphere;\r\n\t\t\tsphere = new Sphere();\r\n\t\t\tsphere.center.set( data[ 0 ], data[ 1 ], data[ 2 ] );\r\n\t\t\tsphere.radius = data[ 3 ];\r\n\t\t\tsphere.applyMatrix4( transform );\r\n\r\n\t\t} else if ( 'box' in tile.boundingVolume ) {\r\n\r\n\t\t\tconst data = tile.boundingVolume.box;\r\n\t\t\tsphere = new Sphere();\r\n\t\t\tbox.getBoundingSphere( sphere );\r\n\t\t\tsphere.center.set( data[ 0 ], data[ 1 ], data[ 2 ] );\r\n\t\t\tsphere.applyMatrix4( transform );\r\n\r\n\t\t}\r\n\r\n\t\tlet region = null;\r\n\t\tif ( 'region' in tile.boundingVolume ) {\r\n\r\n\t\t\tconst data = tile.boundingVolume.region;\r\n\t\t\tconst [ west, south, east, north, minHeight, maxHeight ] = data;\r\n\r\n\t\t\tregion = new EllipsoidRegion(\r\n\t\t\t\tWGS84_RADIUS, WGS84_RADIUS, WGS84_HEIGHT,\r\n\t\t\t\tsouth, north,\r\n\t\t\t\twest, east,\r\n\t\t\t\tminHeight, maxHeight,\r\n\t\t\t);\r\n\r\n\t\t\tif ( sphere === null ) {\r\n\r\n\t\t\t\tsphere = new Sphere();\r\n\t\t\t\tregion.getBoundingSphere( sphere );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( box === null ) {\r\n\r\n\t\t\t\tbox = new Box3();\r\n\t\t\t\tboxTransform = new Matrix4();\r\n\t\t\t\tboxTransformInverse = new Matrix4();\r\n\r\n\t\t\t\tregion.getBoundingBox( box, boxTransform );\r\n\t\t\t\tboxTransformInverse.copy( boxTransform ).invert();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\ttile.cached = {\r\n\r\n\t\t\tloadIndex: 0,\r\n\t\t\ttransform,\r\n\t\t\ttransformInverse,\r\n\r\n\t\t\tactive: false,\r\n\t\t\tinFrustum: [],\r\n\r\n\t\t\tbox,\r\n\t\t\tboxTransform,\r\n\t\t\tboxTransformInverse,\r\n\t\t\tsphere,\r\n\t\t\tregion,\r\n\r\n\t\t\tscene: null,\r\n\t\t\tgeometry: null,\r\n\t\t\tmaterial: null,\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tparseTile( buffer, tile, extension ) {\r\n\r\n\t\ttile._loadIndex = tile._loadIndex || 0;\r\n\t\ttile._loadIndex ++;\r\n\r\n\t\tconst uri = tile.content.uri;\r\n\t\t// const uriSplits = uri.split( /[\\\\\\/]/g );\r\n\t\tconst uriSplits = uri.split( /[\\\\/]/g );\r\n\t\turiSplits.pop();\r\n\t\tconst workingPath = uriSplits.join( '/' );\r\n\t\tconst fetchOptions = this.fetchOptions;\r\n\r\n\t\tconst manager = this.manager;\r\n\t\tconst loadIndex = tile._loadIndex;\r\n\t\tlet promise = null;\r\n\r\n\t\tconst upAxis = this.rootTileSet.asset && this.rootTileSet.asset.gltfUpAxis || 'y';\r\n\t\tconst cached = tile.cached;\r\n\t\tconst cachedTransform = cached.transform;\r\n\r\n\t\t// switch ( upAxis.toLowerCase() ) {\r\n\r\n\t\t// \t// case 'x':\r\n\t\t// \t// \ttempMat.makeRotationAxis( Y_AXIS, - Math.PI / 2 );\r\n\t\t// \t// \tbreak;\r\n\r\n\t\t// \t// case 'y':\r\n\t\t// \t// \ttempMat.makeRotationAxis( X_AXIS, Math.PI / 2 );\r\n\t\t// \t// \tbreak;\r\n\r\n\t\t// \t// case 'z':\r\n\t\t// \t// \ttempMat.identity();\r\n\t\t// \t// \tbreak;\r\n\r\n\t\t\t\r\n\r\n\t\t// \t// case 'y':\r\n\t\t// \t// \ttempMat.identity( );\r\n\t\t// \t// \tbreak;\r\n\r\n\t\t// \t// case 'z':\r\n\t\t// \t// \ttempMat.set(1, 0, 0, 0,0, 0, 1, 0, 0, -1, 0, 0,  0, 0, 0, 1)\r\n\t\t// \t// \tbreak;\r\n\t\t\t\r\n\r\n\t\t// }\r\n\t\ttempMat.identity();\r\n\t\t\r\n\t\tconst fileType = readMagicBytes( buffer ) || extension;\r\n\t\tswitch ( fileType ) {\r\n\r\n\t\t\tcase 'b3dm': {\r\n\r\n\t\t\t\tconst loader = new B3DMLoader( manager,this );\r\n\t\t\t\tloader.workingPath = workingPath;\r\n\t\t\t\tloader.fetchOptions = fetchOptions;\r\n\r\n\t\t\t\tloader.adjustmentTransform.copy( tempMat );\r\n\r\n\t\t\t\tpromise = loader\r\n\t\t\t\t\t.parse( buffer )\r\n\t\t\t\t\t.then( res => res.scene );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcase 'pnts': {\r\n\r\n\t\t\t\tconst loader = new PNTSLoader( manager );\r\n\t\t\t\tloader.workingPath = workingPath;\r\n\t\t\t\tloader.fetchOptions = fetchOptions;\r\n\t\t\t\tpromise = loader\r\n\t\t\t\t\t.parse( buffer )\r\n\t\t\t\t\t.then( res => res.scene );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcase 'i3dm': {\r\n\r\n\t\t\t\tconst loader = new I3DMLoader( manager,this );\r\n\t\t\t\tloader.workingPath = workingPath;\r\n\t\t\t\tloader.fetchOptions = fetchOptions;\r\n\r\n\t\t\t\tloader.adjustmentTransform.copy( tempMat );\r\n\r\n\t\t\t\tpromise = loader\r\n\t\t\t\t\t.parse( buffer )\r\n\t\t\t\t\t.then( res => res.scene );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcase 'cmpt': {\r\n\r\n\t\t\t\tconst loader = new CMPTLoader( manager ,this);\r\n\t\t\t\tloader.workingPath = workingPath;\r\n\t\t\t\tloader.fetchOptions = fetchOptions;\r\n\r\n\t\t\t\tloader.adjustmentTransform.copy( tempMat );\r\n\r\n\t\t\t\tpromise = loader\r\n\t\t\t\t\t.parse( buffer )\r\n\t\t\t\t\t.then( res => res.scene\t);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// 3DTILES_content_gltf\r\n\t\t\tcase 'gltf':\r\n\t\t\tcase 'glb': {\r\n\t\t\t\tconst loader = new GLTFExtensionLoader(manager);\r\n\t\t\t\tloader.workingPath = workingPath;\r\n\t\t\t\tloader.fetchOptions = fetchOptions;\r\n\t\t\t\tpromise = loader\r\n\t\t\t\t\t.parse(buffer)\r\n\t\t\t\t\t.then(res => res.scene);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn( `TilesRenderer: Content type \"${ fileType }\" not supported.` );\r\n\t\t\t\tpromise = Promise.resolve( null );\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\treturn promise.then( scene => {\r\n\r\n\t\t\ttile.scene=scene\r\n\t\t\tif ( tile._loadIndex !== loadIndex ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\t\t\t// ensure the matrix is up to date in case the scene has a transform applied\r\n\t\t\tscene.updateMatrix();\r\n\r\n\t\t\t// apply the local up-axis correction rotation\r\n\t\t\t// GLTFLoader seems to never set a transformation on the root scene object so\r\n\t\t\t// any transformations applied to it can be assumed to be applied after load\r\n\t\t\t// (such as applying RTC_CENTER) meaning they should happen _after_ the z-up\r\n\t\t\t// rotation fix which is why \"multiply\" happens here.\r\n\t\t\tif ( fileType === 'glb' || fileType === 'gltf' ) {\r\n\r\n\t\t\t\tscene.matrix.multiply( tempMat );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscene.matrix.premultiply( cachedTransform );\r\n\t\t\tscene.matrix.decompose( scene.position, scene.quaternion, scene.scale );\r\n\t\t\tscene.traverse( c => {\r\n\r\n\t\t\t\tc[ INITIAL_FRUSTUM_CULLED ] = c.frustumCulled;\r\n\r\n\t\t\t} );\r\n\t\t\tupdateFrustumCulled( scene, ! this.autoDisableRendererCulling );\r\n\r\n\t\t\tcached.scene = scene;\r\n\r\n\t\t\t// We handle raycasting in a custom way so remove it from here\r\n\t\t\tscene.traverse( c => {\r\n\r\n\t\t\t\tc.raycast = this._overridenRaycast;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tconst materials = [];\r\n\t\t\tconst geometry = [];\r\n\t\t\tconst textures = [];\r\n\t\t\tscene.traverse( c => {\r\n\r\n\t\t\t\tif ( c.geometry ) {\r\n\r\n\t\t\t\t\tgeometry.push( c.geometry );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( c.material ) {\r\n\r\n\t\t\t\t\tconst material = c.material;\r\n\t\t\t\t\tmaterials.push( c.material );\r\n\r\n\t\t\t\t\tfor ( const key in material ) {\r\n\r\n\t\t\t\t\t\tconst value = material[ key ];\r\n\t\t\t\t\t\tif ( value && value.isTexture ) {\r\n\r\n\t\t\t\t\t\t\ttextures.push( value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tcached.materials = materials;\r\n\t\t\tcached.geometry = geometry;\r\n\t\t\tcached.textures = textures;\r\n\r\n\t\t\tif ( this.onLoadModel ) {\r\n\r\n\t\t\t\tthis.onLoadModel( scene, tile );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tdisposeTile( tile ) {\r\n\r\n\t\t// This could get called before the tile has finished downloading\r\n\t\tconst cached = tile.cached;\r\n\t\tif ( cached.scene ) {\r\n\r\n\t\t\tconst materials = cached.materials;\r\n\t\t\tconst geometry = cached.geometry;\r\n\t\t\tconst textures = cached.textures;\r\n\t\t\tconst parent = cached.scene.parent;\r\n\r\n\t\t\tfor ( let i = 0, l = geometry.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry[ i ].dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterials[ i ].dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = textures.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst texture = textures[ i ];\r\n\t\t\t\ttexture.dispose();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( parent ) {\r\n\r\n\t\t\t\tparent.remove( cached.scene );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.onDisposeModel ) {\r\n\r\n\t\t\t\tthis.onDisposeModel( cached.scene, tile );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcached.scene = null;\r\n\t\t\tcached.materials = null;\r\n\t\t\tcached.textures = null;\r\n\t\t\tcached.geometry = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.activeTiles.delete( tile );\r\n\t\tthis.visibleTiles.delete( tile );\r\n\t\ttile._loadIndex ++;\r\n\r\n\t}\r\n\r\n\tsetTileVisible( tile, visible ) {\r\n\r\n\t\tconst scene = tile.cached.scene;\r\n\t\tconst visibleTiles = this.visibleTiles;\r\n\t\tconst group = this.group;\r\n\t\tif ( visible ) {\r\n\r\n\t\t\tgroup.add( scene );\r\n\t\t\tvisibleTiles.add( tile );\r\n\t\t\tscene.updateMatrixWorld( true );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgroup.remove( scene );\r\n\t\t\tvisibleTiles.delete( tile );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.onTileVisibilityChange ) {\r\n\r\n\t\t\tthis.onTileVisibilityChange( scene, tile, visible );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetTileActive( tile, active ) {\r\n\r\n\t\tconst activeTiles = this.activeTiles;\r\n\t\tif ( active ) {\r\n\r\n\t\t\tactiveTiles.add( tile );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tactiveTiles.delete( tile );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcalculateError( tile ) {\r\n\r\n\t\tconst cached = tile.cached;\r\n\t\tconst inFrustum = cached.inFrustum;\r\n\t\tconst cameras = this.cameras;\r\n\t\tconst cameraInfo = this.cameraInfo;\r\n\r\n\t\t// TODO: Use the content bounding volume here?\r\n\t\t// TODO: We should use the largest distance to the tile between\r\n\t\t// all available bounding volume types.\r\n\t\tconst boundingSphere = cached.sphere;\r\n\t\tconst boundingBox = cached.box;\r\n\t\tconst boxTransformInverse = cached.boxTransformInverse;\r\n\t\tconst transformInverse = cached.transformInverse;\r\n\t\tconst useBox = boundingBox && boxTransformInverse;\r\n\r\n\t\tlet maxError = - Infinity;\r\n\t\tlet minDistance = Infinity;\r\n\r\n\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( ! inFrustum[ i ] ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// transform camera position into local frame of the tile bounding box\r\n\t\t\tconst info = cameraInfo[ i ];\r\n\t\t\tconst invScale = info.invScale;\r\n\r\n\t\t\tlet error;\r\n\t\t\tif ( info.isOrthographic ) {\r\n\r\n\t\t\t\tconst pixelSize = info.pixelSize;\r\n\t\t\t\terror = tile.geometricError / ( pixelSize * invScale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttempVector.copy( info.position );\r\n\r\n\t\t\t\tlet distance;\r\n\t\t\t\tif ( useBox ) {\r\n\r\n\t\t\t\t\ttempVector.applyMatrix4( boxTransformInverse );\r\n\t\t\t\t\tdistance = boundingBox.distanceToPoint( tempVector );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttempVector.applyMatrix4( transformInverse );\r\n\t\t\t\t\t// Sphere#distanceToPoint is negative inside the sphere, whereas Box3#distanceToPoint is\r\n\t\t\t\t\t// zero inside the box. Clipping the distance to a minimum of zero ensures that both\r\n\t\t\t\t\t// types of bounding volume behave the same way.\r\n\t\t\t\t\tdistance = Math.max( boundingSphere.distanceToPoint( tempVector ), 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst scaledDistance = distance * invScale;\r\n\t\t\t\tconst sseDenominator = info.sseDenominator;\r\n\t\t\t\terror = tile.geometricError / ( scaledDistance * sseDenominator );\r\n\r\n\t\t\t\tminDistance = Math.min( minDistance, scaledDistance );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaxError = Math.max( maxError, error );\r\n\r\n\t\t}\r\n\r\n\t\ttile.__distanceFromCamera = minDistance;\r\n\t\ttile.__error = maxError;\r\n\r\n\t}\r\n\r\n\ttileInView( tile ) {\r\n\r\n\t\t// TODO: we should use the more precise bounding volumes here if possible\r\n\t\t// cache the root-space planes\r\n\t\t// Use separating axis theorem for frustum and obb\r\n\r\n\t\tconst cached = tile.cached;\r\n\t\tconst sphere = cached.sphere;\r\n\t\tconst inFrustum = cached.inFrustum;\r\n\t\tif ( sphere ) {\r\n\r\n\t\t\tconst cameraInfo = this.cameraInfo;\r\n\t\t\tlet inView = false;\r\n\t\t\tfor ( let i = 0, l = cameraInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t// Track which camera frustums this tile is in so we can use it\r\n\t\t\t\t// to ignore the error calculations for cameras that can't see it\r\n\t\t\t\tconst frustum = cameraInfo[ i ].frustum;\r\n\t\t\t\tif ( frustum.intersectsSphere( sphere ) ) {\r\n\r\n\t\t\t\t\tinView = true;\r\n\t\t\t\t\tinFrustum[ i ] = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tinFrustum[ i ] = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn inView;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n}\r\n","import { ThreeScene } from \"@/sence/ThreeScene\";\r\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\r\nimport * as THREE from \"three\";\r\nimport { TilesRenderer } from \"./3d-tiles-renderer/three/TilesRenderer\";\r\nimport { Matrix4, Object3D } from \"three\";\r\nimport { ModelData } from \"@/data/ModelData\";\r\nimport { DebugTilesRenderer } from \"./3d-tiles-renderer/three/DebugTilesRenderer\";\r\nimport { ProjectViewComponent } from \"@/components/ProjectViewComponent\";\r\nimport { Tile } from \"./3d-tiles-renderer/base/Tile\";\r\n\r\nexport class TilesLoaders {\r\n\r\n    public static tilesLoaders(world: ThreeScene, tilesUrl: string) {\r\n    {\r\n\r\n            if (world.mapModels.has(tilesUrl)) return\r\n            //world.clearModel();\r\n            let loader = new GLTFLoader();\r\n            let dracoLoader = new DRACOLoader();\r\n            dracoLoader.setDecoderPath('./lib/draco/');\r\n            loader.setDRACOLoader(dracoLoader);\r\n\r\n\r\n          \r\n\r\n\r\n            let tilesRenderer = new TilesRenderer(tilesUrl);\r\n            tilesRenderer.modelData=new ModelData();\r\n            tilesRenderer.manager.addHandler(/\\.gltf$/, loader);\r\n            tilesRenderer.setCamera(world.camera);\r\n            tilesRenderer.setResolutionFromRenderer(world.camera, world.renderer);\r\n            tilesRenderer.onLoadModel = (scene : Object3D, tile : Tile ) => {\r\n                world.enableRender()\r\n                if(  tilesRenderer.parseQueue[\"items\"].length==0)\r\n                {\r\n                    tilesRenderer.modelData.name=tilesUrl\r\n                    tilesRenderer.modelData.showSpaceTree()\r\n                }\r\n                \r\n            };\r\n            //tilesRenderer.autoDisableRendererCulling =true\r\n\r\n\r\n            // tilesRenderer.forEachLoadedModel( ( scene ) => {\r\n\r\n\t\t\t// \t// updateFrustumCulled( scene, ! value );\r\n            //     world.enableRender()\r\n\t\t\t// } );\r\n\r\n            // tilesRenderer.forEachLoadedModel = () => {\r\n            //     world.enableRender()\r\n            // };\r\n\r\n            tilesRenderer.modelData.rootObject=tilesRenderer.group\r\n            \r\n            // let data=[...ProjectViewComponent.ModelData.value]\r\n            // if(data==null||data.length==0)\r\n            // {\r\n            //     data=ProjectViewComponent.ModelDataUI\r\n            // }\r\n            \r\n            // data[0].children.push({\r\n            //     label: tilesUrl,\r\n            //     id:  tilesRenderer.modelData.id\r\n            // })\r\n            // ProjectViewComponent.ModelData.value=data\r\n\r\n\r\n            world.mapModels.set(tilesUrl, tilesRenderer[\"modelData\"])\r\n            tilesRenderer.modelData.tile=tilesRenderer\r\n\r\n            tilesRenderer.onLoadTileSet = () => {\r\n                let box = new THREE.Box3()\r\n              \r\n                tilesRenderer.getBounds(box)\r\n                box.applyMatrix4(tilesRenderer.group.matrix)\r\n                world.setCameraByBox(box);\r\n                tilesRenderer.modelData.boundingBox=box;\r\n            }\r\n\r\n            tilesRenderer.group.matrix.set(1, 0, 0, 0,0, 0, 1, 0, 0, -1, 0, 0,  0, 0, 0, 1)\r\n            tilesRenderer.group.matrixAutoUpdate =false\r\n            \r\n            //tilesRenderer.group[\"raycaster\"].firstHitOnly =false\r\n            //tilesRenderer.displayBoxBounds  =true\r\n            world.obj.add(tilesRenderer.group);\r\n            world.enableRender()\r\n        }\r\n    }\r\n}","import { Box3, Color } from \"three\";\r\nimport { MeshData } from \"./MeshData\";\r\n\r\n/**\r\n * 基础元素，理解为对应revit中一个element\r\n */\r\nexport class ElementData {\r\n\r\n    //id从1开始增加\r\n    public static id: number=1\r\n\r\n\r\n    public readonly id: number;\r\n    public name: string;\r\n    public useData: any;\r\n\r\n\r\n\r\n    private _meshData:MeshData[]\r\n    private _show: boolean;\r\n    private _color:Color=null;\r\n\r\n    //包围盒\r\n    private _boundingBox:Box3\r\n    constructor()\r\n    {\r\n        this.show=true;\r\n        this._meshData=[]\r\n        this.id=ElementData.id++;\r\n    }\r\n\r\n    public set show(value:boolean)\r\n    {\r\n        if(this._show==value) return;\r\n        this._show=value;      \r\n        if(this._meshData)\r\n        {\r\n            for (const mesh of this._meshData) {\r\n                mesh.show=value\r\n            }\r\n        }\r\n    }\r\n    public get show():boolean\r\n    {\r\n        return this._show;\r\n    }\r\n\r\n    public set color(value:Color)\r\n    {\r\n        if(this._meshData)\r\n        {\r\n            for (const mesh of this._meshData) {\r\n                mesh.color=value\r\n            }\r\n        }\r\n    }\r\n    public get color():Color\r\n    {\r\n        return this._color;\r\n    }\r\n\r\n    public addMeshData(mesh:MeshData)\r\n    {\r\n        this._meshData.push(mesh);\r\n    }\r\n\r\n    public set boundingBox(value:Box3)\r\n    {\r\n        this._boundingBox=value;\r\n    }\r\n    public get boundingBox():Box3\r\n    {\r\n        if(this._boundingBox==null)\r\n        {\r\n            if(this._meshData)\r\n            {\r\n                this._boundingBox=new Box3();\r\n                for (const mesh of this._meshData) {\r\n                    this._boundingBox.union(mesh.boundingBox)\r\n                }\r\n            }\r\n        }\r\n\r\n        return this._boundingBox;\r\n    }\r\n}","module.exports=`\r\nattribute vec3 position;\r\nuniform mat4 modelViewMatrix;\r\nuniform mat4 projectionMatrix;\r\nvarying vec2 vUv;\r\nvoid main() {\r\n  gl_Position = vec4(position, 1.0);\r\n  vUv = vec2(position.x, position.y) * 0.5 + 0.5;\r\n}\r\n`;"],"sourceRoot":""}